ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CapSense_CSD_CSHL.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.CapSense_CSD_BaseInit,"ax",%progbits
  19              		.align	2
  20              		.global	CapSense_CSD_BaseInit
  21              		.thumb
  22              		.thumb_func
  23              		.type	CapSense_CSD_BaseInit, %function
  24              	CapSense_CSD_BaseInit:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense_CSD_CSHL.c"
   1:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * File Name: CapSense_CSD_CSHL.c
   3:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Version 3.50
   4:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
   5:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
   9:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  11:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  18:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_CSHL.h"
  19:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  20:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /* Storage of filters data */
  21:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
  22:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  23:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  24:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  25:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData2[CapSense_CSD_TOTAL_SENSOR_COUNT];
  26:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  27:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #elif ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)   | \
  28:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)   | \
  29:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) | \
  30:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)   | \
  31:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER) )
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 2


  32:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
  33:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  34:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  35:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #else
  36:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* No Raw filters */
  37:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif  /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
  38:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         *    (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  39:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         */
  40:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  41:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorBaseline[CapSense_CSD_TOTAL_SENSOR_COUNT];
  42:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorBaselineLow[CapSense_CSD_TOTAL_SENSOR_COUNT];
  43:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorSignal[CapSense_CSD_TOTAL_SENSOR_COUNT];
  44:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorOnMask[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  46:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineResetCnt[CapSense_CSD_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  48:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_fingerThreshold[] = {
  49:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     100u, 
  50:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  51:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  52:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_noiseThreshold[] = {
  53:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     20u, 
  54:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  55:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  56:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_hysteresis[] = {
  57:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, 
  58:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  59:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  60:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounce[] = {
  61:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, 
  62:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  63:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  64:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounceCounter[] = {
  65:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, 
  66:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  67:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  68:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_rawDataIndex[] = {
  69:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, /* LinearSlider0__LS */
  70:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  71:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  72:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  73:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_numberOfSensors[] = {
  74:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     8u, /* LinearSlider0__LS */
  75:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  76:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  77:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  78:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint16 CYCODE CapSense_CSD_centroidMult[] = {
  79:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     4644u, 
  80:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  81:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  82:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_posFiltersMask[] = {
  83:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0x16u, 
  84:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  85:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  86:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_posFiltersData[] = {
  87:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, 0u, 0u, 
  88:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 3


  89:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  90:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  91:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  92:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  93:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
  94:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_BaseInit
  95:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
  96:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  97:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
  98:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
  99:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value which is equal to raw count value. 
 100:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Resets to zero CapSense_CSD_sensorBaselineLow[sensor] and 
 101:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[sensor] array element.
 102:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads CapSense_CSD_debounceCounter[sensor] array element with initial 
 103:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  value equal CapSense_CSD_debounce[].
 104:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_rawFilterData2[sensor] and 
 105:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[sensor] array element with an 
 106:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
 107:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 108:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 109:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 110:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 111:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 112:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 113:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 114:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 115:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 116:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of 
 117:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline value.
 118:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 119:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 120:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store current debounce 
 121:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 122:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 123:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 124:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of 
 125:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 126:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 127:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 128:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 129:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 130:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 131:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 132:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 133:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_BaseInit(uint8 sensor) 
 134:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
  27              		.loc 1 134 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 135:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_TOTAL_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || \
 136:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****          (CapSense_CSD_TOTAL_GENERICS_COUNT))
 137:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 widget = CapSense_CSD_widgetNumber[sensor];
 138:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* ((CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUN
 139:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 4


 140:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)
 141:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 debounceIndex;
 142:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) */
 143:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 144:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 145:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 146:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 147:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 148:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 149:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 150:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Initialize Baseline */
 151:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = CapSense_CSD_sensorRaw[sensor];
  33              		.loc 1 151 0
  34 0000 074B     		ldr	r3, .L2
  35 0002 33F81030 		ldrh	r3, [r3, r0, lsl #1]
  36 0006 074A     		ldr	r2, .L2+4
  37 0008 22F81030 		strh	r3, [r2, r0, lsl #1]	@ movhi
 152:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaselineLow[sensor] = 0u;
  38              		.loc 1 152 0
  39 000c 0022     		movs	r2, #0
  40 000e 0649     		ldr	r1, .L2+8
  41 0010 0A54     		strb	r2, [r1, r0]
 153:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = 0u;
  42              		.loc 1 153 0
  43 0012 0649     		ldr	r1, .L2+12
  44 0014 0A54     		strb	r2, [r1, r0]
 154:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 155:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 156:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 157:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) |\
 158:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****          (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 159:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 160:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 161:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_sensorRaw[sensor];
 162:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 163:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) |\
 164:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) |\
 165:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) |\
 166:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER) |\
 167:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
 168:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             
 169:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
  45              		.loc 1 169 0
  46 0016 064A     		ldr	r2, .L2+16
  47 0018 22F81030 		strh	r3, [r2, r0, lsl #1]	@ movhi
  48 001c 7047     		bx	lr
  49              	.L3:
  50 001e 00BF     		.align	2
  51              	.L2:
  52 0020 00000000 		.word	CapSense_CSD_sensorRaw
  53 0024 00000000 		.word	CapSense_CSD_sensorBaseline
  54 0028 00000000 		.word	CapSense_CSD_sensorBaselineLow
  55 002c 00000000 		.word	CapSense_CSD_sensorSignal
  56 0030 00000000 		.word	CapSense_CSD_rawFilterData1
  57              		.cfi_endproc
  58              	.LFE0:
  59              		.size	CapSense_CSD_BaseInit, .-CapSense_CSD_BaseInit
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 5


  60              		.section	.text.CapSense_CSD_InitializeSensorBaseline,"ax",%progbits
  61              		.align	2
  62              		.global	CapSense_CSD_InitializeSensorBaseline
  63              		.thumb
  64              		.thumb_func
  65              		.type	CapSense_CSD_InitializeSensorBaseline, %function
  66              	CapSense_CSD_InitializeSensorBaseline:
  67              	.LFB1:
 170:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 171:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 172:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 173:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
 174:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             *   (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 175:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             */
 176:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 177:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 178:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 179:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 180:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 181:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 182:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 183:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 184:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 185:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeSensorBaseline
 186:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 187:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 188:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 189:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
 190:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 191:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 192:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 193:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  enabled.
 194:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 195:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 196:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 197:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 198:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 199:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 200:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 201:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 202:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 203:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 204:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 205:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeSensorBaseline(uint8 sensor)
 206:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                           
 207:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
  68              		.loc 1 207 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              	.LVL1:
  73 0000 10B5     		push	{r4, lr}
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 4, -8
  76              		.cfi_offset 14, -4
  77 0002 0446     		mov	r4, r0
 208:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Scan sensor */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 6


 209:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanSensor(sensor);
  78              		.loc 1 209 0
  79 0004 FFF7FEFF 		bl	CapSense_CSD_ScanSensor
  80              	.LVL2:
  81              	.L5:
 210:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
  82              		.loc 1 210 0 discriminator 1
  83 0008 FFF7FEFF 		bl	CapSense_CSD_IsBusy
  84              	.LVL3:
  85 000c 0028     		cmp	r0, #0
  86 000e FBD1     		bne	.L5
 211:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 212:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Wait while busy */
 213:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 214:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 215:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 216:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 217:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_BaseInit(sensor);
  87              		.loc 1 217 0
  88 0010 2046     		mov	r0, r4
  89 0012 FFF7FEFF 		bl	CapSense_CSD_BaseInit
  90              	.LVL4:
  91 0016 10BD     		pop	{r4, pc}
  92              		.cfi_endproc
  93              	.LFE1:
  94              		.size	CapSense_CSD_InitializeSensorBaseline, .-CapSense_CSD_InitializeSensorBaseline
  95              		.section	.text.CapSense_CSD_InitializeAllBaselines,"ax",%progbits
  96              		.align	2
  97              		.global	CapSense_CSD_InitializeAllBaselines
  98              		.thumb
  99              		.thumb_func
 100              		.type	CapSense_CSD_InitializeAllBaselines, %function
 101              	CapSense_CSD_InitializeAllBaselines:
 102              	.LFB2:
 218:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 219:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 220:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 221:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 222:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 223:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 224:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 225:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 226:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 227:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 228:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 229:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 230:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor + CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
 231:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 232:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 233:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN) */
 234:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 235:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 236:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 237:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 238:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeAllBaselines
 239:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 240:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 7


 241:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 242:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Uses the CapSense_CSD_InitializeSensorBaseline function to loads the 
 243:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] array with an initial values by scanning 
 244:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 245:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 246:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 247:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 248:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 249:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 250:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 251:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 252:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 253:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 254:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 255:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 256:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 257:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeAllBaselines(void)
 258:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                           
 259:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 103              		.loc 1 259 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107 0000 10B5     		push	{r4, lr}
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
 111              	.LVL5:
 260:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 261:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 262:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 263:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 112              		.loc 1 263 0
 113 0002 0024     		movs	r4, #0
 114 0004 04E0     		b	.L8
 115              	.LVL6:
 116              	.L9:
 264:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 265:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_InitializeSensorBaseline(i);
 117              		.loc 1 265 0 discriminator 3
 118 0006 2046     		mov	r0, r4
 119 0008 FFF7FEFF 		bl	CapSense_CSD_InitializeSensorBaseline
 120              	.LVL7:
 263:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 121              		.loc 1 263 0 discriminator 3
 122 000c 0134     		adds	r4, r4, #1
 123              	.LVL8:
 124 000e E4B2     		uxtb	r4, r4
 125              	.LVL9:
 126              	.L8:
 263:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 127              		.loc 1 263 0 is_stmt 0 discriminator 1
 128 0010 072C     		cmp	r4, #7
 129 0012 F8D9     		bls	.L9
 266:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 267:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 130              		.loc 1 267 0 is_stmt 1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 8


 131 0014 10BD     		pop	{r4, pc}
 132              		.cfi_endproc
 133              	.LFE2:
 134              		.size	CapSense_CSD_InitializeAllBaselines, .-CapSense_CSD_InitializeAllBaselines
 135 0016 00BF     		.section	.text.CapSense_CSD_InitializeEnabledBaselines,"ax",%progbits
 136              		.align	2
 137              		.global	CapSense_CSD_InitializeEnabledBaselines
 138              		.thumb
 139              		.thumb_func
 140              		.type	CapSense_CSD_InitializeEnabledBaselines, %function
 141              	CapSense_CSD_InitializeEnabledBaselines:
 142              	.LFB3:
 268:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 269:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 270:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 271:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeEnabledBaselines
 272:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 273:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 274:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 275:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 276:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 277:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 278:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The raw data filters are initialized if enabled.
 279:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 280:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 281:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 282:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 283:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 284:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 285:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 286:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 287:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 288:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 289:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 290:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeEnabledBaselines(void)
 291:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                              
 292:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 143              		.loc 1 292 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147 0000 10B5     		push	{r4, lr}
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 4, -8
 150              		.cfi_offset 14, -4
 293:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 294:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 295:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 296:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 297:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanEnabledWidgets();
 151              		.loc 1 297 0
 152 0002 FFF7FEFF 		bl	CapSense_CSD_ScanEnabledWidgets
 153              	.LVL10:
 154              	.L12:
 298:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 155              		.loc 1 298 0 discriminator 1
 156 0006 FFF7FEFF 		bl	CapSense_CSD_IsBusy
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 9


 157              	.LVL11:
 158 000a 0028     		cmp	r0, #0
 159 000c FBD1     		bne	.L12
 160 000e 0024     		movs	r4, #0
 161 0010 11E0     		b	.L13
 162              	.LVL12:
 163              	.L15:
 299:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 300:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Wait while busy */
 301:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 302:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 303:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 304:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 305:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (i >> 3u);
 164              		.loc 1 305 0
 165 0012 E208     		lsrs	r2, r4, #3
 306:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 166              		.loc 1 306 0
 167 0014 04F00701 		and	r1, r4, #7
 168 0018 0123     		movs	r3, #1
 169 001a 8B40     		lsls	r3, r3, r1
 170              	.LVL13:
 307:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 308:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 309:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if((CapSense_CSD_sensorEnableMask[pos] & enMask) == 0u)
 171              		.loc 1 309 0
 172 001c 0749     		ldr	r1, .L17
 173 001e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 174 0020 1342     		tst	r3, r2
 175 0022 03D1     		bne	.L14
 310:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 311:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorRaw[i] = 0u;
 176              		.loc 1 311 0
 177 0024 0022     		movs	r2, #0
 178 0026 064B     		ldr	r3, .L17+4
 179              	.LVL14:
 180 0028 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 181              	.L14:
 312:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 313:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 314:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Initialize baselines */
 315:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_BaseInit(i);
 182              		.loc 1 315 0 discriminator 2
 183 002c 2046     		mov	r0, r4
 184 002e FFF7FEFF 		bl	CapSense_CSD_BaseInit
 185              	.LVL15:
 303:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 186              		.loc 1 303 0 discriminator 2
 187 0032 0134     		adds	r4, r4, #1
 188              	.LVL16:
 189 0034 E4B2     		uxtb	r4, r4
 190              	.LVL17:
 191              	.L13:
 303:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 192              		.loc 1 303 0 is_stmt 0 discriminator 1
 193 0036 072C     		cmp	r4, #7
 194 0038 EBD9     		bls	.L15
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 10


 316:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 317:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }  
 195              		.loc 1 317 0 is_stmt 1
 196 003a 10BD     		pop	{r4, pc}
 197              	.LVL18:
 198              	.L18:
 199              		.align	2
 200              	.L17:
 201 003c 00000000 		.word	CapSense_CSD_sensorEnableMask
 202 0040 00000000 		.word	CapSense_CSD_sensorRaw
 203              		.cfi_endproc
 204              	.LFE3:
 205              		.size	CapSense_CSD_InitializeEnabledBaselines, .-CapSense_CSD_InitializeEnabledBaselines
 206              		.section	.text.CapSense_CSD_CheckIsSensorActive,"ax",%progbits
 207              		.align	2
 208              		.global	CapSense_CSD_CheckIsSensorActive
 209              		.thumb
 210              		.thumb_func
 211              		.type	CapSense_CSD_CheckIsSensorActive, %function
 212              	CapSense_CSD_CheckIsSensorActive:
 213              	.LFB6:
 318:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 319:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 320:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 321:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateSensorBaseline
 322:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 323:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 324:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 325:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the 
 326:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 327:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 328:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_SensorSignal[sensor]. 
 329:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 330:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 331:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 332:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  that noise threshold.
 333:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 334:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  calculation.
 335:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 336:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 337:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 338:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 339:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 340:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 341:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 342:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 343:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 344:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of 
 345:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline value.
 346:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 347:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 348:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of 
 349:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 350:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 351:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 352:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 353:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 11


 354:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 355:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 356:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateSensorBaseline(uint8 sensor)
 358:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 359:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 360:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint32 calc;
 361:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 tempRaw;
 362:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 filteredRawData;
 363:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 364:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 noiseThreshold = CapSense_CSD_noiseThreshold[widget];
 365:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 366:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 367:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 368:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 369:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 370:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 371:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 372:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     filteredRawData = CapSense_CSD_sensorRaw[sensor];
 373:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 374:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)
 375:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData;
 376:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_MedianFilter(filteredRawData, CapSense_CSD_rawFilterData1[se
 377:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                         CapSense_CSD_rawFilterData2[sensor]);
 378:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 379:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 380:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 381:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)
 382:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData;
 383:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_AveragingFilter(filteredRawData, CapSense_CSD_rawFilterData1
 384:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                            CapSense_CSD_rawFilterData2[sensor]);
 385:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 386:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 387:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 388:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)
 389:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR2Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 390:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 391:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 392:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)
 393:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR4Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 394:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 395:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             
 396:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)
 397:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_JitterFilter(filteredRawData, CapSense_CSD_rawFilterData1[se
 398:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 399:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 400:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)
 401:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR8Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 402:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 403:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 404:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)
 405:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR16Filter(filteredRawData, CapSense_CSD_rawFilterData1[sen
 406:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 407:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 408:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 409:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 410:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 12


 411:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 412:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
 413:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_CalculateThresholds(sensor);
 414:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
 415:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 416:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 417:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Baseline calculation */
 418:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 419:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if(filteredRawData >= CapSense_CSD_sensorBaseline[sensor])
 420:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 421:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData - CapSense_CSD_sensorBaseline[sensor];
 422:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 423:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 424:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 425:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 426:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = CapSense_CSD_sensorBaseline[sensor] - filteredRawData;
 427:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 428:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 429:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 430:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD))
 431:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 432:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_LOW_BASELINE_RESET)
 433:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 434:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 435:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 436:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 437:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
 438:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 439:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor]++;
 440:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 441:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 442:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 443:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 444:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 445:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 446:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 447:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                  ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 448:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                    && (widget == 0u)))
 449:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 450:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 451:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Make full Baseline 23 bits */
 452:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc = (uint32) CapSense_CSD_sensorBaseline[sensor] << 8u;
 453:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc |= (uint32) CapSense_CSD_sensorBaselineLow[sensor];
 454:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 455:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Add Raw Data to Baseline */
 456:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc += filteredRawData;
 457:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 458:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Sub the high Baseline */
 459:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc -= CapSense_CSD_sensorBaseline[sensor];
 460:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 461:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Put Baseline and BaselineLow */
 462:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 463:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 464:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 465:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 466:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 467:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 13


 468:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 469:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 470:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 471:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 472:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 473:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 474:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8)
 475:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Over flow defence for uint8 */
 476:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
 477:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 478:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = 0xFFu;
 479:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }    
 480:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else 
 481:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 482:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = ((uint8) tempRaw);
 483:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 484:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
 485:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorSignal[sensor] = ((uint16) tempRaw);
 486:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8) */
 487:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 488:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 489:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 490:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Signal is zero */
 491:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorSignal[sensor] = 0u;
 492:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 493:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 494:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 495:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 496:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 497:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 498:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 499:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 500:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 501:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 502:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateEnabledBaselines
 503:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 504:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 505:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 506:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the 
 507:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines 
 508:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  for enabled sensors.
 509:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 510:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 511:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 512:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 513:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 514:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 515:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 516:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 517:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 518:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 519:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 520:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 521:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 522:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 523:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 524:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 14


 525:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 526:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 527:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 528:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 529:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 530:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateEnabledBaselines(void)
 531:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 532:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 533:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 534:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 535:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 536:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 537:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 538:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 539:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (i >> 3u);
 540:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 541:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if((CapSense_CSD_sensorEnableMask[pos] & enMask) != 0u)
 542:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 543:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 544:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 545:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 546:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 547:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 548:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 549:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 550:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsSensorActive
 551:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 552:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 553:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 554:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Compares the CapSense_CSD_SensorSignal[sensor] array element to finger
 555:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 556:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 557:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  based on whether the sensor is currently active. 
 558:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 559:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 560:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The debounce counter added to the sensor active transition.
 561:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  This function updates CapSense_CSD_SensorOnMask[] array element.
 562:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 563:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 564:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 565:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 566:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 567:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 568:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 569:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 570:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 571:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 572:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store current debounce 
 573:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 574:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 575:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 576:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] - used to store sensors on/off state.
 577:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[0] contains the masked bits for sensors 
 578:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 579:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 580:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 581:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor is inactive.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 15


 582:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor is active.
 583:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 584:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 585:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 586:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 587:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 588:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsSensorActive(uint8 sensor)
 589:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                   
 590:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 214              		.loc 1 590 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              	.LVL19:
 219 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 220              		.cfi_def_cfa_offset 20
 221              		.cfi_offset 4, -20
 222              		.cfi_offset 5, -16
 223              		.cfi_offset 6, -12
 224              		.cfi_offset 7, -8
 225              		.cfi_offset 14, -4
 591:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 debounceIndex;
 592:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Get On/Off mask */
 593:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos = (sensor >> 3u);
 226              		.loc 1 593 0
 227 0002 C408     		lsrs	r4, r0, #3
 228              	.LVL20:
 594:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 229              		.loc 1 594 0
 230 0004 00F00703 		and	r3, r0, #7
 231 0008 0126     		movs	r6, #1
 232 000a 06FA03F3 		lsl	r3, r6, r3
 233 000e DBB2     		uxtb	r3, r3
 234              	.LVL21:
 595:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Prepare to find debounce counter index */
 596:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 235              		.loc 1 596 0
 236 0010 174A     		ldr	r2, .L25
 237 0012 125C     		ldrb	r2, [r2, r0]	@ zero_extendqisi2
 238              	.LVL22:
 597:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 fingerThreshold = CapSense_CSD_fingerThreshold[widget];
 239              		.loc 1 597 0
 240 0014 174F     		ldr	r7, .L25+4
 241 0016 17F802E0 		ldrb	lr, [r7, r2]	@ zero_extendqisi2
 242              	.LVL23:
 598:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 hysteresis = CapSense_CSD_hysteresis[widget];
 243              		.loc 1 598 0
 244 001a 174D     		ldr	r5, .L25+8
 245 001c A95C     		ldrb	r1, [r5, r2]	@ zero_extendqisi2
 246              	.LVL24:
 599:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 debounce = CapSense_CSD_debounce[widget];
 247              		.loc 1 599 0
 248 001e 3A44     		add	r2, r2, r7
 249              	.LVL25:
 250 0020 1779     		ldrb	r7, [r2, #4]	@ zero_extendqisi2
 251              	.LVL26:
 600:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 16


 601:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     debounceIndex = CapSense_CSD_UNUSED_DEBOUNCE_COUNTER_INDEX;
 602:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_debounceCounter[debounceIndex] = 1u;
 252              		.loc 1 602 0
 253 0022 2E71     		strb	r6, [r5, #4]
 603:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 604:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 605:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Was on */
 606:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if (0u != (CapSense_CSD_sensorOnMask[pos] & onMask))
 254              		.loc 1 606 0
 255 0024 154A     		ldr	r2, .L25+12
 256 0026 125D     		ldrb	r2, [r2, r4]	@ zero_extendqisi2
 257 0028 1A42     		tst	r2, r3
 258 002a 0CD0     		beq	.L20
 607:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 608:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Hysteresis minus */
 609:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 259              		.loc 1 609 0
 260 002c 144D     		ldr	r5, .L25+16
 261 002e 285C     		ldrb	r0, [r5, r0]	@ zero_extendqisi2
 262              	.LVL27:
 263 0030 C1EB0E01 		rsb	r1, r1, lr
 264              	.LVL28:
 265 0034 8842     		cmp	r0, r1
 266 0036 14DA     		bge	.L21
 610:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 611:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorOnMask[pos] &= (uint8)~onMask;
 267              		.loc 1 611 0
 268 0038 22EA0302 		bic	r2, r2, r3
 269 003c 0F49     		ldr	r1, .L25+12
 270 003e 0A55     		strb	r2, [r1, r4]
 612:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce; 
 271              		.loc 1 612 0
 272 0040 0D4A     		ldr	r2, .L25+8
 273 0042 1771     		strb	r7, [r2, #4]
 274 0044 0DE0     		b	.L21
 275              	.LVL29:
 276              	.L20:
 613:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 614:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 615:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else    /* Was off */
 616:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 617:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Hysteresis plus */
 618:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 277              		.loc 1 618 0
 278 0046 0E4D     		ldr	r5, .L25+16
 279 0048 285C     		ldrb	r0, [r5, r0]	@ zero_extendqisi2
 280              	.LVL30:
 281 004a 7144     		add	r1, r1, lr
 282              	.LVL31:
 283 004c 8842     		cmp	r0, r1
 284 004e 06DD     		ble	.L22
 619:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 620:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Sensor active, decrement debounce counter */
 621:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (CapSense_CSD_debounceCounter[debounceIndex] <= 1u)
 622:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 623:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorOnMask[pos] |= onMask; 
 285              		.loc 1 623 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 17


 286 0050 1A43     		orrs	r2, r2, r3
 287 0052 0A49     		ldr	r1, .L25+12
 288 0054 0A55     		strb	r2, [r1, r4]
 624:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 625:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex]--;
 289              		.loc 1 625 0
 290 0056 0021     		movs	r1, #0
 291 0058 074A     		ldr	r2, .L25+8
 292 005a 1171     		strb	r1, [r2, #4]
 293 005c 01E0     		b	.L21
 294              	.L22:
 626:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 627:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
 628:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 629:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 630:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 295              		.loc 1 630 0
 296 005e 064A     		ldr	r2, .L25+8
 297 0060 1771     		strb	r7, [r2, #4]
 298              	.L21:
 631:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 632:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 633:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 634:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (((CapSense_CSD_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 299              		.loc 1 634 0
 300 0062 064A     		ldr	r2, .L25+12
 301 0064 105D     		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 302 0066 1840     		ands	r0, r0, r3
 303 0068 00D0     		beq	.L23
 304 006a 0120     		movs	r0, #1
 305              	.L23:
 635:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 306              		.loc 1 635 0 discriminator 4
 307 006c F0BD     		pop	{r4, r5, r6, r7, pc}
 308              	.LVL32:
 309              	.L26:
 310 006e 00BF     		.align	2
 311              	.L25:
 312 0070 00000000 		.word	CapSense_CSD_widgetNumber
 313 0074 00000000 		.word	.LANCHOR0
 314 0078 00000000 		.word	.LANCHOR1
 315 007c 00000000 		.word	CapSense_CSD_sensorOnMask
 316 0080 00000000 		.word	CapSense_CSD_sensorSignal
 317              		.cfi_endproc
 318              	.LFE6:
 319              		.size	CapSense_CSD_CheckIsSensorActive, .-CapSense_CSD_CheckIsSensorActive
 320              		.section	.text.CapSense_CSD_CheckIsWidgetActive,"ax",%progbits
 321              		.align	2
 322              		.global	CapSense_CSD_CheckIsWidgetActive
 323              		.thumb
 324              		.thumb_func
 325              		.type	CapSense_CSD_CheckIsWidgetActive, %function
 326              	CapSense_CSD_CheckIsWidgetActive:
 327              	.LFB7:
 636:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 637:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 638:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 18


 639:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsWidgetActive
 640:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 641:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 642:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 643:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Use function CapSense_CSD_CheckIsSensorActive() to update 
 644:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] for all sensors within the widget.
 645:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 646:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  active.
 647:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 648:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  col and row to return widget active status.
 649:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 650:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 651:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 652:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 653:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 654:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 655:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 656:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 657:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 658:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 659:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 660:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsWidgetActive(uint8 widget)
 662:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 663:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 328              		.loc 1 663 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              	.LVL33:
 333 0000 38B5     		push	{r3, r4, r5, lr}
 334              		.cfi_def_cfa_offset 16
 335              		.cfi_offset 3, -16
 336              		.cfi_offset 4, -12
 337              		.cfi_offset 5, -8
 338              		.cfi_offset 14, -4
 339              	.LVL34:
 664:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 665:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 666:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 state = 0u;
 340              		.loc 1 666 0
 341 0002 0025     		movs	r5, #0
 664:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 342              		.loc 1 664 0
 343 0004 2C46     		mov	r4, r5
 344              	.LVL35:
 345              	.L29:
 667:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 668:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Check all sensors of the widget */
 669:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 670:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 671:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_CheckIsSensorActive(rawIndex) != 0u)
 346              		.loc 1 671 0
 347 0006 2046     		mov	r0, r4
 348 0008 FFF7FEFF 		bl	CapSense_CSD_CheckIsSensorActive
 349              	.LVL36:
 350 000c 00B1     		cbz	r0, .L28
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 19


 672:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 673:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_SENSOR_1_IS_ACTIVE;
 351              		.loc 1 673 0
 352 000e 0125     		movs	r5, #1
 353              	.LVL37:
 354              	.L28:
 674:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 675:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 355              		.loc 1 675 0
 356 0010 0134     		adds	r4, r4, #1
 357              	.LVL38:
 358 0012 E4B2     		uxtb	r4, r4
 359              	.LVL39:
 676:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 677:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 360              		.loc 1 677 0
 361 0014 072C     		cmp	r4, #7
 362 0016 F6D9     		bls	.L29
 678:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 679:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 680:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 681:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (state);
 682:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 363              		.loc 1 682 0
 364 0018 2846     		mov	r0, r5
 365 001a 38BD     		pop	{r3, r4, r5, pc}
 366              		.cfi_endproc
 367              	.LFE7:
 368              		.size	CapSense_CSD_CheckIsWidgetActive, .-CapSense_CSD_CheckIsWidgetActive
 369              		.section	.text.CapSense_CSD_CheckIsAnyWidgetActive,"ax",%progbits
 370              		.align	2
 371              		.global	CapSense_CSD_CheckIsAnyWidgetActive
 372              		.thumb
 373              		.thumb_func
 374              		.type	CapSense_CSD_CheckIsAnyWidgetActive, %function
 375              	CapSense_CSD_CheckIsAnyWidgetActive:
 376              	.LFB8:
 683:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 684:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 685:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 686:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsAnyWidgetActive
 687:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 688:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 689:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 690:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Compares all sensors of the CapSense_CSD_signal[] array to their finger 
 691:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  threshold. Calls CapSense_CSD_CheckIsWidgetActive() for each widget so 
 692:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  the CapSense_CSD_SensorOnMask[] array is up to date after calling this 
 693:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  function.
 694:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 695:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 696:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 697:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 698:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 699:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 700:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 701:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 702:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 20


 703:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 704:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 705:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsAnyWidgetActive(void)
 706:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 707:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 377              		.loc 1 707 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381 0000 38B5     		push	{r3, r4, r5, lr}
 382              		.cfi_def_cfa_offset 16
 383              		.cfi_offset 3, -16
 384              		.cfi_offset 4, -12
 385              		.cfi_offset 5, -8
 386              		.cfi_offset 14, -4
 387              	.LVL40:
 708:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 709:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 state = 0u;
 388              		.loc 1 709 0
 389 0002 0025     		movs	r5, #0
 710:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 711:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 390              		.loc 1 711 0
 391 0004 2C46     		mov	r4, r5
 392 0006 06E0     		b	.L33
 393              	.LVL41:
 394              	.L35:
 712:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 713:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(i) != 0u)
 395              		.loc 1 713 0
 396 0008 2046     		mov	r0, r4
 397 000a FFF7FEFF 		bl	CapSense_CSD_CheckIsWidgetActive
 398              	.LVL42:
 399 000e 00B1     		cbz	r0, .L34
 714:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 715:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_WIDGET_IS_ACTIVE;
 400              		.loc 1 715 0
 401 0010 0125     		movs	r5, #1
 402              	.LVL43:
 403              	.L34:
 711:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 404              		.loc 1 711 0 discriminator 2
 405 0012 0134     		adds	r4, r4, #1
 406              	.LVL44:
 407 0014 E4B2     		uxtb	r4, r4
 408              	.LVL45:
 409              	.L33:
 711:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 410              		.loc 1 711 0 is_stmt 0 discriminator 1
 411 0016 002C     		cmp	r4, #0
 412 0018 F6D0     		beq	.L35
 716:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 717:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 718:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 719:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 720:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (state);
 721:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 21


 413              		.loc 1 721 0 is_stmt 1
 414 001a 2846     		mov	r0, r5
 415 001c 38BD     		pop	{r3, r4, r5, pc}
 416              		.cfi_endproc
 417              	.LFE8:
 418              		.size	CapSense_CSD_CheckIsAnyWidgetActive, .-CapSense_CSD_CheckIsAnyWidgetActive
 419 001e 00BF     		.section	.text.CapSense_CSD_EnableWidget,"ax",%progbits
 420              		.align	2
 421              		.global	CapSense_CSD_EnableWidget
 422              		.thumb
 423              		.thumb_func
 424              		.type	CapSense_CSD_EnableWidget, %function
 425              	CapSense_CSD_EnableWidget:
 426              	.LFB9:
 722:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 723:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 724:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 725:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_EnableWidget
 726:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 727:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 728:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 729:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 730:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 731:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 732:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 733:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 734:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 735:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 736:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 737:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 738:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 739:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 740:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 741:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 742:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 743:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 744:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 745:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 746:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 747:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 748:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 749:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 750:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 751:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_EnableWidget(uint8 widget)
 752:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    
 753:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 427              		.loc 1 753 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431              		@ link register save eliminated.
 432              	.LVL46:
 433 0000 10B4     		push	{r4}
 434              		.cfi_def_cfa_offset 4
 435              		.cfi_offset 4, -4
 436              	.LVL47:
 754:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 22


 755:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 756:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 437              		.loc 1 756 0
 438 0002 0023     		movs	r3, #0
 439              	.LVL48:
 440              	.L39:
 757:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 758:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 759:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Enable all sensors of the widget */
 760:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 761:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 762:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (rawIndex >> 3u);
 441              		.loc 1 762 0 discriminator 1
 442 0004 D808     		lsrs	r0, r3, #3
 443              	.LVL49:
 763:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 444              		.loc 1 763 0 discriminator 1
 445 0006 03F00701 		and	r1, r3, #7
 446 000a 0122     		movs	r2, #1
 447 000c 8A40     		lsls	r2, r2, r1
 448              	.LVL50:
 764:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 765:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorEnableMask[pos] |= enMask;
 449              		.loc 1 765 0 discriminator 1
 450 000e 054C     		ldr	r4, .L41
 451 0010 215C     		ldrb	r1, [r4, r0]	@ zero_extendqisi2
 452 0012 0A43     		orrs	r2, r2, r1
 453              	.LVL51:
 454 0014 2254     		strb	r2, [r4, r0]
 766:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 455              		.loc 1 766 0 discriminator 1
 456 0016 0133     		adds	r3, r3, #1
 457              	.LVL52:
 458 0018 DBB2     		uxtb	r3, r3
 459              	.LVL53:
 767:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 768:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 460              		.loc 1 768 0 discriminator 1
 461 001a 072B     		cmp	r3, #7
 462 001c F2D9     		bls	.L39
 769:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 770:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 771:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 463              		.loc 1 771 0
 464 001e 5DF8044B 		ldr	r4, [sp], #4
 465              		.cfi_restore 4
 466              		.cfi_def_cfa_offset 0
 467 0022 7047     		bx	lr
 468              	.L42:
 469              		.align	2
 470              	.L41:
 471 0024 00000000 		.word	CapSense_CSD_sensorEnableMask
 472              		.cfi_endproc
 473              	.LFE9:
 474              		.size	CapSense_CSD_EnableWidget, .-CapSense_CSD_EnableWidget
 475              		.section	.text.CapSense_CSD_DisableWidget,"ax",%progbits
 476              		.align	2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 23


 477              		.global	CapSense_CSD_DisableWidget
 478              		.thumb
 479              		.thumb_func
 480              		.type	CapSense_CSD_DisableWidget, %function
 481              	CapSense_CSD_DisableWidget:
 482              	.LFB10:
 772:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 773:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 774:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 775:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_DisableWidget
 776:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 777:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 778:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 779:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 780:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 781:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 782:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 783:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 784:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 785:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 786:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 787:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 788:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 789:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 790:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 791:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 792:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 793:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 794:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 795:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 796:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 797:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 798:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 799:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 800:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 801:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_DisableWidget(uint8 widget)
 802:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     
 803:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 483              		.loc 1 803 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              		@ link register save eliminated.
 488              	.LVL54:
 489 0000 10B4     		push	{r4}
 490              		.cfi_def_cfa_offset 4
 491              		.cfi_offset 4, -4
 492              	.LVL55:
 804:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 805:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 806:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 493              		.loc 1 806 0
 494 0002 0023     		movs	r3, #0
 495              	.LVL56:
 496              	.L44:
 807:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 808:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****    
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 24


 809:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Disable all sensors of the widget */
 810:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 811:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 812:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (rawIndex >> 3u);
 497              		.loc 1 812 0 discriminator 1
 498 0004 D808     		lsrs	r0, r3, #3
 499              	.LVL57:
 813:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 500              		.loc 1 813 0 discriminator 1
 501 0006 03F00701 		and	r1, r3, #7
 502 000a 0122     		movs	r2, #1
 503 000c 8A40     		lsls	r2, r2, r1
 504              	.LVL58:
 814:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 815:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorEnableMask[pos] &= (uint8)~enMask;
 505              		.loc 1 815 0 discriminator 1
 506 000e 064C     		ldr	r4, .L46
 507 0010 215C     		ldrb	r1, [r4, r0]	@ zero_extendqisi2
 508 0012 21EA0202 		bic	r2, r1, r2
 509              	.LVL59:
 510 0016 2254     		strb	r2, [r4, r0]
 816:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 511              		.loc 1 816 0 discriminator 1
 512 0018 0133     		adds	r3, r3, #1
 513              	.LVL60:
 514 001a DBB2     		uxtb	r3, r3
 515              	.LVL61:
 817:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 818:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 516              		.loc 1 818 0 discriminator 1
 517 001c 072B     		cmp	r3, #7
 518 001e F1D9     		bls	.L44
 819:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 820:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 821:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 519              		.loc 1 821 0
 520 0020 5DF8044B 		ldr	r4, [sp], #4
 521              		.cfi_restore 4
 522              		.cfi_def_cfa_offset 0
 523 0024 7047     		bx	lr
 524              	.L47:
 525 0026 00BF     		.align	2
 526              	.L46:
 527 0028 00000000 		.word	CapSense_CSD_sensorEnableMask
 528              		.cfi_endproc
 529              	.LFE10:
 530              		.size	CapSense_CSD_DisableWidget, .-CapSense_CSD_DisableWidget
 531              		.section	.text.CapSense_CSD_FindMaximum,"ax",%progbits
 532              		.align	2
 533              		.global	CapSense_CSD_FindMaximum
 534              		.thumb
 535              		.thumb_func
 536              		.type	CapSense_CSD_FindMaximum, %function
 537              	CapSense_CSD_FindMaximum:
 538              	.LFB11:
 822:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_CENTROIDS_COUNT)
 823:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 25


 824:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_FindMaximum
 825:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
 826:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 827:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
 828:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 829:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_SensorSignal[] within defined cenrtoid and 
 830:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 831:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  ignored.
 832:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 833:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 834:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 835:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 836:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
 837:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_CSD_sensorSignal[] array.
 838:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  count:   number of elements within centroid.
 839:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 840:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  diplex:   pointer to diplex table.
 841:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 842:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
 843:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 844:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 845:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 846:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 847:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_IS_DIPLEX_SLIDER)
 848:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint
 849:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                       
 850:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else 
 851:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
 852:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                       
 853:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 854:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 539              		.loc 1 854 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 544              	.LVL62:
 545 0000 70B4     		push	{r4, r5, r6}
 546              		.cfi_def_cfa_offset 12
 547              		.cfi_offset 4, -12
 548              		.cfi_offset 5, -8
 549              		.cfi_offset 6, -4
 550              	.LVL63:
 855:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 i;
 856:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
 857:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 curPos = 0u;
 858:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* No centroid at the Start */
 859:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 curCntrdSize = 0u;
 860:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 861:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* The biggset centroid is zero */
 862:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 863:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 864:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 865:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maximum = 0xFFu;
 866:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 temp = 0u;
 867:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 *startOfSlider = &CapSense_CSD_sensorSignal[offset]; 
 551              		.loc 1 867 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 26


 552 0002 094D     		ldr	r5, .L54
 553 0004 0544     		add	r5, r5, r0
 554              	.LVL64:
 866:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 *startOfSlider = &CapSense_CSD_sensorSignal[offset]; 
 555              		.loc 1 866 0
 556 0006 0026     		movs	r6, #0
 865:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 temp = 0u;
 557              		.loc 1 865 0
 558 0008 FF20     		movs	r0, #255
 559              	.LVL65:
 868:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 869:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
 870:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(diplex != 0u)
 871:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 872:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Initialize */
 873:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 i = 0u;
 874:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
 875:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Make slider x2 as Diplexed */
 876:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 count <<= 1u;
 877:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 while(1u)
 878:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 { 
 879:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 880:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 881:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 882:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 883:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             /* Start of centroid */
 884:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = i;
 885:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
 886:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 887:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         else
 888:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 889:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
 890:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 891:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 892:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 893:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {          
 894:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if(curCntrdSize > 0u)
 895:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 896:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             /* We are in the end of current */
 897:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 898:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 899:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 900:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 901:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 902:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             
 903:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCntrdSize = 0u;
 904:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 905:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 906:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 907:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
 908:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     i++; 
 909:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     curPos = diplex[i];
 910:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if(i == count)
 911:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 912:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         break;
 913:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }            
 914:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 27


 915:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
 916:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 917:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                        We are in the end of current */
 918:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 919:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
 920:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 921:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 922:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 923:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 924:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else
 925:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 926:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Without diplexing */ 
 927:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 biggestCtrdSize = count;
 928:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 929:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
 930:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 931:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Check centroid size */
 932:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_NON_DIPLEX_SLIDER)
 933:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 934:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #else                    
 935:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 936:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
 937:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
 938:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 939:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 940:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
 941:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (diplex == 0u)
 942:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 943:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 curPos = i;
 944:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 945:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             else
 946:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 947:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 curPos = diplex[i];
 948:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }                    
 949:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #elif (CapSense_CSD_IS_DIPLEX_SLIDER)                    
 950:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curPos = diplex[i];                    
 951:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLID
 952:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Looking for the grater element within centroid */
 953:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 954:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 955:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 956:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 957:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 maximum = i;
 958:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 temp = startOfSlider[curPos];
 959:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 960:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 961:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 962:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 } 
 963:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
 964:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             for (i = 0u; i < count; i++)
 560              		.loc 1 964 0
 561 000a 3346     		mov	r3, r6
 562 000c 08E0     		b	.L49
 563              	.LVL66:
 564              	.L51:
 965:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {                      
 966:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Looking for the grater element within centroid */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 28


 967:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 565              		.loc 1 967 0
 566 000e EC5C     		ldrb	r4, [r5, r3]	@ zero_extendqisi2
 567 0010 9442     		cmp	r4, r2
 568 0012 03D9     		bls	.L50
 968:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
 969:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if(startOfSlider[i] > temp)
 569              		.loc 1 969 0
 570 0014 A642     		cmp	r6, r4
 571 0016 01D2     		bcs	.L50
 970:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 971:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         maximum = i;
 972:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         temp = startOfSlider[i];
 572              		.loc 1 972 0
 573 0018 2646     		mov	r6, r4
 574              	.LVL67:
 971:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         temp = startOfSlider[i];
 575              		.loc 1 971 0
 576 001a 1846     		mov	r0, r3
 577              	.LVL68:
 578              	.L50:
 964:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {                      
 579              		.loc 1 964 0 discriminator 2
 580 001c 0133     		adds	r3, r3, #1
 581              	.LVL69:
 582 001e DBB2     		uxtb	r3, r3
 583              	.LVL70:
 584              	.L49:
 964:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {                      
 585              		.loc 1 964 0 is_stmt 0 discriminator 1
 586 0020 8B42     		cmp	r3, r1
 587 0022 F4D3     		bcc	.L51
 973:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 974:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 975:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }    
 976:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 977:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (maximum);
 978:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 588              		.loc 1 978 0 is_stmt 1
 589 0024 70BC     		pop	{r4, r5, r6}
 590              		.cfi_restore 6
 591              		.cfi_restore 5
 592              		.cfi_restore 4
 593              		.cfi_def_cfa_offset 0
 594              	.LVL71:
 595 0026 7047     		bx	lr
 596              	.L55:
 597              		.align	2
 598              	.L54:
 599 0028 00000000 		.word	CapSense_CSD_sensorSignal
 600              		.cfi_endproc
 601              	.LFE11:
 602              		.size	CapSense_CSD_FindMaximum, .-CapSense_CSD_FindMaximum
 603              		.section	.text.CapSense_CSD_CalcCentroid,"ax",%progbits
 604              		.align	2
 605              		.global	CapSense_CSD_CalcCentroid
 606              		.thumb
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 29


 607              		.thumb_func
 608              		.type	CapSense_CSD_CalcCentroid, %function
 609              	CapSense_CSD_CalcCentroid:
 610              	.LFB12:
 979:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 980:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 981:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 982:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_CalcCentroid
 983:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
 984:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 985:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
 986:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
 987:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  resolution.
 988:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 989:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
 990:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  type:  widget type.
 991:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  diplex:  pointer to diplex table.
 992:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
 993:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_CSD_SensorSignal[] array.
 994:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  count:    Number of elements within centroid.
 995:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
 996:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  API resolution.
 997:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  noiseThreshold:  Noise threshould.
 998:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 999:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1000:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value of the slider.
1001:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
1002:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1003:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Reentrant:
1004:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  No.
1005:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1006:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1007:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset, 
1008:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1009:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                    
1010:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 611              		.loc 1 1010 0
 612              		.cfi_startproc
 613              		@ args = 4, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              	.LVL72:
 616 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 617              		.cfi_def_cfa_offset 20
 618              		.cfi_offset 4, -20
 619              		.cfi_offset 5, -16
 620              		.cfi_offset 6, -12
 621              		.cfi_offset 7, -8
 622              		.cfi_offset 14, -4
 623 0002 9DF81450 		ldrb	r5, [sp, #20]	@ zero_extendqisi2
 624              	.LVL73:
1011:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_COUNT
1012:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posPrev = 0u;
1013:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posNext = 0u;
1014:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_C
1015:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                
1016:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)                
1017:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 pos;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 30


1018:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1019:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1020:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Helps while centroid calulation */
1021:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         static uint8 CapSense_CSD_centroid[3u];
1022:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1023:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 position;
1024:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint32 numerator;
1025:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         int32 denominator;
1026:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 *startOfSlider = &CapSense_CSD_sensorSignal[offset];
 625              		.loc 1 1026 0
 626 0006 284C     		ldr	r4, .L67
 627 0008 2144     		add	r1, r1, r4
 628              	.LVL74:
1027:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1028:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1029:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(type == CapSense_CSD_TYPE_RADIAL_SLIDER)
1030:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1031:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1032:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1033:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1034:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Copy Signal for found centriod */
1035:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1036:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                  
1037:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check borders for ROTARY Slider */
1038:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1039:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 { 
1040:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[count - 1u];
1041:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[1u];
1042:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1043:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1044:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1045:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1046:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[0u];
1047:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1048:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1049:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1050:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1051:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[maximum + 1u];
1052:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1053:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1054:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1055:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1056:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1057:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else
1058:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1059:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1060:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1061:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_C
1062:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)           
1063:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1064:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if(diplex == 0u)
1065:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1066:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         pos     = maximum;
1067:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1068:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posNext = maximum + 1u; 
1069:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1070:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 31


1071:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1072:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         pos     = diplex[maximum];
1073:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1074:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posNext = diplex[maximum + 1u];
1075:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         count <<= 1u;
1076:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }                    
1077:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1078:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1079:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     pos     = diplex[maximum];
1080:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1081:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posNext = diplex[maximum + 1u];
1082:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     count <<= 1u;                    
1083:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #else                    
1084:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1085:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (maximum >= 1u)
 629              		.loc 1 1085 0
 630 000a 0446     		mov	r4, r0
 631 000c 10B1     		cbz	r0, .L65
1086:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1087:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
 632              		.loc 1 1087 0
 633 000e 461E     		subs	r6, r0, #1
 634 0010 F6B2     		uxtb	r6, r6
 635              	.LVL75:
 636 0012 00E0     		b	.L57
 637              	.LVL76:
 638              	.L65:
1012:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posNext = 0u;
 639              		.loc 1 1012 0
 640 0014 0026     		movs	r6, #0
 641              	.LVL77:
 642              	.L57:
1088:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1089:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posNext = maximum + 1u; 
 643              		.loc 1 1089 0
 644 0016 601C     		adds	r0, r4, #1
 645              	.LVL78:
 646 0018 C0B2     		uxtb	r0, r0
 647              	.LVL79:
1090:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1091:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1092:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Copy Signal for found centriod */
1093:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1094:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[pos];
1095:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #else
1096:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
 648              		.loc 1 1096 0
 649 001a 11F804E0 		ldrb	lr, [r1, r4]	@ zero_extendqisi2
 650 001e 234F     		ldr	r7, .L67+4
 651 0020 87F809E0 		strb	lr, [r7, #9]
1097:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1098:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1099:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check borders for LINEAR Slider */
1100:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 652              		.loc 1 1100 0
 653 0024 24B9     		cbnz	r4, .L58
1101:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 { 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 32


1102:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
 654              		.loc 1 1102 0
 655 0026 0026     		movs	r6, #0
 656              	.LVL80:
 657 0028 3E72     		strb	r6, [r7, #8]
1103:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
 658              		.loc 1 1103 0
 659 002a 095C     		ldrb	r1, [r1, r0]	@ zero_extendqisi2
 660              	.LVL81:
 661 002c B972     		strb	r1, [r7, #10]
 662 002e 0DE0     		b	.L59
 663              	.LVL82:
 664              	.L58:
1104:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1105:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 665              		.loc 1 1105 0
 666 0030 013A     		subs	r2, r2, #1
 667              	.LVL83:
 668 0032 9442     		cmp	r4, r2
 669 0034 05D1     		bne	.L60
1106:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1107:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
 670              		.loc 1 1107 0
 671 0036 895D     		ldrb	r1, [r1, r6]	@ zero_extendqisi2
 672              	.LVL84:
 673 0038 1C4A     		ldr	r2, .L67+4
 674 003a 1172     		strb	r1, [r2, #8]
1108:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
 675              		.loc 1 1108 0
 676 003c 0021     		movs	r1, #0
 677 003e 9172     		strb	r1, [r2, #10]
 678 0040 04E0     		b	.L59
 679              	.LVL85:
 680              	.L60:
1109:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1110:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1111:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1112:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
 681              		.loc 1 1112 0
 682 0042 8E5D     		ldrb	r6, [r1, r6]	@ zero_extendqisi2
 683              	.LVL86:
 684 0044 194A     		ldr	r2, .L67+4
 685 0046 1672     		strb	r6, [r2, #8]
1113:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
 686              		.loc 1 1113 0
 687 0048 095C     		ldrb	r1, [r1, r0]	@ zero_extendqisi2
 688              	.LVL87:
 689 004a 9172     		strb	r1, [r2, #10]
 690              	.L59:
1114:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1115:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_CSD_TOTAL_TOUCH_PADS
1116:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1117:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1118:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1119:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1120:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
1121:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 33


1122:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_PREV] > noiseThreshold)
 691              		.loc 1 1122 0
 692 004c 174A     		ldr	r2, .L67+4
 693 004e 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 694 0050 AA42     		cmp	r2, r5
 695 0052 03D9     		bls	.L61
1123:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1124:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] -= noiseThreshold;
 696              		.loc 1 1124 0
 697 0054 521B     		subs	r2, r2, r5
 698 0056 1549     		ldr	r1, .L67+4
 699 0058 0A72     		strb	r2, [r1, #8]
 700 005a 02E0     		b	.L62
 701              	.L61:
1125:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1126:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1127:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1128:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
 702              		.loc 1 1128 0
 703 005c 0021     		movs	r1, #0
 704 005e 134A     		ldr	r2, .L67+4
 705 0060 1172     		strb	r1, [r2, #8]
 706              	.L62:
1129:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1130:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1131:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1132:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_centroid[CapSense_CSD_POS] -= noiseThreshold;
 707              		.loc 1 1132 0
 708 0062 124A     		ldr	r2, .L67+4
 709 0064 517A     		ldrb	r1, [r2, #9]	@ zero_extendqisi2
 710 0066 491B     		subs	r1, r1, r5
 711 0068 C9B2     		uxtb	r1, r1
 712 006a 5172     		strb	r1, [r2, #9]
1133:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1134:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1135:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] > noiseThreshold)
 713              		.loc 1 1135 0
 714 006c 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 715 006e AA42     		cmp	r2, r5
 716 0070 03D9     		bls	.L63
1136:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1137:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -= noiseThreshold;
 717              		.loc 1 1137 0
 718 0072 551B     		subs	r5, r2, r5
 719 0074 0D4A     		ldr	r2, .L67+4
 720 0076 9572     		strb	r5, [r2, #10]
 721 0078 02E0     		b	.L64
 722              	.L63:
1138:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1139:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1140:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1141:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
 723              		.loc 1 1141 0
 724 007a 0020     		movs	r0, #0
 725              	.LVL88:
 726 007c 0B4A     		ldr	r2, .L67+4
 727 007e 9072     		strb	r0, [r2, #10]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 34


 728              	.L64:
1142:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1143:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1144:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1145:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Si+1 - Si-1 */
1146:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         numerator = (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -
 729              		.loc 1 1146 0
 730 0080 0A4A     		ldr	r2, .L67+4
 731 0082 907A     		ldrb	r0, [r2, #10]	@ zero_extendqisi2
1147:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
 732              		.loc 1 1147 0
 733 0084 157A     		ldrb	r5, [r2, #8]	@ zero_extendqisi2
1146:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
 734              		.loc 1 1146 0
 735 0086 421B     		subs	r2, r0, r5
 736              	.LVL89:
1148:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1149:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Si+1 + Si + Si-1 */
1150:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         denominator = (int32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV] + 
 737              		.loc 1 1150 0
 738 0088 2944     		add	r1, r1, r5
 739 008a 0844     		add	r0, r0, r1
 740              	.LVL90:
1151:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] + 
1152:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT];
1153:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1154:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* (numerator/denominator) + maximum */
1155:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 741              		.loc 1 1155 0
 742 008c 1202     		lsls	r2, r2, #8
 743              	.LVL91:
 744 008e 92FBF0F0 		sdiv	r0, r2, r0
 745              	.LVL92:
 746 0092 00EB0420 		add	r0, r0, r4, lsl #8
 747              	.LVL93:
1156:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1157:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if(CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1158:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Only required for RADIAL Slider */
1159:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(denominator < 0)
1160:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1161:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1162:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1163:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1164:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1165:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         denominator *= (int16)resolution;
 748              		.loc 1 1165 0
 749 0096 1BB2     		sxth	r3, r3
 750 0098 00FB03F0 		mul	r0, r0, r3
 751              	.LVL94:
1166:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1167:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Round the relust and put it to uint8 */
1168:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CSD_CENTROID_ROUND_VALUE));
 752              		.loc 1 1168 0
 753 009c 00F5FE40 		add	r0, r0, #32512
 754              	.LVL95:
1169:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1170:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (position);
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 35


1171:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }    
 755              		.loc 1 1171 0
 756 00a0 C0F30740 		ubfx	r0, r0, #16, #8
 757              	.LVL96:
 758 00a4 F0BD     		pop	{r4, r5, r6, r7, pc}
 759              	.LVL97:
 760              	.L68:
 761 00a6 00BF     		.align	2
 762              	.L67:
 763 00a8 00000000 		.word	CapSense_CSD_sensorSignal
 764 00ac 00000000 		.word	.LANCHOR1
 765              		.cfi_endproc
 766              	.LFE12:
 767              		.size	CapSense_CSD_CalcCentroid, .-CapSense_CSD_CalcCentroid
 768              		.section	.text.CapSense_CSD_IIR4Filter,"ax",%progbits
 769              		.align	2
 770              		.global	CapSense_CSD_IIR4Filter
 771              		.thumb
 772              		.thumb_func
 773              		.type	CapSense_CSD_IIR4Filter, %function
 774              	CapSense_CSD_IIR4Filter:
 775              	.LFB14:
1172:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_CENTROIDS_COUNT) */
1173:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1174:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1175:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1176:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1177:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetCentroidPos
1178:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1179:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1180:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1181:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1182:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1183:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1184:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  result if enabled.
1185:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1186:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1187:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1188:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1189:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_LS__"widget_name"            5
1190:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
1191:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1192:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value of the linear slider.
1193:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1194:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Side Effects:
1195:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1196:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1197:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1198:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1199:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1200:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1201:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1202:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Note:
1203:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1204:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1205:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1206:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 36


1207:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1208:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Reentrant:
1209:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  No.
1210:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1211:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1212:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_GetCentroidPos(uint8 widget) 
1213:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
1214:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1215:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             const uint8 CYCODE *diplex;
1216:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1217:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
1218:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1219:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1220:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1221:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];  
1222:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1223:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1224:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) ||
1225:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1226:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1227:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MAS
1228:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_
1229:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                */
1230:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1231:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maximum;
1232:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 position;
1233:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
1234:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1235:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1236:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1237:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(widget < CapSense_CSD_TOTAL_DIPLEXED_SLIDERS_COUNT)
1238:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1239:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 maximum = CapSense_CSD_diplexTable[widget];
1240:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 diplex = &CapSense_CSD_diplexTable[maximum];
1241:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1242:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else
1243:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1244:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 diplex = 0u;
1245:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1246:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1247:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1248:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */      
1249:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
1250:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget],
1251:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
1252:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget])
1253:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1254:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1255:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (maximum != 0xFFu)
1256:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1257:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1258:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum, 
1259:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1260:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1261:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1262:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1263:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 37


1264:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1265:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Caluclate position to store filters data */
1266:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1267:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1268:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1269:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1270:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Init filters */
1271:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1272:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1273:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1274:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1275:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1276:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1277:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) || 
1278:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1279:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1280:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1281:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1282:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1283:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1284:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1285:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1286:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1287:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1288:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
1289:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1290:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else
1291:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1292:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Do filtering */
1293:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1294:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1295:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1296:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1297:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
1298:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1299:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1300:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
1301:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1302:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1303:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1304:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /*(0u != (CapSense_CSD_MEDIAN_FILTER &
1305:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *         CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1306:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1307:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1308:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if(0u!=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1309:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) 
1310:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1311:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1312:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
1313:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1314:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1315:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]=CapSense_CSD_posFiltersDat
1316:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1317:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1318:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1319:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1320:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 38


1321:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1322:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1323:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER)) 
1324:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1325:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
1326:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1327:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1328:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1329:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
1330:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1331:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1332:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1333:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1334:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1335:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1336:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
1337:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1338:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1339:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }                                
1340:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
1341:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1342:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1343:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1344:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1345:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
1346:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1347:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
1348:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1349:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1350:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1351:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
1352:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1353:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1354:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1355:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1356:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1357:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1358:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1359:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1360:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1361:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* The maximum wasn't found */
1362:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
1363:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1364:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if(0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1365:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Reset the filters */
1366:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1367:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1368:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
1369:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1370:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1371:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1372:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1373:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1374:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (position);
1375:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
1376:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
1377:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 39


1378:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1379:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1380:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1381:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetRadialCentroidPos
1382:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1383:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1384:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1385:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1386:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1387:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1388:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  result if enabled.
1389:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1390:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1391:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1392:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1393:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_RS_"widget_name"            5
1394:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
1395:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1396:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value of the radial slider.
1397:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1398:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Side Effects:
1399:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1400:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1401:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1402:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1403:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1404:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1405:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Note:
1406:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1407:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1408:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1409:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1410:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1411:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1412:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Reentrant:
1413:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  No.
1414:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1415:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1416:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****      uint16 CapSense_CSD_GetRadialCentroidPos(uint8 widget)
1417:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                       
1418:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
1419:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1420:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1421:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1422:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget]; 
1423:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1424:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1425:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) ||
1426:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1427:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1428:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MAS
1429:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_
1430:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                */
1431:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1432:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maximum;
1433:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 position;
1434:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 40


1435:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1436:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1437:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */        
1438:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1439:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget],
1440:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
1441:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget])
1442:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1443:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1444:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (maximum != 0xFFu)
1445:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1446:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1447:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum, 
1448:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1449:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1450:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1451:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1452:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1453:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1454:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Caluclate position to store filters data */
1455:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1456:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1457:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1458:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1459:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Init filters */
1460:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1461:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1462:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1463:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1464:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1465:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1466:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))  || 
1467:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1468:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1469:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1470:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1471:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1472:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1473:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1474:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1475:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1476:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1477:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
1478:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1479:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else
1480:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1481:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Do filtering */
1482:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
1483:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1484:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1485:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1486:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
1487:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
1488:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
1489:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = 
1490:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                               CapSense_CSD_posFilte
1491:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 41


1492:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1493:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER & 
1494:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1495:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1496:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1497:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_AVERAGING_FILTER & \
1498:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1499:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
1500:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1501:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1502:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position, 
1503:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
1504:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
1505:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]= CapSense_CSD_posFiltersDa
1506:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1507:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1508:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1509:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1510:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1511:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1512:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
1513:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
1514:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1515:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
1516:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1517:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1518:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1519:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & 
1520:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1521:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1522:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1523:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
1524:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1525:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1526:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
1527:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1528:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1529:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1530:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & 
1531:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1532:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1533:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1534:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
1535:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
1536:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1537:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position, 
1538:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                          CapSense_CSD_posFiltersDat
1539:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1540:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1541:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER &
1542:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1543:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1544:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1545:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1546:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1547:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1548:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 42


1549:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1550:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1551:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* The maximum didn't find */
1552:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
1553:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1554:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1555:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Reset the filters */
1556:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
1557:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1558:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
1559:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1560:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1561:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1562:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1563:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (position);
1564:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
1565:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif
1566:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1567:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1568:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_TOUCH_PADS_COUNT > 0u)
1569:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1570:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetTouchCentroidPos
1571:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1572:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1573:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1574:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1575:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1576:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1577:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1578:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The position filter is applied to the result if enabled.
1579:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1580:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  customizer.
1581:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1582:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1583:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  widget:  Widget number. 
1584:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1585:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_TP_"widget_name"            5
1586:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1587:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1588:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  result of calculation of X and Y position are stored.
1589:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  pos[0u]  - position of X
1590:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  pos[1u]  - position of Y
1591:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1592:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1593:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1594:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1595:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Side Effects:
1596:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1597:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1598:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *   calculations.
1599:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1600:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Reentrant:
1601:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  No.
1602:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1603:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1604:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_GetTouchCentroidPos(uint8 widget, uint16* pos)
1605:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                    
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 43


1606:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
1607:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
1608:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posXIndex;
1609:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posYIndex;
1610:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1611:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
1612:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
1613:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1614:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
1615:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
1616:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint16 tempPos;
1617:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) 
1618:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK
1619:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                */
1620:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1621:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maxX;
1622:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maxY;
1623:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 posX;
1624:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 posY;
1625:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 touch = 0u;
1626:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
1627:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
1628:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1629:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Find Maximum within X centroid */
1630:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1631:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget], 0u
1632:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
1633:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget]);
1634:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1635:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1636:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (maxX != 0xFFu)
1637:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1638:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             offset = CapSense_CSD_rawDataIndex[widget + 1u];
1639:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             count = CapSense_CSD_numberOfSensors[widget + 1u];
1640:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1641:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Find Maximum within Y centroid */
1642:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1643:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 maxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
1644:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #else
1645:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 maxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
1646:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1647:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1648:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (maxY != 0xFFu)
1649:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1650:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* X and Y maximums are found = true touch */
1651:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 touch = 1u;
1652:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
1653:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Calculate Y centroid */
1654:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 posY = CapSense_CSD_CalcCentroid(maxY, offset, count, 
1655:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget + 1u], CapSense_CSD_noiseThreshold[wid
1656:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
1657:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Calculate X centroid */
1658:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 offset = CapSense_CSD_rawDataIndex[widget];
1659:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 count = CapSense_CSD_numberOfSensors[widget];
1660:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
1661:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 posX = CapSense_CSD_CalcCentroid(maxX, offset, count, 
1662:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget],CapSense_CSD_noiseThreshold[widget]);
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 44


1663:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
1664:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
1665:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Check if this TP has enabled filters */
1666:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1667:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1668:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Caluclate position to store filters data */
1669:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1670:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posYIndex  = CapSense_CSD_posFiltersData[widget + 1u];
1671:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1672:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1673:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
1674:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             /* Init filters */
1675:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posXIndex] = posX;
1676:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posYIndex] = posY;
1677:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1678:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #if((0u != (CapSense_CSD_MEDIAN_FILTER & \
1679:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))|| \
1680:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 (0u != (CapSense_CSD_AVERAGING_FILTER & \
1681:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
1682:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1683:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) || 
1684:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1685:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 {
1686:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = posX;
1687:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = posY;
1688:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 }
1689:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1690:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
1691:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *    (0u != (CapSense_CSD_AVERAGING_FILTER & \
1692:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *            CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
1693:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    */
1694:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             
1695:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
1696:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
1697:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         else
1698:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
1699:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             /* Do filtering */
1700:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
1701:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1702:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 {
1703:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
1704:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_MedianFilter(posX,
1705:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
1706:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
1707:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = 
1708:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1709:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
1710:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     
1711:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
1712:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_MedianFilter(posY,
1713:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
1714:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
1715:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = 
1716:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1717:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
1718:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 }
1719:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 45


1720:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER & \
1721:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
1722:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    */
1723:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1724:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #if(0u !=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_F
1725:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
1726:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 {
1727:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
1728:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_AveragingFilter(posX,
1729:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
1730:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
1731:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = 
1732:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1733:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
1734:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     
1735:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
1736:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_AveragingFilter(posY, 
1737:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
1738:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
1739:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = 
1740:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
1741:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
1742:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 }
1743:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1744:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1745:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
1746:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    */
1747:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1748:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
1749:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
1750:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 {
1751:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR2Filter(posX, 
1752:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                            CapSense_CSD_posFiltersD
1753:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
1754:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     
1755:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR2Filter(posY, 
1756:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
1757:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
1758:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 }
1759:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 
1760:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
1761:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
1762:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    */
1763:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1764:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
1765:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1766:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 {
1767:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR4Filter((uint16)posX,
1768:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1769:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
1770:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1771:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR4Filter((uint16)posY,
1772:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1773:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
1774:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 }
1775:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 
1776:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 46


1777:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
1778:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    */
1779:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1780:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
1781:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
1782:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     {
1783:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         posX = (uint8) CapSense_CSD_JitterFilter(posX, 
1784:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
1785:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posXIndex] = posX;
1786:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         
1787:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         posY = (uint8) CapSense_CSD_JitterFilter(posY, 
1788:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
1789:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posYIndex] = posY;
1790:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     }
1791:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
1792:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
1793:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    */
1794:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
1795:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1796:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
1797:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1798:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Save positions */
1799:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 pos[0u] = posX;
1800:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 pos[1u] = posY;
1801:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1802:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1803:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1804:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
1805:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(touch == 0u)
1806:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1807:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Reset the filters */
1808:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if ((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
1809:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1810:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
1811:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1812:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1813:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
1814:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1815:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (touch);
1816:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
1817:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TOUCH_PADS_COUNT > 0u) */
1818:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1819:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1820:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
1821:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER) )
1822:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1823:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_MedianFilter
1824:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1825:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1826:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1827:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Median filter function. 
1828:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1829:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  median value.
1830:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1831:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1832:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
1833:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 47


1834:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
1835:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1836:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1837:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
1838:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1839:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1840:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
1841:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                          
1842:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
1843:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 tmp;
1844:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1845:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (x1 > x2)
1846:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1847:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             tmp = x2;
1848:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             x2 = x1;
1849:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             x1 = tmp;
1850:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1851:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1852:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (x2 > x3)
1853:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1854:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             x2 = x3;
1855:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1856:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1857:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
1858:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
1859:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
1860:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        *    (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER) )
1861:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        */
1862:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1863:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1864:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) | \
1865:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER) )
1866:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1867:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_AveragingFilter
1868:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1869:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1870:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1871:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Averaging filter function.
1872:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The averaging filter looks at the three most recent samples of position and
1873:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  reports the averaging value.
1874:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1875:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1876:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
1877:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
1878:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
1879:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1880:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1881:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
1882:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1883:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1884:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
1885:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                             
1886:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
1887:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
1888:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1889:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
1890:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 48


1891:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) | \
1892:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        *    (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER) )
1893:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        */
1894:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1895:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1896:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) | \
1897:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER) )
1898:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1899:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR2Filter
1900:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1901:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1902:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1903:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
1904:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1905:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1906:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
1907:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
1908:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1909:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1910:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
1911:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1912:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1913:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR2Filter(uint16 x1, uint16 x2)
1914:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                        
1915:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
1916:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint32 tmp;
1917:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1918:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
1919:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
1920:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tmp >>= 1u;
1921:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
1922:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
1923:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
1924:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) | \
1925:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        *    (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER) )
1926:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        */
1927:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1928:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1929:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) | \
1930:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER) )
1931:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1932:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR4Filter
1933:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1934:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1935:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1936:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
1937:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1938:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1939:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
1940:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
1941:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1942:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1943:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
1944:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1945:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1946:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR4Filter(uint16 x1, uint16 x2)
1947:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                        
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 49


1948:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 776              		.loc 1 1948 0
 777              		.cfi_startproc
 778              		@ args = 0, pretend = 0, frame = 0
 779              		@ frame_needed = 0, uses_anonymous_args = 0
 780              		@ link register save eliminated.
 781              	.LVL98:
1949:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint32 tmp;
1950:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1951:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
1952:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 782              		.loc 1 1952 0
 783 0000 00EB4100 		add	r0, r0, r1, lsl #1
 784              	.LVL99:
1953:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 785              		.loc 1 1953 0
 786 0004 0844     		add	r0, r0, r1
 787              	.LVL100:
1954:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tmp >>= 2u;
1955:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1956:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
1957:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 788              		.loc 1 1957 0
 789 0006 C0F38F00 		ubfx	r0, r0, #2, #16
 790              	.LVL101:
 791 000a 7047     		bx	lr
 792              		.cfi_endproc
 793              	.LFE14:
 794              		.size	CapSense_CSD_IIR4Filter, .-CapSense_CSD_IIR4Filter
 795              		.section	.text.CapSense_CSD_UpdateSensorBaseline,"ax",%progbits
 796              		.align	2
 797              		.global	CapSense_CSD_UpdateSensorBaseline
 798              		.thumb
 799              		.thumb_func
 800              		.type	CapSense_CSD_UpdateSensorBaseline, %function
 801              	CapSense_CSD_UpdateSensorBaseline:
 802              	.LFB4:
 359:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint32 calc;
 803              		.loc 1 359 0
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 0
 806              		@ frame_needed = 0, uses_anonymous_args = 0
 807              	.LVL102:
 808 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 809              		.cfi_def_cfa_offset 24
 810              		.cfi_offset 4, -24
 811              		.cfi_offset 5, -20
 812              		.cfi_offset 6, -16
 813              		.cfi_offset 7, -12
 814              		.cfi_offset 8, -8
 815              		.cfi_offset 14, -4
 816 0004 0446     		mov	r4, r0
 363:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 noiseThreshold = CapSense_CSD_noiseThreshold[widget];
 817              		.loc 1 363 0
 818 0006 314B     		ldr	r3, .L81
 819 0008 1B5C     		ldrb	r3, [r3, r0]	@ zero_extendqisi2
 820              	.LVL103:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 50


 364:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 821              		.loc 1 364 0
 822 000a 314A     		ldr	r2, .L81+4
 823 000c 1344     		add	r3, r3, r2
 824              	.LVL104:
 825 000e 1E7A     		ldrb	r6, [r3, #8]	@ zero_extendqisi2
 826              	.LVL105:
 393:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 827              		.loc 1 393 0
 828 0010 304D     		ldr	r5, .L81+8
 829 0012 314B     		ldr	r3, .L81+12
 830              	.LVL106:
 831 0014 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 832              	.LVL107:
 833 0018 35F81410 		ldrh	r1, [r5, r4, lsl #1]
 834 001c FFF7FEFF 		bl	CapSense_CSD_IIR4Filter
 835              	.LVL108:
 836 0020 0746     		mov	r7, r0
 837              	.LVL109:
 394:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             
 838              		.loc 1 394 0
 839 0022 25F81400 		strh	r0, [r5, r4, lsl #1]	@ movhi
 413:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
 840              		.loc 1 413 0
 841 0026 2046     		mov	r0, r4
 842              	.LVL110:
 843 0028 FFF7FEFF 		bl	CapSense_CSD_CalculateThresholds
 844              	.LVL111:
 419:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 845              		.loc 1 419 0
 846 002c 2B4B     		ldr	r3, .L81+16
 847 002e 33F81420 		ldrh	r2, [r3, r4, lsl #1]
 848 0032 BA42     		cmp	r2, r7
 849 0034 04D8     		bhi	.L71
 421:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 850              		.loc 1 421 0
 851 0036 BD1A     		subs	r5, r7, r2
 852 0038 ADB2     		uxth	r5, r5
 853              	.LVL112:
 422:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 854              		.loc 1 422 0
 855 003a 4FF00108 		mov	r8, #1
 856 003e 03E0     		b	.L72
 857              	.LVL113:
 858              	.L71:
 426:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 859              		.loc 1 426 0
 860 0040 D51B     		subs	r5, r2, r7
 861 0042 ADB2     		uxth	r5, r5
 862              	.LVL114:
 427:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 863              		.loc 1 427 0
 864 0044 4FF00008 		mov	r8, #0
 865              	.LVL115:
 866              	.L72:
 430:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 867              		.loc 1 430 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 51


 868 0048 B8F1000F 		cmp	r8, #0
 869 004c 10D1     		bne	.L73
 430:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 870              		.loc 1 430 0 is_stmt 0 discriminator 1
 871 004e 142D     		cmp	r5, #20
 872 0050 0ED9     		bls	.L73
 432:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 873              		.loc 1 432 0 is_stmt 1
 874 0052 234B     		ldr	r3, .L81+20
 875 0054 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 876 0056 042B     		cmp	r3, #4
 877 0058 06D9     		bls	.L74
 434:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 878              		.loc 1 434 0
 879 005a 2046     		mov	r0, r4
 880 005c FFF7FEFF 		bl	CapSense_CSD_BaseInit
 881              	.LVL116:
 435:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 882              		.loc 1 435 0
 883 0060 0022     		movs	r2, #0
 884 0062 1F4B     		ldr	r3, .L81+20
 885 0064 1A55     		strb	r2, [r3, r4]
 886 0066 1AE0     		b	.L75
 887              	.L74:
 439:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 888              		.loc 1 439 0
 889 0068 0133     		adds	r3, r3, #1
 890 006a 1D4A     		ldr	r2, .L81+20
 891 006c 1355     		strb	r3, [r2, r4]
 892 006e 16E0     		b	.L75
 893              	.L73:
 446:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                  ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 894              		.loc 1 446 0
 895 0070 B3B2     		uxth	r3, r6
 896 0072 AB42     		cmp	r3, r5
 897 0074 04D2     		bcs	.L76
 446:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                  ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 898              		.loc 1 446 0 is_stmt 0 discriminator 1
 899 0076 132D     		cmp	r5, #19
 900 0078 11D8     		bhi	.L75
 448:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 901              		.loc 1 448 0 is_stmt 1
 902 007a B8F1000F 		cmp	r8, #0
 903 007e 0ED1     		bne	.L75
 904              	.L76:
 905              	.LVL117:
 453:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 906              		.loc 1 453 0
 907 0080 1849     		ldr	r1, .L81+24
 908 0082 0B5D     		ldrb	r3, [r1, r4]	@ zero_extendqisi2
 909 0084 43EA0223 		orr	r3, r3, r2, lsl #8
 910              	.LVL118:
 456:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 911              		.loc 1 456 0
 912 0088 1F44     		add	r7, r7, r3
 913              	.LVL119:
 459:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 52


 914              		.loc 1 459 0
 915 008a BF1A     		subs	r7, r7, r2
 916              	.LVL120:
 462:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 917              		.loc 1 462 0
 918 008c C7F30F22 		ubfx	r2, r7, #8, #16
 919 0090 124B     		ldr	r3, .L81+16
 920 0092 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 463:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 921              		.loc 1 463 0
 922 0096 0F55     		strb	r7, [r1, r4]
 465:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 923              		.loc 1 465 0
 924 0098 0022     		movs	r2, #0
 925 009a 114B     		ldr	r3, .L81+20
 926 009c 1A55     		strb	r2, [r3, r4]
 927              	.LVL121:
 928              	.L75:
 472:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 929              		.loc 1 472 0
 930 009e B6B2     		uxth	r6, r6
 931              	.LVL122:
 932 00a0 AE42     		cmp	r6, r5
 933 00a2 0DD2     		bcs	.L77
 472:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 934              		.loc 1 472 0 is_stmt 0 discriminator 1
 935 00a4 B8F1000F 		cmp	r8, #0
 936 00a8 0AD0     		beq	.L77
 476:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 937              		.loc 1 476 0 is_stmt 1
 938 00aa FF2D     		cmp	r5, #255
 939 00ac 04D9     		bls	.L78
 478:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }    
 940              		.loc 1 478 0
 941 00ae FF22     		movs	r2, #255
 942 00b0 0D4B     		ldr	r3, .L81+28
 943 00b2 1A55     		strb	r2, [r3, r4]
 944 00b4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 945              	.LVL123:
 946              	.L78:
 482:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 947              		.loc 1 482 0
 948 00b8 0B4B     		ldr	r3, .L81+28
 949 00ba 1D55     		strb	r5, [r3, r4]
 950 00bc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 951              	.LVL124:
 952              	.L77:
 491:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 953              		.loc 1 491 0
 954 00c0 0022     		movs	r2, #0
 955 00c2 094B     		ldr	r3, .L81+28
 956 00c4 1A55     		strb	r2, [r3, r4]
 957 00c6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 958              	.LVL125:
 959              	.L82:
 960 00ca 00BF     		.align	2
 961              	.L81:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 53


 962 00cc 00000000 		.word	CapSense_CSD_widgetNumber
 963 00d0 00000000 		.word	.LANCHOR0
 964 00d4 00000000 		.word	CapSense_CSD_rawFilterData1
 965 00d8 00000000 		.word	CapSense_CSD_sensorRaw
 966 00dc 00000000 		.word	CapSense_CSD_sensorBaseline
 967 00e0 00000000 		.word	CapSense_CSD_lowBaselineResetCnt
 968 00e4 00000000 		.word	CapSense_CSD_sensorBaselineLow
 969 00e8 00000000 		.word	CapSense_CSD_sensorSignal
 970              		.cfi_endproc
 971              	.LFE4:
 972              		.size	CapSense_CSD_UpdateSensorBaseline, .-CapSense_CSD_UpdateSensorBaseline
 973              		.section	.text.CapSense_CSD_UpdateEnabledBaselines,"ax",%progbits
 974              		.align	2
 975              		.global	CapSense_CSD_UpdateEnabledBaselines
 976              		.thumb
 977              		.thumb_func
 978              		.type	CapSense_CSD_UpdateEnabledBaselines, %function
 979              	CapSense_CSD_UpdateEnabledBaselines:
 980              	.LFB5:
 532:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 981              		.loc 1 532 0
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 0, uses_anonymous_args = 0
 985 0000 10B5     		push	{r4, lr}
 986              		.cfi_def_cfa_offset 8
 987              		.cfi_offset 4, -8
 988              		.cfi_offset 14, -4
 989              	.LVL126:
 537:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 990              		.loc 1 537 0
 991 0002 0024     		movs	r4, #0
 992 0004 0DE0     		b	.L84
 993              	.LVL127:
 994              	.L86:
 539:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 995              		.loc 1 539 0
 996 0006 E208     		lsrs	r2, r4, #3
 540:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if((CapSense_CSD_sensorEnableMask[pos] & enMask) != 0u)
 997              		.loc 1 540 0
 998 0008 04F00701 		and	r1, r4, #7
 999 000c 0123     		movs	r3, #1
 1000 000e 8B40     		lsls	r3, r3, r1
 1001              	.LVL128:
 541:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 1002              		.loc 1 541 0
 1003 0010 0549     		ldr	r1, .L88
 1004 0012 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1005 0014 1342     		tst	r3, r2
 1006 0016 02D0     		beq	.L85
 543:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 1007              		.loc 1 543 0
 1008 0018 2046     		mov	r0, r4
 1009 001a FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 1010              	.LVL129:
 1011              	.L85:
 537:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 54


 1012              		.loc 1 537 0 discriminator 2
 1013 001e 0134     		adds	r4, r4, #1
 1014              	.LVL130:
 1015 0020 E4B2     		uxtb	r4, r4
 1016              	.LVL131:
 1017              	.L84:
 537:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 1018              		.loc 1 537 0 is_stmt 0 discriminator 1
 1019 0022 072C     		cmp	r4, #7
 1020 0024 EFD9     		bls	.L86
 546:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 1021              		.loc 1 546 0 is_stmt 1
 1022 0026 10BD     		pop	{r4, pc}
 1023              	.LVL132:
 1024              	.L89:
 1025              		.align	2
 1026              	.L88:
 1027 0028 00000000 		.word	CapSense_CSD_sensorEnableMask
 1028              		.cfi_endproc
 1029              	.LFE5:
 1030              		.size	CapSense_CSD_UpdateEnabledBaselines, .-CapSense_CSD_UpdateEnabledBaselines
 1031              		.section	.text.CapSense_CSD_JitterFilter,"ax",%progbits
 1032              		.align	2
 1033              		.global	CapSense_CSD_JitterFilter
 1034              		.thumb
 1035              		.thumb_func
 1036              		.type	CapSense_CSD_JitterFilter, %function
 1037              	CapSense_CSD_JitterFilter:
 1038              	.LFB15:
1958:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) | \
1959:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        *    (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER) )
1960:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****        */
1961:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1962:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1963:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) | \
1964:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER) )
1965:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1966:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: uint16 CapSense_CSD_JitterFilter
1967:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1968:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1969:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1970:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Jitter filter function.
1971:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1972:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1973:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
1974:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
1975:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1976:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1977:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
1978:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1979:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1980:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_JitterFilter(uint16 x1, uint16 x2)
1981:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                          
1982:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 1039              		.loc 1 1982 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 55


 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 1043              		@ link register save eliminated.
 1044              	.LVL133:
1983:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (x1 > x2)
 1045              		.loc 1 1983 0
 1046 0000 8842     		cmp	r0, r1
 1047 0002 02D9     		bls	.L91
1984:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1985:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             x1--;
 1048              		.loc 1 1985 0
 1049 0004 0138     		subs	r0, r0, #1
 1050              	.LVL134:
 1051 0006 80B2     		uxth	r0, r0
 1052              	.LVL135:
 1053 0008 7047     		bx	lr
 1054              	.L91:
1986:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1987:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1988:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1989:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (x1 < x2)
 1055              		.loc 1 1989 0
 1056 000a 8842     		cmp	r0, r1
 1057 000c 01D2     		bcs	.L92
1990:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1991:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 x1++;
 1058              		.loc 1 1991 0
 1059 000e 0130     		adds	r0, r0, #1
 1060              	.LVL136:
 1061 0010 80B2     		uxth	r0, r0
 1062              	.LVL137:
 1063              	.L92:
1992:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1993:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1994:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
1995:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return x1;
1996:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 1064              		.loc 1 1996 0
 1065 0012 7047     		bx	lr
 1066              		.cfi_endproc
 1067              	.LFE15:
 1068              		.size	CapSense_CSD_JitterFilter, .-CapSense_CSD_JitterFilter
 1069              		.section	.text.CapSense_CSD_GetCentroidPos,"ax",%progbits
 1070              		.align	2
 1071              		.global	CapSense_CSD_GetCentroidPos
 1072              		.thumb
 1073              		.thumb_func
 1074              		.type	CapSense_CSD_GetCentroidPos, %function
 1075              	CapSense_CSD_GetCentroidPos:
 1076              	.LFB13:
1213:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
 1077              		.loc 1 1213 0
 1078              		.cfi_startproc
 1079              		@ args = 0, pretend = 0, frame = 0
 1080              		@ frame_needed = 0, uses_anonymous_args = 0
 1081              	.LVL138:
 1082 0000 70B5     		push	{r4, r5, r6, lr}
 1083              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 56


 1084              		.cfi_offset 4, -16
 1085              		.cfi_offset 5, -12
 1086              		.cfi_offset 6, -8
 1087              		.cfi_offset 14, -4
 1088 0002 82B0     		sub	sp, sp, #8
 1089              		.cfi_def_cfa_offset 24
 1090 0004 0446     		mov	r4, r0
1220:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];  
 1091              		.loc 1 1220 0
 1092 0006 184B     		ldr	r3, .L98
 1093 0008 1A18     		adds	r2, r3, r0
 1094 000a 157B     		ldrb	r5, [r2, #12]	@ zero_extendqisi2
 1095              	.LVL139:
1252:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 1096              		.loc 1 1252 0
 1097 000c 0020     		movs	r0, #0
 1098              	.LVL140:
 1099 000e 0821     		movs	r1, #8
 1100 0010 1A5D     		ldrb	r2, [r3, r4]	@ zero_extendqisi2
 1101 0012 FFF7FEFF 		bl	CapSense_CSD_FindMaximum
 1102              	.LVL141:
1255:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 1103              		.loc 1 1255 0
 1104 0016 FF28     		cmp	r0, #255
 1105 0018 1DD0     		beq	.L94
1258:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
 1106              		.loc 1 1258 0
 1107 001a 134E     		ldr	r6, .L98
 1108 001c 3444     		add	r4, r4, r6
 1109 001e 237A     		ldrb	r3, [r4, #8]	@ zero_extendqisi2
 1110 0020 0093     		str	r3, [sp]
 1111 0022 0021     		movs	r1, #0
 1112 0024 0822     		movs	r2, #8
 1113 0026 41F22423 		movw	r3, #4644
 1114 002a FFF7FEFF 		bl	CapSense_CSD_CalcCentroid
 1115              	.LVL142:
 1116 002e 0246     		mov	r2, r0
 1117 0030 80B2     		uxth	r0, r0
 1118              	.LVL143:
1266:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
 1119              		.loc 1 1266 0
 1120 0032 6B1C     		adds	r3, r5, #1
 1121 0034 DBB2     		uxtb	r3, r3
 1122              	.LVL144:
1268:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 1123              		.loc 1 1268 0
 1124 0036 2E44     		add	r6, r6, r5
 1125 0038 317B     		ldrb	r1, [r6, #12]	@ zero_extendqisi2
 1126 003a 29B9     		cbnz	r1, .L95
1271:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
 1127              		.loc 1 1271 0
 1128 003c 0A49     		ldr	r1, .L98
 1129 003e 0B44     		add	r3, r3, r1
 1130              	.LVL145:
 1131 0040 1A73     		strb	r2, [r3, #12]
1288:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 1132              		.loc 1 1288 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 57


 1133 0042 0123     		movs	r3, #1
 1134              	.LVL146:
 1135 0044 3373     		strb	r3, [r6, #12]
 1136 0046 0CE0     		b	.L96
 1137              	.LVL147:
 1138              	.L95:
1348:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
 1139              		.loc 1 1348 0
 1140 0048 074C     		ldr	r4, .L98
 1141 004a 1C44     		add	r4, r4, r3
1347:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
 1142              		.loc 1 1347 0
 1143 004c 217B     		ldrb	r1, [r4, #12]	@ zero_extendqisi2
 1144 004e FFF7FEFF 		bl	CapSense_CSD_JitterFilter
 1145              	.LVL148:
1349:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 1146              		.loc 1 1349 0
 1147 0052 2073     		strb	r0, [r4, #12]
 1148 0054 05E0     		b	.L96
 1149              	.LVL149:
 1150              	.L94:
1368:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 1151              		.loc 1 1368 0
 1152 0056 044B     		ldr	r3, .L98
 1153 0058 1D44     		add	r5, r5, r3
 1154              	.LVL150:
 1155 005a 0023     		movs	r3, #0
 1156 005c 2B73     		strb	r3, [r5, #12]
1362:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 1157              		.loc 1 1362 0
 1158 005e 4FF6FF70 		movw	r0, #65535
 1159              	.LVL151:
 1160              	.L96:
1375:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
 1161              		.loc 1 1375 0
 1162 0062 02B0     		add	sp, sp, #8
 1163              		.cfi_def_cfa_offset 16
 1164              		@ sp needed
 1165 0064 70BD     		pop	{r4, r5, r6, pc}
 1166              	.L99:
 1167 0066 00BF     		.align	2
 1168              	.L98:
 1169 0068 00000000 		.word	.LANCHOR0
 1170              		.cfi_endproc
 1171              	.LFE13:
 1172              		.size	CapSense_CSD_GetCentroidPos, .-CapSense_CSD_GetCentroidPos
 1173              		.global	CapSense_CSD_posFiltersData
 1174              		.global	CapSense_CSD_posFiltersMask
 1175              		.global	CapSense_CSD_centroidMult
 1176              		.global	CapSense_CSD_numberOfSensors
 1177              		.global	CapSense_CSD_rawDataIndex
 1178              		.global	CapSense_CSD_debounceCounter
 1179              		.global	CapSense_CSD_debounce
 1180              		.global	CapSense_CSD_hysteresis
 1181              		.global	CapSense_CSD_noiseThreshold
 1182              		.global	CapSense_CSD_fingerThreshold
 1183              		.comm	CapSense_CSD_lowBaselineResetCnt,8,4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 58


 1184              		.comm	CapSense_CSD_sensorOnMask,1,4
 1185              		.comm	CapSense_CSD_sensorSignal,8,4
 1186              		.comm	CapSense_CSD_sensorBaselineLow,8,4
 1187              		.comm	CapSense_CSD_sensorBaseline,16,4
 1188              		.comm	CapSense_CSD_rawFilterData1,16,4
 1189              		.section	.rodata
 1190              		.align	2
 1191              		.type	CapSense_CSD_posFiltersMask, %object
 1192              		.size	CapSense_CSD_posFiltersMask, 1
 1193              	CapSense_CSD_posFiltersMask:
 1194 0000 16       		.byte	22
 1195 0001 000000   		.space	3
 1196              		.type	CapSense_CSD_centroidMult, %object
 1197              		.size	CapSense_CSD_centroidMult, 2
 1198              	CapSense_CSD_centroidMult:
 1199 0004 2412     		.short	4644
 1200 0006 0000     		.space	2
 1201              		.type	CapSense_CSD_numberOfSensors, %object
 1202              		.size	CapSense_CSD_numberOfSensors, 1
 1203              	CapSense_CSD_numberOfSensors:
 1204 0008 08       		.byte	8
 1205 0009 000000   		.space	3
 1206              		.type	CapSense_CSD_rawDataIndex, %object
 1207              		.size	CapSense_CSD_rawDataIndex, 1
 1208              	CapSense_CSD_rawDataIndex:
 1209 000c 00       		.space	1
 1210 000d 000000   		.data
 1211              		.align	2
 1212              		.set	.LANCHOR0,. + 0
 1213              		.type	CapSense_CSD_fingerThreshold, %object
 1214              		.size	CapSense_CSD_fingerThreshold, 1
 1215              	CapSense_CSD_fingerThreshold:
 1216 0000 64       		.byte	100
 1217 0001 000000   		.space	3
 1218              		.type	CapSense_CSD_debounce, %object
 1219              		.size	CapSense_CSD_debounce, 1
 1220              	CapSense_CSD_debounce:
 1221 0004 01       		.byte	1
 1222 0005 000000   		.space	3
 1223              		.type	CapSense_CSD_noiseThreshold, %object
 1224              		.size	CapSense_CSD_noiseThreshold, 1
 1225              	CapSense_CSD_noiseThreshold:
 1226 0008 14       		.byte	20
 1227 0009 000000   		.space	3
 1228              		.type	CapSense_CSD_posFiltersData, %object
 1229              		.size	CapSense_CSD_posFiltersData, 3
 1230              	CapSense_CSD_posFiltersData:
 1231 000c 01       		.byte	1
 1232 000d 00       		.byte	0
 1233 000e 00       		.byte	0
 1234 000f 00       		.bss
 1235              		.align	2
 1236              		.set	.LANCHOR1,. + 0
 1237              		.type	CapSense_CSD_hysteresis, %object
 1238              		.size	CapSense_CSD_hysteresis, 1
 1239              	CapSense_CSD_hysteresis:
 1240 0000 00       		.space	1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 59


 1241 0001 000000   		.space	3
 1242              		.type	CapSense_CSD_debounceCounter, %object
 1243              		.size	CapSense_CSD_debounceCounter, 1
 1244              	CapSense_CSD_debounceCounter:
 1245 0004 00       		.space	1
 1246 0005 000000   		.space	3
 1247              		.type	CapSense_CSD_centroid.5140, %object
 1248              		.size	CapSense_CSD_centroid.5140, 3
 1249              	CapSense_CSD_centroid.5140:
 1250 0008 000000   		.space	3
 1251 000b 00       		.text
 1252              	.Letext0:
 1253              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1254              		.file 3 ".\\Generated_Source\\PSoC5\\CapSense_CSD.h"
 1255              		.file 4 ".\\Generated_Source\\PSoC5\\CapSense_CSD_CSHL.h"
 1256              		.section	.debug_info,"",%progbits
 1257              	.Ldebug_info0:
 1258 0000 52090000 		.4byte	0x952
 1259 0004 0400     		.2byte	0x4
 1260 0006 00000000 		.4byte	.Ldebug_abbrev0
 1261 000a 04       		.byte	0x4
 1262 000b 01       		.uleb128 0x1
 1263 000c 08060000 		.4byte	.LASF83
 1264 0010 01       		.byte	0x1
 1265 0011 BD060000 		.4byte	.LASF84
 1266 0015 AB010000 		.4byte	.LASF85
 1267 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1268 001d 00000000 		.4byte	0
 1269 0021 00000000 		.4byte	.Ldebug_line0
 1270 0025 02       		.uleb128 0x2
 1271 0026 01       		.byte	0x1
 1272 0027 06       		.byte	0x6
 1273 0028 C3000000 		.4byte	.LASF0
 1274 002c 02       		.uleb128 0x2
 1275 002d 01       		.byte	0x1
 1276 002e 08       		.byte	0x8
 1277 002f 54040000 		.4byte	.LASF1
 1278 0033 02       		.uleb128 0x2
 1279 0034 02       		.byte	0x2
 1280 0035 05       		.byte	0x5
 1281 0036 71040000 		.4byte	.LASF2
 1282 003a 02       		.uleb128 0x2
 1283 003b 02       		.byte	0x2
 1284 003c 07       		.byte	0x7
 1285 003d BB020000 		.4byte	.LASF3
 1286 0041 02       		.uleb128 0x2
 1287 0042 04       		.byte	0x4
 1288 0043 05       		.byte	0x5
 1289 0044 15010000 		.4byte	.LASF4
 1290 0048 02       		.uleb128 0x2
 1291 0049 04       		.byte	0x4
 1292 004a 07       		.byte	0x7
 1293 004b 79020000 		.4byte	.LASF5
 1294 004f 02       		.uleb128 0x2
 1295 0050 08       		.byte	0x8
 1296 0051 05       		.byte	0x5
 1297 0052 B5000000 		.4byte	.LASF6
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 60


 1298 0056 02       		.uleb128 0x2
 1299 0057 08       		.byte	0x8
 1300 0058 07       		.byte	0x7
 1301 0059 77000000 		.4byte	.LASF7
 1302 005d 03       		.uleb128 0x3
 1303 005e 04       		.byte	0x4
 1304 005f 05       		.byte	0x5
 1305 0060 696E7400 		.ascii	"int\000"
 1306 0064 02       		.uleb128 0x2
 1307 0065 04       		.byte	0x4
 1308 0066 07       		.byte	0x7
 1309 0067 42020000 		.4byte	.LASF8
 1310 006b 04       		.uleb128 0x4
 1311 006c 4E010000 		.4byte	.LASF9
 1312 0070 02       		.byte	0x2
 1313 0071 3801     		.2byte	0x138
 1314 0073 2C000000 		.4byte	0x2c
 1315 0077 04       		.uleb128 0x4
 1316 0078 22000000 		.4byte	.LASF10
 1317 007c 02       		.byte	0x2
 1318 007d 3901     		.2byte	0x139
 1319 007f 3A000000 		.4byte	0x3a
 1320 0083 04       		.uleb128 0x4
 1321 0084 5B010000 		.4byte	.LASF11
 1322 0088 02       		.byte	0x2
 1323 0089 3A01     		.2byte	0x13a
 1324 008b 48000000 		.4byte	0x48
 1325 008f 04       		.uleb128 0x4
 1326 0090 B7060000 		.4byte	.LASF12
 1327 0094 02       		.byte	0x2
 1328 0095 3C01     		.2byte	0x13c
 1329 0097 33000000 		.4byte	0x33
 1330 009b 04       		.uleb128 0x4
 1331 009c E8000000 		.4byte	.LASF13
 1332 00a0 02       		.byte	0x2
 1333 00a1 3D01     		.2byte	0x13d
 1334 00a3 41000000 		.4byte	0x41
 1335 00a7 02       		.uleb128 0x2
 1336 00a8 04       		.byte	0x4
 1337 00a9 04       		.byte	0x4
 1338 00aa EC030000 		.4byte	.LASF14
 1339 00ae 02       		.uleb128 0x2
 1340 00af 08       		.byte	0x8
 1341 00b0 04       		.byte	0x4
 1342 00b1 54010000 		.4byte	.LASF15
 1343 00b5 02       		.uleb128 0x2
 1344 00b6 01       		.byte	0x1
 1345 00b7 08       		.byte	0x8
 1346 00b8 3E050000 		.4byte	.LASF16
 1347 00bc 02       		.uleb128 0x2
 1348 00bd 04       		.byte	0x4
 1349 00be 07       		.byte	0x7
 1350 00bf 3A030000 		.4byte	.LASF17
 1351 00c3 05       		.uleb128 0x5
 1352 00c4 8D010000 		.4byte	.LASF18
 1353 00c8 01       		.byte	0x1
 1354 00c9 85       		.byte	0x85
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 61


 1355 00ca 00000000 		.4byte	.LFB0
 1356 00ce 34000000 		.4byte	.LFE0-.LFB0
 1357 00d2 01       		.uleb128 0x1
 1358 00d3 9C       		.byte	0x9c
 1359 00d4 E6000000 		.4byte	0xe6
 1360 00d8 06       		.uleb128 0x6
 1361 00d9 CE020000 		.4byte	.LASF20
 1362 00dd 01       		.byte	0x1
 1363 00de 85       		.byte	0x85
 1364 00df 6B000000 		.4byte	0x6b
 1365 00e3 01       		.uleb128 0x1
 1366 00e4 50       		.byte	0x50
 1367 00e5 00       		.byte	0
 1368 00e6 05       		.uleb128 0x5
 1369 00e7 49000000 		.4byte	.LASF19
 1370 00eb 01       		.byte	0x1
 1371 00ec CD       		.byte	0xcd
 1372 00ed 00000000 		.4byte	.LFB1
 1373 00f1 18000000 		.4byte	.LFE1-.LFB1
 1374 00f5 01       		.uleb128 0x1
 1375 00f6 9C       		.byte	0x9c
 1376 00f7 38010000 		.4byte	0x138
 1377 00fb 07       		.uleb128 0x7
 1378 00fc CE020000 		.4byte	.LASF20
 1379 0100 01       		.byte	0x1
 1380 0101 CD       		.byte	0xcd
 1381 0102 6B000000 		.4byte	0x6b
 1382 0106 00000000 		.4byte	.LLST0
 1383 010a 08       		.uleb128 0x8
 1384 010b 08000000 		.4byte	.LVL2
 1385 010f 25090000 		.4byte	0x925
 1386 0113 1E010000 		.4byte	0x11e
 1387 0117 09       		.uleb128 0x9
 1388 0118 01       		.uleb128 0x1
 1389 0119 50       		.byte	0x50
 1390 011a 02       		.uleb128 0x2
 1391 011b 74       		.byte	0x74
 1392 011c 00       		.sleb128 0
 1393 011d 00       		.byte	0
 1394 011e 0A       		.uleb128 0xa
 1395 011f 0C000000 		.4byte	.LVL3
 1396 0123 36090000 		.4byte	0x936
 1397 0127 0B       		.uleb128 0xb
 1398 0128 16000000 		.4byte	.LVL4
 1399 012c C3000000 		.4byte	0xc3
 1400 0130 09       		.uleb128 0x9
 1401 0131 01       		.uleb128 0x1
 1402 0132 50       		.byte	0x50
 1403 0133 02       		.uleb128 0x2
 1404 0134 74       		.byte	0x74
 1405 0135 00       		.sleb128 0
 1406 0136 00       		.byte	0
 1407 0137 00       		.byte	0
 1408 0138 0C       		.uleb128 0xc
 1409 0139 13040000 		.4byte	.LASF21
 1410 013d 01       		.byte	0x1
 1411 013e 0101     		.2byte	0x101
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 62


 1412 0140 00000000 		.4byte	.LFB2
 1413 0144 16000000 		.4byte	.LFE2-.LFB2
 1414 0148 01       		.uleb128 0x1
 1415 0149 9C       		.byte	0x9c
 1416 014a 6D010000 		.4byte	0x16d
 1417 014e 0D       		.uleb128 0xd
 1418 014f 6900     		.ascii	"i\000"
 1419 0151 01       		.byte	0x1
 1420 0152 0401     		.2byte	0x104
 1421 0154 6B000000 		.4byte	0x6b
 1422 0158 21000000 		.4byte	.LLST1
 1423 015c 0B       		.uleb128 0xb
 1424 015d 0C000000 		.4byte	.LVL7
 1425 0161 E6000000 		.4byte	0xe6
 1426 0165 09       		.uleb128 0x9
 1427 0166 01       		.uleb128 0x1
 1428 0167 50       		.byte	0x50
 1429 0168 02       		.uleb128 0x2
 1430 0169 74       		.byte	0x74
 1431 016a 00       		.sleb128 0
 1432 016b 00       		.byte	0
 1433 016c 00       		.byte	0
 1434 016d 0C       		.uleb128 0xc
 1435 016e 52030000 		.4byte	.LASF22
 1436 0172 01       		.byte	0x1
 1437 0173 2201     		.2byte	0x122
 1438 0175 00000000 		.4byte	.LFB3
 1439 0179 44000000 		.4byte	.LFE3-.LFB3
 1440 017d 01       		.uleb128 0x1
 1441 017e 9C       		.byte	0x9c
 1442 017f D2010000 		.4byte	0x1d2
 1443 0183 0D       		.uleb128 0xd
 1444 0184 6900     		.ascii	"i\000"
 1445 0186 01       		.byte	0x1
 1446 0187 2501     		.2byte	0x125
 1447 0189 6B000000 		.4byte	0x6b
 1448 018d 4B000000 		.4byte	.LLST2
 1449 0191 0E       		.uleb128 0xe
 1450 0192 706F7300 		.ascii	"pos\000"
 1451 0196 01       		.byte	0x1
 1452 0197 2601     		.2byte	0x126
 1453 0199 6B000000 		.4byte	0x6b
 1454 019d 01       		.uleb128 0x1
 1455 019e 52       		.byte	0x52
 1456 019f 0F       		.uleb128 0xf
 1457 01a0 94030000 		.4byte	.LASF23
 1458 01a4 01       		.byte	0x1
 1459 01a5 2701     		.2byte	0x127
 1460 01a7 6B000000 		.4byte	0x6b
 1461 01ab 69000000 		.4byte	.LLST3
 1462 01af 0A       		.uleb128 0xa
 1463 01b0 06000000 		.4byte	.LVL10
 1464 01b4 41090000 		.4byte	0x941
 1465 01b8 0A       		.uleb128 0xa
 1466 01b9 0A000000 		.4byte	.LVL11
 1467 01bd 36090000 		.4byte	0x936
 1468 01c1 0B       		.uleb128 0xb
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 63


 1469 01c2 32000000 		.4byte	.LVL15
 1470 01c6 C3000000 		.4byte	0xc3
 1471 01ca 09       		.uleb128 0x9
 1472 01cb 01       		.uleb128 0x1
 1473 01cc 50       		.byte	0x50
 1474 01cd 02       		.uleb128 0x2
 1475 01ce 74       		.byte	0x74
 1476 01cf 00       		.sleb128 0
 1477 01d0 00       		.byte	0
 1478 01d1 00       		.byte	0
 1479 01d2 10       		.uleb128 0x10
 1480 01d3 EE000000 		.4byte	.LASF30
 1481 01d7 01       		.byte	0x1
 1482 01d8 4C02     		.2byte	0x24c
 1483 01da 6B000000 		.4byte	0x6b
 1484 01de 00000000 		.4byte	.LFB6
 1485 01e2 84000000 		.4byte	.LFE6-.LFB6
 1486 01e6 01       		.uleb128 0x1
 1487 01e7 9C       		.byte	0x9c
 1488 01e8 66020000 		.4byte	0x266
 1489 01ec 11       		.uleb128 0x11
 1490 01ed CE020000 		.4byte	.LASF20
 1491 01f1 01       		.byte	0x1
 1492 01f2 4C02     		.2byte	0x24c
 1493 01f4 6B000000 		.4byte	0x6b
 1494 01f8 9E000000 		.4byte	.LLST4
 1495 01fc 12       		.uleb128 0x12
 1496 01fd D6050000 		.4byte	.LASF24
 1497 0201 01       		.byte	0x1
 1498 0202 4F02     		.2byte	0x24f
 1499 0204 6B000000 		.4byte	0x6b
 1500 0208 00       		.byte	0
 1501 0209 0D       		.uleb128 0xd
 1502 020a 706F7300 		.ascii	"pos\000"
 1503 020e 01       		.byte	0x1
 1504 020f 5102     		.2byte	0x251
 1505 0211 6B000000 		.4byte	0x6b
 1506 0215 D8000000 		.4byte	.LLST5
 1507 0219 13       		.uleb128 0x13
 1508 021a 82040000 		.4byte	.LASF25
 1509 021e 01       		.byte	0x1
 1510 021f 5202     		.2byte	0x252
 1511 0221 6B000000 		.4byte	0x6b
 1512 0225 01       		.uleb128 0x1
 1513 0226 53       		.byte	0x53
 1514 0227 0F       		.uleb128 0xf
 1515 0228 7B040000 		.4byte	.LASF26
 1516 022c 01       		.byte	0x1
 1517 022d 5402     		.2byte	0x254
 1518 022f 6B000000 		.4byte	0x6b
 1519 0233 EB000000 		.4byte	.LLST6
 1520 0237 13       		.uleb128 0x13
 1521 0238 39000000 		.4byte	.LASF27
 1522 023c 01       		.byte	0x1
 1523 023d 5502     		.2byte	0x255
 1524 023f 6B000000 		.4byte	0x6b
 1525 0243 01       		.uleb128 0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 64


 1526 0244 5E       		.byte	0x5e
 1527 0245 0F       		.uleb128 0xf
 1528 0246 82010000 		.4byte	.LASF28
 1529 024a 01       		.byte	0x1
 1530 024b 5602     		.2byte	0x256
 1531 024d 6B000000 		.4byte	0x6b
 1532 0251 FE000000 		.4byte	.LLST7
 1533 0255 0F       		.uleb128 0xf
 1534 0256 31030000 		.4byte	.LASF29
 1535 025a 01       		.byte	0x1
 1536 025b 5702     		.2byte	0x257
 1537 025d 6B000000 		.4byte	0x6b
 1538 0261 1C010000 		.4byte	.LLST8
 1539 0265 00       		.byte	0
 1540 0266 10       		.uleb128 0x10
 1541 0267 96060000 		.4byte	.LASF31
 1542 026b 01       		.byte	0x1
 1543 026c 9502     		.2byte	0x295
 1544 026e 6B000000 		.4byte	0x6b
 1545 0272 00000000 		.4byte	.LFB7
 1546 0276 1C000000 		.4byte	.LFE7-.LFB7
 1547 027a 01       		.uleb128 0x1
 1548 027b 9C       		.byte	0x9c
 1549 027c CE020000 		.4byte	0x2ce
 1550 0280 11       		.uleb128 0x11
 1551 0281 7B040000 		.4byte	.LASF26
 1552 0285 01       		.byte	0x1
 1553 0286 9502     		.2byte	0x295
 1554 0288 6B000000 		.4byte	0x6b
 1555 028c 2F010000 		.4byte	.LLST9
 1556 0290 0F       		.uleb128 0xf
 1557 0291 CF000000 		.4byte	.LASF32
 1558 0295 01       		.byte	0x1
 1559 0296 9802     		.2byte	0x298
 1560 0298 6B000000 		.4byte	0x6b
 1561 029c 50010000 		.4byte	.LLST10
 1562 02a0 12       		.uleb128 0x12
 1563 02a1 D8000000 		.4byte	.LASF33
 1564 02a5 01       		.byte	0x1
 1565 02a6 9902     		.2byte	0x299
 1566 02a8 6B000000 		.4byte	0x6b
 1567 02ac 08       		.byte	0x8
 1568 02ad 0F       		.uleb128 0xf
 1569 02ae 0F010000 		.4byte	.LASF34
 1570 02b2 01       		.byte	0x1
 1571 02b3 9A02     		.2byte	0x29a
 1572 02b5 6B000000 		.4byte	0x6b
 1573 02b9 7A010000 		.4byte	.LLST11
 1574 02bd 0B       		.uleb128 0xb
 1575 02be 0C000000 		.4byte	.LVL36
 1576 02c2 D2010000 		.4byte	0x1d2
 1577 02c6 09       		.uleb128 0x9
 1578 02c7 01       		.uleb128 0x1
 1579 02c8 50       		.byte	0x50
 1580 02c9 02       		.uleb128 0x2
 1581 02ca 74       		.byte	0x74
 1582 02cb 00       		.sleb128 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 65


 1583 02cc 00       		.byte	0
 1584 02cd 00       		.byte	0
 1585 02ce 10       		.uleb128 0x10
 1586 02cf E4050000 		.4byte	.LASF35
 1587 02d3 01       		.byte	0x1
 1588 02d4 C102     		.2byte	0x2c1
 1589 02d6 6B000000 		.4byte	0x6b
 1590 02da 00000000 		.4byte	.LFB8
 1591 02de 1E000000 		.4byte	.LFE8-.LFB8
 1592 02e2 01       		.uleb128 0x1
 1593 02e3 9C       		.byte	0x9c
 1594 02e4 17030000 		.4byte	0x317
 1595 02e8 0D       		.uleb128 0xd
 1596 02e9 6900     		.ascii	"i\000"
 1597 02eb 01       		.byte	0x1
 1598 02ec C402     		.2byte	0x2c4
 1599 02ee 6B000000 		.4byte	0x6b
 1600 02f2 99010000 		.4byte	.LLST12
 1601 02f6 0F       		.uleb128 0xf
 1602 02f7 0F010000 		.4byte	.LASF34
 1603 02fb 01       		.byte	0x1
 1604 02fc C502     		.2byte	0x2c5
 1605 02fe 6B000000 		.4byte	0x6b
 1606 0302 C3010000 		.4byte	.LLST13
 1607 0306 0B       		.uleb128 0xb
 1608 0307 0E000000 		.4byte	.LVL42
 1609 030b 66020000 		.4byte	0x266
 1610 030f 09       		.uleb128 0x9
 1611 0310 01       		.uleb128 0x1
 1612 0311 50       		.byte	0x50
 1613 0312 02       		.uleb128 0x2
 1614 0313 74       		.byte	0x74
 1615 0314 00       		.sleb128 0
 1616 0315 00       		.byte	0
 1617 0316 00       		.byte	0
 1618 0317 0C       		.uleb128 0xc
 1619 0318 43050000 		.4byte	.LASF36
 1620 031c 01       		.byte	0x1
 1621 031d EF02     		.2byte	0x2ef
 1622 031f 00000000 		.4byte	.LFB9
 1623 0323 28000000 		.4byte	.LFE9-.LFB9
 1624 0327 01       		.uleb128 0x1
 1625 0328 9C       		.byte	0x9c
 1626 0329 79030000 		.4byte	0x379
 1627 032d 11       		.uleb128 0x11
 1628 032e 7B040000 		.4byte	.LASF26
 1629 0332 01       		.byte	0x1
 1630 0333 EF02     		.2byte	0x2ef
 1631 0335 6B000000 		.4byte	0x6b
 1632 0339 E2010000 		.4byte	.LLST14
 1633 033d 0E       		.uleb128 0xe
 1634 033e 706F7300 		.ascii	"pos\000"
 1635 0342 01       		.byte	0x1
 1636 0343 F202     		.2byte	0x2f2
 1637 0345 6B000000 		.4byte	0x6b
 1638 0349 01       		.uleb128 0x1
 1639 034a 50       		.byte	0x50
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 66


 1640 034b 0F       		.uleb128 0xf
 1641 034c 94030000 		.4byte	.LASF23
 1642 0350 01       		.byte	0x1
 1643 0351 F302     		.2byte	0x2f3
 1644 0353 6B000000 		.4byte	0x6b
 1645 0357 03020000 		.4byte	.LLST15
 1646 035b 0F       		.uleb128 0xf
 1647 035c CF000000 		.4byte	.LASF32
 1648 0360 01       		.byte	0x1
 1649 0361 F402     		.2byte	0x2f4
 1650 0363 6B000000 		.4byte	0x6b
 1651 0367 38020000 		.4byte	.LLST16
 1652 036b 12       		.uleb128 0x12
 1653 036c D8000000 		.4byte	.LASF33
 1654 0370 01       		.byte	0x1
 1655 0371 F502     		.2byte	0x2f5
 1656 0373 6B000000 		.4byte	0x6b
 1657 0377 08       		.byte	0x8
 1658 0378 00       		.byte	0
 1659 0379 0C       		.uleb128 0xc
 1660 037a 2E070000 		.4byte	.LASF37
 1661 037e 01       		.byte	0x1
 1662 037f 2103     		.2byte	0x321
 1663 0381 00000000 		.4byte	.LFB10
 1664 0385 2C000000 		.4byte	.LFE10-.LFB10
 1665 0389 01       		.uleb128 0x1
 1666 038a 9C       		.byte	0x9c
 1667 038b DB030000 		.4byte	0x3db
 1668 038f 11       		.uleb128 0x11
 1669 0390 7B040000 		.4byte	.LASF26
 1670 0394 01       		.byte	0x1
 1671 0395 2103     		.2byte	0x321
 1672 0397 6B000000 		.4byte	0x6b
 1673 039b 62020000 		.4byte	.LLST17
 1674 039f 0E       		.uleb128 0xe
 1675 03a0 706F7300 		.ascii	"pos\000"
 1676 03a4 01       		.byte	0x1
 1677 03a5 2403     		.2byte	0x324
 1678 03a7 6B000000 		.4byte	0x6b
 1679 03ab 01       		.uleb128 0x1
 1680 03ac 50       		.byte	0x50
 1681 03ad 0F       		.uleb128 0xf
 1682 03ae 94030000 		.4byte	.LASF23
 1683 03b2 01       		.byte	0x1
 1684 03b3 2503     		.2byte	0x325
 1685 03b5 6B000000 		.4byte	0x6b
 1686 03b9 83020000 		.4byte	.LLST18
 1687 03bd 0F       		.uleb128 0xf
 1688 03be CF000000 		.4byte	.LASF32
 1689 03c2 01       		.byte	0x1
 1690 03c3 2603     		.2byte	0x326
 1691 03c5 6B000000 		.4byte	0x6b
 1692 03c9 B8020000 		.4byte	.LLST19
 1693 03cd 12       		.uleb128 0x12
 1694 03ce D8000000 		.4byte	.LASF33
 1695 03d2 01       		.byte	0x1
 1696 03d3 2703     		.2byte	0x327
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 67


 1697 03d5 6B000000 		.4byte	0x6b
 1698 03d9 08       		.byte	0x8
 1699 03da 00       		.byte	0
 1700 03db 10       		.uleb128 0x10
 1701 03dc B9030000 		.4byte	.LASF38
 1702 03e0 01       		.byte	0x1
 1703 03e1 5303     		.2byte	0x353
 1704 03e3 6B000000 		.4byte	0x6b
 1705 03e7 00000000 		.4byte	.LFB11
 1706 03eb 2C000000 		.4byte	.LFE11-.LFB11
 1707 03ef 01       		.uleb128 0x1
 1708 03f0 9C       		.byte	0x9c
 1709 03f1 60040000 		.4byte	0x460
 1710 03f5 11       		.uleb128 0x11
 1711 03f6 81050000 		.4byte	.LASF39
 1712 03fa 01       		.byte	0x1
 1713 03fb 5303     		.2byte	0x353
 1714 03fd 6B000000 		.4byte	0x6b
 1715 0401 E2020000 		.4byte	.LLST20
 1716 0405 14       		.uleb128 0x14
 1717 0406 00000000 		.4byte	.LASF40
 1718 040a 01       		.byte	0x1
 1719 040b 5303     		.2byte	0x353
 1720 040d 6B000000 		.4byte	0x6b
 1721 0411 01       		.uleb128 0x1
 1722 0412 51       		.byte	0x51
 1723 0413 14       		.uleb128 0x14
 1724 0414 39000000 		.4byte	.LASF27
 1725 0418 01       		.byte	0x1
 1726 0419 5303     		.2byte	0x353
 1727 041b 6B000000 		.4byte	0x6b
 1728 041f 01       		.uleb128 0x1
 1729 0420 52       		.byte	0x52
 1730 0421 0D       		.uleb128 0xd
 1731 0422 6900     		.ascii	"i\000"
 1732 0424 01       		.byte	0x1
 1733 0425 5703     		.2byte	0x357
 1734 0427 6B000000 		.4byte	0x6b
 1735 042b 03030000 		.4byte	.LLST21
 1736 042f 0F       		.uleb128 0xf
 1737 0430 89040000 		.4byte	.LASF41
 1738 0434 01       		.byte	0x1
 1739 0435 6103     		.2byte	0x361
 1740 0437 6B000000 		.4byte	0x6b
 1741 043b 2D030000 		.4byte	.LLST22
 1742 043f 0F       		.uleb128 0xf
 1743 0440 27020000 		.4byte	.LASF42
 1744 0444 01       		.byte	0x1
 1745 0445 6203     		.2byte	0x362
 1746 0447 6B000000 		.4byte	0x6b
 1747 044b 4D030000 		.4byte	.LLST23
 1748 044f 0F       		.uleb128 0xf
 1749 0450 19020000 		.4byte	.LASF43
 1750 0454 01       		.byte	0x1
 1751 0455 6303     		.2byte	0x363
 1752 0457 60040000 		.4byte	0x460
 1753 045b 77030000 		.4byte	.LLST24
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 68


 1754 045f 00       		.byte	0
 1755 0460 15       		.uleb128 0x15
 1756 0461 04       		.byte	0x4
 1757 0462 6B000000 		.4byte	0x6b
 1758 0466 10       		.uleb128 0x10
 1759 0467 D5020000 		.4byte	.LASF44
 1760 046b 01       		.byte	0x1
 1761 046c EF03     		.2byte	0x3ef
 1762 046e 6B000000 		.4byte	0x6b
 1763 0472 00000000 		.4byte	.LFB12
 1764 0476 B0000000 		.4byte	.LFE12-.LFB12
 1765 047a 01       		.uleb128 0x1
 1766 047b 9C       		.byte	0x9c
 1767 047c 41050000 		.4byte	0x541
 1768 0480 11       		.uleb128 0x11
 1769 0481 89040000 		.4byte	.LASF41
 1770 0485 01       		.byte	0x1
 1771 0486 EF03     		.2byte	0x3ef
 1772 0488 6B000000 		.4byte	0x6b
 1773 048c 8A030000 		.4byte	.LLST25
 1774 0490 11       		.uleb128 0x11
 1775 0491 81050000 		.4byte	.LASF39
 1776 0495 01       		.byte	0x1
 1777 0496 EF03     		.2byte	0x3ef
 1778 0498 6B000000 		.4byte	0x6b
 1779 049c AB030000 		.4byte	.LLST26
 1780 04a0 11       		.uleb128 0x11
 1781 04a1 00000000 		.4byte	.LASF40
 1782 04a5 01       		.byte	0x1
 1783 04a6 F003     		.2byte	0x3f0
 1784 04a8 6B000000 		.4byte	0x6b
 1785 04ac CC030000 		.4byte	.LLST27
 1786 04b0 14       		.uleb128 0x14
 1787 04b1 FA040000 		.4byte	.LASF45
 1788 04b5 01       		.byte	0x1
 1789 04b6 F003     		.2byte	0x3f0
 1790 04b8 77000000 		.4byte	0x77
 1791 04bc 01       		.uleb128 0x1
 1792 04bd 53       		.byte	0x53
 1793 04be 11       		.uleb128 0x11
 1794 04bf 62040000 		.4byte	.LASF46
 1795 04c3 01       		.byte	0x1
 1796 04c4 F003     		.2byte	0x3f0
 1797 04c6 6B000000 		.4byte	0x6b
 1798 04ca ED030000 		.4byte	.LLST28
 1799 04ce 0F       		.uleb128 0xf
 1800 04cf 6F000000 		.4byte	.LASF47
 1801 04d3 01       		.byte	0x1
 1802 04d4 F403     		.2byte	0x3f4
 1803 04d6 6B000000 		.4byte	0x6b
 1804 04da 0D040000 		.4byte	.LLST29
 1805 04de 0F       		.uleb128 0xf
 1806 04df A3010000 		.4byte	.LASF48
 1807 04e3 01       		.byte	0x1
 1808 04e4 F503     		.2byte	0x3f5
 1809 04e6 6B000000 		.4byte	0x6b
 1810 04ea 4E040000 		.4byte	.LLST30
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 69


 1811 04ee 13       		.uleb128 0x13
 1812 04ef A5020000 		.4byte	.LASF49
 1813 04f3 01       		.byte	0x1
 1814 04f4 FD03     		.2byte	0x3fd
 1815 04f6 41050000 		.4byte	0x541
 1816 04fa 05       		.uleb128 0x5
 1817 04fb 03       		.byte	0x3
 1818 04fc 08000000 		.4byte	CapSense_CSD_centroid.5140
 1819 0500 0F       		.uleb128 0xf
 1820 0501 4F020000 		.4byte	.LASF50
 1821 0505 01       		.byte	0x1
 1822 0506 FF03     		.2byte	0x3ff
 1823 0508 6B000000 		.4byte	0x6b
 1824 050c 7A040000 		.4byte	.LLST31
 1825 0510 0F       		.uleb128 0xf
 1826 0511 1E010000 		.4byte	.LASF51
 1827 0515 01       		.byte	0x1
 1828 0516 0004     		.2byte	0x400
 1829 0518 83000000 		.4byte	0x83
 1830 051c C2040000 		.4byte	.LLST32
 1831 0520 0F       		.uleb128 0xf
 1832 0521 28010000 		.4byte	.LASF52
 1833 0525 01       		.byte	0x1
 1834 0526 0104     		.2byte	0x401
 1835 0528 9B000000 		.4byte	0x9b
 1836 052c 0D050000 		.4byte	.LLST33
 1837 0530 0F       		.uleb128 0xf
 1838 0531 19020000 		.4byte	.LASF43
 1839 0535 01       		.byte	0x1
 1840 0536 0204     		.2byte	0x402
 1841 0538 60040000 		.4byte	0x460
 1842 053c 75050000 		.4byte	.LLST34
 1843 0540 00       		.byte	0
 1844 0541 16       		.uleb128 0x16
 1845 0542 6B000000 		.4byte	0x6b
 1846 0546 51050000 		.4byte	0x551
 1847 054a 17       		.uleb128 0x17
 1848 054b BC000000 		.4byte	0xbc
 1849 054f 02       		.byte	0x2
 1850 0550 00       		.byte	0
 1851 0551 10       		.uleb128 0x10
 1852 0552 9D000000 		.4byte	.LASF53
 1853 0556 01       		.byte	0x1
 1854 0557 9A07     		.2byte	0x79a
 1855 0559 77000000 		.4byte	0x77
 1856 055d 00000000 		.4byte	.LFB14
 1857 0561 0C000000 		.4byte	.LFE14-.LFB14
 1858 0565 01       		.uleb128 0x1
 1859 0566 9C       		.byte	0x9c
 1860 0567 98050000 		.4byte	0x598
 1861 056b 18       		.uleb128 0x18
 1862 056c 783100   		.ascii	"x1\000"
 1863 056f 01       		.byte	0x1
 1864 0570 9A07     		.2byte	0x79a
 1865 0572 77000000 		.4byte	0x77
 1866 0576 9E050000 		.4byte	.LLST35
 1867 057a 19       		.uleb128 0x19
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 70


 1868 057b 783200   		.ascii	"x2\000"
 1869 057e 01       		.byte	0x1
 1870 057f 9A07     		.2byte	0x79a
 1871 0581 77000000 		.4byte	0x77
 1872 0585 01       		.uleb128 0x1
 1873 0586 51       		.byte	0x51
 1874 0587 0D       		.uleb128 0xd
 1875 0588 746D7000 		.ascii	"tmp\000"
 1876 058c 01       		.byte	0x1
 1877 058d 9D07     		.2byte	0x79d
 1878 058f 83000000 		.4byte	0x83
 1879 0593 BF050000 		.4byte	.LLST36
 1880 0597 00       		.byte	0
 1881 0598 0C       		.uleb128 0xc
 1882 0599 D8040000 		.4byte	.LASF54
 1883 059d 01       		.byte	0x1
 1884 059e 6501     		.2byte	0x165
 1885 05a0 00000000 		.4byte	.LFB4
 1886 05a4 EC000000 		.4byte	.LFE4-.LFB4
 1887 05a8 01       		.uleb128 0x1
 1888 05a9 9C       		.byte	0x9c
 1889 05aa 3C060000 		.4byte	0x63c
 1890 05ae 11       		.uleb128 0x11
 1891 05af CE020000 		.4byte	.LASF20
 1892 05b3 01       		.byte	0x1
 1893 05b4 6501     		.2byte	0x165
 1894 05b6 6B000000 		.4byte	0x6b
 1895 05ba D6050000 		.4byte	.LLST37
 1896 05be 0F       		.uleb128 0xf
 1897 05bf EF020000 		.4byte	.LASF55
 1898 05c3 01       		.byte	0x1
 1899 05c4 6801     		.2byte	0x168
 1900 05c6 83000000 		.4byte	0x83
 1901 05ca F7050000 		.4byte	.LLST38
 1902 05ce 0F       		.uleb128 0xf
 1903 05cf 26070000 		.4byte	.LASF56
 1904 05d3 01       		.byte	0x1
 1905 05d4 6901     		.2byte	0x169
 1906 05d6 77000000 		.4byte	0x77
 1907 05da 24060000 		.4byte	.LLST39
 1908 05de 0F       		.uleb128 0xf
 1909 05df 29000000 		.4byte	.LASF57
 1910 05e3 01       		.byte	0x1
 1911 05e4 6A01     		.2byte	0x16a
 1912 05e6 77000000 		.4byte	0x77
 1913 05ea 42060000 		.4byte	.LLST40
 1914 05ee 0F       		.uleb128 0xf
 1915 05ef 7B040000 		.4byte	.LASF26
 1916 05f3 01       		.byte	0x1
 1917 05f4 6B01     		.2byte	0x16b
 1918 05f6 6B000000 		.4byte	0x6b
 1919 05fa 66060000 		.4byte	.LLST41
 1920 05fe 0F       		.uleb128 0xf
 1921 05ff 62040000 		.4byte	.LASF46
 1922 0603 01       		.byte	0x1
 1923 0604 6C01     		.2byte	0x16c
 1924 0606 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 71


 1925 060a AF060000 		.4byte	.LLST42
 1926 060e 0A       		.uleb128 0xa
 1927 060f 20000000 		.4byte	.LVL108
 1928 0613 51050000 		.4byte	0x551
 1929 0617 08       		.uleb128 0x8
 1930 0618 2C000000 		.4byte	.LVL111
 1931 061c 48090000 		.4byte	0x948
 1932 0620 2B060000 		.4byte	0x62b
 1933 0624 09       		.uleb128 0x9
 1934 0625 01       		.uleb128 0x1
 1935 0626 50       		.byte	0x50
 1936 0627 02       		.uleb128 0x2
 1937 0628 74       		.byte	0x74
 1938 0629 00       		.sleb128 0
 1939 062a 00       		.byte	0
 1940 062b 0B       		.uleb128 0xb
 1941 062c 60000000 		.4byte	.LVL116
 1942 0630 C3000000 		.4byte	0xc3
 1943 0634 09       		.uleb128 0x9
 1944 0635 01       		.uleb128 0x1
 1945 0636 50       		.byte	0x50
 1946 0637 02       		.uleb128 0x2
 1947 0638 74       		.byte	0x74
 1948 0639 00       		.sleb128 0
 1949 063a 00       		.byte	0
 1950 063b 00       		.byte	0
 1951 063c 0C       		.uleb128 0xc
 1952 063d 5D050000 		.4byte	.LASF58
 1953 0641 01       		.byte	0x1
 1954 0642 1202     		.2byte	0x212
 1955 0644 00000000 		.4byte	.LFB5
 1956 0648 2C000000 		.4byte	.LFE5-.LFB5
 1957 064c 01       		.uleb128 0x1
 1958 064d 9C       		.byte	0x9c
 1959 064e 8F060000 		.4byte	0x68f
 1960 0652 0D       		.uleb128 0xd
 1961 0653 6900     		.ascii	"i\000"
 1962 0655 01       		.byte	0x1
 1963 0656 1502     		.2byte	0x215
 1964 0658 6B000000 		.4byte	0x6b
 1965 065c C2060000 		.4byte	.LLST43
 1966 0660 0E       		.uleb128 0xe
 1967 0661 706F7300 		.ascii	"pos\000"
 1968 0665 01       		.byte	0x1
 1969 0666 1602     		.2byte	0x216
 1970 0668 6B000000 		.4byte	0x6b
 1971 066c 01       		.uleb128 0x1
 1972 066d 52       		.byte	0x52
 1973 066e 0F       		.uleb128 0xf
 1974 066f 94030000 		.4byte	.LASF23
 1975 0673 01       		.byte	0x1
 1976 0674 1702     		.2byte	0x217
 1977 0676 6B000000 		.4byte	0x6b
 1978 067a EC060000 		.4byte	.LLST44
 1979 067e 0B       		.uleb128 0xb
 1980 067f 1E000000 		.4byte	.LVL129
 1981 0683 98050000 		.4byte	0x598
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 72


 1982 0687 09       		.uleb128 0x9
 1983 0688 01       		.uleb128 0x1
 1984 0689 50       		.byte	0x50
 1985 068a 02       		.uleb128 0x2
 1986 068b 74       		.byte	0x74
 1987 068c 00       		.sleb128 0
 1988 068d 00       		.byte	0
 1989 068e 00       		.byte	0
 1990 068f 10       		.uleb128 0x10
 1991 0690 D2030000 		.4byte	.LASF59
 1992 0694 01       		.byte	0x1
 1993 0695 BC07     		.2byte	0x7bc
 1994 0697 77000000 		.4byte	0x77
 1995 069b 00000000 		.4byte	.LFB15
 1996 069f 14000000 		.4byte	.LFE15-.LFB15
 1997 06a3 01       		.uleb128 0x1
 1998 06a4 9C       		.byte	0x9c
 1999 06a5 C6060000 		.4byte	0x6c6
 2000 06a9 18       		.uleb128 0x18
 2001 06aa 783100   		.ascii	"x1\000"
 2002 06ad 01       		.byte	0x1
 2003 06ae BC07     		.2byte	0x7bc
 2004 06b0 77000000 		.4byte	0x77
 2005 06b4 21070000 		.4byte	.LLST45
 2006 06b8 19       		.uleb128 0x19
 2007 06b9 783200   		.ascii	"x2\000"
 2008 06bc 01       		.byte	0x1
 2009 06bd BC07     		.2byte	0x7bc
 2010 06bf 77000000 		.4byte	0x77
 2011 06c3 01       		.uleb128 0x1
 2012 06c4 51       		.byte	0x51
 2013 06c5 00       		.byte	0
 2014 06c6 10       		.uleb128 0x10
 2015 06c7 06000000 		.4byte	.LASF60
 2016 06cb 01       		.byte	0x1
 2017 06cc BC04     		.2byte	0x4bc
 2018 06ce 77000000 		.4byte	0x77
 2019 06d2 00000000 		.4byte	.LFB13
 2020 06d6 6C000000 		.4byte	.LFE13-.LFB13
 2021 06da 01       		.uleb128 0x1
 2022 06db 9C       		.byte	0x9c
 2023 06dc 98070000 		.4byte	0x798
 2024 06e0 11       		.uleb128 0x11
 2025 06e1 7B040000 		.4byte	.LASF26
 2026 06e5 01       		.byte	0x1
 2027 06e6 BC04     		.2byte	0x4bc
 2028 06e8 6B000000 		.4byte	0x6b
 2029 06ec 66070000 		.4byte	.LLST46
 2030 06f0 0F       		.uleb128 0xf
 2031 06f1 28030000 		.4byte	.LASF61
 2032 06f5 01       		.byte	0x1
 2033 06f6 C304     		.2byte	0x4c3
 2034 06f8 6B000000 		.4byte	0x6b
 2035 06fc 87070000 		.4byte	.LLST47
 2036 0700 0F       		.uleb128 0xf
 2037 0701 8E000000 		.4byte	.LASF62
 2038 0705 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 73


 2039 0706 C404     		.2byte	0x4c4
 2040 0708 6B000000 		.4byte	0x6b
 2041 070c D2070000 		.4byte	.LLST48
 2042 0710 12       		.uleb128 0x12
 2043 0711 43030000 		.4byte	.LASF63
 2044 0715 01       		.byte	0x1
 2045 0716 C504     		.2byte	0x4c5
 2046 0718 6B000000 		.4byte	0x6b
 2047 071c 16       		.byte	0x16
 2048 071d 0F       		.uleb128 0xf
 2049 071e 89040000 		.4byte	.LASF41
 2050 0722 01       		.byte	0x1
 2051 0723 CF04     		.2byte	0x4cf
 2052 0725 6B000000 		.4byte	0x6b
 2053 0729 F8070000 		.4byte	.LLST49
 2054 072d 0F       		.uleb128 0xf
 2055 072e 4F020000 		.4byte	.LASF50
 2056 0732 01       		.byte	0x1
 2057 0733 D004     		.2byte	0x4d0
 2058 0735 77000000 		.4byte	0x77
 2059 0739 16080000 		.4byte	.LLST50
 2060 073d 12       		.uleb128 0x12
 2061 073e 81050000 		.4byte	.LASF39
 2062 0742 01       		.byte	0x1
 2063 0743 D104     		.2byte	0x4d1
 2064 0745 6B000000 		.4byte	0x6b
 2065 0749 00       		.byte	0
 2066 074a 12       		.uleb128 0x12
 2067 074b 00000000 		.4byte	.LASF40
 2068 074f 01       		.byte	0x1
 2069 0750 D204     		.2byte	0x4d2
 2070 0752 6B000000 		.4byte	0x6b
 2071 0756 08       		.byte	0x8
 2072 0757 08       		.uleb128 0x8
 2073 0758 16000000 		.4byte	.LVL141
 2074 075c DB030000 		.4byte	0x3db
 2075 0760 6F070000 		.4byte	0x76f
 2076 0764 09       		.uleb128 0x9
 2077 0765 01       		.uleb128 0x1
 2078 0766 51       		.byte	0x51
 2079 0767 01       		.uleb128 0x1
 2080 0768 38       		.byte	0x38
 2081 0769 09       		.uleb128 0x9
 2082 076a 01       		.uleb128 0x1
 2083 076b 50       		.byte	0x50
 2084 076c 01       		.uleb128 0x1
 2085 076d 30       		.byte	0x30
 2086 076e 00       		.byte	0
 2087 076f 08       		.uleb128 0x8
 2088 0770 2E000000 		.4byte	.LVL142
 2089 0774 66040000 		.4byte	0x466
 2090 0778 8E070000 		.4byte	0x78e
 2091 077c 09       		.uleb128 0x9
 2092 077d 01       		.uleb128 0x1
 2093 077e 53       		.byte	0x53
 2094 077f 03       		.uleb128 0x3
 2095 0780 0A       		.byte	0xa
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 74


 2096 0781 2412     		.2byte	0x1224
 2097 0783 09       		.uleb128 0x9
 2098 0784 01       		.uleb128 0x1
 2099 0785 52       		.byte	0x52
 2100 0786 01       		.uleb128 0x1
 2101 0787 38       		.byte	0x38
 2102 0788 09       		.uleb128 0x9
 2103 0789 01       		.uleb128 0x1
 2104 078a 51       		.byte	0x51
 2105 078b 01       		.uleb128 0x1
 2106 078c 30       		.byte	0x30
 2107 078d 00       		.byte	0
 2108 078e 0A       		.uleb128 0xa
 2109 078f 52000000 		.4byte	.LVL148
 2110 0793 8F060000 		.4byte	0x68f
 2111 0797 00       		.byte	0
 2112 0798 16       		.uleb128 0x16
 2113 0799 77000000 		.4byte	0x77
 2114 079d A8070000 		.4byte	0x7a8
 2115 07a1 17       		.uleb128 0x17
 2116 07a2 BC000000 		.4byte	0xbc
 2117 07a6 07       		.byte	0x7
 2118 07a7 00       		.byte	0
 2119 07a8 1A       		.uleb128 0x1a
 2120 07a9 A5040000 		.4byte	.LASF64
 2121 07ad 03       		.byte	0x3
 2122 07ae C002     		.2byte	0x2c0
 2123 07b0 98070000 		.4byte	0x798
 2124 07b4 1B       		.uleb128 0x1b
 2125 07b5 88050000 		.4byte	.LASF65
 2126 07b9 01       		.byte	0x1
 2127 07ba 21       		.byte	0x21
 2128 07bb 98070000 		.4byte	0x798
 2129 07bf 05       		.uleb128 0x5
 2130 07c0 03       		.byte	0x3
 2131 07c1 00000000 		.4byte	CapSense_CSD_rawFilterData1
 2132 07c5 16       		.uleb128 0x16
 2133 07c6 6B000000 		.4byte	0x6b
 2134 07ca D5070000 		.4byte	0x7d5
 2135 07ce 17       		.uleb128 0x17
 2136 07cf BC000000 		.4byte	0xbc
 2137 07d3 00       		.byte	0
 2138 07d4 00       		.byte	0
 2139 07d5 1A       		.uleb128 0x1a
 2140 07d6 9B030000 		.4byte	.LASF66
 2141 07da 04       		.byte	0x4
 2142 07db 0301     		.2byte	0x103
 2143 07dd C5070000 		.4byte	0x7c5
 2144 07e1 16       		.uleb128 0x16
 2145 07e2 6B000000 		.4byte	0x6b
 2146 07e6 F1070000 		.4byte	0x7f1
 2147 07ea 17       		.uleb128 0x17
 2148 07eb BC000000 		.4byte	0xbc
 2149 07ef 07       		.byte	0x7
 2150 07f0 00       		.byte	0
 2151 07f1 1A       		.uleb128 0x1a
 2152 07f2 34010000 		.4byte	.LASF67
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 75


 2153 07f6 04       		.byte	0x4
 2154 07f7 0401     		.2byte	0x104
 2155 07f9 FD070000 		.4byte	0x7fd
 2156 07fd 1C       		.uleb128 0x1c
 2157 07fe E1070000 		.4byte	0x7e1
 2158 0802 1B       		.uleb128 0x1b
 2159 0803 FD010000 		.4byte	.LASF68
 2160 0807 01       		.byte	0x1
 2161 0808 29       		.byte	0x29
 2162 0809 98070000 		.4byte	0x798
 2163 080d 05       		.uleb128 0x5
 2164 080e 03       		.byte	0x3
 2165 080f 00000000 		.4byte	CapSense_CSD_sensorBaseline
 2166 0813 1B       		.uleb128 0x1b
 2167 0814 07070000 		.4byte	.LASF69
 2168 0818 01       		.byte	0x1
 2169 0819 2A       		.byte	0x2a
 2170 081a E1070000 		.4byte	0x7e1
 2171 081e 05       		.uleb128 0x5
 2172 081f 03       		.byte	0x3
 2173 0820 00000000 		.4byte	CapSense_CSD_sensorBaselineLow
 2174 0824 1B       		.uleb128 0x1b
 2175 0825 8B020000 		.4byte	.LASF70
 2176 0829 01       		.byte	0x1
 2177 082a 2B       		.byte	0x2b
 2178 082b E1070000 		.4byte	0x7e1
 2179 082f 05       		.uleb128 0x5
 2180 0830 03       		.byte	0x3
 2181 0831 00000000 		.4byte	CapSense_CSD_sensorSignal
 2182 0835 1B       		.uleb128 0x1b
 2183 0836 49070000 		.4byte	.LASF71
 2184 083a 01       		.byte	0x1
 2185 083b 2C       		.byte	0x2c
 2186 083c C5070000 		.4byte	0x7c5
 2187 0840 05       		.uleb128 0x5
 2188 0841 03       		.byte	0x3
 2189 0842 00000000 		.4byte	CapSense_CSD_sensorOnMask
 2190 0846 1B       		.uleb128 0x1b
 2191 0847 F2030000 		.4byte	.LASF72
 2192 084b 01       		.byte	0x1
 2193 084c 2E       		.byte	0x2e
 2194 084d E1070000 		.4byte	0x7e1
 2195 0851 05       		.uleb128 0x5
 2196 0852 03       		.byte	0x3
 2197 0853 00000000 		.4byte	CapSense_CSD_lowBaselineResetCnt
 2198 0857 1B       		.uleb128 0x1b
 2199 0858 37040000 		.4byte	.LASF73
 2200 085c 01       		.byte	0x1
 2201 085d 30       		.byte	0x30
 2202 085e C5070000 		.4byte	0x7c5
 2203 0862 05       		.uleb128 0x5
 2204 0863 03       		.byte	0x3
 2205 0864 00000000 		.4byte	CapSense_CSD_fingerThreshold
 2206 0868 1B       		.uleb128 0x1b
 2207 0869 22050000 		.4byte	.LASF74
 2208 086d 01       		.byte	0x1
 2209 086e 34       		.byte	0x34
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 76


 2210 086f C5070000 		.4byte	0x7c5
 2211 0873 05       		.uleb128 0x5
 2212 0874 03       		.byte	0x3
 2213 0875 00000000 		.4byte	CapSense_CSD_noiseThreshold
 2214 0879 1B       		.uleb128 0x1b
 2215 087a BE050000 		.4byte	.LASF75
 2216 087e 01       		.byte	0x1
 2217 087f 38       		.byte	0x38
 2218 0880 C5070000 		.4byte	0x7c5
 2219 0884 05       		.uleb128 0x5
 2220 0885 03       		.byte	0x3
 2221 0886 00000000 		.4byte	CapSense_CSD_hysteresis
 2222 088a 1B       		.uleb128 0x1b
 2223 088b 2C020000 		.4byte	.LASF76
 2224 088f 01       		.byte	0x1
 2225 0890 3C       		.byte	0x3c
 2226 0891 C5070000 		.4byte	0x7c5
 2227 0895 05       		.uleb128 0x5
 2228 0896 03       		.byte	0x3
 2229 0897 00000000 		.4byte	CapSense_CSD_debounce
 2230 089b 1B       		.uleb128 0x1b
 2231 089c EA060000 		.4byte	.LASF77
 2232 08a0 01       		.byte	0x1
 2233 08a1 40       		.byte	0x40
 2234 08a2 C5070000 		.4byte	0x7c5
 2235 08a6 05       		.uleb128 0x5
 2236 08a7 03       		.byte	0x3
 2237 08a8 00000000 		.4byte	CapSense_CSD_debounceCounter
 2238 08ac 1B       		.uleb128 0x1b
 2239 08ad 7A030000 		.4byte	.LASF78
 2240 08b1 01       		.byte	0x1
 2241 08b2 44       		.byte	0x44
 2242 08b3 BD080000 		.4byte	0x8bd
 2243 08b7 05       		.uleb128 0x5
 2244 08b8 03       		.byte	0x3
 2245 08b9 00000000 		.4byte	CapSense_CSD_rawDataIndex
 2246 08bd 1C       		.uleb128 0x1c
 2247 08be C5070000 		.4byte	0x7c5
 2248 08c2 1B       		.uleb128 0x1b
 2249 08c3 05050000 		.4byte	.LASF79
 2250 08c7 01       		.byte	0x1
 2251 08c8 49       		.byte	0x49
 2252 08c9 D3080000 		.4byte	0x8d3
 2253 08cd 05       		.uleb128 0x5
 2254 08ce 03       		.byte	0x3
 2255 08cf 00000000 		.4byte	CapSense_CSD_numberOfSensors
 2256 08d3 1C       		.uleb128 0x1c
 2257 08d4 C5070000 		.4byte	0x7c5
 2258 08d8 16       		.uleb128 0x16
 2259 08d9 77000000 		.4byte	0x77
 2260 08dd E8080000 		.4byte	0x8e8
 2261 08e1 17       		.uleb128 0x17
 2262 08e2 BC000000 		.4byte	0xbc
 2263 08e6 00       		.byte	0
 2264 08e7 00       		.byte	0
 2265 08e8 1B       		.uleb128 0x1b
 2266 08e9 A4050000 		.4byte	.LASF80
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 77


 2267 08ed 01       		.byte	0x1
 2268 08ee 4E       		.byte	0x4e
 2269 08ef F9080000 		.4byte	0x8f9
 2270 08f3 05       		.uleb128 0x5
 2271 08f4 03       		.byte	0x3
 2272 08f5 00000000 		.4byte	CapSense_CSD_centroidMult
 2273 08f9 1C       		.uleb128 0x1c
 2274 08fa D8080000 		.4byte	0x8d8
 2275 08fe 1B       		.uleb128 0x1b
 2276 08ff 0C030000 		.4byte	.LASF81
 2277 0903 01       		.byte	0x1
 2278 0904 52       		.byte	0x52
 2279 0905 0F090000 		.4byte	0x90f
 2280 0909 05       		.uleb128 0x5
 2281 090a 03       		.byte	0x3
 2282 090b 00000000 		.4byte	CapSense_CSD_posFiltersMask
 2283 090f 1C       		.uleb128 0x1c
 2284 0910 C5070000 		.4byte	0x7c5
 2285 0914 1B       		.uleb128 0x1b
 2286 0915 BC040000 		.4byte	.LASF82
 2287 0919 01       		.byte	0x1
 2288 091a 56       		.byte	0x56
 2289 091b 41050000 		.4byte	0x541
 2290 091f 05       		.uleb128 0x5
 2291 0920 03       		.byte	0x3
 2292 0921 00000000 		.4byte	CapSense_CSD_posFiltersData
 2293 0925 1D       		.uleb128 0x1d
 2294 0926 F4020000 		.4byte	.LASF86
 2295 092a 03       		.byte	0x3
 2296 092b 9A       		.byte	0x9a
 2297 092c 36090000 		.4byte	0x936
 2298 0930 1E       		.uleb128 0x1e
 2299 0931 6B000000 		.4byte	0x6b
 2300 0935 00       		.byte	0
 2301 0936 1F       		.uleb128 0x1f
 2302 0937 91040000 		.4byte	.LASF87
 2303 093b 03       		.byte	0x3
 2304 093c 99       		.byte	0x99
 2305 093d 6B000000 		.4byte	0x6b
 2306 0941 20       		.uleb128 0x20
 2307 0942 62010000 		.4byte	.LASF88
 2308 0946 03       		.byte	0x3
 2309 0947 9B       		.byte	0x9b
 2310 0948 21       		.uleb128 0x21
 2311 0949 58020000 		.4byte	.LASF89
 2312 094d 04       		.byte	0x4
 2313 094e C0       		.byte	0xc0
 2314 094f 1E       		.uleb128 0x1e
 2315 0950 6B000000 		.4byte	0x6b
 2316 0954 00       		.byte	0
 2317 0955 00       		.byte	0
 2318              		.section	.debug_abbrev,"",%progbits
 2319              	.Ldebug_abbrev0:
 2320 0000 01       		.uleb128 0x1
 2321 0001 11       		.uleb128 0x11
 2322 0002 01       		.byte	0x1
 2323 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 78


 2324 0004 0E       		.uleb128 0xe
 2325 0005 13       		.uleb128 0x13
 2326 0006 0B       		.uleb128 0xb
 2327 0007 03       		.uleb128 0x3
 2328 0008 0E       		.uleb128 0xe
 2329 0009 1B       		.uleb128 0x1b
 2330 000a 0E       		.uleb128 0xe
 2331 000b 55       		.uleb128 0x55
 2332 000c 17       		.uleb128 0x17
 2333 000d 11       		.uleb128 0x11
 2334 000e 01       		.uleb128 0x1
 2335 000f 10       		.uleb128 0x10
 2336 0010 17       		.uleb128 0x17
 2337 0011 00       		.byte	0
 2338 0012 00       		.byte	0
 2339 0013 02       		.uleb128 0x2
 2340 0014 24       		.uleb128 0x24
 2341 0015 00       		.byte	0
 2342 0016 0B       		.uleb128 0xb
 2343 0017 0B       		.uleb128 0xb
 2344 0018 3E       		.uleb128 0x3e
 2345 0019 0B       		.uleb128 0xb
 2346 001a 03       		.uleb128 0x3
 2347 001b 0E       		.uleb128 0xe
 2348 001c 00       		.byte	0
 2349 001d 00       		.byte	0
 2350 001e 03       		.uleb128 0x3
 2351 001f 24       		.uleb128 0x24
 2352 0020 00       		.byte	0
 2353 0021 0B       		.uleb128 0xb
 2354 0022 0B       		.uleb128 0xb
 2355 0023 3E       		.uleb128 0x3e
 2356 0024 0B       		.uleb128 0xb
 2357 0025 03       		.uleb128 0x3
 2358 0026 08       		.uleb128 0x8
 2359 0027 00       		.byte	0
 2360 0028 00       		.byte	0
 2361 0029 04       		.uleb128 0x4
 2362 002a 16       		.uleb128 0x16
 2363 002b 00       		.byte	0
 2364 002c 03       		.uleb128 0x3
 2365 002d 0E       		.uleb128 0xe
 2366 002e 3A       		.uleb128 0x3a
 2367 002f 0B       		.uleb128 0xb
 2368 0030 3B       		.uleb128 0x3b
 2369 0031 05       		.uleb128 0x5
 2370 0032 49       		.uleb128 0x49
 2371 0033 13       		.uleb128 0x13
 2372 0034 00       		.byte	0
 2373 0035 00       		.byte	0
 2374 0036 05       		.uleb128 0x5
 2375 0037 2E       		.uleb128 0x2e
 2376 0038 01       		.byte	0x1
 2377 0039 3F       		.uleb128 0x3f
 2378 003a 19       		.uleb128 0x19
 2379 003b 03       		.uleb128 0x3
 2380 003c 0E       		.uleb128 0xe
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 79


 2381 003d 3A       		.uleb128 0x3a
 2382 003e 0B       		.uleb128 0xb
 2383 003f 3B       		.uleb128 0x3b
 2384 0040 0B       		.uleb128 0xb
 2385 0041 27       		.uleb128 0x27
 2386 0042 19       		.uleb128 0x19
 2387 0043 11       		.uleb128 0x11
 2388 0044 01       		.uleb128 0x1
 2389 0045 12       		.uleb128 0x12
 2390 0046 06       		.uleb128 0x6
 2391 0047 40       		.uleb128 0x40
 2392 0048 18       		.uleb128 0x18
 2393 0049 9742     		.uleb128 0x2117
 2394 004b 19       		.uleb128 0x19
 2395 004c 01       		.uleb128 0x1
 2396 004d 13       		.uleb128 0x13
 2397 004e 00       		.byte	0
 2398 004f 00       		.byte	0
 2399 0050 06       		.uleb128 0x6
 2400 0051 05       		.uleb128 0x5
 2401 0052 00       		.byte	0
 2402 0053 03       		.uleb128 0x3
 2403 0054 0E       		.uleb128 0xe
 2404 0055 3A       		.uleb128 0x3a
 2405 0056 0B       		.uleb128 0xb
 2406 0057 3B       		.uleb128 0x3b
 2407 0058 0B       		.uleb128 0xb
 2408 0059 49       		.uleb128 0x49
 2409 005a 13       		.uleb128 0x13
 2410 005b 02       		.uleb128 0x2
 2411 005c 18       		.uleb128 0x18
 2412 005d 00       		.byte	0
 2413 005e 00       		.byte	0
 2414 005f 07       		.uleb128 0x7
 2415 0060 05       		.uleb128 0x5
 2416 0061 00       		.byte	0
 2417 0062 03       		.uleb128 0x3
 2418 0063 0E       		.uleb128 0xe
 2419 0064 3A       		.uleb128 0x3a
 2420 0065 0B       		.uleb128 0xb
 2421 0066 3B       		.uleb128 0x3b
 2422 0067 0B       		.uleb128 0xb
 2423 0068 49       		.uleb128 0x49
 2424 0069 13       		.uleb128 0x13
 2425 006a 02       		.uleb128 0x2
 2426 006b 17       		.uleb128 0x17
 2427 006c 00       		.byte	0
 2428 006d 00       		.byte	0
 2429 006e 08       		.uleb128 0x8
 2430 006f 898201   		.uleb128 0x4109
 2431 0072 01       		.byte	0x1
 2432 0073 11       		.uleb128 0x11
 2433 0074 01       		.uleb128 0x1
 2434 0075 31       		.uleb128 0x31
 2435 0076 13       		.uleb128 0x13
 2436 0077 01       		.uleb128 0x1
 2437 0078 13       		.uleb128 0x13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 80


 2438 0079 00       		.byte	0
 2439 007a 00       		.byte	0
 2440 007b 09       		.uleb128 0x9
 2441 007c 8A8201   		.uleb128 0x410a
 2442 007f 00       		.byte	0
 2443 0080 02       		.uleb128 0x2
 2444 0081 18       		.uleb128 0x18
 2445 0082 9142     		.uleb128 0x2111
 2446 0084 18       		.uleb128 0x18
 2447 0085 00       		.byte	0
 2448 0086 00       		.byte	0
 2449 0087 0A       		.uleb128 0xa
 2450 0088 898201   		.uleb128 0x4109
 2451 008b 00       		.byte	0
 2452 008c 11       		.uleb128 0x11
 2453 008d 01       		.uleb128 0x1
 2454 008e 31       		.uleb128 0x31
 2455 008f 13       		.uleb128 0x13
 2456 0090 00       		.byte	0
 2457 0091 00       		.byte	0
 2458 0092 0B       		.uleb128 0xb
 2459 0093 898201   		.uleb128 0x4109
 2460 0096 01       		.byte	0x1
 2461 0097 11       		.uleb128 0x11
 2462 0098 01       		.uleb128 0x1
 2463 0099 31       		.uleb128 0x31
 2464 009a 13       		.uleb128 0x13
 2465 009b 00       		.byte	0
 2466 009c 00       		.byte	0
 2467 009d 0C       		.uleb128 0xc
 2468 009e 2E       		.uleb128 0x2e
 2469 009f 01       		.byte	0x1
 2470 00a0 3F       		.uleb128 0x3f
 2471 00a1 19       		.uleb128 0x19
 2472 00a2 03       		.uleb128 0x3
 2473 00a3 0E       		.uleb128 0xe
 2474 00a4 3A       		.uleb128 0x3a
 2475 00a5 0B       		.uleb128 0xb
 2476 00a6 3B       		.uleb128 0x3b
 2477 00a7 05       		.uleb128 0x5
 2478 00a8 27       		.uleb128 0x27
 2479 00a9 19       		.uleb128 0x19
 2480 00aa 11       		.uleb128 0x11
 2481 00ab 01       		.uleb128 0x1
 2482 00ac 12       		.uleb128 0x12
 2483 00ad 06       		.uleb128 0x6
 2484 00ae 40       		.uleb128 0x40
 2485 00af 18       		.uleb128 0x18
 2486 00b0 9742     		.uleb128 0x2117
 2487 00b2 19       		.uleb128 0x19
 2488 00b3 01       		.uleb128 0x1
 2489 00b4 13       		.uleb128 0x13
 2490 00b5 00       		.byte	0
 2491 00b6 00       		.byte	0
 2492 00b7 0D       		.uleb128 0xd
 2493 00b8 34       		.uleb128 0x34
 2494 00b9 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 81


 2495 00ba 03       		.uleb128 0x3
 2496 00bb 08       		.uleb128 0x8
 2497 00bc 3A       		.uleb128 0x3a
 2498 00bd 0B       		.uleb128 0xb
 2499 00be 3B       		.uleb128 0x3b
 2500 00bf 05       		.uleb128 0x5
 2501 00c0 49       		.uleb128 0x49
 2502 00c1 13       		.uleb128 0x13
 2503 00c2 02       		.uleb128 0x2
 2504 00c3 17       		.uleb128 0x17
 2505 00c4 00       		.byte	0
 2506 00c5 00       		.byte	0
 2507 00c6 0E       		.uleb128 0xe
 2508 00c7 34       		.uleb128 0x34
 2509 00c8 00       		.byte	0
 2510 00c9 03       		.uleb128 0x3
 2511 00ca 08       		.uleb128 0x8
 2512 00cb 3A       		.uleb128 0x3a
 2513 00cc 0B       		.uleb128 0xb
 2514 00cd 3B       		.uleb128 0x3b
 2515 00ce 05       		.uleb128 0x5
 2516 00cf 49       		.uleb128 0x49
 2517 00d0 13       		.uleb128 0x13
 2518 00d1 02       		.uleb128 0x2
 2519 00d2 18       		.uleb128 0x18
 2520 00d3 00       		.byte	0
 2521 00d4 00       		.byte	0
 2522 00d5 0F       		.uleb128 0xf
 2523 00d6 34       		.uleb128 0x34
 2524 00d7 00       		.byte	0
 2525 00d8 03       		.uleb128 0x3
 2526 00d9 0E       		.uleb128 0xe
 2527 00da 3A       		.uleb128 0x3a
 2528 00db 0B       		.uleb128 0xb
 2529 00dc 3B       		.uleb128 0x3b
 2530 00dd 05       		.uleb128 0x5
 2531 00de 49       		.uleb128 0x49
 2532 00df 13       		.uleb128 0x13
 2533 00e0 02       		.uleb128 0x2
 2534 00e1 17       		.uleb128 0x17
 2535 00e2 00       		.byte	0
 2536 00e3 00       		.byte	0
 2537 00e4 10       		.uleb128 0x10
 2538 00e5 2E       		.uleb128 0x2e
 2539 00e6 01       		.byte	0x1
 2540 00e7 3F       		.uleb128 0x3f
 2541 00e8 19       		.uleb128 0x19
 2542 00e9 03       		.uleb128 0x3
 2543 00ea 0E       		.uleb128 0xe
 2544 00eb 3A       		.uleb128 0x3a
 2545 00ec 0B       		.uleb128 0xb
 2546 00ed 3B       		.uleb128 0x3b
 2547 00ee 05       		.uleb128 0x5
 2548 00ef 27       		.uleb128 0x27
 2549 00f0 19       		.uleb128 0x19
 2550 00f1 49       		.uleb128 0x49
 2551 00f2 13       		.uleb128 0x13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 82


 2552 00f3 11       		.uleb128 0x11
 2553 00f4 01       		.uleb128 0x1
 2554 00f5 12       		.uleb128 0x12
 2555 00f6 06       		.uleb128 0x6
 2556 00f7 40       		.uleb128 0x40
 2557 00f8 18       		.uleb128 0x18
 2558 00f9 9742     		.uleb128 0x2117
 2559 00fb 19       		.uleb128 0x19
 2560 00fc 01       		.uleb128 0x1
 2561 00fd 13       		.uleb128 0x13
 2562 00fe 00       		.byte	0
 2563 00ff 00       		.byte	0
 2564 0100 11       		.uleb128 0x11
 2565 0101 05       		.uleb128 0x5
 2566 0102 00       		.byte	0
 2567 0103 03       		.uleb128 0x3
 2568 0104 0E       		.uleb128 0xe
 2569 0105 3A       		.uleb128 0x3a
 2570 0106 0B       		.uleb128 0xb
 2571 0107 3B       		.uleb128 0x3b
 2572 0108 05       		.uleb128 0x5
 2573 0109 49       		.uleb128 0x49
 2574 010a 13       		.uleb128 0x13
 2575 010b 02       		.uleb128 0x2
 2576 010c 17       		.uleb128 0x17
 2577 010d 00       		.byte	0
 2578 010e 00       		.byte	0
 2579 010f 12       		.uleb128 0x12
 2580 0110 34       		.uleb128 0x34
 2581 0111 00       		.byte	0
 2582 0112 03       		.uleb128 0x3
 2583 0113 0E       		.uleb128 0xe
 2584 0114 3A       		.uleb128 0x3a
 2585 0115 0B       		.uleb128 0xb
 2586 0116 3B       		.uleb128 0x3b
 2587 0117 05       		.uleb128 0x5
 2588 0118 49       		.uleb128 0x49
 2589 0119 13       		.uleb128 0x13
 2590 011a 1C       		.uleb128 0x1c
 2591 011b 0B       		.uleb128 0xb
 2592 011c 00       		.byte	0
 2593 011d 00       		.byte	0
 2594 011e 13       		.uleb128 0x13
 2595 011f 34       		.uleb128 0x34
 2596 0120 00       		.byte	0
 2597 0121 03       		.uleb128 0x3
 2598 0122 0E       		.uleb128 0xe
 2599 0123 3A       		.uleb128 0x3a
 2600 0124 0B       		.uleb128 0xb
 2601 0125 3B       		.uleb128 0x3b
 2602 0126 05       		.uleb128 0x5
 2603 0127 49       		.uleb128 0x49
 2604 0128 13       		.uleb128 0x13
 2605 0129 02       		.uleb128 0x2
 2606 012a 18       		.uleb128 0x18
 2607 012b 00       		.byte	0
 2608 012c 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 83


 2609 012d 14       		.uleb128 0x14
 2610 012e 05       		.uleb128 0x5
 2611 012f 00       		.byte	0
 2612 0130 03       		.uleb128 0x3
 2613 0131 0E       		.uleb128 0xe
 2614 0132 3A       		.uleb128 0x3a
 2615 0133 0B       		.uleb128 0xb
 2616 0134 3B       		.uleb128 0x3b
 2617 0135 05       		.uleb128 0x5
 2618 0136 49       		.uleb128 0x49
 2619 0137 13       		.uleb128 0x13
 2620 0138 02       		.uleb128 0x2
 2621 0139 18       		.uleb128 0x18
 2622 013a 00       		.byte	0
 2623 013b 00       		.byte	0
 2624 013c 15       		.uleb128 0x15
 2625 013d 0F       		.uleb128 0xf
 2626 013e 00       		.byte	0
 2627 013f 0B       		.uleb128 0xb
 2628 0140 0B       		.uleb128 0xb
 2629 0141 49       		.uleb128 0x49
 2630 0142 13       		.uleb128 0x13
 2631 0143 00       		.byte	0
 2632 0144 00       		.byte	0
 2633 0145 16       		.uleb128 0x16
 2634 0146 01       		.uleb128 0x1
 2635 0147 01       		.byte	0x1
 2636 0148 49       		.uleb128 0x49
 2637 0149 13       		.uleb128 0x13
 2638 014a 01       		.uleb128 0x1
 2639 014b 13       		.uleb128 0x13
 2640 014c 00       		.byte	0
 2641 014d 00       		.byte	0
 2642 014e 17       		.uleb128 0x17
 2643 014f 21       		.uleb128 0x21
 2644 0150 00       		.byte	0
 2645 0151 49       		.uleb128 0x49
 2646 0152 13       		.uleb128 0x13
 2647 0153 2F       		.uleb128 0x2f
 2648 0154 0B       		.uleb128 0xb
 2649 0155 00       		.byte	0
 2650 0156 00       		.byte	0
 2651 0157 18       		.uleb128 0x18
 2652 0158 05       		.uleb128 0x5
 2653 0159 00       		.byte	0
 2654 015a 03       		.uleb128 0x3
 2655 015b 08       		.uleb128 0x8
 2656 015c 3A       		.uleb128 0x3a
 2657 015d 0B       		.uleb128 0xb
 2658 015e 3B       		.uleb128 0x3b
 2659 015f 05       		.uleb128 0x5
 2660 0160 49       		.uleb128 0x49
 2661 0161 13       		.uleb128 0x13
 2662 0162 02       		.uleb128 0x2
 2663 0163 17       		.uleb128 0x17
 2664 0164 00       		.byte	0
 2665 0165 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 84


 2666 0166 19       		.uleb128 0x19
 2667 0167 05       		.uleb128 0x5
 2668 0168 00       		.byte	0
 2669 0169 03       		.uleb128 0x3
 2670 016a 08       		.uleb128 0x8
 2671 016b 3A       		.uleb128 0x3a
 2672 016c 0B       		.uleb128 0xb
 2673 016d 3B       		.uleb128 0x3b
 2674 016e 05       		.uleb128 0x5
 2675 016f 49       		.uleb128 0x49
 2676 0170 13       		.uleb128 0x13
 2677 0171 02       		.uleb128 0x2
 2678 0172 18       		.uleb128 0x18
 2679 0173 00       		.byte	0
 2680 0174 00       		.byte	0
 2681 0175 1A       		.uleb128 0x1a
 2682 0176 34       		.uleb128 0x34
 2683 0177 00       		.byte	0
 2684 0178 03       		.uleb128 0x3
 2685 0179 0E       		.uleb128 0xe
 2686 017a 3A       		.uleb128 0x3a
 2687 017b 0B       		.uleb128 0xb
 2688 017c 3B       		.uleb128 0x3b
 2689 017d 05       		.uleb128 0x5
 2690 017e 49       		.uleb128 0x49
 2691 017f 13       		.uleb128 0x13
 2692 0180 3F       		.uleb128 0x3f
 2693 0181 19       		.uleb128 0x19
 2694 0182 3C       		.uleb128 0x3c
 2695 0183 19       		.uleb128 0x19
 2696 0184 00       		.byte	0
 2697 0185 00       		.byte	0
 2698 0186 1B       		.uleb128 0x1b
 2699 0187 34       		.uleb128 0x34
 2700 0188 00       		.byte	0
 2701 0189 03       		.uleb128 0x3
 2702 018a 0E       		.uleb128 0xe
 2703 018b 3A       		.uleb128 0x3a
 2704 018c 0B       		.uleb128 0xb
 2705 018d 3B       		.uleb128 0x3b
 2706 018e 0B       		.uleb128 0xb
 2707 018f 49       		.uleb128 0x49
 2708 0190 13       		.uleb128 0x13
 2709 0191 3F       		.uleb128 0x3f
 2710 0192 19       		.uleb128 0x19
 2711 0193 02       		.uleb128 0x2
 2712 0194 18       		.uleb128 0x18
 2713 0195 00       		.byte	0
 2714 0196 00       		.byte	0
 2715 0197 1C       		.uleb128 0x1c
 2716 0198 26       		.uleb128 0x26
 2717 0199 00       		.byte	0
 2718 019a 49       		.uleb128 0x49
 2719 019b 13       		.uleb128 0x13
 2720 019c 00       		.byte	0
 2721 019d 00       		.byte	0
 2722 019e 1D       		.uleb128 0x1d
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 85


 2723 019f 2E       		.uleb128 0x2e
 2724 01a0 01       		.byte	0x1
 2725 01a1 3F       		.uleb128 0x3f
 2726 01a2 19       		.uleb128 0x19
 2727 01a3 03       		.uleb128 0x3
 2728 01a4 0E       		.uleb128 0xe
 2729 01a5 3A       		.uleb128 0x3a
 2730 01a6 0B       		.uleb128 0xb
 2731 01a7 3B       		.uleb128 0x3b
 2732 01a8 0B       		.uleb128 0xb
 2733 01a9 27       		.uleb128 0x27
 2734 01aa 19       		.uleb128 0x19
 2735 01ab 3C       		.uleb128 0x3c
 2736 01ac 19       		.uleb128 0x19
 2737 01ad 01       		.uleb128 0x1
 2738 01ae 13       		.uleb128 0x13
 2739 01af 00       		.byte	0
 2740 01b0 00       		.byte	0
 2741 01b1 1E       		.uleb128 0x1e
 2742 01b2 05       		.uleb128 0x5
 2743 01b3 00       		.byte	0
 2744 01b4 49       		.uleb128 0x49
 2745 01b5 13       		.uleb128 0x13
 2746 01b6 00       		.byte	0
 2747 01b7 00       		.byte	0
 2748 01b8 1F       		.uleb128 0x1f
 2749 01b9 2E       		.uleb128 0x2e
 2750 01ba 00       		.byte	0
 2751 01bb 3F       		.uleb128 0x3f
 2752 01bc 19       		.uleb128 0x19
 2753 01bd 03       		.uleb128 0x3
 2754 01be 0E       		.uleb128 0xe
 2755 01bf 3A       		.uleb128 0x3a
 2756 01c0 0B       		.uleb128 0xb
 2757 01c1 3B       		.uleb128 0x3b
 2758 01c2 0B       		.uleb128 0xb
 2759 01c3 27       		.uleb128 0x27
 2760 01c4 19       		.uleb128 0x19
 2761 01c5 49       		.uleb128 0x49
 2762 01c6 13       		.uleb128 0x13
 2763 01c7 3C       		.uleb128 0x3c
 2764 01c8 19       		.uleb128 0x19
 2765 01c9 00       		.byte	0
 2766 01ca 00       		.byte	0
 2767 01cb 20       		.uleb128 0x20
 2768 01cc 2E       		.uleb128 0x2e
 2769 01cd 00       		.byte	0
 2770 01ce 3F       		.uleb128 0x3f
 2771 01cf 19       		.uleb128 0x19
 2772 01d0 03       		.uleb128 0x3
 2773 01d1 0E       		.uleb128 0xe
 2774 01d2 3A       		.uleb128 0x3a
 2775 01d3 0B       		.uleb128 0xb
 2776 01d4 3B       		.uleb128 0x3b
 2777 01d5 0B       		.uleb128 0xb
 2778 01d6 27       		.uleb128 0x27
 2779 01d7 19       		.uleb128 0x19
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 86


 2780 01d8 3C       		.uleb128 0x3c
 2781 01d9 19       		.uleb128 0x19
 2782 01da 00       		.byte	0
 2783 01db 00       		.byte	0
 2784 01dc 21       		.uleb128 0x21
 2785 01dd 2E       		.uleb128 0x2e
 2786 01de 01       		.byte	0x1
 2787 01df 3F       		.uleb128 0x3f
 2788 01e0 19       		.uleb128 0x19
 2789 01e1 03       		.uleb128 0x3
 2790 01e2 0E       		.uleb128 0xe
 2791 01e3 3A       		.uleb128 0x3a
 2792 01e4 0B       		.uleb128 0xb
 2793 01e5 3B       		.uleb128 0x3b
 2794 01e6 0B       		.uleb128 0xb
 2795 01e7 27       		.uleb128 0x27
 2796 01e8 19       		.uleb128 0x19
 2797 01e9 3C       		.uleb128 0x3c
 2798 01ea 19       		.uleb128 0x19
 2799 01eb 00       		.byte	0
 2800 01ec 00       		.byte	0
 2801 01ed 00       		.byte	0
 2802              		.section	.debug_loc,"",%progbits
 2803              	.Ldebug_loc0:
 2804              	.LLST0:
 2805 0000 00000000 		.4byte	.LVL1
 2806 0004 07000000 		.4byte	.LVL2-1
 2807 0008 0100     		.2byte	0x1
 2808 000a 50       		.byte	0x50
 2809 000b 07000000 		.4byte	.LVL2-1
 2810 000f 18000000 		.4byte	.LFE1
 2811 0013 0400     		.2byte	0x4
 2812 0015 F3       		.byte	0xf3
 2813 0016 01       		.uleb128 0x1
 2814 0017 50       		.byte	0x50
 2815 0018 9F       		.byte	0x9f
 2816 0019 00000000 		.4byte	0
 2817 001d 00000000 		.4byte	0
 2818              	.LLST1:
 2819 0021 02000000 		.4byte	.LVL5
 2820 0025 06000000 		.4byte	.LVL6
 2821 0029 0200     		.2byte	0x2
 2822 002b 30       		.byte	0x30
 2823 002c 9F       		.byte	0x9f
 2824 002d 06000000 		.4byte	.LVL6
 2825 0031 0E000000 		.4byte	.LVL8
 2826 0035 0100     		.2byte	0x1
 2827 0037 54       		.byte	0x54
 2828 0038 10000000 		.4byte	.LVL9
 2829 003c 16000000 		.4byte	.LFE2
 2830 0040 0100     		.2byte	0x1
 2831 0042 54       		.byte	0x54
 2832 0043 00000000 		.4byte	0
 2833 0047 00000000 		.4byte	0
 2834              	.LLST2:
 2835 004b 12000000 		.4byte	.LVL12
 2836 004f 34000000 		.4byte	.LVL16
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 87


 2837 0053 0100     		.2byte	0x1
 2838 0055 54       		.byte	0x54
 2839 0056 36000000 		.4byte	.LVL17
 2840 005a 3C000000 		.4byte	.LVL18
 2841 005e 0100     		.2byte	0x1
 2842 0060 54       		.byte	0x54
 2843 0061 00000000 		.4byte	0
 2844 0065 00000000 		.4byte	0
 2845              	.LLST3:
 2846 0069 1C000000 		.4byte	.LVL13
 2847 006d 28000000 		.4byte	.LVL14
 2848 0071 0100     		.2byte	0x1
 2849 0073 53       		.byte	0x53
 2850 0074 28000000 		.4byte	.LVL14
 2851 0078 34000000 		.4byte	.LVL16
 2852 007c 0700     		.2byte	0x7
 2853 007e 31       		.byte	0x31
 2854 007f 74       		.byte	0x74
 2855 0080 00       		.sleb128 0
 2856 0081 37       		.byte	0x37
 2857 0082 1A       		.byte	0x1a
 2858 0083 24       		.byte	0x24
 2859 0084 9F       		.byte	0x9f
 2860 0085 34000000 		.4byte	.LVL16
 2861 0089 36000000 		.4byte	.LVL17
 2862 008d 0700     		.2byte	0x7
 2863 008f 31       		.byte	0x31
 2864 0090 74       		.byte	0x74
 2865 0091 7F       		.sleb128 -1
 2866 0092 37       		.byte	0x37
 2867 0093 1A       		.byte	0x1a
 2868 0094 24       		.byte	0x24
 2869 0095 9F       		.byte	0x9f
 2870 0096 00000000 		.4byte	0
 2871 009a 00000000 		.4byte	0
 2872              	.LLST4:
 2873 009e 00000000 		.4byte	.LVL19
 2874 00a2 30000000 		.4byte	.LVL27
 2875 00a6 0100     		.2byte	0x1
 2876 00a8 50       		.byte	0x50
 2877 00a9 30000000 		.4byte	.LVL27
 2878 00ad 46000000 		.4byte	.LVL29
 2879 00b1 0400     		.2byte	0x4
 2880 00b3 F3       		.byte	0xf3
 2881 00b4 01       		.uleb128 0x1
 2882 00b5 50       		.byte	0x50
 2883 00b6 9F       		.byte	0x9f
 2884 00b7 46000000 		.4byte	.LVL29
 2885 00bb 4A000000 		.4byte	.LVL30
 2886 00bf 0100     		.2byte	0x1
 2887 00c1 50       		.byte	0x50
 2888 00c2 4A000000 		.4byte	.LVL30
 2889 00c6 84000000 		.4byte	.LFE6
 2890 00ca 0400     		.2byte	0x4
 2891 00cc F3       		.byte	0xf3
 2892 00cd 01       		.uleb128 0x1
 2893 00ce 50       		.byte	0x50
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 88


 2894 00cf 9F       		.byte	0x9f
 2895 00d0 00000000 		.4byte	0
 2896 00d4 00000000 		.4byte	0
 2897              	.LLST5:
 2898 00d8 04000000 		.4byte	.LVL20
 2899 00dc 6E000000 		.4byte	.LVL32
 2900 00e0 0100     		.2byte	0x1
 2901 00e2 54       		.byte	0x54
 2902 00e3 00000000 		.4byte	0
 2903 00e7 00000000 		.4byte	0
 2904              	.LLST6:
 2905 00eb 14000000 		.4byte	.LVL22
 2906 00ef 20000000 		.4byte	.LVL25
 2907 00f3 0100     		.2byte	0x1
 2908 00f5 52       		.byte	0x52
 2909 00f6 00000000 		.4byte	0
 2910 00fa 00000000 		.4byte	0
 2911              	.LLST7:
 2912 00fe 1E000000 		.4byte	.LVL24
 2913 0102 34000000 		.4byte	.LVL28
 2914 0106 0100     		.2byte	0x1
 2915 0108 51       		.byte	0x51
 2916 0109 46000000 		.4byte	.LVL29
 2917 010d 4C000000 		.4byte	.LVL31
 2918 0111 0100     		.2byte	0x1
 2919 0113 51       		.byte	0x51
 2920 0114 00000000 		.4byte	0
 2921 0118 00000000 		.4byte	0
 2922              	.LLST8:
 2923 011c 22000000 		.4byte	.LVL26
 2924 0120 6E000000 		.4byte	.LVL32
 2925 0124 0100     		.2byte	0x1
 2926 0126 57       		.byte	0x57
 2927 0127 00000000 		.4byte	0
 2928 012b 00000000 		.4byte	0
 2929              	.LLST9:
 2930 012f 00000000 		.4byte	.LVL33
 2931 0133 06000000 		.4byte	.LVL35
 2932 0137 0100     		.2byte	0x1
 2933 0139 50       		.byte	0x50
 2934 013a 06000000 		.4byte	.LVL35
 2935 013e 1C000000 		.4byte	.LFE7
 2936 0142 0400     		.2byte	0x4
 2937 0144 F3       		.byte	0xf3
 2938 0145 01       		.uleb128 0x1
 2939 0146 50       		.byte	0x50
 2940 0147 9F       		.byte	0x9f
 2941 0148 00000000 		.4byte	0
 2942 014c 00000000 		.4byte	0
 2943              	.LLST10:
 2944 0150 02000000 		.4byte	.LVL34
 2945 0154 06000000 		.4byte	.LVL35
 2946 0158 0200     		.2byte	0x2
 2947 015a 30       		.byte	0x30
 2948 015b 9F       		.byte	0x9f
 2949 015c 06000000 		.4byte	.LVL35
 2950 0160 12000000 		.4byte	.LVL38
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 89


 2951 0164 0100     		.2byte	0x1
 2952 0166 54       		.byte	0x54
 2953 0167 14000000 		.4byte	.LVL39
 2954 016b 1C000000 		.4byte	.LFE7
 2955 016f 0100     		.2byte	0x1
 2956 0171 54       		.byte	0x54
 2957 0172 00000000 		.4byte	0
 2958 0176 00000000 		.4byte	0
 2959              	.LLST11:
 2960 017a 02000000 		.4byte	.LVL34
 2961 017e 06000000 		.4byte	.LVL35
 2962 0182 0200     		.2byte	0x2
 2963 0184 30       		.byte	0x30
 2964 0185 9F       		.byte	0x9f
 2965 0186 06000000 		.4byte	.LVL35
 2966 018a 1C000000 		.4byte	.LFE7
 2967 018e 0100     		.2byte	0x1
 2968 0190 55       		.byte	0x55
 2969 0191 00000000 		.4byte	0
 2970 0195 00000000 		.4byte	0
 2971              	.LLST12:
 2972 0199 02000000 		.4byte	.LVL40
 2973 019d 08000000 		.4byte	.LVL41
 2974 01a1 0200     		.2byte	0x2
 2975 01a3 30       		.byte	0x30
 2976 01a4 9F       		.byte	0x9f
 2977 01a5 08000000 		.4byte	.LVL41
 2978 01a9 14000000 		.4byte	.LVL44
 2979 01ad 0100     		.2byte	0x1
 2980 01af 54       		.byte	0x54
 2981 01b0 16000000 		.4byte	.LVL45
 2982 01b4 1E000000 		.4byte	.LFE8
 2983 01b8 0100     		.2byte	0x1
 2984 01ba 54       		.byte	0x54
 2985 01bb 00000000 		.4byte	0
 2986 01bf 00000000 		.4byte	0
 2987              	.LLST13:
 2988 01c3 02000000 		.4byte	.LVL40
 2989 01c7 08000000 		.4byte	.LVL41
 2990 01cb 0200     		.2byte	0x2
 2991 01cd 30       		.byte	0x30
 2992 01ce 9F       		.byte	0x9f
 2993 01cf 08000000 		.4byte	.LVL41
 2994 01d3 1E000000 		.4byte	.LFE8
 2995 01d7 0100     		.2byte	0x1
 2996 01d9 55       		.byte	0x55
 2997 01da 00000000 		.4byte	0
 2998 01de 00000000 		.4byte	0
 2999              	.LLST14:
 3000 01e2 00000000 		.4byte	.LVL46
 3001 01e6 04000000 		.4byte	.LVL48
 3002 01ea 0100     		.2byte	0x1
 3003 01ec 50       		.byte	0x50
 3004 01ed 04000000 		.4byte	.LVL48
 3005 01f1 28000000 		.4byte	.LFE9
 3006 01f5 0400     		.2byte	0x4
 3007 01f7 F3       		.byte	0xf3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 90


 3008 01f8 01       		.uleb128 0x1
 3009 01f9 50       		.byte	0x50
 3010 01fa 9F       		.byte	0x9f
 3011 01fb 00000000 		.4byte	0
 3012 01ff 00000000 		.4byte	0
 3013              	.LLST15:
 3014 0203 0E000000 		.4byte	.LVL50
 3015 0207 14000000 		.4byte	.LVL51
 3016 020b 0100     		.2byte	0x1
 3017 020d 52       		.byte	0x52
 3018 020e 14000000 		.4byte	.LVL51
 3019 0212 18000000 		.4byte	.LVL52
 3020 0216 0700     		.2byte	0x7
 3021 0218 31       		.byte	0x31
 3022 0219 73       		.byte	0x73
 3023 021a 00       		.sleb128 0
 3024 021b 37       		.byte	0x37
 3025 021c 1A       		.byte	0x1a
 3026 021d 24       		.byte	0x24
 3027 021e 9F       		.byte	0x9f
 3028 021f 18000000 		.4byte	.LVL52
 3029 0223 1A000000 		.4byte	.LVL53
 3030 0227 0700     		.2byte	0x7
 3031 0229 31       		.byte	0x31
 3032 022a 73       		.byte	0x73
 3033 022b 7F       		.sleb128 -1
 3034 022c 37       		.byte	0x37
 3035 022d 1A       		.byte	0x1a
 3036 022e 24       		.byte	0x24
 3037 022f 9F       		.byte	0x9f
 3038 0230 00000000 		.4byte	0
 3039 0234 00000000 		.4byte	0
 3040              	.LLST16:
 3041 0238 02000000 		.4byte	.LVL47
 3042 023c 04000000 		.4byte	.LVL48
 3043 0240 0200     		.2byte	0x2
 3044 0242 30       		.byte	0x30
 3045 0243 9F       		.byte	0x9f
 3046 0244 04000000 		.4byte	.LVL48
 3047 0248 18000000 		.4byte	.LVL52
 3048 024c 0100     		.2byte	0x1
 3049 024e 53       		.byte	0x53
 3050 024f 1A000000 		.4byte	.LVL53
 3051 0253 28000000 		.4byte	.LFE9
 3052 0257 0100     		.2byte	0x1
 3053 0259 53       		.byte	0x53
 3054 025a 00000000 		.4byte	0
 3055 025e 00000000 		.4byte	0
 3056              	.LLST17:
 3057 0262 00000000 		.4byte	.LVL54
 3058 0266 04000000 		.4byte	.LVL56
 3059 026a 0100     		.2byte	0x1
 3060 026c 50       		.byte	0x50
 3061 026d 04000000 		.4byte	.LVL56
 3062 0271 2C000000 		.4byte	.LFE10
 3063 0275 0400     		.2byte	0x4
 3064 0277 F3       		.byte	0xf3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 91


 3065 0278 01       		.uleb128 0x1
 3066 0279 50       		.byte	0x50
 3067 027a 9F       		.byte	0x9f
 3068 027b 00000000 		.4byte	0
 3069 027f 00000000 		.4byte	0
 3070              	.LLST18:
 3071 0283 0E000000 		.4byte	.LVL58
 3072 0287 16000000 		.4byte	.LVL59
 3073 028b 0100     		.2byte	0x1
 3074 028d 52       		.byte	0x52
 3075 028e 16000000 		.4byte	.LVL59
 3076 0292 1A000000 		.4byte	.LVL60
 3077 0296 0700     		.2byte	0x7
 3078 0298 31       		.byte	0x31
 3079 0299 73       		.byte	0x73
 3080 029a 00       		.sleb128 0
 3081 029b 37       		.byte	0x37
 3082 029c 1A       		.byte	0x1a
 3083 029d 24       		.byte	0x24
 3084 029e 9F       		.byte	0x9f
 3085 029f 1A000000 		.4byte	.LVL60
 3086 02a3 1C000000 		.4byte	.LVL61
 3087 02a7 0700     		.2byte	0x7
 3088 02a9 31       		.byte	0x31
 3089 02aa 73       		.byte	0x73
 3090 02ab 7F       		.sleb128 -1
 3091 02ac 37       		.byte	0x37
 3092 02ad 1A       		.byte	0x1a
 3093 02ae 24       		.byte	0x24
 3094 02af 9F       		.byte	0x9f
 3095 02b0 00000000 		.4byte	0
 3096 02b4 00000000 		.4byte	0
 3097              	.LLST19:
 3098 02b8 02000000 		.4byte	.LVL55
 3099 02bc 04000000 		.4byte	.LVL56
 3100 02c0 0200     		.2byte	0x2
 3101 02c2 30       		.byte	0x30
 3102 02c3 9F       		.byte	0x9f
 3103 02c4 04000000 		.4byte	.LVL56
 3104 02c8 1A000000 		.4byte	.LVL60
 3105 02cc 0100     		.2byte	0x1
 3106 02ce 53       		.byte	0x53
 3107 02cf 1C000000 		.4byte	.LVL61
 3108 02d3 2C000000 		.4byte	.LFE10
 3109 02d7 0100     		.2byte	0x1
 3110 02d9 53       		.byte	0x53
 3111 02da 00000000 		.4byte	0
 3112 02de 00000000 		.4byte	0
 3113              	.LLST20:
 3114 02e2 00000000 		.4byte	.LVL62
 3115 02e6 0A000000 		.4byte	.LVL65
 3116 02ea 0100     		.2byte	0x1
 3117 02ec 50       		.byte	0x50
 3118 02ed 0A000000 		.4byte	.LVL65
 3119 02f1 2C000000 		.4byte	.LFE11
 3120 02f5 0400     		.2byte	0x4
 3121 02f7 F3       		.byte	0xf3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 92


 3122 02f8 01       		.uleb128 0x1
 3123 02f9 50       		.byte	0x50
 3124 02fa 9F       		.byte	0x9f
 3125 02fb 00000000 		.4byte	0
 3126 02ff 00000000 		.4byte	0
 3127              	.LLST21:
 3128 0303 06000000 		.4byte	.LVL64
 3129 0307 0E000000 		.4byte	.LVL66
 3130 030b 0200     		.2byte	0x2
 3131 030d 30       		.byte	0x30
 3132 030e 9F       		.byte	0x9f
 3133 030f 0E000000 		.4byte	.LVL66
 3134 0313 1E000000 		.4byte	.LVL69
 3135 0317 0100     		.2byte	0x1
 3136 0319 53       		.byte	0x53
 3137 031a 20000000 		.4byte	.LVL70
 3138 031e 2C000000 		.4byte	.LFE11
 3139 0322 0100     		.2byte	0x1
 3140 0324 53       		.byte	0x53
 3141 0325 00000000 		.4byte	0
 3142 0329 00000000 		.4byte	0
 3143              	.LLST22:
 3144 032d 02000000 		.4byte	.LVL63
 3145 0331 0E000000 		.4byte	.LVL66
 3146 0335 0300     		.2byte	0x3
 3147 0337 09       		.byte	0x9
 3148 0338 FF       		.byte	0xff
 3149 0339 9F       		.byte	0x9f
 3150 033a 0E000000 		.4byte	.LVL66
 3151 033e 2C000000 		.4byte	.LFE11
 3152 0342 0100     		.2byte	0x1
 3153 0344 50       		.byte	0x50
 3154 0345 00000000 		.4byte	0
 3155 0349 00000000 		.4byte	0
 3156              	.LLST23:
 3157 034d 02000000 		.4byte	.LVL63
 3158 0351 0E000000 		.4byte	.LVL66
 3159 0355 0200     		.2byte	0x2
 3160 0357 30       		.byte	0x30
 3161 0358 9F       		.byte	0x9f
 3162 0359 0E000000 		.4byte	.LVL66
 3163 035d 1A000000 		.4byte	.LVL67
 3164 0361 0100     		.2byte	0x1
 3165 0363 56       		.byte	0x56
 3166 0364 1C000000 		.4byte	.LVL68
 3167 0368 26000000 		.4byte	.LVL71
 3168 036c 0100     		.2byte	0x1
 3169 036e 56       		.byte	0x56
 3170 036f 00000000 		.4byte	0
 3171 0373 00000000 		.4byte	0
 3172              	.LLST24:
 3173 0377 06000000 		.4byte	.LVL64
 3174 037b 26000000 		.4byte	.LVL71
 3175 037f 0100     		.2byte	0x1
 3176 0381 55       		.byte	0x55
 3177 0382 00000000 		.4byte	0
 3178 0386 00000000 		.4byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 93


 3179              	.LLST25:
 3180 038a 00000000 		.4byte	.LVL72
 3181 038e 18000000 		.4byte	.LVL78
 3182 0392 0100     		.2byte	0x1
 3183 0394 50       		.byte	0x50
 3184 0395 18000000 		.4byte	.LVL78
 3185 0399 B0000000 		.4byte	.LFE12
 3186 039d 0400     		.2byte	0x4
 3187 039f F3       		.byte	0xf3
 3188 03a0 01       		.uleb128 0x1
 3189 03a1 50       		.byte	0x50
 3190 03a2 9F       		.byte	0x9f
 3191 03a3 00000000 		.4byte	0
 3192 03a7 00000000 		.4byte	0
 3193              	.LLST26:
 3194 03ab 00000000 		.4byte	.LVL72
 3195 03af 0A000000 		.4byte	.LVL74
 3196 03b3 0100     		.2byte	0x1
 3197 03b5 51       		.byte	0x51
 3198 03b6 0A000000 		.4byte	.LVL74
 3199 03ba B0000000 		.4byte	.LFE12
 3200 03be 0400     		.2byte	0x4
 3201 03c0 F3       		.byte	0xf3
 3202 03c1 01       		.uleb128 0x1
 3203 03c2 51       		.byte	0x51
 3204 03c3 9F       		.byte	0x9f
 3205 03c4 00000000 		.4byte	0
 3206 03c8 00000000 		.4byte	0
 3207              	.LLST27:
 3208 03cc 00000000 		.4byte	.LVL72
 3209 03d0 32000000 		.4byte	.LVL83
 3210 03d4 0100     		.2byte	0x1
 3211 03d6 52       		.byte	0x52
 3212 03d7 32000000 		.4byte	.LVL83
 3213 03db B0000000 		.4byte	.LFE12
 3214 03df 0400     		.2byte	0x4
 3215 03e1 F3       		.byte	0xf3
 3216 03e2 01       		.uleb128 0x1
 3217 03e3 52       		.byte	0x52
 3218 03e4 9F       		.byte	0x9f
 3219 03e5 00000000 		.4byte	0
 3220 03e9 00000000 		.4byte	0
 3221              	.LLST28:
 3222 03ed 00000000 		.4byte	.LVL72
 3223 03f1 A6000000 		.4byte	.LVL97
 3224 03f5 0200     		.2byte	0x2
 3225 03f7 91       		.byte	0x91
 3226 03f8 00       		.sleb128 0
 3227 03f9 A6000000 		.4byte	.LVL97
 3228 03fd B0000000 		.4byte	.LFE12
 3229 0401 0200     		.2byte	0x2
 3230 0403 7D       		.byte	0x7d
 3231 0404 00       		.sleb128 0
 3232 0405 00000000 		.4byte	0
 3233 0409 00000000 		.4byte	0
 3234              	.LLST29:
 3235 040d 06000000 		.4byte	.LVL73
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 94


 3236 0411 12000000 		.4byte	.LVL75
 3237 0415 0200     		.2byte	0x2
 3238 0417 30       		.byte	0x30
 3239 0418 9F       		.byte	0x9f
 3240 0419 12000000 		.4byte	.LVL75
 3241 041d 14000000 		.4byte	.LVL76
 3242 0421 0100     		.2byte	0x1
 3243 0423 56       		.byte	0x56
 3244 0424 14000000 		.4byte	.LVL76
 3245 0428 16000000 		.4byte	.LVL77
 3246 042c 0200     		.2byte	0x2
 3247 042e 30       		.byte	0x30
 3248 042f 9F       		.byte	0x9f
 3249 0430 16000000 		.4byte	.LVL77
 3250 0434 28000000 		.4byte	.LVL80
 3251 0438 0100     		.2byte	0x1
 3252 043a 56       		.byte	0x56
 3253 043b 30000000 		.4byte	.LVL82
 3254 043f 44000000 		.4byte	.LVL86
 3255 0443 0100     		.2byte	0x1
 3256 0445 56       		.byte	0x56
 3257 0446 00000000 		.4byte	0
 3258 044a 00000000 		.4byte	0
 3259              	.LLST30:
 3260 044e 06000000 		.4byte	.LVL73
 3261 0452 1A000000 		.4byte	.LVL79
 3262 0456 0200     		.2byte	0x2
 3263 0458 30       		.byte	0x30
 3264 0459 9F       		.byte	0x9f
 3265 045a 1A000000 		.4byte	.LVL79
 3266 045e 7C000000 		.4byte	.LVL88
 3267 0462 0100     		.2byte	0x1
 3268 0464 50       		.byte	0x50
 3269 0465 7C000000 		.4byte	.LVL88
 3270 0469 A6000000 		.4byte	.LVL97
 3271 046d 0300     		.2byte	0x3
 3272 046f 74       		.byte	0x74
 3273 0470 01       		.sleb128 1
 3274 0471 9F       		.byte	0x9f
 3275 0472 00000000 		.4byte	0
 3276 0476 00000000 		.4byte	0
 3277              	.LLST31:
 3278 047a A0000000 		.4byte	.LVL95
 3279 047e A4000000 		.4byte	.LVL96
 3280 0482 0900     		.2byte	0x9
 3281 0484 70       		.byte	0x70
 3282 0485 00       		.sleb128 0
 3283 0486 09       		.byte	0x9
 3284 0487 EC       		.byte	0xec
 3285 0488 24       		.byte	0x24
 3286 0489 09       		.byte	0x9
 3287 048a FC       		.byte	0xfc
 3288 048b 25       		.byte	0x25
 3289 048c 9F       		.byte	0x9f
 3290 048d A4000000 		.4byte	.LVL96
 3291 0491 A6000000 		.4byte	.LVL97
 3292 0495 2300     		.2byte	0x23
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 95


 3293 0497 74       		.byte	0x74
 3294 0498 00       		.sleb128 0
 3295 0499 38       		.byte	0x38
 3296 049a 24       		.byte	0x24
 3297 049b 72       		.byte	0x72
 3298 049c 00       		.sleb128 0
 3299 049d 03       		.byte	0x3
 3300 049e 0A000000 		.4byte	CapSense_CSD_centroid.5140+2
 3301 04a2 94       		.byte	0x94
 3302 04a3 01       		.byte	0x1
 3303 04a4 08       		.byte	0x8
 3304 04a5 FF       		.byte	0xff
 3305 04a6 1A       		.byte	0x1a
 3306 04a7 71       		.byte	0x71
 3307 04a8 00       		.sleb128 0
 3308 04a9 22       		.byte	0x22
 3309 04aa 1B       		.byte	0x1b
 3310 04ab 22       		.byte	0x22
 3311 04ac 73       		.byte	0x73
 3312 04ad 00       		.sleb128 0
 3313 04ae 1E       		.byte	0x1e
 3314 04af 23       		.byte	0x23
 3315 04b0 80FE01   		.uleb128 0x7f00
 3316 04b3 09       		.byte	0x9
 3317 04b4 EC       		.byte	0xec
 3318 04b5 24       		.byte	0x24
 3319 04b6 09       		.byte	0x9
 3320 04b7 FC       		.byte	0xfc
 3321 04b8 25       		.byte	0x25
 3322 04b9 9F       		.byte	0x9f
 3323 04ba 00000000 		.4byte	0
 3324 04be 00000000 		.4byte	0
 3325              	.LLST32:
 3326 04c2 88000000 		.4byte	.LVL89
 3327 04c6 8E000000 		.4byte	.LVL91
 3328 04ca 0100     		.2byte	0x1
 3329 04cc 52       		.byte	0x52
 3330 04cd 8E000000 		.4byte	.LVL91
 3331 04d1 A6000000 		.4byte	.LVL97
 3332 04d5 0E00     		.2byte	0xe
 3333 04d7 03       		.byte	0x3
 3334 04d8 0A000000 		.4byte	CapSense_CSD_centroid.5140+2
 3335 04dc 94       		.byte	0x94
 3336 04dd 01       		.byte	0x1
 3337 04de 08       		.byte	0x8
 3338 04df FF       		.byte	0xff
 3339 04e0 1A       		.byte	0x1a
 3340 04e1 75       		.byte	0x75
 3341 04e2 00       		.sleb128 0
 3342 04e3 1C       		.byte	0x1c
 3343 04e4 9F       		.byte	0x9f
 3344 04e5 A6000000 		.4byte	.LVL97
 3345 04e9 B0000000 		.4byte	.LFE12
 3346 04ed 1600     		.2byte	0x16
 3347 04ef 03       		.byte	0x3
 3348 04f0 0A000000 		.4byte	CapSense_CSD_centroid.5140+2
 3349 04f4 94       		.byte	0x94
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 96


 3350 04f5 01       		.byte	0x1
 3351 04f6 08       		.byte	0x8
 3352 04f7 FF       		.byte	0xff
 3353 04f8 1A       		.byte	0x1a
 3354 04f9 03       		.byte	0x3
 3355 04fa 08000000 		.4byte	CapSense_CSD_centroid.5140
 3356 04fe 94       		.byte	0x94
 3357 04ff 01       		.byte	0x1
 3358 0500 08       		.byte	0x8
 3359 0501 FF       		.byte	0xff
 3360 0502 1A       		.byte	0x1a
 3361 0503 1C       		.byte	0x1c
 3362 0504 9F       		.byte	0x9f
 3363 0505 00000000 		.4byte	0
 3364 0509 00000000 		.4byte	0
 3365              	.LLST33:
 3366 050d 8C000000 		.4byte	.LVL90
 3367 0511 92000000 		.4byte	.LVL92
 3368 0515 0100     		.2byte	0x1
 3369 0517 50       		.byte	0x50
 3370 0518 92000000 		.4byte	.LVL92
 3371 051c 96000000 		.4byte	.LVL93
 3372 0520 0E00     		.2byte	0xe
 3373 0522 03       		.byte	0x3
 3374 0523 0A000000 		.4byte	CapSense_CSD_centroid.5140+2
 3375 0527 94       		.byte	0x94
 3376 0528 01       		.byte	0x1
 3377 0529 08       		.byte	0x8
 3378 052a FF       		.byte	0xff
 3379 052b 1A       		.byte	0x1a
 3380 052c 71       		.byte	0x71
 3381 052d 00       		.sleb128 0
 3382 052e 22       		.byte	0x22
 3383 052f 9F       		.byte	0x9f
 3384 0530 96000000 		.4byte	.LVL93
 3385 0534 A0000000 		.4byte	.LVL95
 3386 0538 0100     		.2byte	0x1
 3387 053a 50       		.byte	0x50
 3388 053b A0000000 		.4byte	.LVL95
 3389 053f A4000000 		.4byte	.LVL96
 3390 0543 0500     		.2byte	0x5
 3391 0545 70       		.byte	0x70
 3392 0546 80827E   		.sleb128 -32512
 3393 0549 9F       		.byte	0x9f
 3394 054a A4000000 		.4byte	.LVL96
 3395 054e A6000000 		.4byte	.LVL97
 3396 0552 1900     		.2byte	0x19
 3397 0554 74       		.byte	0x74
 3398 0555 00       		.sleb128 0
 3399 0556 38       		.byte	0x38
 3400 0557 24       		.byte	0x24
 3401 0558 72       		.byte	0x72
 3402 0559 00       		.sleb128 0
 3403 055a 03       		.byte	0x3
 3404 055b 0A000000 		.4byte	CapSense_CSD_centroid.5140+2
 3405 055f 94       		.byte	0x94
 3406 0560 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 97


 3407 0561 08       		.byte	0x8
 3408 0562 FF       		.byte	0xff
 3409 0563 1A       		.byte	0x1a
 3410 0564 71       		.byte	0x71
 3411 0565 00       		.sleb128 0
 3412 0566 22       		.byte	0x22
 3413 0567 1B       		.byte	0x1b
 3414 0568 22       		.byte	0x22
 3415 0569 73       		.byte	0x73
 3416 056a 00       		.sleb128 0
 3417 056b 1E       		.byte	0x1e
 3418 056c 9F       		.byte	0x9f
 3419 056d 00000000 		.4byte	0
 3420 0571 00000000 		.4byte	0
 3421              	.LLST34:
 3422 0575 0A000000 		.4byte	.LVL74
 3423 0579 2C000000 		.4byte	.LVL81
 3424 057d 0100     		.2byte	0x1
 3425 057f 51       		.byte	0x51
 3426 0580 30000000 		.4byte	.LVL82
 3427 0584 38000000 		.4byte	.LVL84
 3428 0588 0100     		.2byte	0x1
 3429 058a 51       		.byte	0x51
 3430 058b 42000000 		.4byte	.LVL85
 3431 058f 4A000000 		.4byte	.LVL87
 3432 0593 0100     		.2byte	0x1
 3433 0595 51       		.byte	0x51
 3434 0596 00000000 		.4byte	0
 3435 059a 00000000 		.4byte	0
 3436              	.LLST35:
 3437 059e 00000000 		.4byte	.LVL98
 3438 05a2 04000000 		.4byte	.LVL99
 3439 05a6 0100     		.2byte	0x1
 3440 05a8 50       		.byte	0x50
 3441 05a9 04000000 		.4byte	.LVL99
 3442 05ad 0C000000 		.4byte	.LFE14
 3443 05b1 0400     		.2byte	0x4
 3444 05b3 F3       		.byte	0xf3
 3445 05b4 01       		.uleb128 0x1
 3446 05b5 50       		.byte	0x50
 3447 05b6 9F       		.byte	0x9f
 3448 05b7 00000000 		.4byte	0
 3449 05bb 00000000 		.4byte	0
 3450              	.LLST36:
 3451 05bf 06000000 		.4byte	.LVL100
 3452 05c3 0A000000 		.4byte	.LVL101
 3453 05c7 0500     		.2byte	0x5
 3454 05c9 70       		.byte	0x70
 3455 05ca 00       		.sleb128 0
 3456 05cb 32       		.byte	0x32
 3457 05cc 25       		.byte	0x25
 3458 05cd 9F       		.byte	0x9f
 3459 05ce 00000000 		.4byte	0
 3460 05d2 00000000 		.4byte	0
 3461              	.LLST37:
 3462 05d6 00000000 		.4byte	.LVL102
 3463 05da 18000000 		.4byte	.LVL107
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 98


 3464 05de 0100     		.2byte	0x1
 3465 05e0 50       		.byte	0x50
 3466 05e1 18000000 		.4byte	.LVL107
 3467 05e5 EC000000 		.4byte	.LFE4
 3468 05e9 0400     		.2byte	0x4
 3469 05eb F3       		.byte	0xf3
 3470 05ec 01       		.uleb128 0x1
 3471 05ed 50       		.byte	0x50
 3472 05ee 9F       		.byte	0x9f
 3473 05ef 00000000 		.4byte	0
 3474 05f3 00000000 		.4byte	0
 3475              	.LLST38:
 3476 05f7 80000000 		.4byte	.LVL117
 3477 05fb 88000000 		.4byte	.LVL118
 3478 05ff 0500     		.2byte	0x5
 3479 0601 72       		.byte	0x72
 3480 0602 00       		.sleb128 0
 3481 0603 38       		.byte	0x38
 3482 0604 24       		.byte	0x24
 3483 0605 9F       		.byte	0x9f
 3484 0606 88000000 		.4byte	.LVL118
 3485 060a 8A000000 		.4byte	.LVL119
 3486 060e 0100     		.2byte	0x1
 3487 0610 53       		.byte	0x53
 3488 0611 8A000000 		.4byte	.LVL119
 3489 0615 9E000000 		.4byte	.LVL121
 3490 0619 0100     		.2byte	0x1
 3491 061b 57       		.byte	0x57
 3492 061c 00000000 		.4byte	0
 3493 0620 00000000 		.4byte	0
 3494              	.LLST39:
 3495 0624 3A000000 		.4byte	.LVL112
 3496 0628 40000000 		.4byte	.LVL113
 3497 062c 0100     		.2byte	0x1
 3498 062e 55       		.byte	0x55
 3499 062f 44000000 		.4byte	.LVL114
 3500 0633 CA000000 		.4byte	.LVL125
 3501 0637 0100     		.2byte	0x1
 3502 0639 55       		.byte	0x55
 3503 063a 00000000 		.4byte	0
 3504 063e 00000000 		.4byte	0
 3505              	.LLST40:
 3506 0642 22000000 		.4byte	.LVL109
 3507 0646 28000000 		.4byte	.LVL110
 3508 064a 0100     		.2byte	0x1
 3509 064c 50       		.byte	0x50
 3510 064d 28000000 		.4byte	.LVL110
 3511 0651 2B000000 		.4byte	.LVL111-1
 3512 0655 0700     		.2byte	0x7
 3513 0657 74       		.byte	0x74
 3514 0658 00       		.sleb128 0
 3515 0659 31       		.byte	0x31
 3516 065a 24       		.byte	0x24
 3517 065b 75       		.byte	0x75
 3518 065c 00       		.sleb128 0
 3519 065d 22       		.byte	0x22
 3520 065e 00000000 		.4byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 99


 3521 0662 00000000 		.4byte	0
 3522              	.LLST41:
 3523 0666 0A000000 		.4byte	.LVL103
 3524 066a 0E000000 		.4byte	.LVL104
 3525 066e 0100     		.2byte	0x1
 3526 0670 53       		.byte	0x53
 3527 0671 0E000000 		.4byte	.LVL104
 3528 0675 14000000 		.4byte	.LVL106
 3529 0679 0900     		.2byte	0x9
 3530 067b 73       		.byte	0x73
 3531 067c 00       		.sleb128 0
 3532 067d 03       		.byte	0x3
 3533 067e 00000000 		.4byte	.LANCHOR0
 3534 0682 1C       		.byte	0x1c
 3535 0683 9F       		.byte	0x9f
 3536 0684 3A000000 		.4byte	.LVL112
 3537 0688 40000000 		.4byte	.LVL113
 3538 068c 0200     		.2byte	0x2
 3539 068e 31       		.byte	0x31
 3540 068f 9F       		.byte	0x9f
 3541 0690 44000000 		.4byte	.LVL114
 3542 0694 48000000 		.4byte	.LVL115
 3543 0698 0200     		.2byte	0x2
 3544 069a 30       		.byte	0x30
 3545 069b 9F       		.byte	0x9f
 3546 069c 48000000 		.4byte	.LVL115
 3547 06a0 CA000000 		.4byte	.LVL125
 3548 06a4 0100     		.2byte	0x1
 3549 06a6 58       		.byte	0x58
 3550 06a7 00000000 		.4byte	0
 3551 06ab 00000000 		.4byte	0
 3552              	.LLST42:
 3553 06af 10000000 		.4byte	.LVL105
 3554 06b3 A0000000 		.4byte	.LVL122
 3555 06b7 0100     		.2byte	0x1
 3556 06b9 56       		.byte	0x56
 3557 06ba 00000000 		.4byte	0
 3558 06be 00000000 		.4byte	0
 3559              	.LLST43:
 3560 06c2 02000000 		.4byte	.LVL126
 3561 06c6 06000000 		.4byte	.LVL127
 3562 06ca 0200     		.2byte	0x2
 3563 06cc 30       		.byte	0x30
 3564 06cd 9F       		.byte	0x9f
 3565 06ce 06000000 		.4byte	.LVL127
 3566 06d2 20000000 		.4byte	.LVL130
 3567 06d6 0100     		.2byte	0x1
 3568 06d8 54       		.byte	0x54
 3569 06d9 22000000 		.4byte	.LVL131
 3570 06dd 28000000 		.4byte	.LVL132
 3571 06e1 0100     		.2byte	0x1
 3572 06e3 54       		.byte	0x54
 3573 06e4 00000000 		.4byte	0
 3574 06e8 00000000 		.4byte	0
 3575              	.LLST44:
 3576 06ec 10000000 		.4byte	.LVL128
 3577 06f0 1D000000 		.4byte	.LVL129-1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 100


 3578 06f4 0100     		.2byte	0x1
 3579 06f6 53       		.byte	0x53
 3580 06f7 1D000000 		.4byte	.LVL129-1
 3581 06fb 20000000 		.4byte	.LVL130
 3582 06ff 0700     		.2byte	0x7
 3583 0701 31       		.byte	0x31
 3584 0702 74       		.byte	0x74
 3585 0703 00       		.sleb128 0
 3586 0704 37       		.byte	0x37
 3587 0705 1A       		.byte	0x1a
 3588 0706 24       		.byte	0x24
 3589 0707 9F       		.byte	0x9f
 3590 0708 20000000 		.4byte	.LVL130
 3591 070c 22000000 		.4byte	.LVL131
 3592 0710 0700     		.2byte	0x7
 3593 0712 31       		.byte	0x31
 3594 0713 74       		.byte	0x74
 3595 0714 7F       		.sleb128 -1
 3596 0715 37       		.byte	0x37
 3597 0716 1A       		.byte	0x1a
 3598 0717 24       		.byte	0x24
 3599 0718 9F       		.byte	0x9f
 3600 0719 00000000 		.4byte	0
 3601 071d 00000000 		.4byte	0
 3602              	.LLST45:
 3603 0721 00000000 		.4byte	.LVL133
 3604 0725 06000000 		.4byte	.LVL134
 3605 0729 0100     		.2byte	0x1
 3606 072b 50       		.byte	0x50
 3607 072c 06000000 		.4byte	.LVL134
 3608 0730 08000000 		.4byte	.LVL135
 3609 0734 0400     		.2byte	0x4
 3610 0736 F3       		.byte	0xf3
 3611 0737 01       		.uleb128 0x1
 3612 0738 50       		.byte	0x50
 3613 0739 9F       		.byte	0x9f
 3614 073a 08000000 		.4byte	.LVL135
 3615 073e 10000000 		.4byte	.LVL136
 3616 0742 0100     		.2byte	0x1
 3617 0744 50       		.byte	0x50
 3618 0745 10000000 		.4byte	.LVL136
 3619 0749 12000000 		.4byte	.LVL137
 3620 074d 0400     		.2byte	0x4
 3621 074f F3       		.byte	0xf3
 3622 0750 01       		.uleb128 0x1
 3623 0751 50       		.byte	0x50
 3624 0752 9F       		.byte	0x9f
 3625 0753 12000000 		.4byte	.LVL137
 3626 0757 14000000 		.4byte	.LFE15
 3627 075b 0100     		.2byte	0x1
 3628 075d 50       		.byte	0x50
 3629 075e 00000000 		.4byte	0
 3630 0762 00000000 		.4byte	0
 3631              	.LLST46:
 3632 0766 00000000 		.4byte	.LVL138
 3633 076a 0E000000 		.4byte	.LVL140
 3634 076e 0100     		.2byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 101


 3635 0770 50       		.byte	0x50
 3636 0771 0E000000 		.4byte	.LVL140
 3637 0775 6C000000 		.4byte	.LFE13
 3638 0779 0400     		.2byte	0x4
 3639 077b F3       		.byte	0xf3
 3640 077c 01       		.uleb128 0x1
 3641 077d 50       		.byte	0x50
 3642 077e 9F       		.byte	0x9f
 3643 077f 00000000 		.4byte	0
 3644 0783 00000000 		.4byte	0
 3645              	.LLST47:
 3646 0787 36000000 		.4byte	.LVL144
 3647 078b 40000000 		.4byte	.LVL145
 3648 078f 0100     		.2byte	0x1
 3649 0791 53       		.byte	0x53
 3650 0792 40000000 		.4byte	.LVL145
 3651 0796 44000000 		.4byte	.LVL146
 3652 079a 0900     		.2byte	0x9
 3653 079c 73       		.byte	0x73
 3654 079d 00       		.sleb128 0
 3655 079e 03       		.byte	0x3
 3656 079f 00000000 		.4byte	.LANCHOR0
 3657 07a3 1C       		.byte	0x1c
 3658 07a4 9F       		.byte	0x9f
 3659 07a5 44000000 		.4byte	.LVL146
 3660 07a9 48000000 		.4byte	.LVL147
 3661 07ad 0300     		.2byte	0x3
 3662 07af 75       		.byte	0x75
 3663 07b0 01       		.sleb128 1
 3664 07b1 9F       		.byte	0x9f
 3665 07b2 48000000 		.4byte	.LVL147
 3666 07b6 51000000 		.4byte	.LVL148-1
 3667 07ba 0100     		.2byte	0x1
 3668 07bc 53       		.byte	0x53
 3669 07bd 51000000 		.4byte	.LVL148-1
 3670 07c1 56000000 		.4byte	.LVL149
 3671 07c5 0300     		.2byte	0x3
 3672 07c7 75       		.byte	0x75
 3673 07c8 01       		.sleb128 1
 3674 07c9 9F       		.byte	0x9f
 3675 07ca 00000000 		.4byte	0
 3676 07ce 00000000 		.4byte	0
 3677              	.LLST48:
 3678 07d2 0C000000 		.4byte	.LVL139
 3679 07d6 5A000000 		.4byte	.LVL150
 3680 07da 0100     		.2byte	0x1
 3681 07dc 55       		.byte	0x55
 3682 07dd 5A000000 		.4byte	.LVL150
 3683 07e1 62000000 		.4byte	.LVL151
 3684 07e5 0900     		.2byte	0x9
 3685 07e7 75       		.byte	0x75
 3686 07e8 00       		.sleb128 0
 3687 07e9 03       		.byte	0x3
 3688 07ea 00000000 		.4byte	.LANCHOR0
 3689 07ee 1C       		.byte	0x1c
 3690 07ef 9F       		.byte	0x9f
 3691 07f0 00000000 		.4byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 102


 3692 07f4 00000000 		.4byte	0
 3693              	.LLST49:
 3694 07f8 16000000 		.4byte	.LVL141
 3695 07fc 2D000000 		.4byte	.LVL142-1
 3696 0800 0100     		.2byte	0x1
 3697 0802 50       		.byte	0x50
 3698 0803 56000000 		.4byte	.LVL149
 3699 0807 62000000 		.4byte	.LVL151
 3700 080b 0100     		.2byte	0x1
 3701 080d 50       		.byte	0x50
 3702 080e 00000000 		.4byte	0
 3703 0812 00000000 		.4byte	0
 3704              	.LLST50:
 3705 0816 32000000 		.4byte	.LVL143
 3706 081a 51000000 		.4byte	.LVL148-1
 3707 081e 0100     		.2byte	0x1
 3708 0820 50       		.byte	0x50
 3709 0821 52000000 		.4byte	.LVL148
 3710 0825 56000000 		.4byte	.LVL149
 3711 0829 0100     		.2byte	0x1
 3712 082b 50       		.byte	0x50
 3713 082c 56000000 		.4byte	.LVL149
 3714 0830 62000000 		.4byte	.LVL151
 3715 0834 0300     		.2byte	0x3
 3716 0836 09       		.byte	0x9
 3717 0837 FF       		.byte	0xff
 3718 0838 9F       		.byte	0x9f
 3719 0839 62000000 		.4byte	.LVL151
 3720 083d 6C000000 		.4byte	.LFE13
 3721 0841 0100     		.2byte	0x1
 3722 0843 50       		.byte	0x50
 3723 0844 00000000 		.4byte	0
 3724 0848 00000000 		.4byte	0
 3725              		.section	.debug_aranges,"",%progbits
 3726 0000 94000000 		.4byte	0x94
 3727 0004 0200     		.2byte	0x2
 3728 0006 00000000 		.4byte	.Ldebug_info0
 3729 000a 04       		.byte	0x4
 3730 000b 00       		.byte	0
 3731 000c 0000     		.2byte	0
 3732 000e 0000     		.2byte	0
 3733 0010 00000000 		.4byte	.LFB0
 3734 0014 34000000 		.4byte	.LFE0-.LFB0
 3735 0018 00000000 		.4byte	.LFB1
 3736 001c 18000000 		.4byte	.LFE1-.LFB1
 3737 0020 00000000 		.4byte	.LFB2
 3738 0024 16000000 		.4byte	.LFE2-.LFB2
 3739 0028 00000000 		.4byte	.LFB3
 3740 002c 44000000 		.4byte	.LFE3-.LFB3
 3741 0030 00000000 		.4byte	.LFB6
 3742 0034 84000000 		.4byte	.LFE6-.LFB6
 3743 0038 00000000 		.4byte	.LFB7
 3744 003c 1C000000 		.4byte	.LFE7-.LFB7
 3745 0040 00000000 		.4byte	.LFB8
 3746 0044 1E000000 		.4byte	.LFE8-.LFB8
 3747 0048 00000000 		.4byte	.LFB9
 3748 004c 28000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 103


 3749 0050 00000000 		.4byte	.LFB10
 3750 0054 2C000000 		.4byte	.LFE10-.LFB10
 3751 0058 00000000 		.4byte	.LFB11
 3752 005c 2C000000 		.4byte	.LFE11-.LFB11
 3753 0060 00000000 		.4byte	.LFB12
 3754 0064 B0000000 		.4byte	.LFE12-.LFB12
 3755 0068 00000000 		.4byte	.LFB14
 3756 006c 0C000000 		.4byte	.LFE14-.LFB14
 3757 0070 00000000 		.4byte	.LFB4
 3758 0074 EC000000 		.4byte	.LFE4-.LFB4
 3759 0078 00000000 		.4byte	.LFB5
 3760 007c 2C000000 		.4byte	.LFE5-.LFB5
 3761 0080 00000000 		.4byte	.LFB15
 3762 0084 14000000 		.4byte	.LFE15-.LFB15
 3763 0088 00000000 		.4byte	.LFB13
 3764 008c 6C000000 		.4byte	.LFE13-.LFB13
 3765 0090 00000000 		.4byte	0
 3766 0094 00000000 		.4byte	0
 3767              		.section	.debug_ranges,"",%progbits
 3768              	.Ldebug_ranges0:
 3769 0000 00000000 		.4byte	.LFB0
 3770 0004 34000000 		.4byte	.LFE0
 3771 0008 00000000 		.4byte	.LFB1
 3772 000c 18000000 		.4byte	.LFE1
 3773 0010 00000000 		.4byte	.LFB2
 3774 0014 16000000 		.4byte	.LFE2
 3775 0018 00000000 		.4byte	.LFB3
 3776 001c 44000000 		.4byte	.LFE3
 3777 0020 00000000 		.4byte	.LFB6
 3778 0024 84000000 		.4byte	.LFE6
 3779 0028 00000000 		.4byte	.LFB7
 3780 002c 1C000000 		.4byte	.LFE7
 3781 0030 00000000 		.4byte	.LFB8
 3782 0034 1E000000 		.4byte	.LFE8
 3783 0038 00000000 		.4byte	.LFB9
 3784 003c 28000000 		.4byte	.LFE9
 3785 0040 00000000 		.4byte	.LFB10
 3786 0044 2C000000 		.4byte	.LFE10
 3787 0048 00000000 		.4byte	.LFB11
 3788 004c 2C000000 		.4byte	.LFE11
 3789 0050 00000000 		.4byte	.LFB12
 3790 0054 B0000000 		.4byte	.LFE12
 3791 0058 00000000 		.4byte	.LFB14
 3792 005c 0C000000 		.4byte	.LFE14
 3793 0060 00000000 		.4byte	.LFB4
 3794 0064 EC000000 		.4byte	.LFE4
 3795 0068 00000000 		.4byte	.LFB5
 3796 006c 2C000000 		.4byte	.LFE5
 3797 0070 00000000 		.4byte	.LFB15
 3798 0074 14000000 		.4byte	.LFE15
 3799 0078 00000000 		.4byte	.LFB13
 3800 007c 6C000000 		.4byte	.LFE13
 3801 0080 00000000 		.4byte	0
 3802 0084 00000000 		.4byte	0
 3803              		.section	.debug_line,"",%progbits
 3804              	.Ldebug_line0:
 3805 0000 DE020000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 104


 3805      02007900 
 3805      00000201 
 3805      FB0E0D00 
 3805      01010101 
 3806              	.LASF40:
 3807 0000 636F756E 		.ascii	"count\000"
 3807      7400
 3808              	.LASF60:
 3809 0006 43617053 		.ascii	"CapSense_CSD_GetCentroidPos\000"
 3809      656E7365 
 3809      5F435344 
 3809      5F476574 
 3809      43656E74 
 3810              	.LASF10:
 3811 0022 75696E74 		.ascii	"uint16\000"
 3811      313600
 3812              	.LASF57:
 3813 0029 66696C74 		.ascii	"filteredRawData\000"
 3813      65726564 
 3813      52617744 
 3813      61746100 
 3814              	.LASF27:
 3815 0039 66696E67 		.ascii	"fingerThreshold\000"
 3815      65725468 
 3815      72657368 
 3815      6F6C6400 
 3816              	.LASF19:
 3817 0049 43617053 		.ascii	"CapSense_CSD_InitializeSensorBaseline\000"
 3817      656E7365 
 3817      5F435344 
 3817      5F496E69 
 3817      7469616C 
 3818              	.LASF47:
 3819 006f 706F7350 		.ascii	"posPrev\000"
 3819      72657600 
 3820              	.LASF7:
 3821 0077 6C6F6E67 		.ascii	"long long unsigned int\000"
 3821      206C6F6E 
 3821      6720756E 
 3821      7369676E 
 3821      65642069 
 3822              	.LASF62:
 3823 008e 66697273 		.ascii	"firstTimeIndex\000"
 3823      7454696D 
 3823      65496E64 
 3823      657800
 3824              	.LASF53:
 3825 009d 43617053 		.ascii	"CapSense_CSD_IIR4Filter\000"
 3825      656E7365 
 3825      5F435344 
 3825      5F494952 
 3825      3446696C 
 3826              	.LASF6:
 3827 00b5 6C6F6E67 		.ascii	"long long int\000"
 3827      206C6F6E 
 3827      6720696E 
 3827      7400
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 105


 3828              	.LASF0:
 3829 00c3 7369676E 		.ascii	"signed char\000"
 3829      65642063 
 3829      68617200 
 3830              	.LASF32:
 3831 00cf 72617749 		.ascii	"rawIndex\000"
 3831      6E646578 
 3831      00
 3832              	.LASF33:
 3833 00d8 6E756D62 		.ascii	"numberOfSensors\000"
 3833      65724F66 
 3833      53656E73 
 3833      6F727300 
 3834              	.LASF13:
 3835 00e8 696E7433 		.ascii	"int32\000"
 3835      3200
 3836              	.LASF30:
 3837 00ee 43617053 		.ascii	"CapSense_CSD_CheckIsSensorActive\000"
 3837      656E7365 
 3837      5F435344 
 3837      5F436865 
 3837      636B4973 
 3838              	.LASF34:
 3839 010f 73746174 		.ascii	"state\000"
 3839      6500
 3840              	.LASF4:
 3841 0115 6C6F6E67 		.ascii	"long int\000"
 3841      20696E74 
 3841      00
 3842              	.LASF51:
 3843 011e 6E756D65 		.ascii	"numerator\000"
 3843      7261746F 
 3843      7200
 3844              	.LASF52:
 3845 0128 64656E6F 		.ascii	"denominator\000"
 3845      6D696E61 
 3845      746F7200 
 3846              	.LASF67:
 3847 0134 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 3847      656E7365 
 3847      5F435344 
 3847      5F776964 
 3847      6765744E 
 3848              	.LASF9:
 3849 014e 75696E74 		.ascii	"uint8\000"
 3849      3800
 3850              	.LASF15:
 3851 0154 646F7562 		.ascii	"double\000"
 3851      6C6500
 3852              	.LASF11:
 3853 015b 75696E74 		.ascii	"uint32\000"
 3853      333200
 3854              	.LASF88:
 3855 0162 43617053 		.ascii	"CapSense_CSD_ScanEnabledWidgets\000"
 3855      656E7365 
 3855      5F435344 
 3855      5F536361 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 106


 3855      6E456E61 
 3856              	.LASF28:
 3857 0182 68797374 		.ascii	"hysteresis\000"
 3857      65726573 
 3857      697300
 3858              	.LASF18:
 3859 018d 43617053 		.ascii	"CapSense_CSD_BaseInit\000"
 3859      656E7365 
 3859      5F435344 
 3859      5F426173 
 3859      65496E69 
 3860              	.LASF48:
 3861 01a3 706F734E 		.ascii	"posNext\000"
 3861      65787400 
 3862              	.LASF85:
 3863 01ab 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\GitHub\\fre"
 3863      73657273 
 3863      5C4C756B 
 3863      61732043 
 3863      72657574 
 3864 01d9 65445350 		.ascii	"eDSPPSoC-I2C\\CapSense PSoC5LE.cydsn\000"
 3864      50536F43 
 3864      2D493243 
 3864      5C436170 
 3864      53656E73 
 3865              	.LASF68:
 3866 01fd 43617053 		.ascii	"CapSense_CSD_sensorBaseline\000"
 3866      656E7365 
 3866      5F435344 
 3866      5F73656E 
 3866      736F7242 
 3867              	.LASF43:
 3868 0219 73746172 		.ascii	"startOfSlider\000"
 3868      744F6653 
 3868      6C696465 
 3868      7200
 3869              	.LASF42:
 3870 0227 74656D70 		.ascii	"temp\000"
 3870      00
 3871              	.LASF76:
 3872 022c 43617053 		.ascii	"CapSense_CSD_debounce\000"
 3872      656E7365 
 3872      5F435344 
 3872      5F646562 
 3872      6F756E63 
 3873              	.LASF8:
 3874 0242 756E7369 		.ascii	"unsigned int\000"
 3874      676E6564 
 3874      20696E74 
 3874      00
 3875              	.LASF50:
 3876 024f 706F7369 		.ascii	"position\000"
 3876      74696F6E 
 3876      00
 3877              	.LASF89:
 3878 0258 43617053 		.ascii	"CapSense_CSD_CalculateThresholds\000"
 3878      656E7365 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 107


 3878      5F435344 
 3878      5F43616C 
 3878      63756C61 
 3879              	.LASF5:
 3880 0279 6C6F6E67 		.ascii	"long unsigned int\000"
 3880      20756E73 
 3880      69676E65 
 3880      6420696E 
 3880      7400
 3881              	.LASF70:
 3882 028b 43617053 		.ascii	"CapSense_CSD_sensorSignal\000"
 3882      656E7365 
 3882      5F435344 
 3882      5F73656E 
 3882      736F7253 
 3883              	.LASF49:
 3884 02a5 43617053 		.ascii	"CapSense_CSD_centroid\000"
 3884      656E7365 
 3884      5F435344 
 3884      5F63656E 
 3884      74726F69 
 3885              	.LASF3:
 3886 02bb 73686F72 		.ascii	"short unsigned int\000"
 3886      7420756E 
 3886      7369676E 
 3886      65642069 
 3886      6E7400
 3887              	.LASF20:
 3888 02ce 73656E73 		.ascii	"sensor\000"
 3888      6F7200
 3889              	.LASF44:
 3890 02d5 43617053 		.ascii	"CapSense_CSD_CalcCentroid\000"
 3890      656E7365 
 3890      5F435344 
 3890      5F43616C 
 3890      6343656E 
 3891              	.LASF55:
 3892 02ef 63616C63 		.ascii	"calc\000"
 3892      00
 3893              	.LASF86:
 3894 02f4 43617053 		.ascii	"CapSense_CSD_ScanSensor\000"
 3894      656E7365 
 3894      5F435344 
 3894      5F536361 
 3894      6E53656E 
 3895              	.LASF81:
 3896 030c 43617053 		.ascii	"CapSense_CSD_posFiltersMask\000"
 3896      656E7365 
 3896      5F435344 
 3896      5F706F73 
 3896      46696C74 
 3897              	.LASF61:
 3898 0328 706F7349 		.ascii	"posIndex\000"
 3898      6E646578 
 3898      00
 3899              	.LASF29:
 3900 0331 6465626F 		.ascii	"debounce\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 108


 3900      756E6365 
 3900      00
 3901              	.LASF17:
 3902 033a 73697A65 		.ascii	"sizetype\000"
 3902      74797065 
 3902      00
 3903              	.LASF63:
 3904 0343 706F7346 		.ascii	"posFiltersMask\000"
 3904      696C7465 
 3904      72734D61 
 3904      736B00
 3905              	.LASF22:
 3906 0352 43617053 		.ascii	"CapSense_CSD_InitializeEnabledBaselines\000"
 3906      656E7365 
 3906      5F435344 
 3906      5F496E69 
 3906      7469616C 
 3907              	.LASF78:
 3908 037a 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 3908      656E7365 
 3908      5F435344 
 3908      5F726177 
 3908      44617461 
 3909              	.LASF23:
 3910 0394 656E4D61 		.ascii	"enMask\000"
 3910      736B00
 3911              	.LASF66:
 3912 039b 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 3912      656E7365 
 3912      5F435344 
 3912      5F73656E 
 3912      736F7245 
 3913              	.LASF38:
 3914 03b9 43617053 		.ascii	"CapSense_CSD_FindMaximum\000"
 3914      656E7365 
 3914      5F435344 
 3914      5F46696E 
 3914      644D6178 
 3915              	.LASF59:
 3916 03d2 43617053 		.ascii	"CapSense_CSD_JitterFilter\000"
 3916      656E7365 
 3916      5F435344 
 3916      5F4A6974 
 3916      74657246 
 3917              	.LASF14:
 3918 03ec 666C6F61 		.ascii	"float\000"
 3918      7400
 3919              	.LASF72:
 3920 03f2 43617053 		.ascii	"CapSense_CSD_lowBaselineResetCnt\000"
 3920      656E7365 
 3920      5F435344 
 3920      5F6C6F77 
 3920      42617365 
 3921              	.LASF21:
 3922 0413 43617053 		.ascii	"CapSense_CSD_InitializeAllBaselines\000"
 3922      656E7365 
 3922      5F435344 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 109


 3922      5F496E69 
 3922      7469616C 
 3923              	.LASF73:
 3924 0437 43617053 		.ascii	"CapSense_CSD_fingerThreshold\000"
 3924      656E7365 
 3924      5F435344 
 3924      5F66696E 
 3924      67657254 
 3925              	.LASF1:
 3926 0454 756E7369 		.ascii	"unsigned char\000"
 3926      676E6564 
 3926      20636861 
 3926      7200
 3927              	.LASF46:
 3928 0462 6E6F6973 		.ascii	"noiseThreshold\000"
 3928      65546872 
 3928      6573686F 
 3928      6C6400
 3929              	.LASF2:
 3930 0471 73686F72 		.ascii	"short int\000"
 3930      7420696E 
 3930      7400
 3931              	.LASF26:
 3932 047b 77696467 		.ascii	"widget\000"
 3932      657400
 3933              	.LASF25:
 3934 0482 6F6E4D61 		.ascii	"onMask\000"
 3934      736B00
 3935              	.LASF41:
 3936 0489 6D617869 		.ascii	"maximum\000"
 3936      6D756D00 
 3937              	.LASF87:
 3938 0491 43617053 		.ascii	"CapSense_CSD_IsBusy\000"
 3938      656E7365 
 3938      5F435344 
 3938      5F497342 
 3938      75737900 
 3939              	.LASF64:
 3940 04a5 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 3940      656E7365 
 3940      5F435344 
 3940      5F73656E 
 3940      736F7252 
 3941              	.LASF82:
 3942 04bc 43617053 		.ascii	"CapSense_CSD_posFiltersData\000"
 3942      656E7365 
 3942      5F435344 
 3942      5F706F73 
 3942      46696C74 
 3943              	.LASF54:
 3944 04d8 43617053 		.ascii	"CapSense_CSD_UpdateSensorBaseline\000"
 3944      656E7365 
 3944      5F435344 
 3944      5F557064 
 3944      61746553 
 3945              	.LASF45:
 3946 04fa 7265736F 		.ascii	"resolution\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 110


 3946      6C757469 
 3946      6F6E00
 3947              	.LASF79:
 3948 0505 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 3948      656E7365 
 3948      5F435344 
 3948      5F6E756D 
 3948      6265724F 
 3949              	.LASF74:
 3950 0522 43617053 		.ascii	"CapSense_CSD_noiseThreshold\000"
 3950      656E7365 
 3950      5F435344 
 3950      5F6E6F69 
 3950      73655468 
 3951              	.LASF16:
 3952 053e 63686172 		.ascii	"char\000"
 3952      00
 3953              	.LASF36:
 3954 0543 43617053 		.ascii	"CapSense_CSD_EnableWidget\000"
 3954      656E7365 
 3954      5F435344 
 3954      5F456E61 
 3954      626C6557 
 3955              	.LASF58:
 3956 055d 43617053 		.ascii	"CapSense_CSD_UpdateEnabledBaselines\000"
 3956      656E7365 
 3956      5F435344 
 3956      5F557064 
 3956      61746545 
 3957              	.LASF39:
 3958 0581 6F666673 		.ascii	"offset\000"
 3958      657400
 3959              	.LASF65:
 3960 0588 43617053 		.ascii	"CapSense_CSD_rawFilterData1\000"
 3960      656E7365 
 3960      5F435344 
 3960      5F726177 
 3960      46696C74 
 3961              	.LASF80:
 3962 05a4 43617053 		.ascii	"CapSense_CSD_centroidMult\000"
 3962      656E7365 
 3962      5F435344 
 3962      5F63656E 
 3962      74726F69 
 3963              	.LASF75:
 3964 05be 43617053 		.ascii	"CapSense_CSD_hysteresis\000"
 3964      656E7365 
 3964      5F435344 
 3964      5F687973 
 3964      74657265 
 3965              	.LASF24:
 3966 05d6 6465626F 		.ascii	"debounceIndex\000"
 3966      756E6365 
 3966      496E6465 
 3966      7800
 3967              	.LASF35:
 3968 05e4 43617053 		.ascii	"CapSense_CSD_CheckIsAnyWidgetActive\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 111


 3968      656E7365 
 3968      5F435344 
 3968      5F436865 
 3968      636B4973 
 3969              	.LASF83:
 3970 0608 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3970      4320342E 
 3970      392E3320 
 3970      32303135 
 3970      30333033 
 3971 063b 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3971      20726576 
 3971      6973696F 
 3971      6E203232 
 3971      31323230 
 3972 066e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3972      66756E63 
 3972      74696F6E 
 3972      2D736563 
 3972      74696F6E 
 3973              	.LASF31:
 3974 0696 43617053 		.ascii	"CapSense_CSD_CheckIsWidgetActive\000"
 3974      656E7365 
 3974      5F435344 
 3974      5F436865 
 3974      636B4973 
 3975              	.LASF12:
 3976 06b7 696E7431 		.ascii	"int16\000"
 3976      3600
 3977              	.LASF84:
 3978 06bd 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense_CSD_CSHL.c\000"
 3978      6E657261 
 3978      7465645F 
 3978      536F7572 
 3978      63655C50 
 3979              	.LASF77:
 3980 06ea 43617053 		.ascii	"CapSense_CSD_debounceCounter\000"
 3980      656E7365 
 3980      5F435344 
 3980      5F646562 
 3980      6F756E63 
 3981              	.LASF69:
 3982 0707 43617053 		.ascii	"CapSense_CSD_sensorBaselineLow\000"
 3982      656E7365 
 3982      5F435344 
 3982      5F73656E 
 3982      736F7242 
 3983              	.LASF56:
 3984 0726 74656D70 		.ascii	"tempRaw\000"
 3984      52617700 
 3985              	.LASF37:
 3986 072e 43617053 		.ascii	"CapSense_CSD_DisableWidget\000"
 3986      656E7365 
 3986      5F435344 
 3986      5F446973 
 3986      61626C65 
 3987              	.LASF71:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccKrJm2d.s 			page 112


 3988 0749 43617053 		.ascii	"CapSense_CSD_sensorOnMask\000"
 3988      656E7365 
 3988      5F435344 
 3988      5F73656E 
 3988      736F724F 
 3989              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
