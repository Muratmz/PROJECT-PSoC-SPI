ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSD_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_CSD_rawFilterData1,26,4
  18              		.global	CapSense_CSD_sensorBaseline
  19              		.bss
  20              		.align	2
  21              		.type	CapSense_CSD_sensorBaseline, %object
  22              		.size	CapSense_CSD_sensorBaseline, 26
  23              	CapSense_CSD_sensorBaseline:
  24 0000 00000000 		.space	26
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              		.global	CapSense_CSD_sensorBaselineLow
  26 001a 0000     		.align	2
  27              		.type	CapSense_CSD_sensorBaselineLow, %object
  28              		.size	CapSense_CSD_sensorBaselineLow, 13
  29              	CapSense_CSD_sensorBaselineLow:
  30 001c 00000000 		.space	13
  30      00000000 
  30      00000000 
  30      00
  31              		.global	CapSense_CSD_sensorSignal
  32 0029 000000   		.align	2
  33              		.type	CapSense_CSD_sensorSignal, %object
  34              		.size	CapSense_CSD_sensorSignal, 13
  35              	CapSense_CSD_sensorSignal:
  36 002c 00000000 		.space	13
  36      00000000 
  36      00000000 
  36      00
  37              		.global	CapSense_CSD_sensorOnMask
  38 0039 000000   		.align	2
  39              		.type	CapSense_CSD_sensorOnMask, %object
  40              		.size	CapSense_CSD_sensorOnMask, 2
  41              	CapSense_CSD_sensorOnMask:
  42 003c 0000     		.space	2
  43              		.comm	CapSense_CSD_lowBaselineResetCnt,13,4
  44              		.global	CapSense_CSD_lowBaselineReset
  45              		.data
  46              		.align	2
  47              		.type	CapSense_CSD_lowBaselineReset, %object
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 2


  48              		.size	CapSense_CSD_lowBaselineReset, 13
  49              	CapSense_CSD_lowBaselineReset:
  50 0000 1E       		.byte	30
  51 0001 1E       		.byte	30
  52 0002 1E       		.byte	30
  53 0003 1E       		.byte	30
  54 0004 1E       		.byte	30
  55 0005 1E       		.byte	30
  56 0006 1E       		.byte	30
  57 0007 1E       		.byte	30
  58 0008 1E       		.byte	30
  59 0009 1E       		.byte	30
  60 000a 1E       		.byte	30
  61 000b 1E       		.byte	30
  62 000c 1E       		.byte	30
  63              		.global	CapSense_CSD_enableRawFilters
  64              		.type	CapSense_CSD_enableRawFilters, %object
  65              		.size	CapSense_CSD_enableRawFilters, 1
  66              	CapSense_CSD_enableRawFilters:
  67 000d 01       		.byte	1
  68              		.comm	CapSense_CSD_fingerThreshold,2,4
  69              		.comm	CapSense_CSD_noiseThreshold,2,4
  70              		.comm	CapSense_CSD_negativeNoiseThreshold,2,4
  71              		.comm	CapSense_CSD_hysteresis,2,4
  72              		.global	CapSense_CSD_debounce
  73 000e 0000     		.align	2
  74              		.type	CapSense_CSD_debounce, %object
  75              		.size	CapSense_CSD_debounce, 2
  76              	CapSense_CSD_debounce:
  77 0010 01       		.byte	1
  78 0011 05       		.byte	5
  79              		.bss
  80 003e 0000     		.align	2
  81              	CapSense_CSD_debounceCounter:
  82 0040 0000     		.space	2
  83              		.global	CapSense_CSD_rawDataIndex
  84              		.section	.rodata
  85              		.align	2
  86              		.type	CapSense_CSD_rawDataIndex, %object
  87              		.size	CapSense_CSD_rawDataIndex, 2
  88              	CapSense_CSD_rawDataIndex:
  89 0000 00       		.byte	0
  90 0001 0C       		.byte	12
  91              		.global	CapSense_CSD_numberOfSensors
  92 0002 0000     		.align	2
  93              		.type	CapSense_CSD_numberOfSensors, %object
  94              		.size	CapSense_CSD_numberOfSensors, 2
  95              	CapSense_CSD_numberOfSensors:
  96 0004 0C       		.byte	12
  97 0005 01       		.byte	1
  98 0006 0000     		.align	2
  99              		.type	CapSense_CSD_centroidMult, %object
 100              		.size	CapSense_CSD_centroidMult, 2
 101              	CapSense_CSD_centroidMult:
 102 0008 8B0B     		.short	2955
 103 000a 0000     		.data
 104 0012 0000     		.align	2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 3


 105              		.type	CapSense_CSD_posFiltersMask, %object
 106              		.size	CapSense_CSD_posFiltersMask, 1
 107              	CapSense_CSD_posFiltersMask:
 108 0014 10       		.byte	16
 109 0015 000000   		.align	2
 110              		.type	CapSense_CSD_posFiltersData, %object
 111              		.size	CapSense_CSD_posFiltersData, 3
 112              	CapSense_CSD_posFiltersData:
 113 0018 01       		.byte	1
 114 0019 00       		.byte	0
 115 001a 00       		.byte	0
 116 001b 00       		.section	.text.CapSense_CSD_BaseInit,"ax",%progbits
 117              		.align	2
 118              		.global	CapSense_CSD_BaseInit
 119              		.code	16
 120              		.thumb_func
 121              		.type	CapSense_CSD_BaseInit, %function
 122              	CapSense_CSD_BaseInit:
 123              	.LFB34:
 124              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSD_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * File Name: CapSense_CSD_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern void CapSense_CSD_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData2[CapSense_CSD_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  33:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #elif ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)) )
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 4


  38:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  39:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         *    (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern uint8 CapSense_CSD_sensorEnableMask[CapSense_CSD_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern const uint8 CapSense_CSD_widgetNumber[CapSense_CSD_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern uint32 CapSense_CSD_widgetResolution[CapSense_CSD_RESOLUTIONS_TBL_SIZE];
  50:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorBaseline[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorBaselineLow[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorSignal[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorOnMask[CapSense_CSD_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineResetCnt[CapSense_CSD_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineReset[CapSense_CSD_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern CapSense_CSD_CONFIG_TYPE_P4_v2_40 CapSense_CSD_config;
  66:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* (CapSense_CSD_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_fingerThreshold[CapSense_CSD_THRESHOLD_TBL_SIZE];
  74:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  75:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_noiseThreshold[CapSense_CSD_THRESHOLD_TBL_SIZE];
  76:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_negativeNoiseThreshold[CapSense_CSD_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_hysteresis[CapSense_CSD_WIDGET_PARAM_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounce[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, 5u, 
  83:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** static uint8 CapSense_CSD_debounceCounter[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0u, 0u, 
  87:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_rawDataIndex[] = {
  90:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0u, /* LinearSlider0__LS */
  91:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     12u, /* GuardSensor__GRD */
  92:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  93:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  94:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_numberOfSensors[] = {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 5


  95:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     12u, /* LinearSlider0__LS */
  96:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, /* GuardSensor__GRD */
  97:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  98:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  99:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** static const uint16 CapSense_CSD_centroidMult[] = {
 100:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     2955u, 
 101:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
 102:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 103:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** static uint8 CapSense_CSD_posFiltersMask[] = {
 104:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0x10u, 
 105:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
 106:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 107:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** static uint8 CapSense_CSD_posFiltersData[] = {
 108:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, 0u, 0u, 
 109:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
 110:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 111:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 112:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 113:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 114:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 115:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_BaseInit
 116:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 117:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 118:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 119:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an
 120:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value which is equal to the raw count value.
 121:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Resets to zero CapSense_CSD_sensorBaselineLow[sensor] and
 122:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[sensor] array element.
 123:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_rawFilterData2[sensor] and
 124:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[sensor] array element with an
 125:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 126:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 127:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 128:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 129:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 130:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 131:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 132:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 133:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 134:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store the baseline value.
 135:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store the fraction byte of
 136:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the baseline value.
 137:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store a difference between
 138:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 139:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store a previous sample of
 140:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 141:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before a previous sample
 142:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 143:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 144:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 145:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 146:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 147:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 148:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_BaseInit(uint32 sensor)
 149:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 125              		.loc 1 149 0
 126              		.cfi_startproc
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 6


 127 0000 80B5     		push	{r7, lr}
 128              		.cfi_def_cfa_offset 8
 129              		.cfi_offset 7, -8
 130              		.cfi_offset 14, -4
 131 0002 84B0     		sub	sp, sp, #16
 132              		.cfi_def_cfa_offset 24
 133 0004 00AF     		add	r7, sp, #0
 134              		.cfi_def_cfa_register 7
 135 0006 7860     		str	r0, [r7, #4]
 150:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_TOTAL_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || \
 151:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****          (CapSense_CSD_TOTAL_GENERICS_COUNT))
 152:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 widget = CapSense_CSD_widgetNumber[sensor];
 136              		.loc 1 152 0
 137 0008 0F23     		mov	r3, #15
 138 000a FB18     		add	r3, r7, r3
 139 000c 1849     		ldr	r1, .L3
 140 000e 7A68     		ldr	r2, [r7, #4]
 141 0010 8A18     		add	r2, r1, r2
 142 0012 1278     		ldrb	r2, [r2]
 143 0014 1A70     		strb	r2, [r3]
 153:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* ((CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUN
 154:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 155:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)
 156:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 debounceIndex;
 157:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) */
 158:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 159:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 160:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 161:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 162:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 163:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 164:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 165:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Initialize Baseline */
 166:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = CapSense_CSD_sensorRaw[sensor];
 144              		.loc 1 166 0
 145 0016 174B     		ldr	r3, .L3+4
 146 0018 7A68     		ldr	r2, [r7, #4]
 147 001a 5200     		lsl	r2, r2, #1
 148 001c D15A     		ldrh	r1, [r2, r3]
 149 001e 164B     		ldr	r3, .L3+8
 150 0020 7A68     		ldr	r2, [r7, #4]
 151 0022 5200     		lsl	r2, r2, #1
 152 0024 D152     		strh	r1, [r2, r3]
 167:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaselineLow[sensor] = 0u;
 153              		.loc 1 167 0
 154 0026 154A     		ldr	r2, .L3+12
 155 0028 7B68     		ldr	r3, [r7, #4]
 156 002a D318     		add	r3, r2, r3
 157 002c 0022     		mov	r2, #0
 158 002e 1A70     		strb	r2, [r3]
 168:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = 0u;
 159              		.loc 1 168 0
 160 0030 134A     		ldr	r2, .L3+16
 161 0032 7B68     		ldr	r3, [r7, #4]
 162 0034 D318     		add	r3, r2, r3
 163 0036 0022     		mov	r2, #0
 164 0038 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 7


 169:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 170:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if(widget > CapSense_CSD_END_OF_TOUCH_PAD_INDEX)
 165              		.loc 1 170 0
 166 003a 0F23     		mov	r3, #15
 167 003c FB18     		add	r3, r7, r3
 168 003e 1B78     		ldrb	r3, [r3]
 169 0040 002B     		cmp	r3, #0
 170 0042 0AD0     		beq	.L2
 171:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 172:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_debounceCounter[widget - (CapSense_CSD_END_OF_TOUCH_PAD_INDEX + 1u)] =  CapSen
 171              		.loc 1 172 0
 172 0044 0F23     		mov	r3, #15
 173 0046 FB18     		add	r3, r7, r3
 174 0048 1B78     		ldrb	r3, [r3]
 175 004a 013B     		sub	r3, r3, #1
 176 004c 0F22     		mov	r2, #15
 177 004e BA18     		add	r2, r7, r2
 178 0050 1278     		ldrb	r2, [r2]
 179 0052 0C49     		ldr	r1, .L3+20
 180 0054 895C     		ldrb	r1, [r1, r2]
 181 0056 0C4A     		ldr	r2, .L3+24
 182 0058 D154     		strb	r1, [r2, r3]
 183              	.L2:
 173:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 174:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 175:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 176:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if ((0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) ||\
 177:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****          (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)))
 178:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 179:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 180:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_sensorRaw[sensor];
 181:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 182:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #elif ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) ||\
 183:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) ||\
 184:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) ||\
 185:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER) ||\
 186:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
 187:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 188:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 184              		.loc 1 188 0
 185 005a 064B     		ldr	r3, .L3+4
 186 005c 7A68     		ldr	r2, [r7, #4]
 187 005e 5200     		lsl	r2, r2, #1
 188 0060 D15A     		ldrh	r1, [r2, r3]
 189 0062 0A4B     		ldr	r3, .L3+28
 190 0064 7A68     		ldr	r2, [r7, #4]
 191 0066 5200     		lsl	r2, r2, #1
 192 0068 D152     		strh	r1, [r2, r3]
 189:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 190:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
 191:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 192:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
 193:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             *   (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 194:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             */
 195:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 196:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 197:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 8


 198:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 199:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 200:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 193              		.loc 1 200 0
 194 006a BD46     		mov	sp, r7
 195 006c 04B0     		add	sp, sp, #16
 196              		@ sp needed
 197 006e 80BD     		pop	{r7, pc}
 198              	.L4:
 199              		.align	2
 200              	.L3:
 201 0070 00000000 		.word	CapSense_CSD_widgetNumber
 202 0074 00000000 		.word	CapSense_CSD_sensorRaw
 203 0078 00000000 		.word	CapSense_CSD_sensorBaseline
 204 007c 00000000 		.word	CapSense_CSD_sensorBaselineLow
 205 0080 00000000 		.word	CapSense_CSD_sensorSignal
 206 0084 00000000 		.word	CapSense_CSD_debounce
 207 0088 40000000 		.word	CapSense_CSD_debounceCounter
 208 008c 00000000 		.word	CapSense_CSD_rawFilterData1
 209              		.cfi_endproc
 210              	.LFE34:
 211              		.size	CapSense_CSD_BaseInit, .-CapSense_CSD_BaseInit
 212              		.section	.text.CapSense_CSD_InitializeSensorBaseline,"ax",%progbits
 213              		.align	2
 214              		.global	CapSense_CSD_InitializeSensorBaseline
 215              		.code	16
 216              		.thumb_func
 217              		.type	CapSense_CSD_InitializeSensorBaseline, %function
 218              	CapSense_CSD_InitializeSensorBaseline:
 219              	.LFB35:
 201:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 202:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 203:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 204:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeSensorBaseline
 205:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 206:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 207:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 208:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an
 209:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 210:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 211:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 212:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  enabled.
 213:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 214:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 215:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 216:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 217:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 218:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 219:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 220:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 221:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 222:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 223:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 224:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 225:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 226:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeSensorBaseline(uint32 sensor)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 9


 228:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 220              		.loc 1 228 0
 221              		.cfi_startproc
 222 0000 80B5     		push	{r7, lr}
 223              		.cfi_def_cfa_offset 8
 224              		.cfi_offset 7, -8
 225              		.cfi_offset 14, -4
 226 0002 82B0     		sub	sp, sp, #8
 227              		.cfi_def_cfa_offset 16
 228 0004 00AF     		add	r7, sp, #0
 229              		.cfi_def_cfa_register 7
 230 0006 7860     		str	r0, [r7, #4]
 229:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Scan sensor */
 230:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanSensor(sensor);
 231              		.loc 1 230 0
 232 0008 7B68     		ldr	r3, [r7, #4]
 233 000a 181C     		mov	r0, r3
 234 000c FFF7FEFF 		bl	CapSense_CSD_ScanSensor
 231:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 235              		.loc 1 231 0
 236 0010 C046     		mov	r8, r8
 237              	.L6:
 238              		.loc 1 231 0 is_stmt 0 discriminator 1
 239 0012 FFF7FEFF 		bl	CapSense_CSD_IsBusy
 240 0016 031E     		sub	r3, r0, #0
 241 0018 FBD1     		bne	.L6
 232:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 233:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Wait while sensor is busy */
 234:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 235:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 236:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 237:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_BaseInit(sensor);
 242              		.loc 1 237 0 is_stmt 1
 243 001a 7B68     		ldr	r3, [r7, #4]
 244 001c 181C     		mov	r0, r3
 245 001e FFF7FEFF 		bl	CapSense_CSD_BaseInit
 238:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 246              		.loc 1 238 0
 247 0022 BD46     		mov	sp, r7
 248 0024 02B0     		add	sp, sp, #8
 249              		@ sp needed
 250 0026 80BD     		pop	{r7, pc}
 251              		.cfi_endproc
 252              	.LFE35:
 253              		.size	CapSense_CSD_InitializeSensorBaseline, .-CapSense_CSD_InitializeSensorBaseline
 254              		.section	.text.CapSense_CSD_InitializeAllBaselines,"ax",%progbits
 255              		.align	2
 256              		.global	CapSense_CSD_InitializeAllBaselines
 257              		.code	16
 258              		.thumb_func
 259              		.type	CapSense_CSD_InitializeAllBaselines, %function
 260              	CapSense_CSD_InitializeAllBaselines:
 261              	.LFB36:
 239:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 240:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 241:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 242:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeAllBaselines
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 10


 243:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 244:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 245:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 246:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Uses the CapSense_CSD_InitializeSensorBaseline function to load the
 247:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] array with an initial values by scanning
 248:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 249:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 250:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 251:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 252:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 253:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 254:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 255:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 256:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 257:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 258:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 259:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 260:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 261:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 262:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 263:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 264:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeAllBaselines(void)
 265:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 262              		.loc 1 265 0
 263              		.cfi_startproc
 264 0000 80B5     		push	{r7, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 82B0     		sub	sp, sp, #8
 269              		.cfi_def_cfa_offset 16
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 266:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 267:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 268:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 272              		.loc 1 268 0
 273 0006 0023     		mov	r3, #0
 274 0008 7B60     		str	r3, [r7, #4]
 275 000a 06E0     		b	.L8
 276              	.L9:
 269:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 270:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_InitializeSensorBaseline(i);
 277              		.loc 1 270 0 discriminator 3
 278 000c 7B68     		ldr	r3, [r7, #4]
 279 000e 181C     		mov	r0, r3
 280 0010 FFF7FEFF 		bl	CapSense_CSD_InitializeSensorBaseline
 268:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 281              		.loc 1 268 0 discriminator 3
 282 0014 7B68     		ldr	r3, [r7, #4]
 283 0016 0133     		add	r3, r3, #1
 284 0018 7B60     		str	r3, [r7, #4]
 285              	.L8:
 268:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 286              		.loc 1 268 0 is_stmt 0 discriminator 1
 287 001a 7B68     		ldr	r3, [r7, #4]
 288 001c 0C2B     		cmp	r3, #12
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 11


 289 001e F5D9     		bls	.L9
 271:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 272:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 290              		.loc 1 272 0 is_stmt 1
 291 0020 BD46     		mov	sp, r7
 292 0022 02B0     		add	sp, sp, #8
 293              		@ sp needed
 294 0024 80BD     		pop	{r7, pc}
 295              		.cfi_endproc
 296              	.LFE36:
 297              		.size	CapSense_CSD_InitializeAllBaselines, .-CapSense_CSD_InitializeAllBaselines
 298 0026 C046     		.section	.text.CapSense_CSD_InitializeEnabledBaselines,"ax",%progbits
 299              		.align	2
 300              		.global	CapSense_CSD_InitializeEnabledBaselines
 301              		.code	16
 302              		.thumb_func
 303              		.type	CapSense_CSD_InitializeEnabledBaselines, %function
 304              	CapSense_CSD_InitializeEnabledBaselines:
 305              	.LFB37:
 273:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 274:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 275:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 276:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeEnabledBaselines
 277:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 278:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 279:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 280:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 281:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 282:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 283:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  The raw data filters are initialized if enabled.
 284:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 285:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 286:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 287:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 288:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 289:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 290:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 291:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 292:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorRaw[] - used to store the sensors raw data.
 293:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 294:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 295:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 296:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 297:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 298:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 299:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeEnabledBaselines(void)
 300:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 306              		.loc 1 300 0
 307              		.cfi_startproc
 308 0000 80B5     		push	{r7, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 7, -8
 311              		.cfi_offset 14, -4
 312 0002 82B0     		sub	sp, sp, #8
 313              		.cfi_def_cfa_offset 16
 314 0004 00AF     		add	r7, sp, #0
 315              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 12


 301:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 302:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 303:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 304:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanEnabledWidgets();
 316              		.loc 1 304 0
 317 0006 FFF7FEFF 		bl	CapSense_CSD_ScanEnabledWidgets
 305:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 318              		.loc 1 305 0
 319 000a C046     		mov	r8, r8
 320              	.L11:
 321              		.loc 1 305 0 is_stmt 0 discriminator 1
 322 000c FFF7FEFF 		bl	CapSense_CSD_IsBusy
 323 0010 031E     		sub	r3, r0, #0
 324 0012 FBD1     		bne	.L11
 306:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 307:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Wait while sensor is busy */
 308:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 309:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 310:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 325              		.loc 1 310 0 is_stmt 1
 326 0014 0023     		mov	r3, #0
 327 0016 7B60     		str	r3, [r7, #4]
 328 0018 11E0     		b	.L12
 329              	.L14:
 311:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 312:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 330              		.loc 1 312 0
 331 001a 0C4A     		ldr	r2, .L15
 332 001c 7B68     		ldr	r3, [r7, #4]
 333 001e 101C     		mov	r0, r2
 334 0020 191C     		mov	r1, r3
 335 0022 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 336 0026 031C     		mov	r3, r0
 337 0028 3B60     		str	r3, [r7]
 313:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 314:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 315:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(isSensorEnabled != 0u)
 338              		.loc 1 315 0
 339 002a 3B68     		ldr	r3, [r7]
 340 002c 002B     		cmp	r3, #0
 341 002e 03D0     		beq	.L13
 316:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 317:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Initialize baselines */
 318:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(i);
 342              		.loc 1 318 0
 343 0030 7B68     		ldr	r3, [r7, #4]
 344 0032 181C     		mov	r0, r3
 345 0034 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 346              	.L13:
 310:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 347              		.loc 1 310 0 discriminator 2
 348 0038 7B68     		ldr	r3, [r7, #4]
 349 003a 0133     		add	r3, r3, #1
 350 003c 7B60     		str	r3, [r7, #4]
 351              	.L12:
 310:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 352              		.loc 1 310 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 13


 353 003e 7B68     		ldr	r3, [r7, #4]
 354 0040 0C2B     		cmp	r3, #12
 355 0042 EAD9     		bls	.L14
 319:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 320:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 321:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 356              		.loc 1 321 0 is_stmt 1
 357 0044 BD46     		mov	sp, r7
 358 0046 02B0     		add	sp, sp, #8
 359              		@ sp needed
 360 0048 80BD     		pop	{r7, pc}
 361              	.L16:
 362 004a C046     		.align	2
 363              	.L15:
 364 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 365              		.cfi_endproc
 366              	.LFE37:
 367              		.size	CapSense_CSD_InitializeEnabledBaselines, .-CapSense_CSD_InitializeEnabledBaselines
 368              		.section	.text.CapSense_CSD_UpdateBaselineNoThreshold,"ax",%progbits
 369              		.align	2
 370              		.global	CapSense_CSD_UpdateBaselineNoThreshold
 371              		.code	16
 372              		.thumb_func
 373              		.type	CapSense_CSD_UpdateBaselineNoThreshold, %function
 374              	CapSense_CSD_UpdateBaselineNoThreshold:
 375              	.LFB38:
 322:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 323:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 324:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 325:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateBaselineNoThreshold
 326:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 327:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 328:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 329:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the
 330:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 331:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 332:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_sensorSignal[sensor].
 333:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 334:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 335:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 336:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  than noise threshold.
 337:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 338:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  calculation.
 339:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 340:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 341:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 342:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 343:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 344:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 345:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 346:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 347:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 348:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 349:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
 350:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 351:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of
 352:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline value.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 14


 353:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store difference between
 354:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 355:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of
 356:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 357:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 358:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 359:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 360:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 361:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 362:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 363:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 364:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_UpdateBaselineNoThreshold(uint32 sensor)
 365:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 376              		.loc 1 365 0
 377              		.cfi_startproc
 378 0000 90B5     		push	{r4, r7, lr}
 379              		.cfi_def_cfa_offset 12
 380              		.cfi_offset 4, -12
 381              		.cfi_offset 7, -8
 382              		.cfi_offset 14, -4
 383 0002 87B0     		sub	sp, sp, #28
 384              		.cfi_def_cfa_offset 40
 385 0004 00AF     		add	r7, sp, #0
 386              		.cfi_def_cfa_register 7
 387 0006 7860     		str	r0, [r7, #4]
 366:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 calc;
 367:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 sign;
 368:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 tempRaw;
 369:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 filteredRawData;
 370:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 388              		.loc 1 370 0
 389 0008 0F23     		mov	r3, #15
 390 000a FB18     		add	r3, r7, r3
 391 000c 7E49     		ldr	r1, .L30
 392 000e 7A68     		ldr	r2, [r7, #4]
 393 0010 8A18     		add	r2, r1, r2
 394 0012 1278     		ldrb	r2, [r2]
 395 0014 1A70     		strb	r2, [r3]
 371:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 noiseThreshold;
 372:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 373:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 374:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 375:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 376:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 377:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 378:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 379:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     noiseThreshold = CapSense_CSD_noiseThreshold[widget];
 396              		.loc 1 379 0
 397 0016 0F23     		mov	r3, #15
 398 0018 FB18     		add	r3, r7, r3
 399 001a 1A78     		ldrb	r2, [r3]
 400 001c 0E23     		mov	r3, #14
 401 001e FB18     		add	r3, r7, r3
 402 0020 7A49     		ldr	r1, .L30+4
 403 0022 8A5C     		ldrb	r2, [r1, r2]
 404 0024 1A70     		strb	r2, [r3]
 380:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     filteredRawData = CapSense_CSD_sensorRaw[sensor];
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 15


 405              		.loc 1 380 0
 406 0026 1023     		mov	r3, #16
 407 0028 FB18     		add	r3, r7, r3
 408 002a 794A     		ldr	r2, .L30+8
 409 002c 7968     		ldr	r1, [r7, #4]
 410 002e 4900     		lsl	r1, r1, #1
 411 0030 8A5A     		ldrh	r2, [r1, r2]
 412 0032 1A80     		strh	r2, [r3]
 381:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 382:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
 383:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if(CapSense_CSD_enableRawFilters != 0u)
 413              		.loc 1 383 0
 414 0034 774B     		ldr	r3, .L30+12
 415 0036 1B78     		ldrb	r3, [r3]
 416 0038 002B     		cmp	r3, #0
 417 003a 15D0     		beq	.L18
 384:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 385:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)
 386:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tempRaw = filteredRawData;
 387:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_MedianFilter(filteredRawData, CapSense_CSD_rawFilterData
 388:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                             CapSense_CSD_rawFilterData2[sensor]);
 389:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 390:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 391:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 392:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)
 393:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tempRaw = filteredRawData;
 394:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_AveragingFilter(filteredRawData, CapSense_CSD_rawFilterD
 395:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                CapSense_CSD_rawFilterData2[sensor])
 396:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 397:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 398:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 399:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)
 400:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR2Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 401:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 402:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 403:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)
 404:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR4Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 418              		.loc 1 404 0
 419 003c 764B     		ldr	r3, .L30+16
 420 003e 7A68     		ldr	r2, [r7, #4]
 421 0040 5200     		lsl	r2, r2, #1
 422 0042 D25A     		ldrh	r2, [r2, r3]
 423 0044 1023     		mov	r3, #16
 424 0046 FC18     		add	r4, r7, r3
 425 0048 1023     		mov	r3, #16
 426 004a FB18     		add	r3, r7, r3
 427 004c 1B88     		ldrh	r3, [r3]
 428 004e 181C     		mov	r0, r3
 429 0050 111C     		mov	r1, r2
 430 0052 FFF7FEFF 		bl	CapSense_CSD_IIR4Filter
 431 0056 031C     		mov	r3, r0
 432 0058 2380     		strh	r3, [r4]
 405:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 433              		.loc 1 405 0
 434 005a 6F4B     		ldr	r3, .L30+16
 435 005c 7A68     		ldr	r2, [r7, #4]
 436 005e 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 16


 437 0060 1021     		mov	r1, #16
 438 0062 7918     		add	r1, r7, r1
 439 0064 0988     		ldrh	r1, [r1]
 440 0066 D152     		strh	r1, [r2, r3]
 441              	.L18:
 406:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 407:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)
 408:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_JitterFilter(filteredRawData, CapSense_CSD_rawFilterData
 409:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 410:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 411:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)
 412:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR8Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 413:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 414:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 415:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)
 416:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR16Filter(filteredRawData, CapSense_CSD_rawFilterData1
 417:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 418:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 419:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 420:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* No Raw filters */
 421:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) */
 422:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 423:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_RAW_FILTER_MASK != 0u) */
 424:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 425:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 426:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_40(&CapSense_CSD_config, (uint8)sensor, CapSense_CSD_sensorRaw);
 442              		.loc 1 426 0
 443 0068 7B68     		ldr	r3, [r7, #4]
 444 006a DAB2     		uxtb	r2, r3
 445 006c 6B49     		ldr	r1, .L30+20
 446 006e 684B     		ldr	r3, .L30+8
 447 0070 081C     		mov	r0, r1
 448 0072 111C     		mov	r1, r2
 449 0074 1A1C     		mov	r2, r3
 450 0076 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_40
 427:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 428:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 429:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Baseline calculation */
 430:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 431:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if(filteredRawData >= CapSense_CSD_sensorBaseline[sensor])
 451              		.loc 1 431 0
 452 007a 694B     		ldr	r3, .L30+24
 453 007c 7A68     		ldr	r2, [r7, #4]
 454 007e 5200     		lsl	r2, r2, #1
 455 0080 D35A     		ldrh	r3, [r2, r3]
 456 0082 1022     		mov	r2, #16
 457 0084 BA18     		add	r2, r7, r2
 458 0086 1288     		ldrh	r2, [r2]
 459 0088 9A42     		cmp	r2, r3
 460 008a 12D3     		bcc	.L19
 432:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 433:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 461              		.loc 1 433 0
 462 008c 654A     		ldr	r2, .L30+28
 463 008e 7B68     		ldr	r3, [r7, #4]
 464 0090 D318     		add	r3, r2, r3
 465 0092 0022     		mov	r2, #0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 17


 466 0094 1A70     		strb	r2, [r3]
 434:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData - CapSense_CSD_sensorBaseline[sensor];
 467              		.loc 1 434 0
 468 0096 624B     		ldr	r3, .L30+24
 469 0098 7A68     		ldr	r2, [r7, #4]
 470 009a 5200     		lsl	r2, r2, #1
 471 009c D25A     		ldrh	r2, [r2, r3]
 472 009e 1223     		mov	r3, #18
 473 00a0 FB18     		add	r3, r7, r3
 474 00a2 1021     		mov	r1, #16
 475 00a4 7918     		add	r1, r7, r1
 476 00a6 0988     		ldrh	r1, [r1]
 477 00a8 8A1A     		sub	r2, r1, r2
 478 00aa 1A80     		strh	r2, [r3]
 435:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 479              		.loc 1 435 0
 480 00ac 0123     		mov	r3, #1
 481 00ae 7B61     		str	r3, [r7, #20]
 482 00b0 0CE0     		b	.L20
 483              	.L19:
 436:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 437:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 438:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 439:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = CapSense_CSD_sensorBaseline[sensor] - filteredRawData;
 484              		.loc 1 439 0
 485 00b2 5B4B     		ldr	r3, .L30+24
 486 00b4 7A68     		ldr	r2, [r7, #4]
 487 00b6 5200     		lsl	r2, r2, #1
 488 00b8 D15A     		ldrh	r1, [r2, r3]
 489 00ba 1223     		mov	r3, #18
 490 00bc FB18     		add	r3, r7, r3
 491 00be 1022     		mov	r2, #16
 492 00c0 BA18     		add	r2, r7, r2
 493 00c2 1288     		ldrh	r2, [r2]
 494 00c4 8A1A     		sub	r2, r1, r2
 495 00c6 1A80     		strh	r2, [r3]
 440:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 496              		.loc 1 440 0
 497 00c8 0023     		mov	r3, #0
 498 00ca 7B61     		str	r3, [r7, #20]
 499              	.L20:
 441:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 442:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 443:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 444:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_CSD_negativeNoiseThreshold[widget]))
 500              		.loc 1 444 0
 501 00cc 7B69     		ldr	r3, [r7, #20]
 502 00ce 002B     		cmp	r3, #0
 503 00d0 2AD1     		bne	.L21
 504              		.loc 1 444 0 is_stmt 0 discriminator 1
 505 00d2 0F23     		mov	r3, #15
 506 00d4 FB18     		add	r3, r7, r3
 507 00d6 1B78     		ldrb	r3, [r3]
 508 00d8 534A     		ldr	r2, .L30+32
 509 00da D35C     		ldrb	r3, [r2, r3]
 510 00dc 9BB2     		uxth	r3, r3
 511 00de 1222     		mov	r2, #18
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 18


 512 00e0 BA18     		add	r2, r7, r2
 513 00e2 1288     		ldrh	r2, [r2]
 514 00e4 9A42     		cmp	r2, r3
 515 00e6 1FD9     		bls	.L21
 445:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
 446:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD))
 447:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 448:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 449:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_lowBaselineReset[sensor])
 516              		.loc 1 449 0 is_stmt 1
 517 00e8 4E4A     		ldr	r2, .L30+28
 518 00ea 7B68     		ldr	r3, [r7, #4]
 519 00ec D318     		add	r3, r2, r3
 520 00ee 1A78     		ldrb	r2, [r3]
 521 00f0 4E49     		ldr	r1, .L30+36
 522 00f2 7B68     		ldr	r3, [r7, #4]
 523 00f4 CB18     		add	r3, r1, r3
 524 00f6 1B78     		ldrb	r3, [r3]
 525 00f8 9A42     		cmp	r2, r3
 526 00fa 09D3     		bcc	.L22
 450:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 451:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 527              		.loc 1 451 0
 528 00fc 7B68     		ldr	r3, [r7, #4]
 529 00fe 181C     		mov	r0, r3
 530 0100 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 452:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 531              		.loc 1 452 0
 532 0104 474A     		ldr	r2, .L30+28
 533 0106 7B68     		ldr	r3, [r7, #4]
 534 0108 D318     		add	r3, r2, r3
 535 010a 0022     		mov	r2, #0
 536 010c 1A70     		strb	r2, [r3]
 449:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 537              		.loc 1 449 0
 538 010e 51E0     		b	.L24
 539              	.L22:
 453:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 454:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
 455:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 456:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor]++;
 540              		.loc 1 456 0
 541 0110 444A     		ldr	r2, .L30+28
 542 0112 7B68     		ldr	r3, [r7, #4]
 543 0114 D318     		add	r3, r2, r3
 544 0116 1B78     		ldrb	r3, [r3]
 545 0118 0133     		add	r3, r3, #1
 546 011a D9B2     		uxtb	r1, r3
 547 011c 414A     		ldr	r2, .L30+28
 548 011e 7B68     		ldr	r3, [r7, #4]
 549 0120 D318     		add	r3, r2, r3
 550 0122 0A1C     		add	r2, r1, #0
 551 0124 1A70     		strb	r2, [r3]
 449:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 552              		.loc 1 449 0
 553 0126 45E0     		b	.L24
 554              	.L21:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 19


 457:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 458:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 459:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 460:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 461:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 462:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 463:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 464:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 555              		.loc 1 464 0
 556 0128 0E23     		mov	r3, #14
 557 012a FB18     		add	r3, r7, r3
 558 012c 1B78     		ldrb	r3, [r3]
 559 012e 9BB2     		uxth	r3, r3
 560 0130 1222     		mov	r2, #18
 561 0132 BA18     		add	r2, r7, r2
 562 0134 1288     		ldrh	r2, [r2]
 563 0136 9A42     		cmp	r2, r3
 564 0138 0DD9     		bls	.L25
 465:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              ((tempRaw < (uint16) CapSense_CSD_negativeNoiseThreshold[widget])
 565              		.loc 1 465 0 discriminator 1
 566 013a 0F23     		mov	r3, #15
 567 013c FB18     		add	r3, r7, r3
 568 013e 1B78     		ldrb	r3, [r3]
 569 0140 394A     		ldr	r2, .L30+32
 570 0142 D35C     		ldrb	r3, [r2, r3]
 571 0144 9BB2     		uxth	r3, r3
 464:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              ((tempRaw < (uint16) CapSense_CSD_negativeNoiseThreshold[widget])
 572              		.loc 1 464 0 discriminator 1
 573 0146 1222     		mov	r2, #18
 574 0148 BA18     		add	r2, r7, r2
 575 014a 1288     		ldrh	r2, [r2]
 576 014c 9A42     		cmp	r2, r3
 577 014e 31D2     		bcs	.L24
 466:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                && (sign == 0u)))
 578              		.loc 1 466 0
 579 0150 7B69     		ldr	r3, [r7, #20]
 580 0152 002B     		cmp	r3, #0
 581 0154 2ED1     		bne	.L24
 582              	.L25:
 467:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 468:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 469:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 470:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 471:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 472:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                    && (sign == 0u)))
 473:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 474:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 475:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 476:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Make full Baseline 23 bits */
 477:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc = (uint32) CapSense_CSD_sensorBaseline[sensor] << 8u;
 583              		.loc 1 477 0
 584 0156 324B     		ldr	r3, .L30+24
 585 0158 7A68     		ldr	r2, [r7, #4]
 586 015a 5200     		lsl	r2, r2, #1
 587 015c D35A     		ldrh	r3, [r2, r3]
 588 015e 1B02     		lsl	r3, r3, #8
 589 0160 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 20


 478:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc |= (uint32) CapSense_CSD_sensorBaselineLow[sensor];
 590              		.loc 1 478 0
 591 0162 334A     		ldr	r2, .L30+40
 592 0164 7B68     		ldr	r3, [r7, #4]
 593 0166 D318     		add	r3, r2, r3
 594 0168 1B78     		ldrb	r3, [r3]
 595 016a 1A1C     		mov	r2, r3
 596 016c BB68     		ldr	r3, [r7, #8]
 597 016e 1343     		orr	r3, r2
 598 0170 BB60     		str	r3, [r7, #8]
 479:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 480:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Add Raw Data to Baseline */
 481:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc += filteredRawData;
 599              		.loc 1 481 0
 600 0172 1023     		mov	r3, #16
 601 0174 FB18     		add	r3, r7, r3
 602 0176 1B88     		ldrh	r3, [r3]
 603 0178 BA68     		ldr	r2, [r7, #8]
 604 017a D318     		add	r3, r2, r3
 605 017c BB60     		str	r3, [r7, #8]
 482:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 483:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Sub the high Baseline */
 484:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc -= CapSense_CSD_sensorBaseline[sensor];
 606              		.loc 1 484 0
 607 017e 284B     		ldr	r3, .L30+24
 608 0180 7A68     		ldr	r2, [r7, #4]
 609 0182 5200     		lsl	r2, r2, #1
 610 0184 D35A     		ldrh	r3, [r2, r3]
 611 0186 1A1C     		mov	r2, r3
 612 0188 BB68     		ldr	r3, [r7, #8]
 613 018a 9B1A     		sub	r3, r3, r2
 614 018c BB60     		str	r3, [r7, #8]
 485:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 486:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Put Baseline and BaselineLow */
 487:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 615              		.loc 1 487 0
 616 018e BB68     		ldr	r3, [r7, #8]
 617 0190 1B0A     		lsr	r3, r3, #8
 618 0192 99B2     		uxth	r1, r3
 619 0194 224B     		ldr	r3, .L30+24
 620 0196 7A68     		ldr	r2, [r7, #4]
 621 0198 5200     		lsl	r2, r2, #1
 622 019a D152     		strh	r1, [r2, r3]
 488:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 623              		.loc 1 488 0
 624 019c BB68     		ldr	r3, [r7, #8]
 625 019e D9B2     		uxtb	r1, r3
 626 01a0 234A     		ldr	r2, .L30+40
 627 01a2 7B68     		ldr	r3, [r7, #4]
 628 01a4 D318     		add	r3, r2, r3
 629 01a6 0A1C     		add	r2, r1, #0
 630 01a8 1A70     		strb	r2, [r3]
 489:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 490:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 631              		.loc 1 490 0
 632 01aa 1E4A     		ldr	r2, .L30+28
 633 01ac 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 21


 634 01ae D318     		add	r3, r2, r3
 635 01b0 0022     		mov	r2, #0
 636 01b2 1A70     		strb	r2, [r3]
 637              	.L24:
 491:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 492:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 493:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 494:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 495:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 496:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 497:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 638              		.loc 1 497 0
 639 01b4 0E23     		mov	r3, #14
 640 01b6 FB18     		add	r3, r7, r3
 641 01b8 1B78     		ldrb	r3, [r3]
 642 01ba 9BB2     		uxth	r3, r3
 643 01bc 1222     		mov	r2, #18
 644 01be BA18     		add	r2, r7, r2
 645 01c0 1288     		ldrh	r2, [r2]
 646 01c2 9A42     		cmp	r2, r3
 647 01c4 17D9     		bls	.L26
 648              		.loc 1 497 0 is_stmt 0 discriminator 1
 649 01c6 7B69     		ldr	r3, [r7, #20]
 650 01c8 002B     		cmp	r3, #0
 651 01ca 14D0     		beq	.L26
 498:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 499:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8)
 500:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Over flow defence for uint8 */
 501:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
 652              		.loc 1 501 0 is_stmt 1
 653 01cc 1223     		mov	r3, #18
 654 01ce FB18     		add	r3, r7, r3
 655 01d0 1B88     		ldrh	r3, [r3]
 656 01d2 FF2B     		cmp	r3, #255
 657 01d4 05D9     		bls	.L27
 502:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 503:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = 0xFFu;
 658              		.loc 1 503 0
 659 01d6 174A     		ldr	r2, .L30+44
 660 01d8 7B68     		ldr	r3, [r7, #4]
 661 01da D318     		add	r3, r2, r3
 662 01dc FF22     		mov	r2, #255
 663 01de 1A70     		strb	r2, [r3]
 501:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 664              		.loc 1 501 0
 665 01e0 0EE0     		b	.L17
 666              	.L27:
 504:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 505:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
 506:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 507:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = ((uint8) tempRaw);
 667              		.loc 1 507 0
 668 01e2 1223     		mov	r3, #18
 669 01e4 FB18     		add	r3, r7, r3
 670 01e6 1B88     		ldrh	r3, [r3]
 671 01e8 D9B2     		uxtb	r1, r3
 672 01ea 124A     		ldr	r2, .L30+44
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 22


 673 01ec 7B68     		ldr	r3, [r7, #4]
 674 01ee D318     		add	r3, r2, r3
 675 01f0 0A1C     		add	r2, r1, #0
 676 01f2 1A70     		strb	r2, [r3]
 501:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 677              		.loc 1 501 0
 678 01f4 04E0     		b	.L17
 679              	.L26:
 508:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 509:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 510:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorSignal[sensor] = ((uint16) tempRaw);
 511:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8) */
 512:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 513:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 514:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 515:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Signal is zero */
 516:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorSignal[sensor] = 0u;
 680              		.loc 1 516 0
 681 01f6 0F4A     		ldr	r2, .L30+44
 682 01f8 7B68     		ldr	r3, [r7, #4]
 683 01fa D318     		add	r3, r2, r3
 684 01fc 0022     		mov	r2, #0
 685 01fe 1A70     		strb	r2, [r3]
 686              	.L17:
 517:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 518:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 519:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 520:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 521:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 522:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 523:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 687              		.loc 1 523 0
 688 0200 BD46     		mov	sp, r7
 689 0202 07B0     		add	sp, sp, #28
 690              		@ sp needed
 691 0204 90BD     		pop	{r4, r7, pc}
 692              	.L31:
 693 0206 C046     		.align	2
 694              	.L30:
 695 0208 00000000 		.word	CapSense_CSD_widgetNumber
 696 020c 00000000 		.word	CapSense_CSD_noiseThreshold
 697 0210 00000000 		.word	CapSense_CSD_sensorRaw
 698 0214 00000000 		.word	CapSense_CSD_enableRawFilters
 699 0218 00000000 		.word	CapSense_CSD_rawFilterData1
 700 021c 00000000 		.word	CapSense_CSD_config
 701 0220 00000000 		.word	CapSense_CSD_sensorBaseline
 702 0224 00000000 		.word	CapSense_CSD_lowBaselineResetCnt
 703 0228 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 704 022c 00000000 		.word	CapSense_CSD_lowBaselineReset
 705 0230 00000000 		.word	CapSense_CSD_sensorBaselineLow
 706 0234 00000000 		.word	CapSense_CSD_sensorSignal
 707              		.cfi_endproc
 708              	.LFE38:
 709              		.size	CapSense_CSD_UpdateBaselineNoThreshold, .-CapSense_CSD_UpdateBaselineNoThreshold
 710              		.section	.text.CapSense_CSD_UpdateSensorBaseline,"ax",%progbits
 711              		.align	2
 712              		.global	CapSense_CSD_UpdateSensorBaseline
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 23


 713              		.code	16
 714              		.thumb_func
 715              		.type	CapSense_CSD_UpdateSensorBaseline, %function
 716              	CapSense_CSD_UpdateSensorBaseline:
 717              	.LFB39:
 524:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 525:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 526:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 527:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateSensorBaseline
 528:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 529:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 530:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 531:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the
 532:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 533:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 534:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_sensorSignal[sensor].
 535:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 536:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 537:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 538:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  if signal is less than noise threshold.
 539:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 540:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  calculation.
 541:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 542:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 543:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 544:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 545:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 546:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 547:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 548:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 549:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 550:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
 551:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 552:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 553:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 554:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 555:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 556:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateSensorBaseline(uint32 sensor)
 557:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 718              		.loc 1 557 0
 719              		.cfi_startproc
 720 0000 80B5     		push	{r7, lr}
 721              		.cfi_def_cfa_offset 8
 722              		.cfi_offset 7, -8
 723              		.cfi_offset 14, -4
 724 0002 82B0     		sub	sp, sp, #8
 725              		.cfi_def_cfa_offset 16
 726 0004 00AF     		add	r7, sp, #0
 727              		.cfi_def_cfa_register 7
 728 0006 7860     		str	r0, [r7, #4]
 558:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 559:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 widget;
 560:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 561:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         widget = CapSense_CSD_widgetNumber[sensor];
 562:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 563:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 564:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 24


 565:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 566:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 567:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 568:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 569:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_UpdateThresholds(sensor);
 729              		.loc 1 569 0
 730 0008 7B68     		ldr	r3, [r7, #4]
 731 000a 181C     		mov	r0, r3
 732 000c FFF7FEFF 		bl	CapSense_CSD_UpdateThresholds
 570:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 571:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 572:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_UpdateBaselineNoThreshold(sensor);
 733              		.loc 1 572 0
 734 0010 7B68     		ldr	r3, [r7, #4]
 735 0012 181C     		mov	r0, r3
 736 0014 FFF7FEFF 		bl	CapSense_CSD_UpdateBaselineNoThreshold
 573:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 574:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 575:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 576:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 577:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 578:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 737              		.loc 1 578 0
 738 0018 BD46     		mov	sp, r7
 739 001a 02B0     		add	sp, sp, #8
 740              		@ sp needed
 741 001c 80BD     		pop	{r7, pc}
 742              		.cfi_endproc
 743              	.LFE39:
 744              		.size	CapSense_CSD_UpdateSensorBaseline, .-CapSense_CSD_UpdateSensorBaseline
 745 001e C046     		.section	.text.CapSense_CSD_UpdateEnabledBaselines,"ax",%progbits
 746              		.align	2
 747              		.global	CapSense_CSD_UpdateEnabledBaselines
 748              		.code	16
 749              		.thumb_func
 750              		.type	CapSense_CSD_UpdateEnabledBaselines, %function
 751              	CapSense_CSD_UpdateEnabledBaselines:
 752              	.LFB40:
 579:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 580:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 581:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 582:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateEnabledBaselines
 583:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 584:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 585:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 586:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the
 587:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines
 588:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for the enabled sensors.
 589:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 590:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 591:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 592:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 593:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 594:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 595:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 596:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 597:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 25


 598:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
 599:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
 600:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 601:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
 602:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 603:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 604:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 605:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 606:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 607:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 608:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 609:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 610:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateEnabledBaselines(void)
 611:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 753              		.loc 1 611 0
 754              		.cfi_startproc
 755 0000 80B5     		push	{r7, lr}
 756              		.cfi_def_cfa_offset 8
 757              		.cfi_offset 7, -8
 758              		.cfi_offset 14, -4
 759 0002 82B0     		sub	sp, sp, #8
 760              		.cfi_def_cfa_offset 16
 761 0004 00AF     		add	r7, sp, #0
 762              		.cfi_def_cfa_register 7
 612:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 613:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 614:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 615:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 763              		.loc 1 615 0
 764 0006 0023     		mov	r3, #0
 765 0008 7B60     		str	r3, [r7, #4]
 766 000a 11E0     		b	.L34
 767              	.L36:
 616:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 617:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 768              		.loc 1 617 0
 769 000c 0B4A     		ldr	r2, .L37
 770 000e 7B68     		ldr	r3, [r7, #4]
 771 0010 101C     		mov	r0, r2
 772 0012 191C     		mov	r1, r3
 773 0014 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 774 0018 031C     		mov	r3, r0
 775 001a 3B60     		str	r3, [r7]
 618:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 619:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(0u != isSensorEnabled)
 776              		.loc 1 619 0
 777 001c 3B68     		ldr	r3, [r7]
 778 001e 002B     		cmp	r3, #0
 779 0020 03D0     		beq	.L35
 620:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 621:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 780              		.loc 1 621 0
 781 0022 7B68     		ldr	r3, [r7, #4]
 782 0024 181C     		mov	r0, r3
 783 0026 FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 784              	.L35:
 615:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 26


 785              		.loc 1 615 0 discriminator 2
 786 002a 7B68     		ldr	r3, [r7, #4]
 787 002c 0133     		add	r3, r3, #1
 788 002e 7B60     		str	r3, [r7, #4]
 789              	.L34:
 615:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 790              		.loc 1 615 0 is_stmt 0 discriminator 1
 791 0030 7B68     		ldr	r3, [r7, #4]
 792 0032 0C2B     		cmp	r3, #12
 793 0034 EAD9     		bls	.L36
 622:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 623:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 624:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 794              		.loc 1 624 0 is_stmt 1
 795 0036 BD46     		mov	sp, r7
 796 0038 02B0     		add	sp, sp, #8
 797              		@ sp needed
 798 003a 80BD     		pop	{r7, pc}
 799              	.L38:
 800              		.align	2
 801              	.L37:
 802 003c 00000000 		.word	CapSense_CSD_sensorEnableMask
 803              		.cfi_endproc
 804              	.LFE40:
 805              		.size	CapSense_CSD_UpdateEnabledBaselines, .-CapSense_CSD_UpdateEnabledBaselines
 806              		.section	.text.CapSense_CSD_UpdateWidgetBaseline,"ax",%progbits
 807              		.align	2
 808              		.global	CapSense_CSD_UpdateWidgetBaseline
 809              		.code	16
 810              		.thumb_func
 811              		.type	CapSense_CSD_UpdateWidgetBaseline, %function
 812              	CapSense_CSD_UpdateWidgetBaseline:
 813              	.LFB41:
 625:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 626:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 627:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateWidgetBaseline
 628:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 629:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 630:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 631:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the
 632:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines
 633:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for the enabled sensors that belong to widget.
 634:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 635:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 636:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  Widget number.
 637:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 638:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 639:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 640:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 641:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 642:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
 643:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
 644:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
 645:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 646:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
 647:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 648:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 27


 649:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 650:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 651:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 652:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 653:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 654:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 655:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_UpdateWidgetBaseline(uint32 widget)
 656:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 814              		.loc 1 656 0
 815              		.cfi_startproc
 816 0000 80B5     		push	{r7, lr}
 817              		.cfi_def_cfa_offset 8
 818              		.cfi_offset 7, -8
 819              		.cfi_offset 14, -4
 820 0002 88B0     		sub	sp, sp, #32
 821              		.cfi_def_cfa_offset 40
 822 0004 00AF     		add	r7, sp, #0
 823              		.cfi_def_cfa_register 7
 824 0006 7860     		str	r0, [r7, #4]
 657:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 sensorsPerWidget;
 658:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 firstSensor;
 659:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 lastSensor;
 660:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 661:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 662:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 663:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get number of sensors in widget */
 664:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     sensorsPerWidget = CapSense_CSD_numberOfSensors[widget];
 825              		.loc 1 664 0
 826 0008 164A     		ldr	r2, .L43
 827 000a 7B68     		ldr	r3, [r7, #4]
 828 000c D318     		add	r3, r2, r3
 829 000e 1B78     		ldrb	r3, [r3]
 830 0010 BB61     		str	r3, [r7, #24]
 665:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 666:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get first sensor in widget */
 667:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     firstSensor = CapSense_CSD_rawDataIndex[widget];
 831              		.loc 1 667 0
 832 0012 154A     		ldr	r2, .L43+4
 833 0014 7B68     		ldr	r3, [r7, #4]
 834 0016 D318     		add	r3, r2, r3
 835 0018 1B78     		ldrb	r3, [r3]
 836 001a 7B61     		str	r3, [r7, #20]
 668:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 669:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get last sensor in widget */
 670:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     lastSensor = (CapSense_CSD_rawDataIndex[widget] + sensorsPerWidget);
 837              		.loc 1 670 0
 838 001c 124A     		ldr	r2, .L43+4
 839 001e 7B68     		ldr	r3, [r7, #4]
 840 0020 D318     		add	r3, r2, r3
 841 0022 1B78     		ldrb	r3, [r3]
 842 0024 1A1C     		mov	r2, r3
 843 0026 BB69     		ldr	r3, [r7, #24]
 844 0028 D318     		add	r3, r2, r3
 845 002a 3B61     		str	r3, [r7, #16]
 671:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 672:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 846              		.loc 1 672 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 28


 847 002c 7B69     		ldr	r3, [r7, #20]
 848 002e FB61     		str	r3, [r7, #28]
 849 0030 11E0     		b	.L40
 850              	.L42:
 673:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 674:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 851              		.loc 1 674 0
 852 0032 0E4A     		ldr	r2, .L43+8
 853 0034 FB69     		ldr	r3, [r7, #28]
 854 0036 101C     		mov	r0, r2
 855 0038 191C     		mov	r1, r3
 856 003a FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 857 003e 031C     		mov	r3, r0
 858 0040 FB60     		str	r3, [r7, #12]
 675:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 676:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(0u != isSensorEnabled)
 859              		.loc 1 676 0
 860 0042 FB68     		ldr	r3, [r7, #12]
 861 0044 002B     		cmp	r3, #0
 862 0046 03D0     		beq	.L41
 677:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 678:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 863              		.loc 1 678 0
 864 0048 FB69     		ldr	r3, [r7, #28]
 865 004a 181C     		mov	r0, r3
 866 004c FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 867              	.L41:
 672:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 868              		.loc 1 672 0 discriminator 2
 869 0050 FB69     		ldr	r3, [r7, #28]
 870 0052 0133     		add	r3, r3, #1
 871 0054 FB61     		str	r3, [r7, #28]
 872              	.L40:
 672:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 873              		.loc 1 672 0 is_stmt 0 discriminator 1
 874 0056 FA69     		ldr	r2, [r7, #28]
 875 0058 3B69     		ldr	r3, [r7, #16]
 876 005a 9A42     		cmp	r2, r3
 877 005c E9D3     		bcc	.L42
 679:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 680:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 681:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 878              		.loc 1 681 0 is_stmt 1
 879 005e BD46     		mov	sp, r7
 880 0060 08B0     		add	sp, sp, #32
 881              		@ sp needed
 882 0062 80BD     		pop	{r7, pc}
 883              	.L44:
 884              		.align	2
 885              	.L43:
 886 0064 00000000 		.word	CapSense_CSD_numberOfSensors
 887 0068 00000000 		.word	CapSense_CSD_rawDataIndex
 888 006c 00000000 		.word	CapSense_CSD_sensorEnableMask
 889              		.cfi_endproc
 890              	.LFE41:
 891              		.size	CapSense_CSD_UpdateWidgetBaseline, .-CapSense_CSD_UpdateWidgetBaseline
 892              		.section	.text.CapSense_CSD_GetBaselineData,"ax",%progbits
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 29


 893              		.align	2
 894              		.global	CapSense_CSD_GetBaselineData
 895              		.code	16
 896              		.thumb_func
 897              		.type	CapSense_CSD_GetBaselineData, %function
 898              	CapSense_CSD_GetBaselineData:
 899              	.LFB42:
 682:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 683:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 684:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 685:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetBaselineData
 686:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 687:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 688:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 689:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the sensor baseline from the component.
 690:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 691:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 692:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 693:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 694:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 695:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 696:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 697:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 698:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] - the array with an initial values by scanning
 699:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 700:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 701:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 702:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 703:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 704:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetBaselineData(uint32 sensor)
 705:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 900              		.loc 1 705 0
 901              		.cfi_startproc
 902 0000 80B5     		push	{r7, lr}
 903              		.cfi_def_cfa_offset 8
 904              		.cfi_offset 7, -8
 905              		.cfi_offset 14, -4
 906 0002 82B0     		sub	sp, sp, #8
 907              		.cfi_def_cfa_offset 16
 908 0004 00AF     		add	r7, sp, #0
 909              		.cfi_def_cfa_register 7
 910 0006 7860     		str	r0, [r7, #4]
 706:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_sensorBaseline[sensor]);
 911              		.loc 1 706 0
 912 0008 034B     		ldr	r3, .L47
 913 000a 7A68     		ldr	r2, [r7, #4]
 914 000c 5200     		lsl	r2, r2, #1
 915 000e D35A     		ldrh	r3, [r2, r3]
 707:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 916              		.loc 1 707 0
 917 0010 181C     		mov	r0, r3
 918 0012 BD46     		mov	sp, r7
 919 0014 02B0     		add	sp, sp, #8
 920              		@ sp needed
 921 0016 80BD     		pop	{r7, pc}
 922              	.L48:
 923              		.align	2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 30


 924              	.L47:
 925 0018 00000000 		.word	CapSense_CSD_sensorBaseline
 926              		.cfi_endproc
 927              	.LFE42:
 928              		.size	CapSense_CSD_GetBaselineData, .-CapSense_CSD_GetBaselineData
 929              		.section	.text.CapSense_CSD_SetBaselineData,"ax",%progbits
 930              		.align	2
 931              		.global	CapSense_CSD_SetBaselineData
 932              		.code	16
 933              		.thumb_func
 934              		.type	CapSense_CSD_SetBaselineData, %function
 935              	CapSense_CSD_SetBaselineData:
 936              	.LFB43:
 708:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 709:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 710:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 711:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_SetBaselineData
 712:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 713:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 714:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 715:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 716:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 717:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 718:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 719:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  data:    Sensor baseline.
 720:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 721:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 722:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 723:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 724:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 725:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] - the array with initial values by scanning
 726:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 727:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 728:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 729:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 730:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 731:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_SetBaselineData(uint32 sensor, uint16 data)
 732:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 937              		.loc 1 732 0
 938              		.cfi_startproc
 939 0000 80B5     		push	{r7, lr}
 940              		.cfi_def_cfa_offset 8
 941              		.cfi_offset 7, -8
 942              		.cfi_offset 14, -4
 943 0002 82B0     		sub	sp, sp, #8
 944              		.cfi_def_cfa_offset 16
 945 0004 00AF     		add	r7, sp, #0
 946              		.cfi_def_cfa_register 7
 947 0006 7860     		str	r0, [r7, #4]
 948 0008 0A1C     		mov	r2, r1
 949 000a BB1C     		add	r3, r7, #2
 950 000c 1A80     		strh	r2, [r3]
 733:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = data;
 951              		.loc 1 733 0
 952 000e 044B     		ldr	r3, .L50
 953 0010 7A68     		ldr	r2, [r7, #4]
 954 0012 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 31


 955 0014 B91C     		add	r1, r7, #2
 956 0016 0988     		ldrh	r1, [r1]
 957 0018 D152     		strh	r1, [r2, r3]
 734:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 958              		.loc 1 734 0
 959 001a BD46     		mov	sp, r7
 960 001c 02B0     		add	sp, sp, #8
 961              		@ sp needed
 962 001e 80BD     		pop	{r7, pc}
 963              	.L51:
 964              		.align	2
 965              	.L50:
 966 0020 00000000 		.word	CapSense_CSD_sensorBaseline
 967              		.cfi_endproc
 968              	.LFE43:
 969              		.size	CapSense_CSD_SetBaselineData, .-CapSense_CSD_SetBaselineData
 970              		.section	.text.CapSense_CSD_GetDiffCountData,"ax",%progbits
 971              		.align	2
 972              		.global	CapSense_CSD_GetDiffCountData
 973              		.code	16
 974              		.thumb_func
 975              		.type	CapSense_CSD_GetDiffCountData, %function
 976              	CapSense_CSD_GetDiffCountData:
 977              	.LFB44:
 735:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 736:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 737:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 738:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetDiffCountData
 739:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 740:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 741:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 742:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function returns the Sensor Signal from the component.
 743:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 744:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 745:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 746:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 747:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 748:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 749:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  argument.
 750:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 751:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 752:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - the array with difference counts for sensors
 753:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 754:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 755:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 756:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 757:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 758:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetDiffCountData(uint32 sensor)
 759:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 978              		.loc 1 759 0
 979              		.cfi_startproc
 980 0000 80B5     		push	{r7, lr}
 981              		.cfi_def_cfa_offset 8
 982              		.cfi_offset 7, -8
 983              		.cfi_offset 14, -4
 984 0002 82B0     		sub	sp, sp, #8
 985              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 32


 986 0004 00AF     		add	r7, sp, #0
 987              		.cfi_def_cfa_register 7
 988 0006 7860     		str	r0, [r7, #4]
 760:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_sensorSignal[sensor]);
 989              		.loc 1 760 0
 990 0008 034A     		ldr	r2, .L54
 991 000a 7B68     		ldr	r3, [r7, #4]
 992 000c D318     		add	r3, r2, r3
 993 000e 1B78     		ldrb	r3, [r3]
 761:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 994              		.loc 1 761 0
 995 0010 181C     		mov	r0, r3
 996 0012 BD46     		mov	sp, r7
 997 0014 02B0     		add	sp, sp, #8
 998              		@ sp needed
 999 0016 80BD     		pop	{r7, pc}
 1000              	.L55:
 1001              		.align	2
 1002              	.L54:
 1003 0018 00000000 		.word	CapSense_CSD_sensorSignal
 1004              		.cfi_endproc
 1005              	.LFE44:
 1006              		.size	CapSense_CSD_GetDiffCountData, .-CapSense_CSD_GetDiffCountData
 1007              		.section	.text.CapSense_CSD_SetDiffCountData,"ax",%progbits
 1008              		.align	2
 1009              		.global	CapSense_CSD_SetDiffCountData
 1010              		.code	16
 1011              		.thumb_func
 1012              		.type	CapSense_CSD_SetDiffCountData, %function
 1013              	CapSense_CSD_SetDiffCountData:
 1014              	.LFB45:
 762:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 763:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 764:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 765:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_SetDiffCountData
 766:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 767:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 768:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 769:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 770:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 771:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 772:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 773:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  value:   Sensor signal.
 774:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 775:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 776:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 777:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 778:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 779:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - the array with difference counts for sensors
 780:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 781:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 782:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 783:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 784:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 785:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_SetDiffCountData(uint32 sensor, uint8 value)
 786:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1015              		.loc 1 786 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 33


 1016              		.cfi_startproc
 1017 0000 80B5     		push	{r7, lr}
 1018              		.cfi_def_cfa_offset 8
 1019              		.cfi_offset 7, -8
 1020              		.cfi_offset 14, -4
 1021 0002 82B0     		sub	sp, sp, #8
 1022              		.cfi_def_cfa_offset 16
 1023 0004 00AF     		add	r7, sp, #0
 1024              		.cfi_def_cfa_register 7
 1025 0006 7860     		str	r0, [r7, #4]
 1026 0008 0A1C     		mov	r2, r1
 1027 000a FB1C     		add	r3, r7, #3
 1028 000c 1A70     		strb	r2, [r3]
 787:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = value;
 1029              		.loc 1 787 0
 1030 000e 044A     		ldr	r2, .L57
 1031 0010 7B68     		ldr	r3, [r7, #4]
 1032 0012 D318     		add	r3, r2, r3
 1033 0014 FA1C     		add	r2, r7, #3
 1034 0016 1278     		ldrb	r2, [r2]
 1035 0018 1A70     		strb	r2, [r3]
 788:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1036              		.loc 1 788 0
 1037 001a BD46     		mov	sp, r7
 1038 001c 02B0     		add	sp, sp, #8
 1039              		@ sp needed
 1040 001e 80BD     		pop	{r7, pc}
 1041              	.L58:
 1042              		.align	2
 1043              	.L57:
 1044 0020 00000000 		.word	CapSense_CSD_sensorSignal
 1045              		.cfi_endproc
 1046              	.LFE45:
 1047              		.size	CapSense_CSD_SetDiffCountData, .-CapSense_CSD_SetDiffCountData
 1048              		.section	.text.CapSense_CSD_GetFingerThreshold,"ax",%progbits
 1049              		.align	2
 1050              		.global	CapSense_CSD_GetFingerThreshold
 1051              		.code	16
 1052              		.thumb_func
 1053              		.type	CapSense_CSD_GetFingerThreshold, %function
 1054              	CapSense_CSD_GetFingerThreshold:
 1055              	.LFB46:
 789:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 790:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 791:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 792:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetFingerThreshold
 793:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 794:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 795:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 796:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the finger threshold from the component.
 797:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 798:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 799:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 800:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 801:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 802:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 803:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 34


 804:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 805:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_fingerThreshold[] - This array contains the level of signal
 806:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 807:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 808:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 809:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 810:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 811:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 812:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetFingerThreshold(uint32 widget)
 813:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1056              		.loc 1 813 0
 1057              		.cfi_startproc
 1058 0000 80B5     		push	{r7, lr}
 1059              		.cfi_def_cfa_offset 8
 1060              		.cfi_offset 7, -8
 1061              		.cfi_offset 14, -4
 1062 0002 82B0     		sub	sp, sp, #8
 1063              		.cfi_def_cfa_offset 16
 1064 0004 00AF     		add	r7, sp, #0
 1065              		.cfi_def_cfa_register 7
 1066 0006 7860     		str	r0, [r7, #4]
 814:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_fingerThreshold[widget]);
 1067              		.loc 1 814 0
 1068 0008 034A     		ldr	r2, .L61
 1069 000a 7B68     		ldr	r3, [r7, #4]
 1070 000c D318     		add	r3, r2, r3
 1071 000e 1B78     		ldrb	r3, [r3]
 815:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1072              		.loc 1 815 0
 1073 0010 181C     		mov	r0, r3
 1074 0012 BD46     		mov	sp, r7
 1075 0014 02B0     		add	sp, sp, #8
 1076              		@ sp needed
 1077 0016 80BD     		pop	{r7, pc}
 1078              	.L62:
 1079              		.align	2
 1080              	.L61:
 1081 0018 00000000 		.word	CapSense_CSD_fingerThreshold
 1082              		.cfi_endproc
 1083              	.LFE46:
 1084              		.size	CapSense_CSD_GetFingerThreshold, .-CapSense_CSD_GetFingerThreshold
 1085              		.section	.text.CapSense_CSD_GetNoiseThreshold,"ax",%progbits
 1086              		.align	2
 1087              		.global	CapSense_CSD_GetNoiseThreshold
 1088              		.code	16
 1089              		.thumb_func
 1090              		.type	CapSense_CSD_GetNoiseThreshold, %function
 1091              	CapSense_CSD_GetNoiseThreshold:
 1092              	.LFB47:
 816:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 817:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 818:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 819:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetNoiseThreshold
 820:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 821:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 822:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 823:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the noise threshold from the component.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 35


 824:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 825:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 826:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 827:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 828:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 829:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 830:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 831:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 832:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_noiseThreshold[] - This array contains the level of signal
 833:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 834:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 835:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 836:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 837:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 838:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 839:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetNoiseThreshold(uint32 widget)
 840:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1093              		.loc 1 840 0
 1094              		.cfi_startproc
 1095 0000 80B5     		push	{r7, lr}
 1096              		.cfi_def_cfa_offset 8
 1097              		.cfi_offset 7, -8
 1098              		.cfi_offset 14, -4
 1099 0002 82B0     		sub	sp, sp, #8
 1100              		.cfi_def_cfa_offset 16
 1101 0004 00AF     		add	r7, sp, #0
 1102              		.cfi_def_cfa_register 7
 1103 0006 7860     		str	r0, [r7, #4]
 841:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_noiseThreshold[widget]);
 1104              		.loc 1 841 0
 1105 0008 034A     		ldr	r2, .L65
 1106 000a 7B68     		ldr	r3, [r7, #4]
 1107 000c D318     		add	r3, r2, r3
 1108 000e 1B78     		ldrb	r3, [r3]
 842:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1109              		.loc 1 842 0
 1110 0010 181C     		mov	r0, r3
 1111 0012 BD46     		mov	sp, r7
 1112 0014 02B0     		add	sp, sp, #8
 1113              		@ sp needed
 1114 0016 80BD     		pop	{r7, pc}
 1115              	.L66:
 1116              		.align	2
 1117              	.L65:
 1118 0018 00000000 		.word	CapSense_CSD_noiseThreshold
 1119              		.cfi_endproc
 1120              	.LFE47:
 1121              		.size	CapSense_CSD_GetNoiseThreshold, .-CapSense_CSD_GetNoiseThreshold
 1122              		.section	.text.CapSense_CSD_GetFingerHysteresis,"ax",%progbits
 1123              		.align	2
 1124              		.global	CapSense_CSD_GetFingerHysteresis
 1125              		.code	16
 1126              		.thumb_func
 1127              		.type	CapSense_CSD_GetFingerHysteresis, %function
 1128              	CapSense_CSD_GetFingerHysteresis:
 1129              	.LFB48:
 843:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 36


 844:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 845:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 846:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetFingerHysteresis
 847:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 848:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 849:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 850:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the Hysteresis value from the component.
 851:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 852:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 853:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 854:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 855:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 856:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 857:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 858:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 859:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_hysteresis[] - This array contains the hysteresis value
 860:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   for each widget.
 861:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
 862:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 863:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 864:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 865:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 866:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 867:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetFingerHysteresis(uint32 widget)
 868:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1130              		.loc 1 868 0
 1131              		.cfi_startproc
 1132 0000 80B5     		push	{r7, lr}
 1133              		.cfi_def_cfa_offset 8
 1134              		.cfi_offset 7, -8
 1135              		.cfi_offset 14, -4
 1136 0002 82B0     		sub	sp, sp, #8
 1137              		.cfi_def_cfa_offset 16
 1138 0004 00AF     		add	r7, sp, #0
 1139              		.cfi_def_cfa_register 7
 1140 0006 7860     		str	r0, [r7, #4]
 869:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_hysteresis[widget]);
 1141              		.loc 1 869 0
 1142 0008 034A     		ldr	r2, .L69
 1143 000a 7B68     		ldr	r3, [r7, #4]
 1144 000c D318     		add	r3, r2, r3
 1145 000e 1B78     		ldrb	r3, [r3]
 870:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1146              		.loc 1 870 0
 1147 0010 181C     		mov	r0, r3
 1148 0012 BD46     		mov	sp, r7
 1149 0014 02B0     		add	sp, sp, #8
 1150              		@ sp needed
 1151 0016 80BD     		pop	{r7, pc}
 1152              	.L70:
 1153              		.align	2
 1154              	.L69:
 1155 0018 00000000 		.word	CapSense_CSD_hysteresis
 1156              		.cfi_endproc
 1157              	.LFE48:
 1158              		.size	CapSense_CSD_GetFingerHysteresis, .-CapSense_CSD_GetFingerHysteresis
 1159              		.section	.text.CapSense_CSD_GetNegativeNoiseThreshold,"ax",%progbits
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 37


 1160              		.align	2
 1161              		.global	CapSense_CSD_GetNegativeNoiseThreshold
 1162              		.code	16
 1163              		.thumb_func
 1164              		.type	CapSense_CSD_GetNegativeNoiseThreshold, %function
 1165              	CapSense_CSD_GetNegativeNoiseThreshold:
 1166              	.LFB49:
 871:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 872:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 873:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 874:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetNegativeNoiseThreshold
 875:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 876:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 877:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 878:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the negative noise threshold from the component.
 879:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 880:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 881:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 882:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 883:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return Value:
 884:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the negative noise threshold
 885:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 886:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 887:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_negativeNoiseThreshold - This variable specifies the negative
 888:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 889:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   to the raw count level.
 890:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 891:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 892:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 893:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 894:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 895:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetNegativeNoiseThreshold(uint32 widget)
 896:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1167              		.loc 1 896 0
 1168              		.cfi_startproc
 1169 0000 80B5     		push	{r7, lr}
 1170              		.cfi_def_cfa_offset 8
 1171              		.cfi_offset 7, -8
 1172              		.cfi_offset 14, -4
 1173 0002 82B0     		sub	sp, sp, #8
 1174              		.cfi_def_cfa_offset 16
 1175 0004 00AF     		add	r7, sp, #0
 1176              		.cfi_def_cfa_register 7
 1177 0006 7860     		str	r0, [r7, #4]
 897:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 898:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_negativeNoiseThreshold[widget]);
 1178              		.loc 1 898 0
 1179 0008 034A     		ldr	r2, .L73
 1180 000a 7B68     		ldr	r3, [r7, #4]
 1181 000c D318     		add	r3, r2, r3
 1182 000e 1B78     		ldrb	r3, [r3]
 899:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #else
 900:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_NEGATIVE_NOISE_THRESHOLD);
 901:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 902:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1183              		.loc 1 902 0
 1184 0010 181C     		mov	r0, r3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 38


 1185 0012 BD46     		mov	sp, r7
 1186 0014 02B0     		add	sp, sp, #8
 1187              		@ sp needed
 1188 0016 80BD     		pop	{r7, pc}
 1189              	.L74:
 1190              		.align	2
 1191              	.L73:
 1192 0018 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 1193              		.cfi_endproc
 1194              	.LFE49:
 1195              		.size	CapSense_CSD_GetNegativeNoiseThreshold, .-CapSense_CSD_GetNegativeNoiseThreshold
 1196              		.section	.text.CapSense_CSD_SetFingerThreshold,"ax",%progbits
 1197              		.align	2
 1198              		.global	CapSense_CSD_SetFingerThreshold
 1199              		.code	16
 1200              		.thumb_func
 1201              		.type	CapSense_CSD_SetFingerThreshold, %function
 1202              	CapSense_CSD_SetFingerThreshold:
 1203              	.LFB50:
 903:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 904:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 905:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 906:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 907:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetFingerThreshold
 908:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 909:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 910:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 911:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 912:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 913:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 914:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensorNumber:  widget index.
 915:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Finger threshold value for the widget.
 916:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 917:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 918:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 919:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 920:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 921:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_fingerThreshold[] - This array contains the level of signal
 922:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 923:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 924:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 925:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 926:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 927:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 928:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetFingerThreshold(uint32 widget, uint8 value)
 929:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1204              		.loc 1 929 0
 1205              		.cfi_startproc
 1206 0000 80B5     		push	{r7, lr}
 1207              		.cfi_def_cfa_offset 8
 1208              		.cfi_offset 7, -8
 1209              		.cfi_offset 14, -4
 1210 0002 82B0     		sub	sp, sp, #8
 1211              		.cfi_def_cfa_offset 16
 1212 0004 00AF     		add	r7, sp, #0
 1213              		.cfi_def_cfa_register 7
 1214 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 39


 1215 0008 0A1C     		mov	r2, r1
 1216 000a FB1C     		add	r3, r7, #3
 1217 000c 1A70     		strb	r2, [r3]
 930:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_fingerThreshold[widget] = value;
 1218              		.loc 1 930 0
 1219 000e 044A     		ldr	r2, .L76
 1220 0010 7B68     		ldr	r3, [r7, #4]
 1221 0012 D318     		add	r3, r2, r3
 1222 0014 FA1C     		add	r2, r7, #3
 1223 0016 1278     		ldrb	r2, [r2]
 1224 0018 1A70     		strb	r2, [r3]
 931:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1225              		.loc 1 931 0
 1226 001a BD46     		mov	sp, r7
 1227 001c 02B0     		add	sp, sp, #8
 1228              		@ sp needed
 1229 001e 80BD     		pop	{r7, pc}
 1230              	.L77:
 1231              		.align	2
 1232              	.L76:
 1233 0020 00000000 		.word	CapSense_CSD_fingerThreshold
 1234              		.cfi_endproc
 1235              	.LFE50:
 1236              		.size	CapSense_CSD_SetFingerThreshold, .-CapSense_CSD_SetFingerThreshold
 1237              		.section	.text.CapSense_CSD_SetNoiseThreshold,"ax",%progbits
 1238              		.align	2
 1239              		.global	CapSense_CSD_SetNoiseThreshold
 1240              		.code	16
 1241              		.thumb_func
 1242              		.type	CapSense_CSD_SetNoiseThreshold, %function
 1243              	CapSense_CSD_SetNoiseThreshold:
 1244              	.LFB51:
 932:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 933:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 934:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 935:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetNoiseThreshold
 936:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 937:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 938:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 939:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 940:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 941:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 942:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Sensor index number.
 943:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:   Noise Threshold value for widget.
 944:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 945:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 946:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 947:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 948:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 949:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_noiseThreshold[] - This array contains the level of signal
 950:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 951:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 952:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 953:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 954:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 955:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 956:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetNoiseThreshold(uint32 widget, uint8 value)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 40


 957:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1245              		.loc 1 957 0
 1246              		.cfi_startproc
 1247 0000 80B5     		push	{r7, lr}
 1248              		.cfi_def_cfa_offset 8
 1249              		.cfi_offset 7, -8
 1250              		.cfi_offset 14, -4
 1251 0002 82B0     		sub	sp, sp, #8
 1252              		.cfi_def_cfa_offset 16
 1253 0004 00AF     		add	r7, sp, #0
 1254              		.cfi_def_cfa_register 7
 1255 0006 7860     		str	r0, [r7, #4]
 1256 0008 0A1C     		mov	r2, r1
 1257 000a FB1C     		add	r3, r7, #3
 1258 000c 1A70     		strb	r2, [r3]
 958:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_noiseThreshold[widget] = value;
 1259              		.loc 1 958 0
 1260 000e 044A     		ldr	r2, .L79
 1261 0010 7B68     		ldr	r3, [r7, #4]
 1262 0012 D318     		add	r3, r2, r3
 1263 0014 FA1C     		add	r2, r7, #3
 1264 0016 1278     		ldrb	r2, [r2]
 1265 0018 1A70     		strb	r2, [r3]
 959:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1266              		.loc 1 959 0
 1267 001a BD46     		mov	sp, r7
 1268 001c 02B0     		add	sp, sp, #8
 1269              		@ sp needed
 1270 001e 80BD     		pop	{r7, pc}
 1271              	.L80:
 1272              		.align	2
 1273              	.L79:
 1274 0020 00000000 		.word	CapSense_CSD_noiseThreshold
 1275              		.cfi_endproc
 1276              	.LFE51:
 1277              		.size	CapSense_CSD_SetNoiseThreshold, .-CapSense_CSD_SetNoiseThreshold
 1278              		.section	.text.CapSense_CSD_SetFingerHysteresis,"ax",%progbits
 1279              		.align	2
 1280              		.global	CapSense_CSD_SetFingerHysteresis
 1281              		.code	16
 1282              		.thumb_func
 1283              		.type	CapSense_CSD_SetFingerHysteresis, %function
 1284              	CapSense_CSD_SetFingerHysteresis:
 1285              	.LFB52:
 960:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 961:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 962:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 963:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetFingerHysteresis
 964:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 965:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 966:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 967:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 968:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 969:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 970:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Hysteresis value for widgets.
 971:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  widget number
 972:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 41


 973:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 974:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 975:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 976:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 977:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_hysteresis[] - This array contains the hysteresis value for each widget.
 978:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
 979:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 980:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 981:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 982:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 983:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 984:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetFingerHysteresis(uint32 widget, uint8 value)
 985:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1286              		.loc 1 985 0
 1287              		.cfi_startproc
 1288 0000 80B5     		push	{r7, lr}
 1289              		.cfi_def_cfa_offset 8
 1290              		.cfi_offset 7, -8
 1291              		.cfi_offset 14, -4
 1292 0002 82B0     		sub	sp, sp, #8
 1293              		.cfi_def_cfa_offset 16
 1294 0004 00AF     		add	r7, sp, #0
 1295              		.cfi_def_cfa_register 7
 1296 0006 7860     		str	r0, [r7, #4]
 1297 0008 0A1C     		mov	r2, r1
 1298 000a FB1C     		add	r3, r7, #3
 1299 000c 1A70     		strb	r2, [r3]
 986:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_hysteresis[widget] = value;
 1300              		.loc 1 986 0
 1301 000e 044A     		ldr	r2, .L82
 1302 0010 7B68     		ldr	r3, [r7, #4]
 1303 0012 D318     		add	r3, r2, r3
 1304 0014 FA1C     		add	r2, r7, #3
 1305 0016 1278     		ldrb	r2, [r2]
 1306 0018 1A70     		strb	r2, [r3]
 987:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1307              		.loc 1 987 0
 1308 001a BD46     		mov	sp, r7
 1309 001c 02B0     		add	sp, sp, #8
 1310              		@ sp needed
 1311 001e 80BD     		pop	{r7, pc}
 1312              	.L83:
 1313              		.align	2
 1314              	.L82:
 1315 0020 00000000 		.word	CapSense_CSD_hysteresis
 1316              		.cfi_endproc
 1317              	.LFE52:
 1318              		.size	CapSense_CSD_SetFingerHysteresis, .-CapSense_CSD_SetFingerHysteresis
 1319              		.section	.text.CapSense_CSD_SetNegativeNoiseThreshold,"ax",%progbits
 1320              		.align	2
 1321              		.global	CapSense_CSD_SetNegativeNoiseThreshold
 1322              		.code	16
 1323              		.thumb_func
 1324              		.type	CapSense_CSD_SetNegativeNoiseThreshold, %function
 1325              	CapSense_CSD_SetNegativeNoiseThreshold:
 1326              	.LFB53:
 988:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 42


 989:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 990:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 991:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetNegativeNoiseThreshold
 992:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 993:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 994:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 995:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 996:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 997:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 998:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 999:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget: widget number
1000:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1001:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
1002:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1003:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1004:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1005:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_negativeNoiseThreshold  - This parameter specifies the negative
1006:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
1007:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   the raw count level.
1008:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1009:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1010:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1011:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1012:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1013:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1014:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1327              		.loc 1 1014 0
 1328              		.cfi_startproc
 1329 0000 80B5     		push	{r7, lr}
 1330              		.cfi_def_cfa_offset 8
 1331              		.cfi_offset 7, -8
 1332              		.cfi_offset 14, -4
 1333 0002 82B0     		sub	sp, sp, #8
 1334              		.cfi_def_cfa_offset 16
 1335 0004 00AF     		add	r7, sp, #0
 1336              		.cfi_def_cfa_register 7
 1337 0006 7860     		str	r0, [r7, #4]
 1338 0008 0A1C     		mov	r2, r1
 1339 000a FB1C     		add	r3, r7, #3
 1340 000c 1A70     		strb	r2, [r3]
1015:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_negativeNoiseThreshold[widget] = value;
 1341              		.loc 1 1015 0
 1342 000e 044A     		ldr	r2, .L85
 1343 0010 7B68     		ldr	r3, [r7, #4]
 1344 0012 D318     		add	r3, r2, r3
 1345 0014 FA1C     		add	r2, r7, #3
 1346 0016 1278     		ldrb	r2, [r2]
 1347 0018 1A70     		strb	r2, [r3]
1016:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1348              		.loc 1 1016 0
 1349 001a BD46     		mov	sp, r7
 1350 001c 02B0     		add	sp, sp, #8
 1351              		@ sp needed
 1352 001e 80BD     		pop	{r7, pc}
 1353              	.L86:
 1354              		.align	2
 1355              	.L85:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 43


 1356 0020 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 1357              		.cfi_endproc
 1358              	.LFE53:
 1359              		.size	CapSense_CSD_SetNegativeNoiseThreshold, .-CapSense_CSD_SetNegativeNoiseThreshold
 1360              		.section	.text.CapSense_CSD_SetDebounce,"ax",%progbits
 1361              		.align	2
 1362              		.global	CapSense_CSD_SetDebounce
 1363              		.code	16
 1364              		.thumb_func
 1365              		.type	CapSense_CSD_SetDebounce, %function
 1366              	CapSense_CSD_SetDebounce:
 1367              	.LFB54:
1017:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1018:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1019:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1020:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetDebounce
1021:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1022:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1023:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1024:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the debounce value for a widget.
1025:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1026:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1027:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Debounce value for widget.
1028:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget: widget index.
1029:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1030:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
1031:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1032:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1033:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1034:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_debounce[] - This array contains the debounce value for each widget.
1035:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
1036:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1037:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1038:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1039:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1040:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1041:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetDebounce(uint32 widget, uint8 value)
1042:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1368              		.loc 1 1042 0
 1369              		.cfi_startproc
 1370 0000 80B5     		push	{r7, lr}
 1371              		.cfi_def_cfa_offset 8
 1372              		.cfi_offset 7, -8
 1373              		.cfi_offset 14, -4
 1374 0002 82B0     		sub	sp, sp, #8
 1375              		.cfi_def_cfa_offset 16
 1376 0004 00AF     		add	r7, sp, #0
 1377              		.cfi_def_cfa_register 7
 1378 0006 7860     		str	r0, [r7, #4]
 1379 0008 0A1C     		mov	r2, r1
 1380 000a FB1C     		add	r3, r7, #3
 1381 000c 1A70     		strb	r2, [r3]
1043:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_debounce[widget] = value;
 1382              		.loc 1 1043 0
 1383 000e 044A     		ldr	r2, .L88
 1384 0010 7B68     		ldr	r3, [r7, #4]
 1385 0012 D318     		add	r3, r2, r3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 44


 1386 0014 FA1C     		add	r2, r7, #3
 1387 0016 1278     		ldrb	r2, [r2]
 1388 0018 1A70     		strb	r2, [r3]
1044:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1389              		.loc 1 1044 0
 1390 001a BD46     		mov	sp, r7
 1391 001c 02B0     		add	sp, sp, #8
 1392              		@ sp needed
 1393 001e 80BD     		pop	{r7, pc}
 1394              	.L89:
 1395              		.align	2
 1396              	.L88:
 1397 0020 00000000 		.word	CapSense_CSD_debounce
 1398              		.cfi_endproc
 1399              	.LFE54:
 1400              		.size	CapSense_CSD_SetDebounce, .-CapSense_CSD_SetDebounce
 1401              		.section	.text.CapSense_CSD_SetLowBaselineReset,"ax",%progbits
 1402              		.align	2
 1403              		.global	CapSense_CSD_SetLowBaselineReset
 1404              		.code	16
 1405              		.thumb_func
 1406              		.type	CapSense_CSD_SetLowBaselineReset, %function
 1407              	CapSense_CSD_SetLowBaselineReset:
 1408              	.LFB55:
1045:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1046:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1047:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1048:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetLowBaselineReset
1049:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1050:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1051:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1052:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1053:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1054:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1055:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value: low baseline reset threshold value.
1056:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensor: Sensor index.
1057:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1058:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
1059:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1060:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1061:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1062:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_lowBaselineReset[] - This array contains the Baseline update
1063:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold value for each sensor.
1064:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1065:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1066:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1067:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1068:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1069:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetLowBaselineReset(uint32 sensor, uint8 value)
1070:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1409              		.loc 1 1070 0
 1410              		.cfi_startproc
 1411 0000 80B5     		push	{r7, lr}
 1412              		.cfi_def_cfa_offset 8
 1413              		.cfi_offset 7, -8
 1414              		.cfi_offset 14, -4
 1415 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 45


 1416              		.cfi_def_cfa_offset 16
 1417 0004 00AF     		add	r7, sp, #0
 1418              		.cfi_def_cfa_register 7
 1419 0006 7860     		str	r0, [r7, #4]
 1420 0008 0A1C     		mov	r2, r1
 1421 000a FB1C     		add	r3, r7, #3
 1422 000c 1A70     		strb	r2, [r3]
1071:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_lowBaselineReset[sensor] = value;
 1423              		.loc 1 1071 0
 1424 000e 044A     		ldr	r2, .L91
 1425 0010 7B68     		ldr	r3, [r7, #4]
 1426 0012 D318     		add	r3, r2, r3
 1427 0014 FA1C     		add	r2, r7, #3
 1428 0016 1278     		ldrb	r2, [r2]
 1429 0018 1A70     		strb	r2, [r3]
1072:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1430              		.loc 1 1072 0
 1431 001a BD46     		mov	sp, r7
 1432 001c 02B0     		add	sp, sp, #8
 1433              		@ sp needed
 1434 001e 80BD     		pop	{r7, pc}
 1435              	.L92:
 1436              		.align	2
 1437              	.L91:
 1438 0020 00000000 		.word	CapSense_CSD_lowBaselineReset
 1439              		.cfi_endproc
 1440              	.LFE55:
 1441              		.size	CapSense_CSD_SetLowBaselineReset, .-CapSense_CSD_SetLowBaselineReset
 1442              		.section	.text.CapSense_CSD_CheckIsSensorActive,"ax",%progbits
 1443              		.align	2
 1444              		.global	CapSense_CSD_CheckIsSensorActive
 1445              		.code	16
 1446              		.thumb_func
 1447              		.type	CapSense_CSD_CheckIsSensorActive, %function
 1448              	CapSense_CSD_CheckIsSensorActive:
 1449              	.LFB56:
1073:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
1074:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1075:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1076:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1077:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsSensorActive
1078:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1079:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1080:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1081:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares the CapSense_CSD_sensorSignal[sensor] array element to the finger
1082:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1083:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1084:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  based on whether the sensor is currently active.
1085:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1086:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1087:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1088:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function updates the CapSense_CSD_sensorOnMask[] array element.
1089:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1090:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1091:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
1092:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1093:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 46


1094:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1095:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1096:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1097:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - used to store the difference between
1098:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1099:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store the current debounce
1100:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1101:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1102:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1103:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] - used to store the sensors on/off state.
1104:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[0] contains the masked bits for sensors
1105:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1106:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1107:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1108:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor is inactive.
1109:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor is active.
1110:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1111:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1112:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1113:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1114:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1115:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsSensorActive(uint32 sensor)
1116:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1450              		.loc 1 1116 0
 1451              		.cfi_startproc
 1452 0000 80B5     		push	{r7, lr}
 1453              		.cfi_def_cfa_offset 8
 1454              		.cfi_offset 7, -8
 1455              		.cfi_offset 14, -4
 1456 0002 84B0     		sub	sp, sp, #16
 1457              		.cfi_def_cfa_offset 24
 1458 0004 00AF     		add	r7, sp, #0
 1459              		.cfi_def_cfa_register 7
 1460 0006 7860     		str	r0, [r7, #4]
1117:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 widget;
1118:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 debounce;
1119:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 debounceIndex;
1120:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1121:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 fingerThreshold;
1122:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 hysteresis;
1123:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1124:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1125:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Prepare to find debounce counter index */
1126:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     widget = CapSense_CSD_widgetNumber[sensor];
 1461              		.loc 1 1126 0
 1462 0008 0E23     		mov	r3, #14
 1463 000a FB18     		add	r3, r7, r3
 1464 000c 4B49     		ldr	r1, .L104
 1465 000e 7A68     		ldr	r2, [r7, #4]
 1466 0010 8A18     		add	r2, r1, r2
 1467 0012 1278     		ldrb	r2, [r2]
 1468 0014 1A70     		strb	r2, [r3]
1127:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1128:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     fingerThreshold = CapSense_CSD_fingerThreshold[widget];
 1469              		.loc 1 1128 0
 1470 0016 0E23     		mov	r3, #14
 1471 0018 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 47


 1472 001a 1A78     		ldrb	r2, [r3]
 1473 001c 0D23     		mov	r3, #13
 1474 001e FB18     		add	r3, r7, r3
 1475 0020 4749     		ldr	r1, .L104+4
 1476 0022 8A5C     		ldrb	r2, [r1, r2]
 1477 0024 1A70     		strb	r2, [r3]
1129:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     hysteresis = CapSense_CSD_hysteresis[widget];
 1478              		.loc 1 1129 0
 1479 0026 0E23     		mov	r3, #14
 1480 0028 FB18     		add	r3, r7, r3
 1481 002a 1A78     		ldrb	r2, [r3]
 1482 002c 0C23     		mov	r3, #12
 1483 002e FB18     		add	r3, r7, r3
 1484 0030 4449     		ldr	r1, .L104+8
 1485 0032 8A5C     		ldrb	r2, [r1, r2]
 1486 0034 1A70     		strb	r2, [r3]
1130:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     debounce = CapSense_CSD_debounce[widget];
 1487              		.loc 1 1130 0
 1488 0036 0E23     		mov	r3, #14
 1489 0038 FB18     		add	r3, r7, r3
 1490 003a 1A78     		ldrb	r2, [r3]
 1491 003c 0B23     		mov	r3, #11
 1492 003e FB18     		add	r3, r7, r3
 1493 0040 4149     		ldr	r1, .L104+12
 1494 0042 8A5C     		ldrb	r2, [r1, r2]
 1495 0044 1A70     		strb	r2, [r3]
1131:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1132:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (widget < CapSense_CSD_TOTAL_CENTROIDS_COUNT)
 1496              		.loc 1 1132 0
 1497 0046 0E23     		mov	r3, #14
 1498 0048 FB18     		add	r3, r7, r3
 1499 004a 1B78     		ldrb	r3, [r3]
 1500 004c 002B     		cmp	r3, #0
 1501 004e 0AD1     		bne	.L94
1133:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1134:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         debounceIndex = CapSense_CSD_UNUSED_DEBOUNCE_COUNTER_INDEX;
 1502              		.loc 1 1134 0
 1503 0050 0F23     		mov	r3, #15
 1504 0052 FB18     		add	r3, r7, r3
 1505 0054 0122     		mov	r2, #1
 1506 0056 1A70     		strb	r2, [r3]
1135:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_debounceCounter[debounceIndex] = 1u;
 1507              		.loc 1 1135 0
 1508 0058 0F23     		mov	r3, #15
 1509 005a FB18     		add	r3, r7, r3
 1510 005c 1B78     		ldrb	r3, [r3]
 1511 005e 3B4A     		ldr	r2, .L104+16
 1512 0060 0121     		mov	r1, #1
 1513 0062 D154     		strb	r1, [r2, r3]
 1514 0064 06E0     		b	.L95
 1515              	.L94:
1136:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1137:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
1138:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1139:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         debounceIndex = widget - (CapSense_CSD_END_OF_TOUCH_PAD_INDEX + 1u);
 1516              		.loc 1 1139 0
 1517 0066 0F23     		mov	r3, #15
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 48


 1518 0068 FB18     		add	r3, r7, r3
 1519 006a 0E22     		mov	r2, #14
 1520 006c BA18     		add	r2, r7, r2
 1521 006e 1278     		ldrb	r2, [r2]
 1522 0070 013A     		sub	r2, r2, #1
 1523 0072 1A70     		strb	r2, [r3]
 1524              	.L95:
1140:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1141:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1142:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1143:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Was on */
1144:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if (0u != CapSense_CSD_GetBitValue(CapSense_CSD_sensorOnMask, sensor))
 1525              		.loc 1 1144 0
 1526 0074 364A     		ldr	r2, .L104+20
 1527 0076 7B68     		ldr	r3, [r7, #4]
 1528 0078 101C     		mov	r0, r2
 1529 007a 191C     		mov	r1, r3
 1530 007c FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 1531 0080 031E     		sub	r3, r0, #0
 1532 0082 1DD0     		beq	.L96
1145:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1146:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Hysteresis minus */
1147:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1533              		.loc 1 1147 0
 1534 0084 334A     		ldr	r2, .L104+24
 1535 0086 7B68     		ldr	r3, [r7, #4]
 1536 0088 D318     		add	r3, r2, r3
 1537 008a 1B78     		ldrb	r3, [r3]
 1538 008c 191C     		mov	r1, r3
 1539 008e 0D23     		mov	r3, #13
 1540 0090 FB18     		add	r3, r7, r3
 1541 0092 1A78     		ldrb	r2, [r3]
 1542 0094 0C23     		mov	r3, #12
 1543 0096 FB18     		add	r3, r7, r3
 1544 0098 1B78     		ldrb	r3, [r3]
 1545 009a D31A     		sub	r3, r2, r3
 1546 009c 9942     		cmp	r1, r3
 1547 009e 3DDA     		bge	.L98
1148:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1149:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_SetBitValue(CapSense_CSD_sensorOnMask, sensor, 0u);
 1548              		.loc 1 1149 0
 1549 00a0 2B4A     		ldr	r2, .L104+20
 1550 00a2 7B68     		ldr	r3, [r7, #4]
 1551 00a4 101C     		mov	r0, r2
 1552 00a6 191C     		mov	r1, r3
 1553 00a8 0022     		mov	r2, #0
 1554 00aa FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1150:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1151:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 1555              		.loc 1 1151 0
 1556 00ae 0F23     		mov	r3, #15
 1557 00b0 FB18     		add	r3, r7, r3
 1558 00b2 1B78     		ldrb	r3, [r3]
 1559 00b4 254A     		ldr	r2, .L104+16
 1560 00b6 0B21     		mov	r1, #11
 1561 00b8 7918     		add	r1, r7, r1
 1562 00ba 0978     		ldrb	r1, [r1]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 49


 1563 00bc D154     		strb	r1, [r2, r3]
 1564 00be 2DE0     		b	.L98
 1565              	.L96:
1152:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1153:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1154:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else    /* Was off */
1155:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1156:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Hysteresis plus */
1157:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1566              		.loc 1 1157 0
 1567 00c0 244A     		ldr	r2, .L104+24
 1568 00c2 7B68     		ldr	r3, [r7, #4]
 1569 00c4 D318     		add	r3, r2, r3
 1570 00c6 1B78     		ldrb	r3, [r3]
 1571 00c8 191C     		mov	r1, r3
 1572 00ca 0D23     		mov	r3, #13
 1573 00cc FB18     		add	r3, r7, r3
 1574 00ce 1A78     		ldrb	r2, [r3]
 1575 00d0 0C23     		mov	r3, #12
 1576 00d2 FB18     		add	r3, r7, r3
 1577 00d4 1B78     		ldrb	r3, [r3]
 1578 00d6 D318     		add	r3, r2, r3
 1579 00d8 9942     		cmp	r1, r3
 1580 00da 17DB     		blt	.L99
1158:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1159:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex]--;
 1581              		.loc 1 1159 0
 1582 00dc 0F23     		mov	r3, #15
 1583 00de FB18     		add	r3, r7, r3
 1584 00e0 1B78     		ldrb	r3, [r3]
 1585 00e2 1A4A     		ldr	r2, .L104+16
 1586 00e4 D25C     		ldrb	r2, [r2, r3]
 1587 00e6 013A     		sub	r2, r2, #1
 1588 00e8 D1B2     		uxtb	r1, r2
 1589 00ea 184A     		ldr	r2, .L104+16
 1590 00ec D154     		strb	r1, [r2, r3]
1160:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor active, decrement debounce counter */
1161:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(CapSense_CSD_debounceCounter[debounceIndex] == 0u)
 1591              		.loc 1 1161 0
 1592 00ee 0F23     		mov	r3, #15
 1593 00f0 FB18     		add	r3, r7, r3
 1594 00f2 1B78     		ldrb	r3, [r3]
 1595 00f4 154A     		ldr	r2, .L104+16
 1596 00f6 D35C     		ldrb	r3, [r2, r3]
 1597 00f8 002B     		cmp	r3, #0
 1598 00fa 0FD1     		bne	.L98
1162:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1163:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_SetBitValue(CapSense_CSD_sensorOnMask, sensor, 1u);
 1599              		.loc 1 1163 0
 1600 00fc 144A     		ldr	r2, .L104+20
 1601 00fe 7B68     		ldr	r3, [r7, #4]
 1602 0100 101C     		mov	r0, r2
 1603 0102 191C     		mov	r1, r3
 1604 0104 0122     		mov	r2, #1
 1605 0106 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
 1606 010a 07E0     		b	.L98
 1607              	.L99:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 50


1164:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1165:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1166:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1167:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1168:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1169:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 1608              		.loc 1 1169 0
 1609 010c 0F23     		mov	r3, #15
 1610 010e FB18     		add	r3, r7, r3
 1611 0110 1B78     		ldrb	r3, [r3]
 1612 0112 0E4A     		ldr	r2, .L104+16
 1613 0114 0B21     		mov	r1, #11
 1614 0116 7918     		add	r1, r7, r1
 1615 0118 0978     		ldrb	r1, [r1]
 1616 011a D154     		strb	r1, [r2, r3]
 1617              	.L98:
1170:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1171:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1172:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1173:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return ((uint32)((0u != CapSense_CSD_GetBitValue(CapSense_CSD_sensorOnMask, sensor)) ? 1u : 0u)
 1618              		.loc 1 1173 0
 1619 011c 0C4A     		ldr	r2, .L104+20
 1620 011e 7B68     		ldr	r3, [r7, #4]
 1621 0120 101C     		mov	r0, r2
 1622 0122 191C     		mov	r1, r3
 1623 0124 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 1624 0128 031E     		sub	r3, r0, #0
 1625 012a 01D0     		beq	.L101
 1626              		.loc 1 1173 0 is_stmt 0 discriminator 1
 1627 012c 0123     		mov	r3, #1
 1628 012e 00E0     		b	.L102
 1629              	.L101:
 1630              		.loc 1 1173 0 discriminator 2
 1631 0130 0023     		mov	r3, #0
 1632              	.L102:
1174:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1633              		.loc 1 1174 0 is_stmt 1 discriminator 4
 1634 0132 181C     		mov	r0, r3
 1635 0134 BD46     		mov	sp, r7
 1636 0136 04B0     		add	sp, sp, #16
 1637              		@ sp needed
 1638 0138 80BD     		pop	{r7, pc}
 1639              	.L105:
 1640 013a C046     		.align	2
 1641              	.L104:
 1642 013c 00000000 		.word	CapSense_CSD_widgetNumber
 1643 0140 00000000 		.word	CapSense_CSD_fingerThreshold
 1644 0144 00000000 		.word	CapSense_CSD_hysteresis
 1645 0148 00000000 		.word	CapSense_CSD_debounce
 1646 014c 40000000 		.word	CapSense_CSD_debounceCounter
 1647 0150 00000000 		.word	CapSense_CSD_sensorOnMask
 1648 0154 00000000 		.word	CapSense_CSD_sensorSignal
 1649              		.cfi_endproc
 1650              	.LFE56:
 1651              		.size	CapSense_CSD_CheckIsSensorActive, .-CapSense_CSD_CheckIsSensorActive
 1652              		.section	.text.CapSense_CSD_CheckIsWidgetActive,"ax",%progbits
 1653              		.align	2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 51


 1654              		.global	CapSense_CSD_CheckIsWidgetActive
 1655              		.code	16
 1656              		.thumb_func
 1657              		.type	CapSense_CSD_CheckIsWidgetActive, %function
 1658              	CapSense_CSD_CheckIsWidgetActive:
 1659              	.LFB57:
1175:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1176:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1177:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1178:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsWidgetActive
1179:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1180:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1181:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1182:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1183:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1184:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1185:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1186:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1187:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  is raised by the hysteresis amount.
1188:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * The debounce counter added to the sensor active transition.
1189:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1190:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1191:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1192:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1193:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1194:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1195:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1196:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1197:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1198:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1199:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1200:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1201:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1202:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1203:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1204:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1205:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsWidgetActive(uint32 widget)
1206:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1660              		.loc 1 1206 0
 1661              		.cfi_startproc
 1662 0000 80B5     		push	{r7, lr}
 1663              		.cfi_def_cfa_offset 8
 1664              		.cfi_offset 7, -8
 1665              		.cfi_offset 14, -4
 1666 0002 86B0     		sub	sp, sp, #24
 1667              		.cfi_def_cfa_offset 32
 1668 0004 00AF     		add	r7, sp, #0
 1669              		.cfi_def_cfa_register 7
 1670 0006 7860     		str	r0, [r7, #4]
1207:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_CSD_rawDataIndex[widget];
 1671              		.loc 1 1207 0
 1672 0008 114A     		ldr	r2, .L110
 1673 000a 7B68     		ldr	r3, [r7, #4]
 1674 000c D318     		add	r3, r2, r3
 1675 000e 1B78     		ldrb	r3, [r3]
 1676 0010 7B61     		str	r3, [r7, #20]
1208:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_CSD_numberOfSensors[widget] + rawIndex;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 52


 1677              		.loc 1 1208 0
 1678 0012 104A     		ldr	r2, .L110+4
 1679 0014 7B68     		ldr	r3, [r7, #4]
 1680 0016 D318     		add	r3, r2, r3
 1681 0018 1B78     		ldrb	r3, [r3]
 1682 001a 1A1C     		mov	r2, r3
 1683 001c 7B69     		ldr	r3, [r7, #20]
 1684 001e D318     		add	r3, r2, r3
 1685 0020 FB60     		str	r3, [r7, #12]
1209:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 state = 0u;
 1686              		.loc 1 1209 0
 1687 0022 0023     		mov	r3, #0
 1688 0024 3B61     		str	r3, [r7, #16]
 1689              	.L108:
1210:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1211:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Check all sensors of widget */
1212:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1213:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1214:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1690              		.loc 1 1214 0
 1691 0026 7B69     		ldr	r3, [r7, #20]
 1692 0028 181C     		mov	r0, r3
 1693 002a FFF7FEFF 		bl	CapSense_CSD_CheckIsSensorActive
 1694 002e 031E     		sub	r3, r0, #0
 1695 0030 01D0     		beq	.L107
1215:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1216:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_SENSOR_IS_ACTIVE;
 1696              		.loc 1 1216 0
 1697 0032 0123     		mov	r3, #1
 1698 0034 3B61     		str	r3, [r7, #16]
 1699              	.L107:
1217:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1218:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1700              		.loc 1 1218 0
 1701 0036 7B69     		ldr	r3, [r7, #20]
 1702 0038 0133     		add	r3, r3, #1
 1703 003a 7B61     		str	r3, [r7, #20]
1219:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1220:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1704              		.loc 1 1220 0
 1705 003c 7A69     		ldr	r2, [r7, #20]
 1706 003e FB68     		ldr	r3, [r7, #12]
 1707 0040 9A42     		cmp	r2, r3
 1708 0042 F0D3     		bcc	.L108
1221:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1222:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1223:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1224:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return state;
 1709              		.loc 1 1224 0
 1710 0044 3B69     		ldr	r3, [r7, #16]
1225:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1711              		.loc 1 1225 0
 1712 0046 181C     		mov	r0, r3
 1713 0048 BD46     		mov	sp, r7
 1714 004a 06B0     		add	sp, sp, #24
 1715              		@ sp needed
 1716 004c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 53


 1717              	.L111:
 1718 004e C046     		.align	2
 1719              	.L110:
 1720 0050 00000000 		.word	CapSense_CSD_rawDataIndex
 1721 0054 00000000 		.word	CapSense_CSD_numberOfSensors
 1722              		.cfi_endproc
 1723              	.LFE57:
 1724              		.size	CapSense_CSD_CheckIsWidgetActive, .-CapSense_CSD_CheckIsWidgetActive
 1725              		.section	.text.CapSense_CSD_CheckIsAnyWidgetActive,"ax",%progbits
 1726              		.align	2
 1727              		.global	CapSense_CSD_CheckIsAnyWidgetActive
 1728              		.code	16
 1729              		.thumb_func
 1730              		.type	CapSense_CSD_CheckIsAnyWidgetActive, %function
 1731              	CapSense_CSD_CheckIsAnyWidgetActive:
 1732              	.LFB58:
1226:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1227:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1228:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1229:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsAnyWidgetActive
1230:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1231:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1232:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1233:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares all the sensors of the CapSense_CSD_Signal[] array to their finger
1234:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  threshold. Calls CapSense_CSD_CheckIsWidgetActive() for each widget so
1235:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the CapSense_CSD_sensorOnMask[] array is up to date after calling this
1236:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  function.
1237:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1238:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1239:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1240:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1241:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1242:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1243:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1244:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1245:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1246:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1247:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1248:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1249:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1250:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1251:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsAnyWidgetActive(void)
1252:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1733              		.loc 1 1252 0
 1734              		.cfi_startproc
 1735 0000 80B5     		push	{r7, lr}
 1736              		.cfi_def_cfa_offset 8
 1737              		.cfi_offset 7, -8
 1738              		.cfi_offset 14, -4
 1739 0002 82B0     		sub	sp, sp, #8
 1740              		.cfi_def_cfa_offset 16
 1741 0004 00AF     		add	r7, sp, #0
 1742              		.cfi_def_cfa_register 7
1253:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1254:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 i;
1255:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 state = 0u;
 1743              		.loc 1 1255 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 54


 1744 0006 0023     		mov	r3, #0
 1745 0008 3B60     		str	r3, [r7]
1256:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1257:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 1746              		.loc 1 1257 0
 1747 000a 0023     		mov	r3, #0
 1748 000c 7B60     		str	r3, [r7, #4]
 1749 000e 0AE0     		b	.L113
 1750              	.L115:
1258:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1259:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(i) != 0u)
 1751              		.loc 1 1259 0
 1752 0010 7B68     		ldr	r3, [r7, #4]
 1753 0012 181C     		mov	r0, r3
 1754 0014 FFF7FEFF 		bl	CapSense_CSD_CheckIsWidgetActive
 1755 0018 031E     		sub	r3, r0, #0
 1756 001a 01D0     		beq	.L114
1260:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1261:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_WIDGET_IS_ACTIVE;
 1757              		.loc 1 1261 0
 1758 001c 0123     		mov	r3, #1
 1759 001e 3B60     		str	r3, [r7]
 1760              	.L114:
1257:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1761              		.loc 1 1257 0 discriminator 2
 1762 0020 7B68     		ldr	r3, [r7, #4]
 1763 0022 0133     		add	r3, r3, #1
 1764 0024 7B60     		str	r3, [r7, #4]
 1765              	.L113:
1257:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1766              		.loc 1 1257 0 is_stmt 0 discriminator 1
 1767 0026 7B68     		ldr	r3, [r7, #4]
 1768 0028 012B     		cmp	r3, #1
 1769 002a F1D9     		bls	.L115
1262:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1263:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1264:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1265:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1266:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1267:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return state;
 1770              		.loc 1 1267 0 is_stmt 1
 1771 002c 3B68     		ldr	r3, [r7]
1268:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1772              		.loc 1 1268 0
 1773 002e 181C     		mov	r0, r3
 1774 0030 BD46     		mov	sp, r7
 1775 0032 02B0     		add	sp, sp, #8
 1776              		@ sp needed
 1777 0034 80BD     		pop	{r7, pc}
 1778              		.cfi_endproc
 1779              	.LFE58:
 1780              		.size	CapSense_CSD_CheckIsAnyWidgetActive, .-CapSense_CSD_CheckIsAnyWidgetActive
 1781 0036 C046     		.section	.text.CapSense_CSD_EnableWidget,"ax",%progbits
 1782              		.align	2
 1783              		.global	CapSense_CSD_EnableWidget
 1784              		.code	16
 1785              		.thumb_func
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 55


 1786              		.type	CapSense_CSD_EnableWidget, %function
 1787              	CapSense_CSD_EnableWidget:
 1788              	.LFB59:
1269:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1270:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1271:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1272:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_EnableWidget
1273:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1274:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1275:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1276:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1277:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1278:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1279:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1280:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1281:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1282:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1283:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1284:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1285:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
1286:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
1287:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
1288:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1289:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1290:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1291:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
1292:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
1293:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1294:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1295:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1296:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1297:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1298:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_EnableWidget(uint32 widget)
1299:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1789              		.loc 1 1299 0
 1790              		.cfi_startproc
 1791 0000 80B5     		push	{r7, lr}
 1792              		.cfi_def_cfa_offset 8
 1793              		.cfi_offset 7, -8
 1794              		.cfi_offset 14, -4
 1795 0002 84B0     		sub	sp, sp, #16
 1796              		.cfi_def_cfa_offset 24
 1797 0004 00AF     		add	r7, sp, #0
 1798              		.cfi_def_cfa_register 7
 1799 0006 7860     		str	r0, [r7, #4]
1300:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1301:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1800              		.loc 1 1301 0
 1801 0008 0F23     		mov	r3, #15
 1802 000a FB18     		add	r3, r7, r3
 1803 000c 1549     		ldr	r1, .L119
 1804 000e 7A68     		ldr	r2, [r7, #4]
 1805 0010 8A18     		add	r2, r1, r2
 1806 0012 1278     		ldrb	r2, [r2]
 1807 0014 1A70     		strb	r2, [r3]
1302:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 numOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1808              		.loc 1 1302 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 56


 1809 0016 144A     		ldr	r2, .L119+4
 1810 0018 7B68     		ldr	r3, [r7, #4]
 1811 001a D318     		add	r3, r2, r3
 1812 001c 1978     		ldrb	r1, [r3]
 1813 001e 0E23     		mov	r3, #14
 1814 0020 FB18     		add	r3, r7, r3
 1815 0022 0F22     		mov	r2, #15
 1816 0024 BA18     		add	r2, r7, r2
 1817 0026 1278     		ldrb	r2, [r2]
 1818 0028 8A18     		add	r2, r1, r2
 1819 002a 1A70     		strb	r2, [r3]
 1820              	.L118:
1303:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1304:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Enable all sensors of widget */
1305:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1306:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1307:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, (uint32)rawIndex, 1u);
 1821              		.loc 1 1307 0 discriminator 1
 1822 002c 0F23     		mov	r3, #15
 1823 002e FB18     		add	r3, r7, r3
 1824 0030 1B78     		ldrb	r3, [r3]
 1825 0032 0E4A     		ldr	r2, .L119+8
 1826 0034 101C     		mov	r0, r2
 1827 0036 191C     		mov	r1, r3
 1828 0038 0122     		mov	r2, #1
 1829 003a FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1308:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1830              		.loc 1 1308 0 discriminator 1
 1831 003e 0F23     		mov	r3, #15
 1832 0040 FB18     		add	r3, r7, r3
 1833 0042 1A78     		ldrb	r2, [r3]
 1834 0044 0F23     		mov	r3, #15
 1835 0046 FB18     		add	r3, r7, r3
 1836 0048 0132     		add	r2, r2, #1
 1837 004a 1A70     		strb	r2, [r3]
1309:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1310:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1838              		.loc 1 1310 0 discriminator 1
 1839 004c 0F23     		mov	r3, #15
 1840 004e FA18     		add	r2, r7, r3
 1841 0050 0E23     		mov	r3, #14
 1842 0052 FB18     		add	r3, r7, r3
 1843 0054 1278     		ldrb	r2, [r2]
 1844 0056 1B78     		ldrb	r3, [r3]
 1845 0058 9A42     		cmp	r2, r3
 1846 005a E7D3     		bcc	.L118
1311:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1847              		.loc 1 1311 0
 1848 005c BD46     		mov	sp, r7
 1849 005e 04B0     		add	sp, sp, #16
 1850              		@ sp needed
 1851 0060 80BD     		pop	{r7, pc}
 1852              	.L120:
 1853 0062 C046     		.align	2
 1854              	.L119:
 1855 0064 00000000 		.word	CapSense_CSD_rawDataIndex
 1856 0068 00000000 		.word	CapSense_CSD_numberOfSensors
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 57


 1857 006c 00000000 		.word	CapSense_CSD_sensorEnableMask
 1858              		.cfi_endproc
 1859              	.LFE59:
 1860              		.size	CapSense_CSD_EnableWidget, .-CapSense_CSD_EnableWidget
 1861              		.section	.text.CapSense_CSD_DisableWidget,"ax",%progbits
 1862              		.align	2
 1863              		.global	CapSense_CSD_DisableWidget
 1864              		.code	16
 1865              		.thumb_func
 1866              		.type	CapSense_CSD_DisableWidget, %function
 1867              	CapSense_CSD_DisableWidget:
 1868              	.LFB60:
1312:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1313:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1314:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1315:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_DisableWidget
1316:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1317:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1318:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1319:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1320:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1321:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1322:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1323:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1324:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1325:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1326:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1327:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1328:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
1329:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
1330:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
1331:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1332:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1333:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1334:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor isn't scanned by CapSense_CSD_ScanEnabledWidgets().
1335:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor is scanned by CapSense_CSD_ScanEnabledWidgets().
1336:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1337:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1338:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1339:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1340:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1341:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_DisableWidget(uint32 widget)
1342:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1869              		.loc 1 1342 0
 1870              		.cfi_startproc
 1871 0000 80B5     		push	{r7, lr}
 1872              		.cfi_def_cfa_offset 8
 1873              		.cfi_offset 7, -8
 1874              		.cfi_offset 14, -4
 1875 0002 84B0     		sub	sp, sp, #16
 1876              		.cfi_def_cfa_offset 24
 1877 0004 00AF     		add	r7, sp, #0
 1878              		.cfi_def_cfa_register 7
 1879 0006 7860     		str	r0, [r7, #4]
1343:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1880              		.loc 1 1343 0
 1881 0008 0F23     		mov	r3, #15
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 58


 1882 000a FB18     		add	r3, r7, r3
 1883 000c 1549     		ldr	r1, .L123
 1884 000e 7A68     		ldr	r2, [r7, #4]
 1885 0010 8A18     		add	r2, r1, r2
 1886 0012 1278     		ldrb	r2, [r2]
 1887 0014 1A70     		strb	r2, [r3]
1344:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 numOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1888              		.loc 1 1344 0
 1889 0016 144A     		ldr	r2, .L123+4
 1890 0018 7B68     		ldr	r3, [r7, #4]
 1891 001a D318     		add	r3, r2, r3
 1892 001c 1978     		ldrb	r1, [r3]
 1893 001e 0E23     		mov	r3, #14
 1894 0020 FB18     		add	r3, r7, r3
 1895 0022 0F22     		mov	r2, #15
 1896 0024 BA18     		add	r2, r7, r2
 1897 0026 1278     		ldrb	r2, [r2]
 1898 0028 8A18     		add	r2, r1, r2
 1899 002a 1A70     		strb	r2, [r3]
 1900              	.L122:
1345:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1346:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Disable all sensors of widget */
1347:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1348:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1349:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1350:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, (uint32)rawIndex, 0u);
 1901              		.loc 1 1350 0 discriminator 1
 1902 002c 0F23     		mov	r3, #15
 1903 002e FB18     		add	r3, r7, r3
 1904 0030 1B78     		ldrb	r3, [r3]
 1905 0032 0E4A     		ldr	r2, .L123+8
 1906 0034 101C     		mov	r0, r2
 1907 0036 191C     		mov	r1, r3
 1908 0038 0022     		mov	r2, #0
 1909 003a FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1351:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1910              		.loc 1 1351 0 discriminator 1
 1911 003e 0F23     		mov	r3, #15
 1912 0040 FB18     		add	r3, r7, r3
 1913 0042 1A78     		ldrb	r2, [r3]
 1914 0044 0F23     		mov	r3, #15
 1915 0046 FB18     		add	r3, r7, r3
 1916 0048 0132     		add	r2, r2, #1
 1917 004a 1A70     		strb	r2, [r3]
1352:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1353:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1918              		.loc 1 1353 0 discriminator 1
 1919 004c 0F23     		mov	r3, #15
 1920 004e FA18     		add	r2, r7, r3
 1921 0050 0E23     		mov	r3, #14
 1922 0052 FB18     		add	r3, r7, r3
 1923 0054 1278     		ldrb	r2, [r2]
 1924 0056 1B78     		ldrb	r3, [r3]
 1925 0058 9A42     		cmp	r2, r3
 1926 005a E7D3     		bcc	.L122
1354:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1927              		.loc 1 1354 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 59


 1928 005c BD46     		mov	sp, r7
 1929 005e 04B0     		add	sp, sp, #16
 1930              		@ sp needed
 1931 0060 80BD     		pop	{r7, pc}
 1932              	.L124:
 1933 0062 C046     		.align	2
 1934              	.L123:
 1935 0064 00000000 		.word	CapSense_CSD_rawDataIndex
 1936 0068 00000000 		.word	CapSense_CSD_numberOfSensors
 1937 006c 00000000 		.word	CapSense_CSD_sensorEnableMask
 1938              		.cfi_endproc
 1939              	.LFE60:
 1940              		.size	CapSense_CSD_DisableWidget, .-CapSense_CSD_DisableWidget
 1941              		.section	.text.CapSense_CSD_FindMaximum,"ax",%progbits
 1942              		.align	2
 1943              		.global	CapSense_CSD_FindMaximum
 1944              		.code	16
 1945              		.thumb_func
 1946              		.type	CapSense_CSD_FindMaximum, %function
 1947              	CapSense_CSD_FindMaximum:
 1948              	.LFB61:
1355:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1356:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1357:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT)
1358:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1359:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_FindMaximum
1360:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1361:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1362:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1363:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1364:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_sensorSignal[] within a defined centroid and
1365:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1366:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  ignored.
1367:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1368:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1369:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1370:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1371:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1372:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  offset:  Start index of centroid in CapSense_CSD_sensorSignal[] array.
1373:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  count:   number of elements within centroid.
1374:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1375:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  diplex:   pointer to diplex table.
1376:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1377:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1378:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1379:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1380:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1381:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1382:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_startOfSlider[] - contains the index of the first slider element
1383:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1384:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1385:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1386:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1387:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1388:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1389:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint
1390:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 60


1391:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1392:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1393:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1949              		.loc 1 1393 0
 1950              		.cfi_startproc
 1951 0000 90B5     		push	{r4, r7, lr}
 1952              		.cfi_def_cfa_offset 12
 1953              		.cfi_offset 4, -12
 1954              		.cfi_offset 7, -8
 1955              		.cfi_offset 14, -4
 1956 0002 85B0     		sub	sp, sp, #20
 1957              		.cfi_def_cfa_offset 32
 1958 0004 00AF     		add	r7, sp, #0
 1959              		.cfi_def_cfa_register 7
 1960 0006 041C     		mov	r4, r0
 1961 0008 081C     		mov	r0, r1
 1962 000a 111C     		mov	r1, r2
 1963 000c FB1D     		add	r3, r7, #7
 1964 000e 221C     		add	r2, r4, #0
 1965 0010 1A70     		strb	r2, [r3]
 1966 0012 BB1D     		add	r3, r7, #6
 1967 0014 021C     		add	r2, r0, #0
 1968 0016 1A70     		strb	r2, [r3]
 1969 0018 7B1D     		add	r3, r7, #5
 1970 001a 0A1C     		add	r2, r1, #0
 1971 001c 1A70     		strb	r2, [r3]
1394:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 i;
1395:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1396:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curPos = 0u;
1397:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* No centroid at Start */
1398:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curCntrdSize = 0u;
1399:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curCtrdStartPos = CapSense_CSD_MAXIMUM_CENTROID;
1400:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Biggest centroid is zero */
1401:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1402:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1403:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1404:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum = CapSense_CSD_MAXIMUM_CENTROID;
 1972              		.loc 1 1404 0
 1973 001e 0E23     		mov	r3, #14
 1974 0020 FB18     		add	r3, r7, r3
 1975 0022 FF22     		mov	r2, #255
 1976 0024 1A70     		strb	r2, [r3]
1405:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1406:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 temp = 0u;
 1977              		.loc 1 1406 0
 1978 0026 0D23     		mov	r3, #13
 1979 0028 FB18     		add	r3, r7, r3
 1980 002a 0022     		mov	r2, #0
 1981 002c 1A70     		strb	r2, [r3]
1407:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 *startOfSlider = &CapSense_CSD_sensorSignal[offset];
 1982              		.loc 1 1407 0
 1983 002e FB1D     		add	r3, r7, #7
 1984 0030 1A78     		ldrb	r2, [r3]
 1985 0032 204B     		ldr	r3, .L130
 1986 0034 D318     		add	r3, r2, r3
 1987 0036 BB60     		str	r3, [r7, #8]
1408:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 61


1409:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1410:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(diplex != 0u)
1411:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1412:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Initialize */
1413:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 i = 0u;
1414:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1415:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Make slider x2 as Diplexed */
1416:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 count <<= 1u;
1417:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 while(1u)
1418:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1419:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1420:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1421:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if (curCtrdStartPos == CapSense_CSD_MAXIMUM_CENTROID)
1422:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1423:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Start of centroid */
1424:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = i;
1425:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
1426:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1427:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         else
1428:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1429:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
1430:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1431:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1432:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1433:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1434:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if(curCntrdSize > 0u)
1435:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1436:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* We are at the end of current */
1437:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1438:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1439:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1440:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1441:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1442:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1443:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize = 0u;
1444:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = CapSense_CSD_MAXIMUM_CENTROID;
1445:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1446:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1447:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1448:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     i++;
1449:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     curPos = diplex[i];
1450:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(i == count)
1451:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1452:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         break;
1453:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1454:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1455:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1456:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1457:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                        We are at the end of current */
1458:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1459:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1460:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1461:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1462:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1463:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1464:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1465:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 62


1466:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Without diplexing */
1467:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 biggestCtrdSize = count;
1468:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1469:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1470:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1471:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Check centroid size */
1472:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1473:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1474:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #else
1475:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1476:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1477:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1478:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1479:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1480:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1481:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (diplex == 0u)
1482:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1483:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 curPos = i;
1484:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1485:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             else
1486:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1487:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 curPos = diplex[i];
1488:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1489:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1490:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curPos = diplex[i];
1491:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLID
1492:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Looking for greater element within centroid */
1493:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1494:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1495:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1496:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1497:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 maximum = i;
1498:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 temp = startOfSlider[curPos];
1499:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1500:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1501:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1502:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1503:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1504:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for (i = 0u; i < count; i++)
 1988              		.loc 1 1504 0
 1989 0038 0F23     		mov	r3, #15
 1990 003a FB18     		add	r3, r7, r3
 1991 003c 0022     		mov	r2, #0
 1992 003e 1A70     		strb	r2, [r3]
 1993 0040 2AE0     		b	.L126
 1994              	.L128:
1505:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1506:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Looking for greater element within centroid */
1507:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1995              		.loc 1 1507 0
 1996 0042 0F23     		mov	r3, #15
 1997 0044 FB18     		add	r3, r7, r3
 1998 0046 1B78     		ldrb	r3, [r3]
 1999 0048 BA68     		ldr	r2, [r7, #8]
 2000 004a D318     		add	r3, r2, r3
 2001 004c 1B78     		ldrb	r3, [r3]
 2002 004e 7A1D     		add	r2, r7, #5
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 63


 2003 0050 1278     		ldrb	r2, [r2]
 2004 0052 9A42     		cmp	r2, r3
 2005 0054 19D2     		bcs	.L127
1508:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1509:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(startOfSlider[i] > temp)
 2006              		.loc 1 1509 0
 2007 0056 0F23     		mov	r3, #15
 2008 0058 FB18     		add	r3, r7, r3
 2009 005a 1B78     		ldrb	r3, [r3]
 2010 005c BA68     		ldr	r2, [r7, #8]
 2011 005e D318     		add	r3, r2, r3
 2012 0060 1B78     		ldrb	r3, [r3]
 2013 0062 0D22     		mov	r2, #13
 2014 0064 BA18     		add	r2, r7, r2
 2015 0066 1278     		ldrb	r2, [r2]
 2016 0068 9A42     		cmp	r2, r3
 2017 006a 0ED2     		bcs	.L127
1510:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1511:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         maximum = i;
 2018              		.loc 1 1511 0
 2019 006c 0E23     		mov	r3, #14
 2020 006e FB18     		add	r3, r7, r3
 2021 0070 0F22     		mov	r2, #15
 2022 0072 BA18     		add	r2, r7, r2
 2023 0074 1278     		ldrb	r2, [r2]
 2024 0076 1A70     		strb	r2, [r3]
1512:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         temp = startOfSlider[i];
 2025              		.loc 1 1512 0
 2026 0078 0F23     		mov	r3, #15
 2027 007a FB18     		add	r3, r7, r3
 2028 007c 1B78     		ldrb	r3, [r3]
 2029 007e BA68     		ldr	r2, [r7, #8]
 2030 0080 D218     		add	r2, r2, r3
 2031 0082 0D23     		mov	r3, #13
 2032 0084 FB18     		add	r3, r7, r3
 2033 0086 1278     		ldrb	r2, [r2]
 2034 0088 1A70     		strb	r2, [r3]
 2035              	.L127:
1504:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 2036              		.loc 1 1504 0 discriminator 2
 2037 008a 0F23     		mov	r3, #15
 2038 008c FB18     		add	r3, r7, r3
 2039 008e 1A78     		ldrb	r2, [r3]
 2040 0090 0F23     		mov	r3, #15
 2041 0092 FB18     		add	r3, r7, r3
 2042 0094 0132     		add	r2, r2, #1
 2043 0096 1A70     		strb	r2, [r3]
 2044              	.L126:
1504:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 2045              		.loc 1 1504 0 is_stmt 0 discriminator 1
 2046 0098 0F23     		mov	r3, #15
 2047 009a FA18     		add	r2, r7, r3
 2048 009c BB1D     		add	r3, r7, #6
 2049 009e 1278     		ldrb	r2, [r2]
 2050 00a0 1B78     		ldrb	r3, [r3]
 2051 00a2 9A42     		cmp	r2, r3
 2052 00a4 CDD3     		bcc	.L128
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 64


1513:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1514:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1515:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1516:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1517:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (maximum);
 2053              		.loc 1 1517 0 is_stmt 1
 2054 00a6 0E23     		mov	r3, #14
 2055 00a8 FB18     		add	r3, r7, r3
 2056 00aa 1B78     		ldrb	r3, [r3]
1518:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2057              		.loc 1 1518 0
 2058 00ac 181C     		mov	r0, r3
 2059 00ae BD46     		mov	sp, r7
 2060 00b0 05B0     		add	sp, sp, #20
 2061              		@ sp needed
 2062 00b2 90BD     		pop	{r4, r7, pc}
 2063              	.L131:
 2064              		.align	2
 2065              	.L130:
 2066 00b4 00000000 		.word	CapSense_CSD_sensorSignal
 2067              		.cfi_endproc
 2068              	.LFE61:
 2069              		.size	CapSense_CSD_FindMaximum, .-CapSense_CSD_FindMaximum
 2070              		.global	__aeabi_idiv
 2071              		.section	.text.CapSense_CSD_CalcCentroid,"ax",%progbits
 2072              		.align	2
 2073              		.global	CapSense_CSD_CalcCentroid
 2074              		.code	16
 2075              		.thumb_func
 2076              		.type	CapSense_CSD_CalcCentroid, %function
 2077              	CapSense_CSD_CalcCentroid:
 2078              	.LFB62:
1519:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1520:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1521:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1522:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_CalcCentroid
1523:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1524:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1525:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1526:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1527:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  resolution.
1528:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1529:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1530:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  type:  widget type.
1531:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  diplex:  pointer to diplex table.
1532:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1533:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  offset:   Start index of centroid in CapSense_CSD_sensorSignal[] array.
1534:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  count:    Number of elements within centroid.
1535:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1536:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  API resolution.
1537:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  noiseThreshold:  Noise threshold.
1538:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1539:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1540:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the slider.
1541:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1542:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1543:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 65


1544:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1545:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1546:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1547:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset,
1548:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1549:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #else
1550:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset,
1551:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1552:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1553:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2079              		.loc 1 1553 0
 2080              		.cfi_startproc
 2081 0000 B0B5     		push	{r4, r5, r7, lr}
 2082              		.cfi_def_cfa_offset 16
 2083              		.cfi_offset 4, -16
 2084              		.cfi_offset 5, -12
 2085              		.cfi_offset 7, -8
 2086              		.cfi_offset 14, -4
 2087 0002 88B0     		sub	sp, sp, #32
 2088              		.cfi_def_cfa_offset 48
 2089 0004 00AF     		add	r7, sp, #0
 2090              		.cfi_def_cfa_register 7
 2091 0006 051C     		mov	r5, r0
 2092 0008 0C1C     		mov	r4, r1
 2093 000a 101C     		mov	r0, r2
 2094 000c 191C     		mov	r1, r3
 2095 000e FB1D     		add	r3, r7, #7
 2096 0010 2A1C     		add	r2, r5, #0
 2097 0012 1A70     		strb	r2, [r3]
 2098 0014 BB1D     		add	r3, r7, #6
 2099 0016 221C     		add	r2, r4, #0
 2100 0018 1A70     		strb	r2, [r3]
 2101 001a 7B1D     		add	r3, r7, #5
 2102 001c 021C     		add	r2, r0, #0
 2103 001e 1A70     		strb	r2, [r3]
 2104 0020 BB1C     		add	r3, r7, #2
 2105 0022 0A1C     		add	r2, r1, #0
 2106 0024 1A80     		strh	r2, [r3]
1554:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC
1555:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posPrev;
1556:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posNext;
1557:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1558:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1559:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Helps during centroid calculation */
1560:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT)
1561:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             static uint8 CapSense_CSD_centroid[3u];
1562:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT) */
1563:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1564:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1565:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 pos;
1566:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1567:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1568:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 position;
1569:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 numerator;
1570:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         int32 denominator;
1571:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1572:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8  *startOfSlider = &CapSense_CSD_sensorSignal[offset];
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 66


 2107              		.loc 1 1572 0
 2108 0026 BB1D     		add	r3, r7, #6
 2109 0028 1A78     		ldrb	r2, [r3]
 2110 002a 5B4B     		ldr	r3, .L142
 2111 002c D318     		add	r3, r2, r3
 2112 002e BB61     		str	r3, [r7, #24]
1573:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1574:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC
1575:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             posPrev = 0u;
 2113              		.loc 1 1575 0
 2114 0030 1F23     		mov	r3, #31
 2115 0032 FB18     		add	r3, r7, r3
 2116 0034 0022     		mov	r2, #0
 2117 0036 1A70     		strb	r2, [r3]
1576:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1577:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1578:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1579:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(type == CapSense_CSD_TYPE_RADIAL_SLIDER)
1580:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1581:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1582:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1583:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1584:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Copy Signal to the centroid array */
1585:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1586:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1587:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check borders for ROTARY Slider */
1588:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1589:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1590:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[count - 1u];
1591:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[1u];
1592:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1593:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1594:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1595:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1596:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[0u];
1597:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1598:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1599:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1600:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1601:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[maximum + 1u];
1602:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1603:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1604:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1605:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1606:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1607:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1608:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1609:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1610:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1611:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1612:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1613:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1614:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(diplex == 0u)
1615:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1616:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         pos     = maximum;
1617:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1618:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posNext = maximum + 1u;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 67


1619:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1620:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
1621:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1622:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         pos     = diplex[maximum];
1623:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1624:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posNext = diplex[maximum + 1u];
1625:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         count <<= 1u;
1626:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1627:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1628:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1629:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     pos     = diplex[maximum];
1630:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1631:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posNext = diplex[maximum + 1u];
1632:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     count <<= 1u;
1633:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #else
1634:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1635:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (maximum >= 1u)
 2118              		.loc 1 1635 0
 2119 0038 FB1D     		add	r3, r7, #7
 2120 003a 1B78     		ldrb	r3, [r3]
 2121 003c 002B     		cmp	r3, #0
 2122 003e 05D0     		beq	.L133
1636:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1637:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
 2123              		.loc 1 1637 0
 2124 0040 1F23     		mov	r3, #31
 2125 0042 FB18     		add	r3, r7, r3
 2126 0044 FA1D     		add	r2, r7, #7
 2127 0046 1278     		ldrb	r2, [r2]
 2128 0048 013A     		sub	r2, r2, #1
 2129 004a 1A70     		strb	r2, [r3]
 2130              	.L133:
1638:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1639:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posNext = maximum + 1u;
 2131              		.loc 1 1639 0
 2132 004c 1723     		mov	r3, #23
 2133 004e FB18     		add	r3, r7, r3
 2134 0050 FA1D     		add	r2, r7, #7
 2135 0052 1278     		ldrb	r2, [r2]
 2136 0054 0132     		add	r2, r2, #1
 2137 0056 1A70     		strb	r2, [r3]
1640:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1641:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1642:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Copy Signal to the centroid array */
1643:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1644:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[pos];
1645:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #else
1646:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
 2138              		.loc 1 1646 0
 2139 0058 FB1D     		add	r3, r7, #7
 2140 005a 1B78     		ldrb	r3, [r3]
 2141 005c BA69     		ldr	r2, [r7, #24]
 2142 005e D318     		add	r3, r2, r3
 2143 0060 1A78     		ldrb	r2, [r3]
 2144 0062 4E4B     		ldr	r3, .L142+4
 2145 0064 5A70     		strb	r2, [r3, #1]
1647:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 68


1648:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1649:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check borders for LINEAR Slider */
1650:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 2146              		.loc 1 1650 0
 2147 0066 FB1D     		add	r3, r7, #7
 2148 0068 1B78     		ldrb	r3, [r3]
 2149 006a 002B     		cmp	r3, #0
 2150 006c 0BD1     		bne	.L134
1651:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1652:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
 2151              		.loc 1 1652 0
 2152 006e 4B4B     		ldr	r3, .L142+4
 2153 0070 0022     		mov	r2, #0
 2154 0072 1A70     		strb	r2, [r3]
1653:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
 2155              		.loc 1 1653 0
 2156 0074 1723     		mov	r3, #23
 2157 0076 FB18     		add	r3, r7, r3
 2158 0078 1B78     		ldrb	r3, [r3]
 2159 007a BA69     		ldr	r2, [r7, #24]
 2160 007c D318     		add	r3, r2, r3
 2161 007e 1A78     		ldrb	r2, [r3]
 2162 0080 464B     		ldr	r3, .L142+4
 2163 0082 9A70     		strb	r2, [r3, #2]
 2164 0084 22E0     		b	.L135
 2165              	.L134:
1654:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1655:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 2166              		.loc 1 1655 0
 2167 0086 FB1D     		add	r3, r7, #7
 2168 0088 1A78     		ldrb	r2, [r3]
 2169 008a 7B1D     		add	r3, r7, #5
 2170 008c 1B78     		ldrb	r3, [r3]
 2171 008e 013B     		sub	r3, r3, #1
 2172 0090 9A42     		cmp	r2, r3
 2173 0092 0BD1     		bne	.L136
1656:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1657:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
 2174              		.loc 1 1657 0
 2175 0094 1F23     		mov	r3, #31
 2176 0096 FB18     		add	r3, r7, r3
 2177 0098 1B78     		ldrb	r3, [r3]
 2178 009a BA69     		ldr	r2, [r7, #24]
 2179 009c D318     		add	r3, r2, r3
 2180 009e 1A78     		ldrb	r2, [r3]
 2181 00a0 3E4B     		ldr	r3, .L142+4
 2182 00a2 1A70     		strb	r2, [r3]
1658:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
 2183              		.loc 1 1658 0
 2184 00a4 3D4B     		ldr	r3, .L142+4
 2185 00a6 0022     		mov	r2, #0
 2186 00a8 9A70     		strb	r2, [r3, #2]
 2187 00aa 0FE0     		b	.L135
 2188              	.L136:
1659:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1660:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1661:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 69


1662:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
 2189              		.loc 1 1662 0
 2190 00ac 1F23     		mov	r3, #31
 2191 00ae FB18     		add	r3, r7, r3
 2192 00b0 1B78     		ldrb	r3, [r3]
 2193 00b2 BA69     		ldr	r2, [r7, #24]
 2194 00b4 D318     		add	r3, r2, r3
 2195 00b6 1A78     		ldrb	r2, [r3]
 2196 00b8 384B     		ldr	r3, .L142+4
 2197 00ba 1A70     		strb	r2, [r3]
1663:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
 2198              		.loc 1 1663 0
 2199 00bc 1723     		mov	r3, #23
 2200 00be FB18     		add	r3, r7, r3
 2201 00c0 1B78     		ldrb	r3, [r3]
 2202 00c2 BA69     		ldr	r2, [r7, #24]
 2203 00c4 D318     		add	r3, r2, r3
 2204 00c6 1A78     		ldrb	r2, [r3]
 2205 00c8 344B     		ldr	r3, .L142+4
 2206 00ca 9A70     		strb	r2, [r3, #2]
 2207              	.L135:
1664:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1665:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_CSD_TOTAL_TOUCH_PADS
1666:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1667:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1668:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1669:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1670:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1671:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1672:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_PREV] > noiseThreshold)
 2208              		.loc 1 1672 0
 2209 00cc 334B     		ldr	r3, .L142+4
 2210 00ce 1B78     		ldrb	r3, [r3]
 2211 00d0 3022     		mov	r2, #48
 2212 00d2 BA18     		add	r2, r7, r2
 2213 00d4 1278     		ldrb	r2, [r2]
 2214 00d6 9A42     		cmp	r2, r3
 2215 00d8 09D2     		bcs	.L137
1673:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1674:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] -= noiseThreshold;
 2216              		.loc 1 1674 0
 2217 00da 304B     		ldr	r3, .L142+4
 2218 00dc 1A78     		ldrb	r2, [r3]
 2219 00de 3023     		mov	r3, #48
 2220 00e0 FB18     		add	r3, r7, r3
 2221 00e2 1B78     		ldrb	r3, [r3]
 2222 00e4 D31A     		sub	r3, r2, r3
 2223 00e6 DAB2     		uxtb	r2, r3
 2224 00e8 2C4B     		ldr	r3, .L142+4
 2225 00ea 1A70     		strb	r2, [r3]
 2226 00ec 02E0     		b	.L138
 2227              	.L137:
1675:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1676:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1677:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1678:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
 2228              		.loc 1 1678 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 70


 2229 00ee 2B4B     		ldr	r3, .L142+4
 2230 00f0 0022     		mov	r2, #0
 2231 00f2 1A70     		strb	r2, [r3]
 2232              	.L138:
1679:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1680:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1681:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1682:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_centroid[CapSense_CSD_POS] -= noiseThreshold;
 2233              		.loc 1 1682 0
 2234 00f4 294B     		ldr	r3, .L142+4
 2235 00f6 5A78     		ldrb	r2, [r3, #1]
 2236 00f8 3023     		mov	r3, #48
 2237 00fa FB18     		add	r3, r7, r3
 2238 00fc 1B78     		ldrb	r3, [r3]
 2239 00fe D31A     		sub	r3, r2, r3
 2240 0100 DAB2     		uxtb	r2, r3
 2241 0102 264B     		ldr	r3, .L142+4
 2242 0104 5A70     		strb	r2, [r3, #1]
1683:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1684:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1685:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] > noiseThreshold)
 2243              		.loc 1 1685 0
 2244 0106 254B     		ldr	r3, .L142+4
 2245 0108 9B78     		ldrb	r3, [r3, #2]
 2246 010a 3022     		mov	r2, #48
 2247 010c BA18     		add	r2, r7, r2
 2248 010e 1278     		ldrb	r2, [r2]
 2249 0110 9A42     		cmp	r2, r3
 2250 0112 09D2     		bcs	.L139
1686:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1687:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -= noiseThreshold;
 2251              		.loc 1 1687 0
 2252 0114 214B     		ldr	r3, .L142+4
 2253 0116 9A78     		ldrb	r2, [r3, #2]
 2254 0118 3023     		mov	r3, #48
 2255 011a FB18     		add	r3, r7, r3
 2256 011c 1B78     		ldrb	r3, [r3]
 2257 011e D31A     		sub	r3, r2, r3
 2258 0120 DAB2     		uxtb	r2, r3
 2259 0122 1E4B     		ldr	r3, .L142+4
 2260 0124 9A70     		strb	r2, [r3, #2]
 2261 0126 02E0     		b	.L140
 2262              	.L139:
1688:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1689:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1690:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1691:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
 2263              		.loc 1 1691 0
 2264 0128 1C4B     		ldr	r3, .L142+4
 2265 012a 0022     		mov	r2, #0
 2266 012c 9A70     		strb	r2, [r3, #2]
 2267              	.L140:
1692:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1693:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1694:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1695:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Si+1 - Si-1 */
1696:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         numerator = (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 71


 2268              		.loc 1 1696 0
 2269 012e 1B4B     		ldr	r3, .L142+4
 2270 0130 9B78     		ldrb	r3, [r3, #2]
 2271 0132 1A1C     		mov	r2, r3
1697:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
 2272              		.loc 1 1697 0
 2273 0134 194B     		ldr	r3, .L142+4
 2274 0136 1B78     		ldrb	r3, [r3]
1696:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
 2275              		.loc 1 1696 0
 2276 0138 D31A     		sub	r3, r2, r3
 2277 013a 3B61     		str	r3, [r7, #16]
1698:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1699:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Si+1 + Si + Si-1 */
1700:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (int32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV] +
 2278              		.loc 1 1700 0
 2279 013c 174B     		ldr	r3, .L142+4
 2280 013e 1B78     		ldrb	r3, [r3]
 2281 0140 1A1C     		mov	r2, r3
1701:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] +
 2282              		.loc 1 1701 0
 2283 0142 164B     		ldr	r3, .L142+4
 2284 0144 5B78     		ldrb	r3, [r3, #1]
1700:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] +
 2285              		.loc 1 1700 0
 2286 0146 D318     		add	r3, r2, r3
1702:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT];
 2287              		.loc 1 1702 0
 2288 0148 144A     		ldr	r2, .L142+4
 2289 014a 9278     		ldrb	r2, [r2, #2]
1700:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] +
 2290              		.loc 1 1700 0
 2291 014c 9B18     		add	r3, r3, r2
 2292 014e FB60     		str	r3, [r7, #12]
1703:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1704:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* (numerator/denominator) + maximum */
1705:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 2293              		.loc 1 1705 0
 2294 0150 3B69     		ldr	r3, [r7, #16]
 2295 0152 1B02     		lsl	r3, r3, #8
 2296 0154 181C     		mov	r0, r3
 2297 0156 F968     		ldr	r1, [r7, #12]
 2298 0158 FFF7FEFF 		bl	__aeabi_idiv
 2299 015c 031C     		mov	r3, r0
 2300 015e 1A1C     		mov	r2, r3
 2301 0160 FB1D     		add	r3, r7, #7
 2302 0162 1B78     		ldrb	r3, [r3]
 2303 0164 1B02     		lsl	r3, r3, #8
 2304 0166 D318     		add	r3, r2, r3
 2305 0168 FB60     		str	r3, [r7, #12]
1706:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1707:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if(CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1708:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Only required for RADIAL Slider */
1709:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(denominator < 0)
1710:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1711:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1712:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 72


1713:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1714:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1715:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator *= (int16)resolution;
 2306              		.loc 1 1715 0
 2307 016a BB1C     		add	r3, r7, #2
 2308 016c 1B88     		ldrh	r3, [r3]
 2309 016e 1AB2     		sxth	r2, r3
 2310 0170 FB68     		ldr	r3, [r7, #12]
 2311 0172 5343     		mul	r3, r2
 2312 0174 FB60     		str	r3, [r7, #12]
1716:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1717:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Round result and put it to uint8 */
1718:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CSD_CENTROID_ROUND_VALUE));
 2313              		.loc 1 1718 0
 2314 0176 FB68     		ldr	r3, [r7, #12]
 2315 0178 FE22     		mov	r2, #254
 2316 017a D201     		lsl	r2, r2, #7
 2317 017c 9446     		mov	ip, r2
 2318 017e 6344     		add	r3, r3, ip
 2319 0180 1A0C     		lsr	r2, r3, #16
 2320 0182 0B23     		mov	r3, #11
 2321 0184 FB18     		add	r3, r7, r3
 2322 0186 1A70     		strb	r2, [r3]
1719:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1720:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
 2323              		.loc 1 1720 0
 2324 0188 0B23     		mov	r3, #11
 2325 018a FB18     		add	r3, r7, r3
 2326 018c 1B78     		ldrb	r3, [r3]
1721:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2327              		.loc 1 1721 0
 2328 018e 181C     		mov	r0, r3
 2329 0190 BD46     		mov	sp, r7
 2330 0192 08B0     		add	sp, sp, #32
 2331              		@ sp needed
 2332 0194 B0BD     		pop	{r4, r5, r7, pc}
 2333              	.L143:
 2334 0196 C046     		.align	2
 2335              	.L142:
 2336 0198 00000000 		.word	CapSense_CSD_sensorSignal
 2337 019c 44000000 		.word	CapSense_CSD_centroid.5419
 2338              		.cfi_endproc
 2339              	.LFE62:
 2340              		.size	CapSense_CSD_CalcCentroid, .-CapSense_CSD_CalcCentroid
 2341              		.section	.text.CapSense_CSD_GetCentroidPos,"ax",%progbits
 2342              		.align	2
 2343              		.global	CapSense_CSD_GetCentroidPos
 2344              		.code	16
 2345              		.thumb_func
 2346              		.type	CapSense_CSD_GetCentroidPos, %function
 2347              	CapSense_CSD_GetCentroidPos:
 2348              	.LFB63:
1722:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT) */
1723:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1724:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1725:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u
1726:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 73


1727:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetCentroidPos
1728:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1729:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1730:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1731:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1732:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1733:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1734:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result if enabled.
1735:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1736:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1737:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1738:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1739:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__LS           5
1740:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1741:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1742:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the linear slider.
1743:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1744:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1745:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1746:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1747:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1748:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1749:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1750:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1751:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1752:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1753:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1754:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1755:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Note:
1756:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1757:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1758:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1759:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1760:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1761:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_GetCentroidPos(uint32 widget)
1762:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2349              		.loc 1 1762 0
 2350              		.cfi_startproc
 2351 0000 90B5     		push	{r4, r7, lr}
 2352              		.cfi_def_cfa_offset 12
 2353              		.cfi_offset 4, -12
 2354              		.cfi_offset 7, -8
 2355              		.cfi_offset 14, -4
 2356 0002 87B0     		sub	sp, sp, #28
 2357              		.cfi_def_cfa_offset 40
 2358 0004 02AF     		add	r7, sp, #8
 2359              		.cfi_def_cfa 7, 32
 2360 0006 7860     		str	r0, [r7, #4]
1763:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1764:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             const uint8 *diplex;
1765:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1766:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1767:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1768:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1769:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
 2361              		.loc 1 1769 0
 2362 0008 0D23     		mov	r3, #13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 74


 2363 000a FB18     		add	r3, r7, r3
 2364 000c 5249     		ldr	r1, .L150
 2365 000e 7A68     		ldr	r2, [r7, #4]
 2366 0010 8A18     		add	r2, r1, r2
 2367 0012 1278     		ldrb	r2, [r2]
 2368 0014 1A70     		strb	r2, [r3]
1770:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
 2369              		.loc 1 1770 0
 2370 0016 0C23     		mov	r3, #12
 2371 0018 FB18     		add	r3, r7, r3
 2372 001a 5049     		ldr	r1, .L150+4
 2373 001c 7A68     		ldr	r2, [r7, #4]
 2374 001e 8A18     		add	r2, r1, r2
 2375 0020 1278     		ldrb	r2, [r2]
 2376 0022 1A70     		strb	r2, [r3]
1771:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1772:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1773:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) ||
1774:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1775:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1776:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MAS
1777:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_
1778:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
1779:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1780:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum;
1781:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 position;
1782:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
 2377              		.loc 1 1782 0
 2378 0024 0B23     		mov	r3, #11
 2379 0026 FB18     		add	r3, r7, r3
 2380 0028 4D49     		ldr	r1, .L150+8
 2381 002a 7A68     		ldr	r2, [r7, #4]
 2382 002c 8A18     		add	r2, r1, r2
 2383 002e 1278     		ldrb	r2, [r2]
 2384 0030 1A70     		strb	r2, [r3]
1783:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
 2385              		.loc 1 1783 0
 2386 0032 0A23     		mov	r3, #10
 2387 0034 FB18     		add	r3, r7, r3
 2388 0036 4B49     		ldr	r1, .L150+12
 2389 0038 7A68     		ldr	r2, [r7, #4]
 2390 003a 8A18     		add	r2, r1, r2
 2391 003c 1278     		ldrb	r2, [r2]
 2392 003e 1A70     		strb	r2, [r3]
1784:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1785:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1786:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(widget < CapSense_CSD_TOTAL_DIPLEXED_SLIDERS_COUNT)
1787:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1788:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 maximum = CapSense_CSD_diplexTable[widget];
1789:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 diplex = &CapSense_CSD_diplexTable[maximum];
1790:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1791:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1792:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1793:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 diplex = 0u;
1794:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1795:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1796:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 75


1797:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */
1798:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1799:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
1800:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1801:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
 2393              		.loc 1 1801 0
 2394 0040 494A     		ldr	r2, .L150+16
 2395 0042 7B68     		ldr	r3, [r7, #4]
 2396 0044 D318     		add	r3, r2, r3
 2397 0046 1A78     		ldrb	r2, [r3]
 2398 0048 0923     		mov	r3, #9
 2399 004a FC18     		add	r4, r7, r3
 2400 004c 0B23     		mov	r3, #11
 2401 004e FB18     		add	r3, r7, r3
 2402 0050 1978     		ldrb	r1, [r3]
 2403 0052 0A23     		mov	r3, #10
 2404 0054 FB18     		add	r3, r7, r3
 2405 0056 1B78     		ldrb	r3, [r3]
 2406 0058 081C     		mov	r0, r1
 2407 005a 191C     		mov	r1, r3
 2408 005c FFF7FEFF 		bl	CapSense_CSD_FindMaximum
 2409 0060 031C     		mov	r3, r0
 2410 0062 2370     		strb	r3, [r4]
1802:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1803:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1804:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (maximum != 0xFFu)
 2411              		.loc 1 1804 0
 2412 0064 0923     		mov	r3, #9
 2413 0066 FB18     		add	r3, r7, r3
 2414 0068 1B78     		ldrb	r3, [r3]
 2415 006a FF2B     		cmp	r3, #255
 2416 006c 5BD0     		beq	.L145
1805:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1806:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1807:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum,
 2417              		.loc 1 1807 0
 2418 006e 3F4C     		ldr	r4, .L150+20
 2419 0070 3F4A     		ldr	r2, .L150+24
 2420 0072 7B68     		ldr	r3, [r7, #4]
 2421 0074 D318     		add	r3, r2, r3
 2422 0076 1B78     		ldrb	r3, [r3]
 2423 0078 0922     		mov	r2, #9
 2424 007a BA18     		add	r2, r7, r2
 2425 007c 1078     		ldrb	r0, [r2]
 2426 007e 0B22     		mov	r2, #11
 2427 0080 BA18     		add	r2, r7, r2
 2428 0082 1178     		ldrb	r1, [r2]
 2429 0084 0A22     		mov	r2, #10
 2430 0086 BA18     		add	r2, r7, r2
 2431 0088 1278     		ldrb	r2, [r2]
 2432 008a 0093     		str	r3, [sp]
 2433 008c 231C     		mov	r3, r4
 2434 008e FFF7FEFF 		bl	CapSense_CSD_CalcCentroid
 2435 0092 031C     		mov	r3, r0
 2436 0094 1A1C     		mov	r2, r3
 2437 0096 0E23     		mov	r3, #14
 2438 0098 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 76


 2439 009a 1A80     		strh	r2, [r3]
1808:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1809:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1810:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1811:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1812:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
 2440              		.loc 1 1812 0
 2441 009c 0C23     		mov	r3, #12
 2442 009e FB18     		add	r3, r7, r3
 2443 00a0 1B78     		ldrb	r3, [r3]
 2444 00a2 1F22     		mov	r2, #31
 2445 00a4 1340     		and	r3, r2
 2446 00a6 4FD0     		beq	.L148
1813:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1814:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate position to store filters data */
1815:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 2447              		.loc 1 1815 0
 2448 00a8 0823     		mov	r3, #8
 2449 00aa FB18     		add	r3, r7, r3
 2450 00ac 0D22     		mov	r2, #13
 2451 00ae BA18     		add	r2, r7, r2
 2452 00b0 1278     		ldrb	r2, [r2]
 2453 00b2 0132     		add	r2, r2, #1
 2454 00b4 1A70     		strb	r2, [r3]
1816:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1817:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
 2455              		.loc 1 1817 0
 2456 00b6 0D23     		mov	r3, #13
 2457 00b8 FB18     		add	r3, r7, r3
 2458 00ba 1B78     		ldrb	r3, [r3]
 2459 00bc 264A     		ldr	r2, .L150
 2460 00be D35C     		ldrb	r3, [r2, r3]
 2461 00c0 002B     		cmp	r3, #0
 2462 00c2 0FD1     		bne	.L147
1818:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1819:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Init filters */
1820:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
 2463              		.loc 1 1820 0
 2464 00c4 0823     		mov	r3, #8
 2465 00c6 FB18     		add	r3, r7, r3
 2466 00c8 1B78     		ldrb	r3, [r3]
 2467 00ca 0E22     		mov	r2, #14
 2468 00cc BA18     		add	r2, r7, r2
 2469 00ce 1288     		ldrh	r2, [r2]
 2470 00d0 D1B2     		uxtb	r1, r2
 2471 00d2 214A     		ldr	r2, .L150
 2472 00d4 D154     		strb	r1, [r2, r3]
1821:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1822:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1823:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1824:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1825:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1826:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) ||
1827:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1828:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1829:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1830:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 77


1831:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1832:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1833:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1834:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1835:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1836:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1837:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
 2473              		.loc 1 1837 0
 2474 00d6 0D23     		mov	r3, #13
 2475 00d8 FB18     		add	r3, r7, r3
 2476 00da 1B78     		ldrb	r3, [r3]
 2477 00dc 1E4A     		ldr	r2, .L150
 2478 00de 0121     		mov	r1, #1
 2479 00e0 D154     		strb	r1, [r2, r3]
 2480 00e2 31E0     		b	.L148
 2481              	.L147:
1838:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1839:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
1840:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1841:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Do filtering */
1842:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1843:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1844:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1845:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1846:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
1847:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1848:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1849:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
1850:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1851:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1852:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1853:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /*(0u != (CapSense_CSD_MEDIAN_FILTER &
1854:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *         CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1855:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1856:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1857:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if(0u!=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1858:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
1859:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1860:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1861:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
1862:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1863:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1864:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]=CapSense_CSD_posFiltersDat
1865:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1866:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1867:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1868:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1869:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1870:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1871:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1872:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
1873:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1874:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
1875:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1876:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1877:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1878:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 78


1879:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1880:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1881:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1882:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1883:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1884:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1885:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
1886:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1887:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1888:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1889:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
1890:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1891:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1892:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1893:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1894:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
 2482              		.loc 1 1894 0
 2483 00e4 0C23     		mov	r3, #12
 2484 00e6 FB18     		add	r3, r7, r3
 2485 00e8 1B78     		ldrb	r3, [r3]
 2486 00ea 1022     		mov	r2, #16
 2487 00ec 1340     		and	r3, r2
 2488 00ee 2BD0     		beq	.L148
1895:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1896:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
1897:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
 2489              		.loc 1 1897 0
 2490 00f0 0823     		mov	r3, #8
 2491 00f2 FB18     		add	r3, r7, r3
 2492 00f4 1B78     		ldrb	r3, [r3]
 2493 00f6 184A     		ldr	r2, .L150
 2494 00f8 D35C     		ldrb	r3, [r2, r3]
1896:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
 2495              		.loc 1 1896 0
 2496 00fa 9AB2     		uxth	r2, r3
 2497 00fc 0E23     		mov	r3, #14
 2498 00fe FC18     		add	r4, r7, r3
 2499 0100 0E23     		mov	r3, #14
 2500 0102 FB18     		add	r3, r7, r3
 2501 0104 1B88     		ldrh	r3, [r3]
 2502 0106 181C     		mov	r0, r3
 2503 0108 111C     		mov	r1, r2
 2504 010a FFF7FEFF 		bl	CapSense_CSD_JitterFilter
 2505 010e 031C     		mov	r3, r0
 2506 0110 2380     		strh	r3, [r4]
1898:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
 2507              		.loc 1 1898 0
 2508 0112 0823     		mov	r3, #8
 2509 0114 FB18     		add	r3, r7, r3
 2510 0116 1B78     		ldrb	r3, [r3]
 2511 0118 0E22     		mov	r2, #14
 2512 011a BA18     		add	r2, r7, r2
 2513 011c 1288     		ldrh	r2, [r2]
 2514 011e D1B2     		uxtb	r1, r2
 2515 0120 0D4A     		ldr	r2, .L150
 2516 0122 D154     		strb	r1, [r2, r3]
 2517 0124 10E0     		b	.L148
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 79


 2518              	.L145:
1899:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1900:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
1901:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1902:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1903:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1904:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1905:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1906:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1907:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1908:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1909:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1910:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Maximum wasn't found */
1911:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
 2519              		.loc 1 1911 0
 2520 0126 0E23     		mov	r3, #14
 2521 0128 FB18     		add	r3, r7, r3
 2522 012a 0122     		mov	r2, #1
 2523 012c 5242     		neg	r2, r2
 2524 012e 1A80     		strh	r2, [r3]
1912:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1913:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if(0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1914:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
1915:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
 2525              		.loc 1 1915 0
 2526 0130 0C23     		mov	r3, #12
 2527 0132 FB18     		add	r3, r7, r3
 2528 0134 1B78     		ldrb	r3, [r3]
 2529 0136 1F22     		mov	r2, #31
 2530 0138 1340     		and	r3, r2
 2531 013a 05D0     		beq	.L148
1916:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1917:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
 2532              		.loc 1 1917 0
 2533 013c 0D23     		mov	r3, #13
 2534 013e FB18     		add	r3, r7, r3
 2535 0140 1B78     		ldrb	r3, [r3]
 2536 0142 054A     		ldr	r2, .L150
 2537 0144 0021     		mov	r1, #0
 2538 0146 D154     		strb	r1, [r2, r3]
 2539              	.L148:
1918:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1919:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1920:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1921:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1922:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1923:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
 2540              		.loc 1 1923 0
 2541 0148 0E23     		mov	r3, #14
 2542 014a FB18     		add	r3, r7, r3
 2543 014c 1B88     		ldrh	r3, [r3]
1924:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2544              		.loc 1 1924 0
 2545 014e 181C     		mov	r0, r3
 2546 0150 BD46     		mov	sp, r7
 2547 0152 05B0     		add	sp, sp, #20
 2548              		@ sp needed
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 80


 2549 0154 90BD     		pop	{r4, r7, pc}
 2550              	.L151:
 2551 0156 C046     		.align	2
 2552              	.L150:
 2553 0158 18000000 		.word	CapSense_CSD_posFiltersData
 2554 015c 14000000 		.word	CapSense_CSD_posFiltersMask
 2555 0160 00000000 		.word	CapSense_CSD_rawDataIndex
 2556 0164 00000000 		.word	CapSense_CSD_numberOfSensors
 2557 0168 00000000 		.word	CapSense_CSD_fingerThreshold
 2558 016c 8B0B0000 		.word	2955
 2559 0170 00000000 		.word	CapSense_CSD_noiseThreshold
 2560              		.cfi_endproc
 2561              	.LFE63:
 2562              		.size	CapSense_CSD_GetCentroidPos, .-CapSense_CSD_GetCentroidPos
 2563              		.section	.text.CapSense_CSD_GetRadialCentroidPos,"ax",%progbits
 2564              		.align	2
 2565              		.global	CapSense_CSD_GetRadialCentroidPos
 2566              		.code	16
 2567              		.thumb_func
 2568              		.type	CapSense_CSD_GetRadialCentroidPos, %function
 2569              	CapSense_CSD_GetRadialCentroidPos:
 2570              	.LFB64:
1925:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COU
1926:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1927:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1928:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u
1929:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1930:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetRadialCentroidPos
1931:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1932:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1933:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1934:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1935:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1936:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1937:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result if enabled.
1938:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1939:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1940:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1941:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1942:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__RS           5
1943:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1944:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1945:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the radial slider.
1946:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1947:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1948:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
1949:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1950:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1951:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1952:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1953:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1954:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1955:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1956:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1957:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Note:
1958:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1959:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 81


1960:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1961:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1962:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1963:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1964:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****      uint16 CapSense_CSD_GetRadialCentroidPos(uint32 widget)
1965:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2571              		.loc 1 1965 0
 2572              		.cfi_startproc
 2573 0000 90B5     		push	{r4, r7, lr}
 2574              		.cfi_def_cfa_offset 12
 2575              		.cfi_offset 4, -12
 2576              		.cfi_offset 7, -8
 2577              		.cfi_offset 14, -4
 2578 0002 87B0     		sub	sp, sp, #28
 2579              		.cfi_def_cfa_offset 40
 2580 0004 02AF     		add	r7, sp, #8
 2581              		.cfi_def_cfa 7, 32
 2582 0006 7860     		str	r0, [r7, #4]
1966:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1967:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1968:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1969:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
1970:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1971:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1972:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) ||
1973:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1974:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1975:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MAS
1976:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_
1977:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
1978:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1979:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum;
1980:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 position;
1981:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
 2583              		.loc 1 1981 0
 2584 0008 0D23     		mov	r3, #13
 2585 000a FB18     		add	r3, r7, r3
 2586 000c 2349     		ldr	r1, .L156
 2587 000e 7A68     		ldr	r2, [r7, #4]
 2588 0010 8A18     		add	r2, r1, r2
 2589 0012 1278     		ldrb	r2, [r2]
 2590 0014 1A70     		strb	r2, [r3]
1982:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
 2591              		.loc 1 1982 0
 2592 0016 0C23     		mov	r3, #12
 2593 0018 FB18     		add	r3, r7, r3
 2594 001a 2149     		ldr	r1, .L156+4
 2595 001c 7A68     		ldr	r2, [r7, #4]
 2596 001e 8A18     		add	r2, r1, r2
 2597 0020 1278     		ldrb	r2, [r2]
 2598 0022 1A70     		strb	r2, [r3]
1983:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1984:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */
1985:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1986:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
1987:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1988:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 82


 2599              		.loc 1 1988 0
 2600 0024 1F4A     		ldr	r2, .L156+8
 2601 0026 7B68     		ldr	r3, [r7, #4]
 2602 0028 D318     		add	r3, r2, r3
 2603 002a 1A78     		ldrb	r2, [r3]
 2604 002c 0B23     		mov	r3, #11
 2605 002e FC18     		add	r4, r7, r3
 2606 0030 0D23     		mov	r3, #13
 2607 0032 FB18     		add	r3, r7, r3
 2608 0034 1978     		ldrb	r1, [r3]
 2609 0036 0C23     		mov	r3, #12
 2610 0038 FB18     		add	r3, r7, r3
 2611 003a 1B78     		ldrb	r3, [r3]
 2612 003c 081C     		mov	r0, r1
 2613 003e 191C     		mov	r1, r3
 2614 0040 FFF7FEFF 		bl	CapSense_CSD_FindMaximum
 2615 0044 031C     		mov	r3, r0
 2616 0046 2370     		strb	r3, [r4]
1989:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1990:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1991:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (maximum != CapSense_CSD_MAXIMUM_CENTROID)
 2617              		.loc 1 1991 0
 2618 0048 0B23     		mov	r3, #11
 2619 004a FB18     		add	r3, r7, r3
 2620 004c 1B78     		ldrb	r3, [r3]
 2621 004e FF2B     		cmp	r3, #255
 2622 0050 17D0     		beq	.L153
1992:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1993:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1994:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum,
 2623              		.loc 1 1994 0
 2624 0052 154C     		ldr	r4, .L156+12
 2625 0054 154A     		ldr	r2, .L156+16
 2626 0056 7B68     		ldr	r3, [r7, #4]
 2627 0058 D318     		add	r3, r2, r3
 2628 005a 1B78     		ldrb	r3, [r3]
 2629 005c 0B22     		mov	r2, #11
 2630 005e BA18     		add	r2, r7, r2
 2631 0060 1078     		ldrb	r0, [r2]
 2632 0062 0D22     		mov	r2, #13
 2633 0064 BA18     		add	r2, r7, r2
 2634 0066 1178     		ldrb	r1, [r2]
 2635 0068 0C22     		mov	r2, #12
 2636 006a BA18     		add	r2, r7, r2
 2637 006c 1278     		ldrb	r2, [r2]
 2638 006e 0093     		str	r3, [sp]
 2639 0070 231C     		mov	r3, r4
 2640 0072 FFF7FEFF 		bl	CapSense_CSD_CalcCentroid
 2641 0076 031C     		mov	r3, r0
 2642 0078 1A1C     		mov	r2, r3
 2643 007a 0E23     		mov	r3, #14
 2644 007c FB18     		add	r3, r7, r3
 2645 007e 1A80     		strh	r2, [r3]
 2646 0080 04E0     		b	.L154
 2647              	.L153:
1995:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1996:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 83


1997:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1998:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1999:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
2000:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2001:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate position to store filters data */
2002:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
2003:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2004:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
2005:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2006:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Init filters */
2007:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2008:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2009:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2010:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
2011:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2012:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2013:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))  ||
2014:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
2015:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2016:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
2017:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2018:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2019:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2020:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
2021:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2022:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2023:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2024:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
2025:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2026:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
2027:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2028:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Do filtering */
2029:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
2030:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
2031:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2032:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
2033:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
2034:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
2035:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
2036:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
2037:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                               CapSense_CSD_posFilte
2038:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
2039:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2040:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER &
2041:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2042:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2043:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2044:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_AVERAGING_FILTER & \
2045:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2046:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
2047:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2048:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
2049:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
2050:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2051:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2052:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]= CapSense_CSD_posFiltersDa
2053:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 84


2054:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2055:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
2056:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2057:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2058:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2059:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
2060:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
2061:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2062:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
2063:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2064:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2065:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2066:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER &
2067:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2068:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2069:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2070:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
2071:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
2072:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2073:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
2074:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2075:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2076:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2077:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER &
2078:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2079:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2080:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2081:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
2082:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
2083:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2084:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
2085:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                          CapSense_CSD_posFiltersDat
2086:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2087:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2088:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER &
2089:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2090:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2091:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2092:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2093:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2094:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2095:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2096:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
2097:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2098:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Maximum was not found */
2099:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
 2648              		.loc 1 2099 0
 2649 0082 0E23     		mov	r3, #14
 2650 0084 FB18     		add	r3, r7, r3
 2651 0086 0122     		mov	r2, #1
 2652 0088 5242     		neg	r2, r2
 2653 008a 1A80     		strh	r2, [r3]
 2654              	.L154:
2100:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2101:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
2102:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
2103:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 85


2104:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2105:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
2106:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2107:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2108:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2109:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2110:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
 2655              		.loc 1 2110 0
 2656 008c 0E23     		mov	r3, #14
 2657 008e FB18     		add	r3, r7, r3
 2658 0090 1B88     		ldrh	r3, [r3]
2111:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2659              		.loc 1 2111 0
 2660 0092 181C     		mov	r0, r3
 2661 0094 BD46     		mov	sp, r7
 2662 0096 05B0     		add	sp, sp, #20
 2663              		@ sp needed
 2664 0098 90BD     		pop	{r4, r7, pc}
 2665              	.L157:
 2666 009a C046     		.align	2
 2667              	.L156:
 2668 009c 00000000 		.word	CapSense_CSD_rawDataIndex
 2669 00a0 00000000 		.word	CapSense_CSD_numberOfSensors
 2670 00a4 00000000 		.word	CapSense_CSD_fingerThreshold
 2671 00a8 8B0B0000 		.word	2955
 2672 00ac 00000000 		.word	CapSense_CSD_noiseThreshold
 2673              		.cfi_endproc
 2674              	.LFE64:
 2675              		.size	CapSense_CSD_GetRadialCentroidPos, .-CapSense_CSD_GetRadialCentroidPos
 2676              		.section	.text.CapSense_CSD_MedianFilter,"ax",%progbits
 2677              		.align	2
 2678              		.global	CapSense_CSD_MedianFilter
 2679              		.code	16
 2680              		.thumb_func
 2681              		.type	CapSense_CSD_MedianFilter, %function
 2682              	CapSense_CSD_MedianFilter:
 2683              	.LFB65:
2112:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COU
2113:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2114:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2115:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2116:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2117:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetTouchCentroidPos
2118:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2119:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2120:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2121:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2122:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2123:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2124:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2125:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The position filter is applied to the result if enabled.
2126:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2127:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  customizer.
2128:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2129:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2130:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
2131:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every touchpad widget there are defines in this format:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 86


2132:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__TP            5
2133:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2134:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2135:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result of calculation of X and Y position are stored.
2136:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos[0u]  - position of X
2137:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos[1u]  - position of Y
2138:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2139:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2140:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2141:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2142:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2143:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2144:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2145:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2146:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2147:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2148:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   calculations.
2149:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2150:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2151:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 CapSense_CSD_GetTouchCentroidPos(uint32 widget, uint16* pos)
2152:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2153:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2154:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posXIndex;
2155:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posYIndex;
2156:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
2157:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
2158:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2159:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2160:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
2161:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2162:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint16 tempPos;
2163:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) 
2164:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK
2165:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
2166:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2167:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 MaxX;
2168:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 MaxY;
2169:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 posX;
2170:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 posY;
2171:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 touch = 0u;
2172:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
2173:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
2174:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2175:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within X centroid */
2176:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
2177:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             MaxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget], 0u
2178:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
2179:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             MaxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget]);
2180:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
2181:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2182:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (MaxX != CapSense_CSD_MAXIMUM_CENTROID)
2183:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2184:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             offset = CapSense_CSD_rawDataIndex[widget + 1u];
2185:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             count = CapSense_CSD_numberOfSensors[widget + 1u];
2186:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2187:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find Maximum within Y centroid */
2188:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_DIPLEX_SLIDER)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 87


2189:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 MaxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
2190:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #else
2191:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 MaxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
2192:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
2193:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2194:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (MaxY != CapSense_CSD_MAXIMUM_CENTROID)
2195:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2196:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* X and Y maximums are found = true touch */
2197:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 touch = 1u;
2198:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2199:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Calculate Y centroid */
2200:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 posY = CapSense_CSD_CalcCentroid(MaxY, offset, count,
2201:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget + 1u], CapSense_CSD_noiseThreshold[wid
2202:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2203:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Calculate X centroid */
2204:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 offset = CapSense_CSD_rawDataIndex[widget];
2205:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 count = CapSense_CSD_numberOfSensors[widget];
2206:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2207:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 posX = CapSense_CSD_CalcCentroid(MaxX, offset, count,
2208:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget],CapSense_CSD_noiseThreshold[widget]);
2209:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2210:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2211:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Check if this TP has enabled filters */
2212:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
2213:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2214:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Calculate position to store filters data */
2215:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2216:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posYIndex  = CapSense_CSD_posFiltersData[widget + 1u];
2217:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2218:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
2219:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
2220:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Init filters */
2221:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posXIndex] = posX;
2222:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posYIndex] = posY;
2223:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2224:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if((0u != (CapSense_CSD_MEDIAN_FILTER & \
2225:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))|| \
2226:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 (0u != (CapSense_CSD_AVERAGING_FILTER & \
2227:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2228:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2229:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) ||
2230:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
2231:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2232:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = posX;
2233:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = posY;
2234:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2235:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2236:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
2237:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *    (0u != (CapSense_CSD_AVERAGING_FILTER & \
2238:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *            CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2239:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2240:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2241:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
2242:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
2243:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         else
2244:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
2245:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Do filtering */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 88


2246:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
2247:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
2248:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2249:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
2250:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_MedianFilter(posX,
2251:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2252:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2253:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] =
2254:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2255:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
2256:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2257:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
2258:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_MedianFilter(posY,
2259:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2260:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2261:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] =
2262:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2263:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
2264:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2265:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2266:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER & \
2267:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2268:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2269:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2270:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if(0u !=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_F
2271:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
2272:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2273:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
2274:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_AveragingFilter(posX,
2275:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2276:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2277:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] =
2278:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2279:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
2280:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2281:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
2282:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_AveragingFilter(posY,
2283:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2284:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2285:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] =
2286:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2287:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
2288:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2289:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2290:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
2291:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2292:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2293:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2294:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
2295:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
2296:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2297:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR2Filter(posX,
2298:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                            CapSense_CSD_posFiltersD
2299:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
2300:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2301:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR2Filter(posY,
2302:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 89


2303:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
2304:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2305:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2306:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
2307:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2308:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2309:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2310:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
2311:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
2312:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2313:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR4Filter((uint16)posX,
2314:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2315:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
2316:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2317:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR4Filter((uint16)posY,
2318:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2319:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
2320:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2321:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2322:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
2323:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2324:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2325:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2326:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
2327:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
2328:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     {
2329:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         posX = (uint8) CapSense_CSD_JitterFilter(posX,
2330:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2331:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posXIndex] = posX;
2332:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2333:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         posY = (uint8) CapSense_CSD_JitterFilter(posY,
2334:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2335:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posYIndex] = posY;
2336:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     }
2337:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
2338:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2339:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2340:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
2341:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2342:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2343:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2344:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Save positions */
2345:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[0u] = posX;
2346:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[1u] = posY;
2347:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2348:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2349:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2350:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2351:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(touch == 0u)
2352:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2353:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
2354:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if ((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
2355:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2356:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
2357:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2358:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2359:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 90


2360:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2361:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (touch);
2362:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2363:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2364:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2365:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2366:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2367:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2368:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)) )
2369:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2370:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_MedianFilter
2371:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2372:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2373:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2374:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Median filter function.
2375:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2376:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  median value.
2377:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2378:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2379:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2380:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2381:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
2382:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2383:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2384:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2385:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2386:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2387:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2388:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2389:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2390:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2391:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2392:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2393:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2394:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2684              		.loc 1 2394 0
 2685              		.cfi_startproc
 2686 0000 90B5     		push	{r4, r7, lr}
 2687              		.cfi_def_cfa_offset 12
 2688              		.cfi_offset 4, -12
 2689              		.cfi_offset 7, -8
 2690              		.cfi_offset 14, -4
 2691 0002 85B0     		sub	sp, sp, #20
 2692              		.cfi_def_cfa_offset 32
 2693 0004 00AF     		add	r7, sp, #0
 2694              		.cfi_def_cfa_register 7
 2695 0006 041C     		mov	r4, r0
 2696 0008 081C     		mov	r0, r1
 2697 000a 111C     		mov	r1, r2
 2698 000c BB1D     		add	r3, r7, #6
 2699 000e 221C     		add	r2, r4, #0
 2700 0010 1A80     		strh	r2, [r3]
 2701 0012 3B1D     		add	r3, r7, #4
 2702 0014 021C     		add	r2, r0, #0
 2703 0016 1A80     		strh	r2, [r3]
 2704 0018 BB1C     		add	r3, r7, #2
 2705 001a 0A1C     		add	r2, r1, #0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 91


 2706 001c 1A80     		strh	r2, [r3]
2395:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 tmp;
2396:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2397:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x1 > x2)
 2707              		.loc 1 2397 0
 2708 001e BA1D     		add	r2, r7, #6
 2709 0020 3B1D     		add	r3, r7, #4
 2710 0022 1288     		ldrh	r2, [r2]
 2711 0024 1B88     		ldrh	r3, [r3]
 2712 0026 9A42     		cmp	r2, r3
 2713 0028 0DD9     		bls	.L159
2398:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2399:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tmp = x2;
 2714              		.loc 1 2399 0
 2715 002a 0E23     		mov	r3, #14
 2716 002c FB18     		add	r3, r7, r3
 2717 002e 3A1D     		add	r2, r7, #4
 2718 0030 1288     		ldrh	r2, [r2]
 2719 0032 1A80     		strh	r2, [r3]
2400:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x2 = x1;
 2720              		.loc 1 2400 0
 2721 0034 3B1D     		add	r3, r7, #4
 2722 0036 BA1D     		add	r2, r7, #6
 2723 0038 1288     		ldrh	r2, [r2]
 2724 003a 1A80     		strh	r2, [r3]
2401:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1 = tmp;
 2725              		.loc 1 2401 0
 2726 003c BB1D     		add	r3, r7, #6
 2727 003e 0E22     		mov	r2, #14
 2728 0040 BA18     		add	r2, r7, r2
 2729 0042 1288     		ldrh	r2, [r2]
 2730 0044 1A80     		strh	r2, [r3]
 2731              	.L159:
2402:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2403:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2404:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x2 > x3)
 2732              		.loc 1 2404 0
 2733 0046 3A1D     		add	r2, r7, #4
 2734 0048 BB1C     		add	r3, r7, #2
 2735 004a 1288     		ldrh	r2, [r2]
 2736 004c 1B88     		ldrh	r3, [r3]
 2737 004e 9A42     		cmp	r2, r3
 2738 0050 03D9     		bls	.L160
2405:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2406:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x2 = x3;
 2739              		.loc 1 2406 0
 2740 0052 3B1D     		add	r3, r7, #4
 2741 0054 BA1C     		add	r2, r7, #2
 2742 0056 1288     		ldrh	r2, [r2]
 2743 0058 1A80     		strh	r2, [r3]
 2744              	.L160:
2407:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2408:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2409:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 2745              		.loc 1 2409 0
 2746 005a 3B1D     		add	r3, r7, #4
 2747 005c BA1D     		add	r2, r7, #6
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 92


 2748 005e 1088     		ldrh	r0, [r2]
 2749 0060 1B88     		ldrh	r3, [r3]
 2750 0062 99B2     		uxth	r1, r3
 2751 0064 82B2     		uxth	r2, r0
 2752 0066 9142     		cmp	r1, r2
 2753 0068 00D2     		bcs	.L161
 2754 006a 031C     		add	r3, r0, #0
 2755              	.L161:
 2756 006c 9BB2     		uxth	r3, r3
2410:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2757              		.loc 1 2410 0
 2758 006e 181C     		mov	r0, r3
 2759 0070 BD46     		mov	sp, r7
 2760 0072 05B0     		add	sp, sp, #20
 2761              		@ sp needed
 2762 0074 90BD     		pop	{r4, r7, pc}
 2763              		.cfi_endproc
 2764              	.LFE65:
 2765              		.size	CapSense_CSD_MedianFilter, .-CapSense_CSD_MedianFilter
 2766 0076 C046     		.section	.text.CapSense_CSD_IIR4Filter,"ax",%progbits
 2767              		.align	2
 2768              		.global	CapSense_CSD_IIR4Filter
 2769              		.code	16
 2770              		.thumb_func
 2771              		.type	CapSense_CSD_IIR4Filter, %function
 2772              	CapSense_CSD_IIR4Filter:
 2773              	.LFB66:
2411:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2412:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2413:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)) ) */
2414:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2415:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2416:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)) || \
2417:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER)) )
2418:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2419:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_AveragingFilter
2420:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2421:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2422:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2423:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Averaging filter function.
2424:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2425:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  reports the averaging value.
2426:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2427:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2428:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2429:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2430:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
2431:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2432:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2433:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2434:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2435:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2436:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2437:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2438:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2439:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2440:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 93


2441:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2442:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2443:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2444:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2445:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2446:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2447:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2448:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) || \
2449:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER) ) */
2450:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2451:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2452:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)) || \
2453:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER)) )
2454:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2455:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR2Filter
2456:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2457:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2458:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2459:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2460:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2461:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2462:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2463:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2464:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2465:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2466:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2467:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2468:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2469:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2470:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2471:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2472:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2473:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2474:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2475:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR2Filter(uint16 x1, uint16 x2)
2476:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2477:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2478:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2479:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2480:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2481:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 1u;
2482:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2483:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2484:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2485:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)) || \
2486:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER)) )
2487:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2488:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2489:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2490:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)) || \
2491:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER)) )
2492:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2493:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR4Filter
2494:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2495:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2496:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2497:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 94


2498:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2499:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2500:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2501:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2502:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2503:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2504:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a filtered value.
2505:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2506:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2507:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2508:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2509:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2510:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2511:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2512:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2513:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR4Filter(uint16 x1, uint16 x2)
2514:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2774              		.loc 1 2514 0
 2775              		.cfi_startproc
 2776 0000 80B5     		push	{r7, lr}
 2777              		.cfi_def_cfa_offset 8
 2778              		.cfi_offset 7, -8
 2779              		.cfi_offset 14, -4
 2780 0002 84B0     		sub	sp, sp, #16
 2781              		.cfi_def_cfa_offset 24
 2782 0004 00AF     		add	r7, sp, #0
 2783              		.cfi_def_cfa_register 7
 2784 0006 021C     		mov	r2, r0
 2785 0008 BB1D     		add	r3, r7, #6
 2786 000a 1A80     		strh	r2, [r3]
 2787 000c 3B1D     		add	r3, r7, #4
 2788 000e 0A1C     		add	r2, r1, #0
 2789 0010 1A80     		strh	r2, [r3]
2515:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2516:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2517:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2518:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 2790              		.loc 1 2518 0
 2791 0012 BB1D     		add	r3, r7, #6
 2792 0014 1A88     		ldrh	r2, [r3]
 2793 0016 3B1D     		add	r3, r7, #4
 2794 0018 1B88     		ldrh	r3, [r3]
 2795 001a D318     		add	r3, r2, r3
 2796 001c FB60     		str	r3, [r7, #12]
2519:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 2797              		.loc 1 2519 0
 2798 001e 3B1D     		add	r3, r7, #4
 2799 0020 1B88     		ldrh	r3, [r3]
 2800 0022 5B00     		lsl	r3, r3, #1
 2801 0024 FA68     		ldr	r2, [r7, #12]
 2802 0026 D318     		add	r3, r2, r3
 2803 0028 FB60     		str	r3, [r7, #12]
2520:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 2u;
 2804              		.loc 1 2520 0
 2805 002a FB68     		ldr	r3, [r7, #12]
 2806 002c 9B08     		lsr	r3, r3, #2
 2807 002e FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 95


2521:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2522:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
 2808              		.loc 1 2522 0
 2809 0030 FB68     		ldr	r3, [r7, #12]
 2810 0032 9BB2     		uxth	r3, r3
2523:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2811              		.loc 1 2523 0
 2812 0034 181C     		mov	r0, r3
 2813 0036 BD46     		mov	sp, r7
 2814 0038 04B0     		add	sp, sp, #16
 2815              		@ sp needed
 2816 003a 80BD     		pop	{r7, pc}
 2817              		.cfi_endproc
 2818              	.LFE66:
 2819              		.size	CapSense_CSD_IIR4Filter, .-CapSense_CSD_IIR4Filter
 2820              		.section	.text.CapSense_CSD_JitterFilter,"ax",%progbits
 2821              		.align	2
 2822              		.global	CapSense_CSD_JitterFilter
 2823              		.code	16
 2824              		.thumb_func
 2825              		.type	CapSense_CSD_JitterFilter, %function
 2826              	CapSense_CSD_JitterFilter:
 2827              	.LFB67:
2524:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)) || \
2525:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER)) )
2526:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2527:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2528:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2529:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
2530:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) || \
2531:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)))
2532:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2533:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: uint16 CapSense_CSD_JitterFilter
2534:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2535:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2536:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2537:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Jitter filter function.
2538:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2539:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2540:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2541:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2542:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2543:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2544:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2545:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2546:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2547:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2548:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2549:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2550:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2551:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2552:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2553:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_JitterFilter(uint16 x1, uint16 x2)
2554:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2828              		.loc 1 2554 0
 2829              		.cfi_startproc
 2830 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 96


 2831              		.cfi_def_cfa_offset 8
 2832              		.cfi_offset 7, -8
 2833              		.cfi_offset 14, -4
 2834 0002 82B0     		sub	sp, sp, #8
 2835              		.cfi_def_cfa_offset 16
 2836 0004 00AF     		add	r7, sp, #0
 2837              		.cfi_def_cfa_register 7
 2838 0006 021C     		mov	r2, r0
 2839 0008 BB1D     		add	r3, r7, #6
 2840 000a 1A80     		strh	r2, [r3]
 2841 000c 3B1D     		add	r3, r7, #4
 2842 000e 0A1C     		add	r2, r1, #0
 2843 0010 1A80     		strh	r2, [r3]
2555:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x1 > x2)
 2844              		.loc 1 2555 0
 2845 0012 BA1D     		add	r2, r7, #6
 2846 0014 3B1D     		add	r3, r7, #4
 2847 0016 1288     		ldrh	r2, [r2]
 2848 0018 1B88     		ldrh	r3, [r3]
 2849 001a 9A42     		cmp	r2, r3
 2850 001c 05D9     		bls	.L166
2556:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2557:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1--;
 2851              		.loc 1 2557 0
 2852 001e BB1D     		add	r3, r7, #6
 2853 0020 1A88     		ldrh	r2, [r3]
 2854 0022 BB1D     		add	r3, r7, #6
 2855 0024 013A     		sub	r2, r2, #1
 2856 0026 1A80     		strh	r2, [r3]
 2857 0028 0AE0     		b	.L167
 2858              	.L166:
2558:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2559:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
2560:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2561:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (x1 < x2)
 2859              		.loc 1 2561 0
 2860 002a BA1D     		add	r2, r7, #6
 2861 002c 3B1D     		add	r3, r7, #4
 2862 002e 1288     		ldrh	r2, [r2]
 2863 0030 1B88     		ldrh	r3, [r3]
 2864 0032 9A42     		cmp	r2, r3
 2865 0034 04D2     		bcs	.L167
2562:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2563:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 x1++;
 2866              		.loc 1 2563 0
 2867 0036 BB1D     		add	r3, r7, #6
 2868 0038 1A88     		ldrh	r2, [r3]
 2869 003a BB1D     		add	r3, r7, #6
 2870 003c 0132     		add	r2, r2, #1
 2871 003e 1A80     		strh	r2, [r3]
 2872              	.L167:
2564:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2565:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2566:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2567:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return x1;
 2873              		.loc 1 2567 0
 2874 0040 BB1D     		add	r3, r7, #6
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 97


 2875 0042 1B88     		ldrh	r3, [r3]
2568:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2876              		.loc 1 2568 0
 2877 0044 181C     		mov	r0, r3
 2878 0046 BD46     		mov	sp, r7
 2879 0048 02B0     		add	sp, sp, #8
 2880              		@ sp needed
 2881 004a 80BD     		pop	{r7, pc}
 2882              		.cfi_endproc
 2883              	.LFE67:
 2884              		.size	CapSense_CSD_JitterFilter, .-CapSense_CSD_JitterFilter
 2885              		.section	.text.CapSense_CSD_GetWidgetNumber,"ax",%progbits
 2886              		.align	2
 2887              		.global	CapSense_CSD_GetWidgetNumber
 2888              		.code	16
 2889              		.thumb_func
 2890              		.type	CapSense_CSD_GetWidgetNumber, %function
 2891              	CapSense_CSD_GetWidgetNumber:
 2892              	.LFB68:
2569:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
2570:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) )
2571:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) )
2572:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2573:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2574:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2575:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER))
2576:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2577:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR8Filter
2578:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2579:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2580:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2581:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2582:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Only applies for raw data.
2583:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2584:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2585:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2586:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2587:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2588:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2589:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2590:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2591:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2592:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2593:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2594:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2595:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2596:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2597:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2598:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR8Filter(uint16 x1, uint16 x2)
2599:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2600:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2601:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2602:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2603:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1;
2604:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2605:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 3u;
2606:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 98


2607:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2608:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2609:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)) */
2610:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2611:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2612:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
2613:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2614:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR16Filter
2615:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2616:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2617:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2618:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2619:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Only applies for raw data.
2620:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2621:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2622:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2623:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2624:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2625:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2626:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2627:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2628:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2629:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2630:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2631:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2632:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2633:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2634:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2635:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR16Filter(uint16 x1, uint16 x2)
2636:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2637:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2638:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2639:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2640:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1;
2641:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2642:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 4u;
2643:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2644:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2645:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2646:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER) */
2647:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2648:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2649:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT))
2650:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2651:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2652:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetMatrixButtonPos
2653:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2654:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2655:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2656:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2657:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  button widget.
2658:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2659:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2660:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  widget number;
2661:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2662:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           stored:
2663:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           pos[0] - column position;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 99


2664:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           pos[1] - raw position.
2665:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2666:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2667:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2668:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  cases.
2669:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2670:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2671:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2672:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_sensorSignal[ ] - used to store a difference between the current value of
2673:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  raw data and a previous value of the baseline.
2674:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2675:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2676:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2677:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2678:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2679:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 CapSense_CSD_GetMatrixButtonPos(uint32 widget, uint8* pos)
2680:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2681:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 i;
2682:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 retVal = 0u;
2683:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 row_sig_max = 0u;
2684:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 col_sig_max = 0u;
2685:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 row_ind = 0u;
2686:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 col_ind = 0u;
2687:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2688:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(widget) == 1u)
2689:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2690:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find row number with maximal signal value */
2691:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for(i = CapSense_CSD_rawDataIndex[widget]; i < (CapSense_CSD_rawDataIndex[widget] + \
2692:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  CapSense_CSD_numberOfSensors[widget]); i++)
2693:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2694:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (CapSense_CSD_sensorSignal[i] > col_sig_max)
2695:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2696:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     col_ind = i;
2697:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     col_sig_max = CapSense_CSD_sensorSignal[i];
2698:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2699:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2700:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2701:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find row number with maximal signal value */
2702:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for(i = CapSense_CSD_rawDataIndex[widget+1u]; i < (CapSense_CSD_rawDataIndex[widget+1u]
2703:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  CapSense_CSD_numberOfSensors[widget+1u]); i++)
2704:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2705:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (CapSense_CSD_sensorSignal[i] > row_sig_max)
2706:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2707:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     row_ind = i;
2708:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     row_sig_max = CapSense_CSD_sensorSignal[i];
2709:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2710:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2711:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2712:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if((col_sig_max >= CapSense_CSD_fingerThreshold[widget]) && \
2713:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                (row_sig_max >= CapSense_CSD_fingerThreshold[widget+1u]))
2714:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2715:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[0u] = col_ind - CapSense_CSD_rawDataIndex[widget];
2716:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[1u] = row_ind - CapSense_CSD_rawDataIndex[widget+1u];
2717:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 retVal = 1u;
2718:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2719:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2720:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (retVal);
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 100


2721:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2722:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2723:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (0u != (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)) */
2724:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2725:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2726:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetWidgetNumber
2727:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2728:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2729:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2730:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the widget number for the sensor.
2731:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2732:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2733:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2734:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2735:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2736:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2737:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the widget number for the sensor.
2738:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2739:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2740:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
2741:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2742:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2743:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2744:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2745:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2746:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_GetWidgetNumber(uint32 sensor)
2747:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2893              		.loc 1 2747 0
 2894              		.cfi_startproc
 2895 0000 80B5     		push	{r7, lr}
 2896              		.cfi_def_cfa_offset 8
 2897              		.cfi_offset 7, -8
 2898              		.cfi_offset 14, -4
 2899 0002 82B0     		sub	sp, sp, #8
 2900              		.cfi_def_cfa_offset 16
 2901 0004 00AF     		add	r7, sp, #0
 2902              		.cfi_def_cfa_register 7
 2903 0006 7860     		str	r0, [r7, #4]
2748:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return((uint32)CapSense_CSD_widgetNumber[sensor]);
 2904              		.loc 1 2748 0
 2905 0008 034A     		ldr	r2, .L171
 2906 000a 7B68     		ldr	r3, [r7, #4]
 2907 000c D318     		add	r3, r2, r3
 2908 000e 1B78     		ldrb	r3, [r3]
2749:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2909              		.loc 1 2749 0
 2910 0010 181C     		mov	r0, r3
 2911 0012 BD46     		mov	sp, r7
 2912 0014 02B0     		add	sp, sp, #8
 2913              		@ sp needed
 2914 0016 80BD     		pop	{r7, pc}
 2915              	.L172:
 2916              		.align	2
 2917              	.L171:
 2918 0018 00000000 		.word	CapSense_CSD_widgetNumber
 2919              		.cfi_endproc
 2920              	.LFE68:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 101


 2921              		.size	CapSense_CSD_GetWidgetNumber, .-CapSense_CSD_GetWidgetNumber
 2922              		.section	.text.CapSense_CSD_GetLowBaselineReset,"ax",%progbits
 2923              		.align	2
 2924              		.global	CapSense_CSD_GetLowBaselineReset
 2925              		.code	16
 2926              		.thumb_func
 2927              		.type	CapSense_CSD_GetLowBaselineReset, %function
 2928              	CapSense_CSD_GetLowBaselineReset:
 2929              	.LFB69:
2750:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2751:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2752:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetLowBaselineReset
2753:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2754:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2755:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2756:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2757:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2758:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2759:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2760:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2761:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2762:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2763:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  low baseline reset threshold value a sensor.
2764:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2765:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2766:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_lowBaselineReset[]  - stores low baseline reset values.
2767:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2768:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2769:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2770:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2771:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2772:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetLowBaselineReset(uint32 sensor)
2773:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2930              		.loc 1 2773 0
 2931              		.cfi_startproc
 2932 0000 80B5     		push	{r7, lr}
 2933              		.cfi_def_cfa_offset 8
 2934              		.cfi_offset 7, -8
 2935              		.cfi_offset 14, -4
 2936 0002 82B0     		sub	sp, sp, #8
 2937              		.cfi_def_cfa_offset 16
 2938 0004 00AF     		add	r7, sp, #0
 2939              		.cfi_def_cfa_register 7
 2940 0006 7860     		str	r0, [r7, #4]
2774:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_lowBaselineReset[sensor]);
 2941              		.loc 1 2774 0
 2942 0008 034A     		ldr	r2, .L175
 2943 000a 7B68     		ldr	r3, [r7, #4]
 2944 000c D318     		add	r3, r2, r3
 2945 000e 1B78     		ldrb	r3, [r3]
2775:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2946              		.loc 1 2775 0
 2947 0010 181C     		mov	r0, r3
 2948 0012 BD46     		mov	sp, r7
 2949 0014 02B0     		add	sp, sp, #8
 2950              		@ sp needed
 2951 0016 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 102


 2952              	.L176:
 2953              		.align	2
 2954              	.L175:
 2955 0018 00000000 		.word	CapSense_CSD_lowBaselineReset
 2956              		.cfi_endproc
 2957              	.LFE69:
 2958              		.size	CapSense_CSD_GetLowBaselineReset, .-CapSense_CSD_GetLowBaselineReset
 2959              		.section	.text.CapSense_CSD_GetDebounce,"ax",%progbits
 2960              		.align	2
 2961              		.global	CapSense_CSD_GetDebounce
 2962              		.code	16
 2963              		.thumb_func
 2964              		.type	CapSense_CSD_GetDebounce, %function
 2965              	CapSense_CSD_GetDebounce:
 2966              	.LFB70:
2776:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2777:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2778:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetDebounce
2779:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2780:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2781:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2782:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns a debounce value.
2783:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2784:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2785:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2786:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2787:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2788:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2789:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Debounce value
2790:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2791:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2792:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounce[]  - stores the debounce value.
2793:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2794:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2795:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2796:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2797:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2798:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetDebounce(uint32 widget)
2799:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2967              		.loc 1 2799 0
 2968              		.cfi_startproc
 2969 0000 80B5     		push	{r7, lr}
 2970              		.cfi_def_cfa_offset 8
 2971              		.cfi_offset 7, -8
 2972              		.cfi_offset 14, -4
 2973 0002 82B0     		sub	sp, sp, #8
 2974              		.cfi_def_cfa_offset 16
 2975 0004 00AF     		add	r7, sp, #0
 2976              		.cfi_def_cfa_register 7
 2977 0006 7860     		str	r0, [r7, #4]
2800:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_debounce[widget]);
 2978              		.loc 1 2800 0
 2979 0008 034A     		ldr	r2, .L179
 2980 000a 7B68     		ldr	r3, [r7, #4]
 2981 000c D318     		add	r3, r2, r3
 2982 000e 1B78     		ldrb	r3, [r3]
2801:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 103


 2983              		.loc 1 2801 0
 2984 0010 181C     		mov	r0, r3
 2985 0012 BD46     		mov	sp, r7
 2986 0014 02B0     		add	sp, sp, #8
 2987              		@ sp needed
 2988 0016 80BD     		pop	{r7, pc}
 2989              	.L180:
 2990              		.align	2
 2991              	.L179:
 2992 0018 00000000 		.word	CapSense_CSD_debounce
 2993              		.cfi_endproc
 2994              	.LFE70:
 2995              		.size	CapSense_CSD_GetDebounce, .-CapSense_CSD_GetDebounce
 2996              		.section	.text.CapSense_CSD_EnableRawDataFilters,"ax",%progbits
 2997              		.align	2
 2998              		.global	CapSense_CSD_EnableRawDataFilters
 2999              		.code	16
 3000              		.thumb_func
 3001              		.type	CapSense_CSD_EnableRawDataFilters, %function
 3002              	CapSense_CSD_EnableRawDataFilters:
 3003              	.LFB71:
2802:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2803:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
2804:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2805:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_EnableRawDataFilters
2806:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2807:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2808:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2809:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2810:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2811:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2812:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2813:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2814:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2815:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2816:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2817:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2818:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_enableRawFilters defines if the filters are enabled or not.
2819:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2820:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2821:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2822:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2823:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2824:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_EnableRawDataFilters(void)
2825:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 3004              		.loc 1 2825 0
 3005              		.cfi_startproc
 3006 0000 80B5     		push	{r7, lr}
 3007              		.cfi_def_cfa_offset 8
 3008              		.cfi_offset 7, -8
 3009              		.cfi_offset 14, -4
 3010 0002 00AF     		add	r7, sp, #0
 3011              		.cfi_def_cfa_register 7
2826:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_ENABLED;
 3012              		.loc 1 2826 0
 3013 0004 024B     		ldr	r3, .L182
 3014 0006 0122     		mov	r2, #1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 104


 3015 0008 1A70     		strb	r2, [r3]
2827:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 3016              		.loc 1 2827 0
 3017 000a BD46     		mov	sp, r7
 3018              		@ sp needed
 3019 000c 80BD     		pop	{r7, pc}
 3020              	.L183:
 3021 000e C046     		.align	2
 3022              	.L182:
 3023 0010 00000000 		.word	CapSense_CSD_enableRawFilters
 3024              		.cfi_endproc
 3025              	.LFE71:
 3026              		.size	CapSense_CSD_EnableRawDataFilters, .-CapSense_CSD_EnableRawDataFilters
 3027              		.section	.text.CapSense_CSD_DisableRawDataFilters,"ax",%progbits
 3028              		.align	2
 3029              		.global	CapSense_CSD_DisableRawDataFilters
 3030              		.code	16
 3031              		.thumb_func
 3032              		.type	CapSense_CSD_DisableRawDataFilters, %function
 3033              	CapSense_CSD_DisableRawDataFilters:
 3034              	.LFB72:
2828:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2829:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2830:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_DisableRawDataFilters
2831:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2832:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2833:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2834:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2835:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2836:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2837:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2838:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2839:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2840:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2841:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2842:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2843:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_enableRawFilters defines if the filters are enabled or not.
2844:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2845:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2846:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2847:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2848:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2849:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_DisableRawDataFilters(void)
2850:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 3035              		.loc 1 2850 0
 3036              		.cfi_startproc
 3037 0000 80B5     		push	{r7, lr}
 3038              		.cfi_def_cfa_offset 8
 3039              		.cfi_offset 7, -8
 3040              		.cfi_offset 14, -4
 3041 0002 00AF     		add	r7, sp, #0
 3042              		.cfi_def_cfa_register 7
2851:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_DISABLED;
 3043              		.loc 1 2851 0
 3044 0004 024B     		ldr	r3, .L185
 3045 0006 0022     		mov	r2, #0
 3046 0008 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 105


2852:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 3047              		.loc 1 2852 0
 3048 000a BD46     		mov	sp, r7
 3049              		@ sp needed
 3050 000c 80BD     		pop	{r7, pc}
 3051              	.L186:
 3052 000e C046     		.align	2
 3053              	.L185:
 3054 0010 00000000 		.word	CapSense_CSD_enableRawFilters
 3055              		.cfi_endproc
 3056              	.LFE72:
 3057              		.size	CapSense_CSD_DisableRawDataFilters, .-CapSense_CSD_DisableRawDataFilters
 3058              		.bss
 3059 0042 0000     		.align	2
 3060              	CapSense_CSD_centroid.5419:
 3061 0044 000000   		.space	3
 3062 0047 00       		.text
 3063              	.Letext0:
 3064              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 3065              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_CSD_PVT.h"
 3066              		.section	.debug_info,"",%progbits
 3067              	.Ldebug_info0:
 3068 0000 8E0E0000 		.4byte	0xe8e
 3069 0004 0400     		.2byte	0x4
 3070 0006 00000000 		.4byte	.Ldebug_abbrev0
 3071 000a 04       		.byte	0x4
 3072 000b 01       		.uleb128 0x1
 3073 000c 49060000 		.4byte	.LASF146
 3074 0010 01       		.byte	0x1
 3075 0011 03010000 		.4byte	.LASF147
 3076 0015 7F080000 		.4byte	.LASF148
 3077 0019 00000000 		.4byte	.Ldebug_ranges0+0
 3078 001d 00000000 		.4byte	0
 3079 0021 00000000 		.4byte	.Ldebug_line0
 3080 0025 02       		.uleb128 0x2
 3081 0026 01       		.byte	0x1
 3082 0027 06       		.byte	0x6
 3083 0028 B00B0000 		.4byte	.LASF0
 3084 002c 02       		.uleb128 0x2
 3085 002d 01       		.byte	0x1
 3086 002e 08       		.byte	0x8
 3087 002f F70A0000 		.4byte	.LASF1
 3088 0033 02       		.uleb128 0x2
 3089 0034 02       		.byte	0x2
 3090 0035 05       		.byte	0x5
 3091 0036 E3080000 		.4byte	.LASF2
 3092 003a 02       		.uleb128 0x2
 3093 003b 02       		.byte	0x2
 3094 003c 07       		.byte	0x7
 3095 003d BC0B0000 		.4byte	.LASF3
 3096 0041 02       		.uleb128 0x2
 3097 0042 04       		.byte	0x4
 3098 0043 05       		.byte	0x5
 3099 0044 ED080000 		.4byte	.LASF4
 3100 0048 02       		.uleb128 0x2
 3101 0049 04       		.byte	0x4
 3102 004a 07       		.byte	0x7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 106


 3103 004b EE090000 		.4byte	.LASF5
 3104 004f 02       		.uleb128 0x2
 3105 0050 08       		.byte	0x8
 3106 0051 05       		.byte	0x5
 3107 0052 A7050000 		.4byte	.LASF6
 3108 0056 02       		.uleb128 0x2
 3109 0057 08       		.byte	0x8
 3110 0058 07       		.byte	0x7
 3111 0059 D5020000 		.4byte	.LASF7
 3112 005d 03       		.uleb128 0x3
 3113 005e 04       		.byte	0x4
 3114 005f 05       		.byte	0x5
 3115 0060 696E7400 		.ascii	"int\000"
 3116 0064 02       		.uleb128 0x2
 3117 0065 04       		.byte	0x4
 3118 0066 07       		.byte	0x7
 3119 0067 86000000 		.4byte	.LASF8
 3120 006b 04       		.uleb128 0x4
 3121 006c 260C0000 		.4byte	.LASF9
 3122 0070 02       		.byte	0x2
 3123 0071 3801     		.2byte	0x138
 3124 0073 2C000000 		.4byte	0x2c
 3125 0077 04       		.uleb128 0x4
 3126 0078 13050000 		.4byte	.LASF10
 3127 007c 02       		.byte	0x2
 3128 007d 3901     		.2byte	0x139
 3129 007f 3A000000 		.4byte	0x3a
 3130 0083 04       		.uleb128 0x4
 3131 0084 22070000 		.4byte	.LASF11
 3132 0088 02       		.byte	0x2
 3133 0089 3A01     		.2byte	0x13a
 3134 008b 48000000 		.4byte	0x48
 3135 008f 04       		.uleb128 0x4
 3136 0090 F0000000 		.4byte	.LASF12
 3137 0094 02       		.byte	0x2
 3138 0095 3C01     		.2byte	0x13c
 3139 0097 33000000 		.4byte	0x33
 3140 009b 04       		.uleb128 0x4
 3141 009c 75020000 		.4byte	.LASF13
 3142 00a0 02       		.byte	0x2
 3143 00a1 3D01     		.2byte	0x13d
 3144 00a3 41000000 		.4byte	0x41
 3145 00a7 02       		.uleb128 0x2
 3146 00a8 04       		.byte	0x4
 3147 00a9 04       		.byte	0x4
 3148 00aa 6F020000 		.4byte	.LASF14
 3149 00ae 02       		.uleb128 0x2
 3150 00af 08       		.byte	0x8
 3151 00b0 04       		.byte	0x4
 3152 00b1 2C0C0000 		.4byte	.LASF15
 3153 00b5 02       		.uleb128 0x2
 3154 00b6 01       		.byte	0x1
 3155 00b7 08       		.byte	0x8
 3156 00b8 B9040000 		.4byte	.LASF16
 3157 00bc 02       		.uleb128 0x2
 3158 00bd 04       		.byte	0x4
 3159 00be 07       		.byte	0x7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 107


 3160 00bf E5090000 		.4byte	.LASF17
 3161 00c3 05       		.uleb128 0x5
 3162 00c4 5C       		.byte	0x5c
 3163 00c5 03       		.byte	0x3
 3164 00c6 2F       		.byte	0x2f
 3165 00c7 E0010000 		.4byte	0x1e0
 3166 00cb 06       		.uleb128 0x6
 3167 00cc 1F050000 		.4byte	.LASF18
 3168 00d0 03       		.byte	0x3
 3169 00d1 31       		.byte	0x31
 3170 00d2 E0010000 		.4byte	0x1e0
 3171 00d6 00       		.byte	0
 3172 00d7 06       		.uleb128 0x6
 3173 00d8 70080000 		.4byte	.LASF19
 3174 00dc 03       		.byte	0x3
 3175 00dd 32       		.byte	0x32
 3176 00de E0010000 		.4byte	0x1e0
 3177 00e2 04       		.byte	0x4
 3178 00e3 06       		.uleb128 0x6
 3179 00e4 6F0B0000 		.4byte	.LASF20
 3180 00e8 03       		.byte	0x3
 3181 00e9 33       		.byte	0x33
 3182 00ea E0010000 		.4byte	0x1e0
 3183 00ee 08       		.byte	0x8
 3184 00ef 06       		.uleb128 0x6
 3185 00f0 D00A0000 		.4byte	.LASF21
 3186 00f4 03       		.byte	0x3
 3187 00f5 34       		.byte	0x34
 3188 00f6 E0010000 		.4byte	0x1e0
 3189 00fa 0C       		.byte	0xc
 3190 00fb 06       		.uleb128 0x6
 3191 00fc A60B0000 		.4byte	.LASF22
 3192 0100 03       		.byte	0x3
 3193 0101 35       		.byte	0x35
 3194 0102 E0010000 		.4byte	0x1e0
 3195 0106 10       		.byte	0x10
 3196 0107 06       		.uleb128 0x6
 3197 0108 5C090000 		.4byte	.LASF23
 3198 010c 03       		.byte	0x3
 3199 010d 36       		.byte	0x36
 3200 010e E6010000 		.4byte	0x1e6
 3201 0112 14       		.byte	0x14
 3202 0113 06       		.uleb128 0x6
 3203 0114 81020000 		.4byte	.LASF24
 3204 0118 03       		.byte	0x3
 3205 0119 37       		.byte	0x37
 3206 011a F1010000 		.4byte	0x1f1
 3207 011e 18       		.byte	0x18
 3208 011f 06       		.uleb128 0x6
 3209 0120 CA030000 		.4byte	.LASF25
 3210 0124 03       		.byte	0x3
 3211 0125 38       		.byte	0x38
 3212 0126 E0010000 		.4byte	0x1e0
 3213 012a 1C       		.byte	0x1c
 3214 012b 06       		.uleb128 0x6
 3215 012c 9F020000 		.4byte	.LASF26
 3216 0130 03       		.byte	0x3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 108


 3217 0131 39       		.byte	0x39
 3218 0132 E0010000 		.4byte	0x1e0
 3219 0136 20       		.byte	0x20
 3220 0137 06       		.uleb128 0x6
 3221 0138 30010000 		.4byte	.LASF27
 3222 013c 03       		.byte	0x3
 3223 013d 3A       		.byte	0x3a
 3224 013e E0010000 		.4byte	0x1e0
 3225 0142 24       		.byte	0x24
 3226 0143 06       		.uleb128 0x6
 3227 0144 15070000 		.4byte	.LASF28
 3228 0148 03       		.byte	0x3
 3229 0149 3B       		.byte	0x3b
 3230 014a F7010000 		.4byte	0x1f7
 3231 014e 28       		.byte	0x28
 3232 014f 06       		.uleb128 0x6
 3233 0150 F6000000 		.4byte	.LASF29
 3234 0154 03       		.byte	0x3
 3235 0155 3C       		.byte	0x3c
 3236 0156 F7010000 		.4byte	0x1f7
 3237 015a 2C       		.byte	0x2c
 3238 015b 06       		.uleb128 0x6
 3239 015c AE0A0000 		.4byte	.LASF30
 3240 0160 03       		.byte	0x3
 3241 0161 3D       		.byte	0x3d
 3242 0162 F7010000 		.4byte	0x1f7
 3243 0166 30       		.byte	0x30
 3244 0167 06       		.uleb128 0x6
 3245 0168 BE090000 		.4byte	.LASF31
 3246 016c 03       		.byte	0x3
 3247 016d 3E       		.byte	0x3e
 3248 016e E0010000 		.4byte	0x1e0
 3249 0172 34       		.byte	0x34
 3250 0173 06       		.uleb128 0x6
 3251 0174 00000000 		.4byte	.LASF32
 3252 0178 03       		.byte	0x3
 3253 0179 3F       		.byte	0x3f
 3254 017a E0010000 		.4byte	0x1e0
 3255 017e 38       		.byte	0x38
 3256 017f 06       		.uleb128 0x6
 3257 0180 D9040000 		.4byte	.LASF33
 3258 0184 03       		.byte	0x3
 3259 0185 40       		.byte	0x40
 3260 0186 E6010000 		.4byte	0x1e6
 3261 018a 3C       		.byte	0x3c
 3262 018b 06       		.uleb128 0x6
 3263 018c 5F010000 		.4byte	.LASF34
 3264 0190 03       		.byte	0x3
 3265 0191 41       		.byte	0x41
 3266 0192 E6010000 		.4byte	0x1e6
 3267 0196 40       		.byte	0x40
 3268 0197 06       		.uleb128 0x6
 3269 0198 0D000000 		.4byte	.LASF35
 3270 019c 03       		.byte	0x3
 3271 019d 42       		.byte	0x42
 3272 019e E6010000 		.4byte	0x1e6
 3273 01a2 44       		.byte	0x44
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 109


 3274 01a3 06       		.uleb128 0x6
 3275 01a4 22060000 		.4byte	.LASF36
 3276 01a8 03       		.byte	0x3
 3277 01a9 43       		.byte	0x43
 3278 01aa 0C020000 		.4byte	0x20c
 3279 01ae 48       		.byte	0x48
 3280 01af 06       		.uleb128 0x6
 3281 01b0 F6050000 		.4byte	.LASF37
 3282 01b4 03       		.byte	0x3
 3283 01b5 44       		.byte	0x44
 3284 01b6 1D020000 		.4byte	0x21d
 3285 01ba 4C       		.byte	0x4c
 3286 01bb 06       		.uleb128 0x6
 3287 01bc E0030000 		.4byte	.LASF38
 3288 01c0 03       		.byte	0x3
 3289 01c1 45       		.byte	0x45
 3290 01c2 0C020000 		.4byte	0x20c
 3291 01c6 50       		.byte	0x50
 3292 01c7 06       		.uleb128 0x6
 3293 01c8 1D000000 		.4byte	.LASF39
 3294 01cc 03       		.byte	0x3
 3295 01cd 46       		.byte	0x46
 3296 01ce 37020000 		.4byte	0x237
 3297 01d2 54       		.byte	0x54
 3298 01d3 06       		.uleb128 0x6
 3299 01d4 CF0B0000 		.4byte	.LASF40
 3300 01d8 03       		.byte	0x3
 3301 01d9 47       		.byte	0x47
 3302 01da 52020000 		.4byte	0x252
 3303 01de 58       		.byte	0x58
 3304 01df 00       		.byte	0
 3305 01e0 07       		.uleb128 0x7
 3306 01e1 04       		.byte	0x4
 3307 01e2 6B000000 		.4byte	0x6b
 3308 01e6 07       		.uleb128 0x7
 3309 01e7 04       		.byte	0x4
 3310 01e8 EC010000 		.4byte	0x1ec
 3311 01ec 08       		.uleb128 0x8
 3312 01ed 6B000000 		.4byte	0x6b
 3313 01f1 07       		.uleb128 0x7
 3314 01f2 04       		.byte	0x4
 3315 01f3 83000000 		.4byte	0x83
 3316 01f7 07       		.uleb128 0x7
 3317 01f8 04       		.byte	0x4
 3318 01f9 77000000 		.4byte	0x77
 3319 01fd 09       		.uleb128 0x9
 3320 01fe 77000000 		.4byte	0x77
 3321 0202 0C020000 		.4byte	0x20c
 3322 0206 0A       		.uleb128 0xa
 3323 0207 83000000 		.4byte	0x83
 3324 020b 00       		.byte	0
 3325 020c 07       		.uleb128 0x7
 3326 020d 04       		.byte	0x4
 3327 020e FD010000 		.4byte	0x1fd
 3328 0212 0B       		.uleb128 0xb
 3329 0213 1D020000 		.4byte	0x21d
 3330 0217 0A       		.uleb128 0xa
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 110


 3331 0218 83000000 		.4byte	0x83
 3332 021c 00       		.byte	0
 3333 021d 07       		.uleb128 0x7
 3334 021e 04       		.byte	0x4
 3335 021f 12020000 		.4byte	0x212
 3336 0223 09       		.uleb128 0x9
 3337 0224 83000000 		.4byte	0x83
 3338 0228 37020000 		.4byte	0x237
 3339 022c 0A       		.uleb128 0xa
 3340 022d E6010000 		.4byte	0x1e6
 3341 0231 0A       		.uleb128 0xa
 3342 0232 83000000 		.4byte	0x83
 3343 0236 00       		.byte	0
 3344 0237 07       		.uleb128 0x7
 3345 0238 04       		.byte	0x4
 3346 0239 23020000 		.4byte	0x223
 3347 023d 0B       		.uleb128 0xb
 3348 023e 52020000 		.4byte	0x252
 3349 0242 0A       		.uleb128 0xa
 3350 0243 E0010000 		.4byte	0x1e0
 3351 0247 0A       		.uleb128 0xa
 3352 0248 83000000 		.4byte	0x83
 3353 024c 0A       		.uleb128 0xa
 3354 024d 83000000 		.4byte	0x83
 3355 0251 00       		.byte	0
 3356 0252 07       		.uleb128 0x7
 3357 0253 04       		.byte	0x4
 3358 0254 3D020000 		.4byte	0x23d
 3359 0258 0C       		.uleb128 0xc
 3360 0259 E8040000 		.4byte	.LASF41
 3361 025d 03       		.byte	0x3
 3362 025e 48       		.byte	0x48
 3363 025f C3000000 		.4byte	0xc3
 3364 0263 05       		.uleb128 0x5
 3365 0264 0C       		.byte	0xc
 3366 0265 03       		.byte	0x3
 3367 0266 4A       		.byte	0x4a
 3368 0267 B4020000 		.4byte	0x2b4
 3369 026b 06       		.uleb128 0x6
 3370 026c 50040000 		.4byte	.LASF42
 3371 0270 03       		.byte	0x3
 3372 0271 4C       		.byte	0x4c
 3373 0272 6B000000 		.4byte	0x6b
 3374 0276 00       		.byte	0
 3375 0277 06       		.uleb128 0x6
 3376 0278 6C010000 		.4byte	.LASF43
 3377 027c 03       		.byte	0x3
 3378 027d 4D       		.byte	0x4d
 3379 027e 6B000000 		.4byte	0x6b
 3380 0282 01       		.byte	0x1
 3381 0283 06       		.uleb128 0x6
 3382 0284 93000000 		.4byte	.LASF44
 3383 0288 03       		.byte	0x3
 3384 0289 4E       		.byte	0x4e
 3385 028a 6B000000 		.4byte	0x6b
 3386 028e 02       		.byte	0x2
 3387 028f 06       		.uleb128 0x6
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 111


 3388 0290 8C040000 		.4byte	.LASF45
 3389 0294 03       		.byte	0x3
 3390 0295 4F       		.byte	0x4f
 3391 0296 77000000 		.4byte	0x77
 3392 029a 04       		.byte	0x4
 3393 029b 06       		.uleb128 0x6
 3394 029c 44080000 		.4byte	.LASF46
 3395 02a0 03       		.byte	0x3
 3396 02a1 50       		.byte	0x50
 3397 02a2 77000000 		.4byte	0x77
 3398 02a6 06       		.byte	0x6
 3399 02a7 06       		.uleb128 0x6
 3400 02a8 1C0A0000 		.4byte	.LASF47
 3401 02ac 03       		.byte	0x3
 3402 02ad 51       		.byte	0x51
 3403 02ae B4020000 		.4byte	0x2b4
 3404 02b2 08       		.byte	0x8
 3405 02b3 00       		.byte	0
 3406 02b4 07       		.uleb128 0x7
 3407 02b5 04       		.byte	0x4
 3408 02b6 BA020000 		.4byte	0x2ba
 3409 02ba 08       		.uleb128 0x8
 3410 02bb 58020000 		.4byte	0x258
 3411 02bf 0C       		.uleb128 0xc
 3412 02c0 4D020000 		.4byte	.LASF48
 3413 02c4 03       		.byte	0x3
 3414 02c5 52       		.byte	0x52
 3415 02c6 63020000 		.4byte	0x263
 3416 02ca 0D       		.uleb128 0xd
 3417 02cb 2C000000 		.4byte	.LASF49
 3418 02cf 01       		.byte	0x1
 3419 02d0 94       		.byte	0x94
 3420 02d1 00000000 		.4byte	.LFB34
 3421 02d5 90000000 		.4byte	.LFE34-.LFB34
 3422 02d9 01       		.uleb128 0x1
 3423 02da 9C       		.byte	0x9c
 3424 02db FC020000 		.4byte	0x2fc
 3425 02df 0E       		.uleb128 0xe
 3426 02e0 85040000 		.4byte	.LASF51
 3427 02e4 01       		.byte	0x1
 3428 02e5 94       		.byte	0x94
 3429 02e6 83000000 		.4byte	0x83
 3430 02ea 02       		.uleb128 0x2
 3431 02eb 91       		.byte	0x91
 3432 02ec 6C       		.sleb128 -20
 3433 02ed 0F       		.uleb128 0xf
 3434 02ee EC020000 		.4byte	.LASF53
 3435 02f2 01       		.byte	0x1
 3436 02f3 98       		.byte	0x98
 3437 02f4 6B000000 		.4byte	0x6b
 3438 02f8 02       		.uleb128 0x2
 3439 02f9 91       		.byte	0x91
 3440 02fa 77       		.sleb128 -9
 3441 02fb 00       		.byte	0
 3442 02fc 10       		.uleb128 0x10
 3443 02fd 2F0B0000 		.4byte	.LASF50
 3444 0301 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 112


 3445 0302 E3       		.byte	0xe3
 3446 0303 00000000 		.4byte	.LFB35
 3447 0307 28000000 		.4byte	.LFE35-.LFB35
 3448 030b 01       		.uleb128 0x1
 3449 030c 9C       		.byte	0x9c
 3450 030d 20030000 		.4byte	0x320
 3451 0311 0E       		.uleb128 0xe
 3452 0312 85040000 		.4byte	.LASF51
 3453 0316 01       		.byte	0x1
 3454 0317 E3       		.byte	0xe3
 3455 0318 83000000 		.4byte	0x83
 3456 031c 02       		.uleb128 0x2
 3457 031d 91       		.byte	0x91
 3458 031e 74       		.sleb128 -12
 3459 031f 00       		.byte	0
 3460 0320 11       		.uleb128 0x11
 3461 0321 FA0B0000 		.4byte	.LASF52
 3462 0325 01       		.byte	0x1
 3463 0326 0801     		.2byte	0x108
 3464 0328 00000000 		.4byte	.LFB36
 3465 032c 26000000 		.4byte	.LFE36-.LFB36
 3466 0330 01       		.uleb128 0x1
 3467 0331 9C       		.byte	0x9c
 3468 0332 44030000 		.4byte	0x344
 3469 0336 12       		.uleb128 0x12
 3470 0337 6900     		.ascii	"i\000"
 3471 0339 01       		.byte	0x1
 3472 033a 0A01     		.2byte	0x10a
 3473 033c 83000000 		.4byte	0x83
 3474 0340 02       		.uleb128 0x2
 3475 0341 91       		.byte	0x91
 3476 0342 74       		.sleb128 -12
 3477 0343 00       		.byte	0
 3478 0344 11       		.uleb128 0x11
 3479 0345 AB000000 		.4byte	.LASF54
 3480 0349 01       		.byte	0x1
 3481 034a 2B01     		.2byte	0x12b
 3482 034c 00000000 		.4byte	.LFB37
 3483 0350 50000000 		.4byte	.LFE37-.LFB37
 3484 0354 01       		.uleb128 0x1
 3485 0355 9C       		.byte	0x9c
 3486 0356 77030000 		.4byte	0x377
 3487 035a 12       		.uleb128 0x12
 3488 035b 6900     		.ascii	"i\000"
 3489 035d 01       		.byte	0x1
 3490 035e 2D01     		.2byte	0x12d
 3491 0360 83000000 		.4byte	0x83
 3492 0364 02       		.uleb128 0x2
 3493 0365 91       		.byte	0x91
 3494 0366 74       		.sleb128 -12
 3495 0367 13       		.uleb128 0x13
 3496 0368 69000000 		.4byte	.LASF55
 3497 036c 01       		.byte	0x1
 3498 036d 2E01     		.2byte	0x12e
 3499 036f 83000000 		.4byte	0x83
 3500 0373 02       		.uleb128 0x2
 3501 0374 91       		.byte	0x91
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 113


 3502 0375 70       		.sleb128 -16
 3503 0376 00       		.byte	0
 3504 0377 11       		.uleb128 0x11
 3505 0378 61030000 		.4byte	.LASF56
 3506 037c 01       		.byte	0x1
 3507 037d 6C01     		.2byte	0x16c
 3508 037f 00000000 		.4byte	.LFB38
 3509 0383 38020000 		.4byte	.LFE38-.LFB38
 3510 0387 01       		.uleb128 0x1
 3511 0388 9C       		.byte	0x9c
 3512 0389 F7030000 		.4byte	0x3f7
 3513 038d 14       		.uleb128 0x14
 3514 038e 85040000 		.4byte	.LASF51
 3515 0392 01       		.byte	0x1
 3516 0393 6C01     		.2byte	0x16c
 3517 0395 83000000 		.4byte	0x83
 3518 0399 02       		.uleb128 0x2
 3519 039a 91       		.byte	0x91
 3520 039b 5C       		.sleb128 -36
 3521 039c 13       		.uleb128 0x13
 3522 039d DB030000 		.4byte	.LASF57
 3523 03a1 01       		.byte	0x1
 3524 03a2 6E01     		.2byte	0x16e
 3525 03a4 83000000 		.4byte	0x83
 3526 03a8 02       		.uleb128 0x2
 3527 03a9 91       		.byte	0x91
 3528 03aa 60       		.sleb128 -32
 3529 03ab 13       		.uleb128 0x13
 3530 03ac BE030000 		.4byte	.LASF58
 3531 03b0 01       		.byte	0x1
 3532 03b1 6F01     		.2byte	0x16f
 3533 03b3 83000000 		.4byte	0x83
 3534 03b7 02       		.uleb128 0x2
 3535 03b8 91       		.byte	0x91
 3536 03b9 6C       		.sleb128 -20
 3537 03ba 13       		.uleb128 0x13
 3538 03bb 1E0C0000 		.4byte	.LASF59
 3539 03bf 01       		.byte	0x1
 3540 03c0 7001     		.2byte	0x170
 3541 03c2 77000000 		.4byte	0x77
 3542 03c6 02       		.uleb128 0x2
 3543 03c7 91       		.byte	0x91
 3544 03c8 6A       		.sleb128 -22
 3545 03c9 13       		.uleb128 0x13
 3546 03ca 15040000 		.4byte	.LASF60
 3547 03ce 01       		.byte	0x1
 3548 03cf 7101     		.2byte	0x171
 3549 03d1 77000000 		.4byte	0x77
 3550 03d5 02       		.uleb128 0x2
 3551 03d6 91       		.byte	0x91
 3552 03d7 68       		.sleb128 -24
 3553 03d8 13       		.uleb128 0x13
 3554 03d9 EC020000 		.4byte	.LASF53
 3555 03dd 01       		.byte	0x1
 3556 03de 7201     		.2byte	0x172
 3557 03e0 6B000000 		.4byte	0x6b
 3558 03e4 02       		.uleb128 0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 114


 3559 03e5 91       		.byte	0x91
 3560 03e6 67       		.sleb128 -25
 3561 03e7 13       		.uleb128 0x13
 3562 03e8 5C0A0000 		.4byte	.LASF61
 3563 03ec 01       		.byte	0x1
 3564 03ed 7301     		.2byte	0x173
 3565 03ef 6B000000 		.4byte	0x6b
 3566 03f3 02       		.uleb128 0x2
 3567 03f4 91       		.byte	0x91
 3568 03f5 66       		.sleb128 -26
 3569 03f6 00       		.byte	0
 3570 03f7 11       		.uleb128 0x11
 3571 03f8 88070000 		.4byte	.LASF62
 3572 03fc 01       		.byte	0x1
 3573 03fd 2C02     		.2byte	0x22c
 3574 03ff 00000000 		.4byte	.LFB39
 3575 0403 1E000000 		.4byte	.LFE39-.LFB39
 3576 0407 01       		.uleb128 0x1
 3577 0408 9C       		.byte	0x9c
 3578 0409 1D040000 		.4byte	0x41d
 3579 040d 14       		.uleb128 0x14
 3580 040e 85040000 		.4byte	.LASF51
 3581 0412 01       		.byte	0x1
 3582 0413 2C02     		.2byte	0x22c
 3583 0415 83000000 		.4byte	0x83
 3584 0419 02       		.uleb128 0x2
 3585 041a 91       		.byte	0x91
 3586 041b 74       		.sleb128 -12
 3587 041c 00       		.byte	0
 3588 041d 11       		.uleb128 0x11
 3589 041e D7060000 		.4byte	.LASF63
 3590 0422 01       		.byte	0x1
 3591 0423 6202     		.2byte	0x262
 3592 0425 00000000 		.4byte	.LFB40
 3593 0429 40000000 		.4byte	.LFE40-.LFB40
 3594 042d 01       		.uleb128 0x1
 3595 042e 9C       		.byte	0x9c
 3596 042f 50040000 		.4byte	0x450
 3597 0433 12       		.uleb128 0x12
 3598 0434 6900     		.ascii	"i\000"
 3599 0436 01       		.byte	0x1
 3600 0437 6402     		.2byte	0x264
 3601 0439 83000000 		.4byte	0x83
 3602 043d 02       		.uleb128 0x2
 3603 043e 91       		.byte	0x91
 3604 043f 74       		.sleb128 -12
 3605 0440 13       		.uleb128 0x13
 3606 0441 69000000 		.4byte	.LASF55
 3607 0445 01       		.byte	0x1
 3608 0446 6502     		.2byte	0x265
 3609 0448 83000000 		.4byte	0x83
 3610 044c 02       		.uleb128 0x2
 3611 044d 91       		.byte	0x91
 3612 044e 70       		.sleb128 -16
 3613 044f 00       		.byte	0
 3614 0450 11       		.uleb128 0x11
 3615 0451 12030000 		.4byte	.LASF64
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 115


 3616 0455 01       		.byte	0x1
 3617 0456 8F02     		.2byte	0x28f
 3618 0458 00000000 		.4byte	.LFB41
 3619 045c 70000000 		.4byte	.LFE41-.LFB41
 3620 0460 01       		.uleb128 0x1
 3621 0461 9C       		.byte	0x9c
 3622 0462 BF040000 		.4byte	0x4bf
 3623 0466 14       		.uleb128 0x14
 3624 0467 EC020000 		.4byte	.LASF53
 3625 046b 01       		.byte	0x1
 3626 046c 8F02     		.2byte	0x28f
 3627 046e 83000000 		.4byte	0x83
 3628 0472 02       		.uleb128 0x2
 3629 0473 91       		.byte	0x91
 3630 0474 5C       		.sleb128 -36
 3631 0475 13       		.uleb128 0x13
 3632 0476 25040000 		.4byte	.LASF65
 3633 047a 01       		.byte	0x1
 3634 047b 9102     		.2byte	0x291
 3635 047d 83000000 		.4byte	0x83
 3636 0481 02       		.uleb128 0x2
 3637 0482 91       		.byte	0x91
 3638 0483 70       		.sleb128 -16
 3639 0484 13       		.uleb128 0x13
 3640 0485 F6080000 		.4byte	.LASF66
 3641 0489 01       		.byte	0x1
 3642 048a 9202     		.2byte	0x292
 3643 048c 83000000 		.4byte	0x83
 3644 0490 02       		.uleb128 0x2
 3645 0491 91       		.byte	0x91
 3646 0492 6C       		.sleb128 -20
 3647 0493 13       		.uleb128 0x13
 3648 0494 25080000 		.4byte	.LASF67
 3649 0498 01       		.byte	0x1
 3650 0499 9302     		.2byte	0x293
 3651 049b 83000000 		.4byte	0x83
 3652 049f 02       		.uleb128 0x2
 3653 04a0 91       		.byte	0x91
 3654 04a1 68       		.sleb128 -24
 3655 04a2 12       		.uleb128 0x12
 3656 04a3 6900     		.ascii	"i\000"
 3657 04a5 01       		.byte	0x1
 3658 04a6 9402     		.2byte	0x294
 3659 04a8 83000000 		.4byte	0x83
 3660 04ac 02       		.uleb128 0x2
 3661 04ad 91       		.byte	0x91
 3662 04ae 74       		.sleb128 -12
 3663 04af 13       		.uleb128 0x13
 3664 04b0 69000000 		.4byte	.LASF55
 3665 04b4 01       		.byte	0x1
 3666 04b5 9502     		.2byte	0x295
 3667 04b7 83000000 		.4byte	0x83
 3668 04bb 02       		.uleb128 0x2
 3669 04bc 91       		.byte	0x91
 3670 04bd 64       		.sleb128 -28
 3671 04be 00       		.byte	0
 3672 04bf 15       		.uleb128 0x15
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 116


 3673 04c0 C8090000 		.4byte	.LASF70
 3674 04c4 01       		.byte	0x1
 3675 04c5 C002     		.2byte	0x2c0
 3676 04c7 77000000 		.4byte	0x77
 3677 04cb 00000000 		.4byte	.LFB42
 3678 04cf 1C000000 		.4byte	.LFE42-.LFB42
 3679 04d3 01       		.uleb128 0x1
 3680 04d4 9C       		.byte	0x9c
 3681 04d5 E9040000 		.4byte	0x4e9
 3682 04d9 14       		.uleb128 0x14
 3683 04da 85040000 		.4byte	.LASF51
 3684 04de 01       		.byte	0x1
 3685 04df C002     		.2byte	0x2c0
 3686 04e1 83000000 		.4byte	0x83
 3687 04e5 02       		.uleb128 0x2
 3688 04e6 91       		.byte	0x91
 3689 04e7 74       		.sleb128 -12
 3690 04e8 00       		.byte	0
 3691 04e9 16       		.uleb128 0x16
 3692 04ea D3000000 		.4byte	.LASF68
 3693 04ee 01       		.byte	0x1
 3694 04ef DB02     		.2byte	0x2db
 3695 04f1 00000000 		.4byte	.LFB43
 3696 04f5 24000000 		.4byte	.LFE43-.LFB43
 3697 04f9 01       		.uleb128 0x1
 3698 04fa 9C       		.byte	0x9c
 3699 04fb 1E050000 		.4byte	0x51e
 3700 04ff 14       		.uleb128 0x14
 3701 0500 85040000 		.4byte	.LASF51
 3702 0504 01       		.byte	0x1
 3703 0505 DB02     		.2byte	0x2db
 3704 0507 83000000 		.4byte	0x83
 3705 050b 02       		.uleb128 0x2
 3706 050c 91       		.byte	0x91
 3707 050d 74       		.sleb128 -12
 3708 050e 14       		.uleb128 0x14
 3709 050f 1A050000 		.4byte	.LASF69
 3710 0513 01       		.byte	0x1
 3711 0514 DB02     		.2byte	0x2db
 3712 0516 77000000 		.4byte	0x77
 3713 051a 02       		.uleb128 0x2
 3714 051b 91       		.byte	0x91
 3715 051c 72       		.sleb128 -14
 3716 051d 00       		.byte	0
 3717 051e 15       		.uleb128 0x15
 3718 051f 3E090000 		.4byte	.LASF71
 3719 0523 01       		.byte	0x1
 3720 0524 F602     		.2byte	0x2f6
 3721 0526 6B000000 		.4byte	0x6b
 3722 052a 00000000 		.4byte	.LFB44
 3723 052e 1C000000 		.4byte	.LFE44-.LFB44
 3724 0532 01       		.uleb128 0x1
 3725 0533 9C       		.byte	0x9c
 3726 0534 48050000 		.4byte	0x548
 3727 0538 14       		.uleb128 0x14
 3728 0539 85040000 		.4byte	.LASF51
 3729 053d 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 117


 3730 053e F602     		.2byte	0x2f6
 3731 0540 83000000 		.4byte	0x83
 3732 0544 02       		.uleb128 0x2
 3733 0545 91       		.byte	0x91
 3734 0546 74       		.sleb128 -12
 3735 0547 00       		.byte	0
 3736 0548 16       		.uleb128 0x16
 3737 0549 6A070000 		.4byte	.LASF72
 3738 054d 01       		.byte	0x1
 3739 054e 1103     		.2byte	0x311
 3740 0550 00000000 		.4byte	.LFB45
 3741 0554 24000000 		.4byte	.LFE45-.LFB45
 3742 0558 01       		.uleb128 0x1
 3743 0559 9C       		.byte	0x9c
 3744 055a 7D050000 		.4byte	0x57d
 3745 055e 14       		.uleb128 0x14
 3746 055f 85040000 		.4byte	.LASF51
 3747 0563 01       		.byte	0x1
 3748 0564 1103     		.2byte	0x311
 3749 0566 83000000 		.4byte	0x83
 3750 056a 02       		.uleb128 0x2
 3751 056b 91       		.byte	0x91
 3752 056c 74       		.sleb128 -12
 3753 056d 14       		.uleb128 0x14
 3754 056e 34030000 		.4byte	.LASF73
 3755 0572 01       		.byte	0x1
 3756 0573 1103     		.2byte	0x311
 3757 0575 6B000000 		.4byte	0x6b
 3758 0579 02       		.uleb128 0x2
 3759 057a 91       		.byte	0x91
 3760 057b 73       		.sleb128 -13
 3761 057c 00       		.byte	0
 3762 057d 15       		.uleb128 0x15
 3763 057e B5050000 		.4byte	.LASF74
 3764 0582 01       		.byte	0x1
 3765 0583 2C03     		.2byte	0x32c
 3766 0585 6B000000 		.4byte	0x6b
 3767 0589 00000000 		.4byte	.LFB46
 3768 058d 1C000000 		.4byte	.LFE46-.LFB46
 3769 0591 01       		.uleb128 0x1
 3770 0592 9C       		.byte	0x9c
 3771 0593 A7050000 		.4byte	0x5a7
 3772 0597 14       		.uleb128 0x14
 3773 0598 EC020000 		.4byte	.LASF53
 3774 059c 01       		.byte	0x1
 3775 059d 2C03     		.2byte	0x32c
 3776 059f 83000000 		.4byte	0x83
 3777 05a3 02       		.uleb128 0x2
 3778 05a4 91       		.byte	0x91
 3779 05a5 74       		.sleb128 -12
 3780 05a6 00       		.byte	0
 3781 05a7 15       		.uleb128 0x15
 3782 05a8 2E020000 		.4byte	.LASF75
 3783 05ac 01       		.byte	0x1
 3784 05ad 4703     		.2byte	0x347
 3785 05af 6B000000 		.4byte	0x6b
 3786 05b3 00000000 		.4byte	.LFB47
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 118


 3787 05b7 1C000000 		.4byte	.LFE47-.LFB47
 3788 05bb 01       		.uleb128 0x1
 3789 05bc 9C       		.byte	0x9c
 3790 05bd D1050000 		.4byte	0x5d1
 3791 05c1 14       		.uleb128 0x14
 3792 05c2 EC020000 		.4byte	.LASF53
 3793 05c6 01       		.byte	0x1
 3794 05c7 4703     		.2byte	0x347
 3795 05c9 83000000 		.4byte	0x83
 3796 05cd 02       		.uleb128 0x2
 3797 05ce 91       		.byte	0x91
 3798 05cf 74       		.sleb128 -12
 3799 05d0 00       		.byte	0
 3800 05d1 15       		.uleb128 0x15
 3801 05d2 01060000 		.4byte	.LASF76
 3802 05d6 01       		.byte	0x1
 3803 05d7 6303     		.2byte	0x363
 3804 05d9 6B000000 		.4byte	0x6b
 3805 05dd 00000000 		.4byte	.LFB48
 3806 05e1 1C000000 		.4byte	.LFE48-.LFB48
 3807 05e5 01       		.uleb128 0x1
 3808 05e6 9C       		.byte	0x9c
 3809 05e7 FB050000 		.4byte	0x5fb
 3810 05eb 14       		.uleb128 0x14
 3811 05ec EC020000 		.4byte	.LASF53
 3812 05f0 01       		.byte	0x1
 3813 05f1 6303     		.2byte	0x363
 3814 05f3 83000000 		.4byte	0x83
 3815 05f7 02       		.uleb128 0x2
 3816 05f8 91       		.byte	0x91
 3817 05f9 74       		.sleb128 -12
 3818 05fa 00       		.byte	0
 3819 05fb 15       		.uleb128 0x15
 3820 05fc 2E050000 		.4byte	.LASF77
 3821 0600 01       		.byte	0x1
 3822 0601 7F03     		.2byte	0x37f
 3823 0603 6B000000 		.4byte	0x6b
 3824 0607 00000000 		.4byte	.LFB49
 3825 060b 1C000000 		.4byte	.LFE49-.LFB49
 3826 060f 01       		.uleb128 0x1
 3827 0610 9C       		.byte	0x9c
 3828 0611 25060000 		.4byte	0x625
 3829 0615 14       		.uleb128 0x14
 3830 0616 EC020000 		.4byte	.LASF53
 3831 061a 01       		.byte	0x1
 3832 061b 7F03     		.2byte	0x37f
 3833 061d 83000000 		.4byte	0x83
 3834 0621 02       		.uleb128 0x2
 3835 0622 91       		.byte	0x91
 3836 0623 74       		.sleb128 -12
 3837 0624 00       		.byte	0
 3838 0625 16       		.uleb128 0x16
 3839 0626 9D010000 		.4byte	.LASF78
 3840 062a 01       		.byte	0x1
 3841 062b A003     		.2byte	0x3a0
 3842 062d 00000000 		.4byte	.LFB50
 3843 0631 24000000 		.4byte	.LFE50-.LFB50
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 119


 3844 0635 01       		.uleb128 0x1
 3845 0636 9C       		.byte	0x9c
 3846 0637 5A060000 		.4byte	0x65a
 3847 063b 14       		.uleb128 0x14
 3848 063c EC020000 		.4byte	.LASF53
 3849 0640 01       		.byte	0x1
 3850 0641 A003     		.2byte	0x3a0
 3851 0643 83000000 		.4byte	0x83
 3852 0647 02       		.uleb128 0x2
 3853 0648 91       		.byte	0x91
 3854 0649 74       		.sleb128 -12
 3855 064a 14       		.uleb128 0x14
 3856 064b 34030000 		.4byte	.LASF73
 3857 064f 01       		.byte	0x1
 3858 0650 A003     		.2byte	0x3a0
 3859 0652 6B000000 		.4byte	0x6b
 3860 0656 02       		.uleb128 0x2
 3861 0657 91       		.byte	0x91
 3862 0658 73       		.sleb128 -13
 3863 0659 00       		.byte	0
 3864 065a 16       		.uleb128 0x16
 3865 065b F3020000 		.4byte	.LASF79
 3866 065f 01       		.byte	0x1
 3867 0660 BC03     		.2byte	0x3bc
 3868 0662 00000000 		.4byte	.LFB51
 3869 0666 24000000 		.4byte	.LFE51-.LFB51
 3870 066a 01       		.uleb128 0x1
 3871 066b 9C       		.byte	0x9c
 3872 066c 8F060000 		.4byte	0x68f
 3873 0670 14       		.uleb128 0x14
 3874 0671 EC020000 		.4byte	.LASF53
 3875 0675 01       		.byte	0x1
 3876 0676 BC03     		.2byte	0x3bc
 3877 0678 83000000 		.4byte	0x83
 3878 067c 02       		.uleb128 0x2
 3879 067d 91       		.byte	0x91
 3880 067e 74       		.sleb128 -12
 3881 067f 14       		.uleb128 0x14
 3882 0680 34030000 		.4byte	.LASF73
 3883 0684 01       		.byte	0x1
 3884 0685 BC03     		.2byte	0x3bc
 3885 0687 6B000000 		.4byte	0x6b
 3886 068b 02       		.uleb128 0x2
 3887 068c 91       		.byte	0x91
 3888 068d 73       		.sleb128 -13
 3889 068e 00       		.byte	0
 3890 068f 16       		.uleb128 0x16
 3891 0690 8D0A0000 		.4byte	.LASF80
 3892 0694 01       		.byte	0x1
 3893 0695 D803     		.2byte	0x3d8
 3894 0697 00000000 		.4byte	.LFB52
 3895 069b 24000000 		.4byte	.LFE52-.LFB52
 3896 069f 01       		.uleb128 0x1
 3897 06a0 9C       		.byte	0x9c
 3898 06a1 C4060000 		.4byte	0x6c4
 3899 06a5 14       		.uleb128 0x14
 3900 06a6 EC020000 		.4byte	.LASF53
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 120


 3901 06aa 01       		.byte	0x1
 3902 06ab D803     		.2byte	0x3d8
 3903 06ad 83000000 		.4byte	0x83
 3904 06b1 02       		.uleb128 0x2
 3905 06b2 91       		.byte	0x91
 3906 06b3 74       		.sleb128 -12
 3907 06b4 14       		.uleb128 0x14
 3908 06b5 34030000 		.4byte	.LASF73
 3909 06b9 01       		.byte	0x1
 3910 06ba D803     		.2byte	0x3d8
 3911 06bc 6B000000 		.4byte	0x6b
 3912 06c0 02       		.uleb128 0x2
 3913 06c1 91       		.byte	0x91
 3914 06c2 73       		.sleb128 -13
 3915 06c3 00       		.byte	0
 3916 06c4 16       		.uleb128 0x16
 3917 06c5 3A030000 		.4byte	.LASF81
 3918 06c9 01       		.byte	0x1
 3919 06ca F503     		.2byte	0x3f5
 3920 06cc 00000000 		.4byte	.LFB53
 3921 06d0 24000000 		.4byte	.LFE53-.LFB53
 3922 06d4 01       		.uleb128 0x1
 3923 06d5 9C       		.byte	0x9c
 3924 06d6 F9060000 		.4byte	0x6f9
 3925 06da 14       		.uleb128 0x14
 3926 06db EC020000 		.4byte	.LASF53
 3927 06df 01       		.byte	0x1
 3928 06e0 F503     		.2byte	0x3f5
 3929 06e2 83000000 		.4byte	0x83
 3930 06e6 02       		.uleb128 0x2
 3931 06e7 91       		.byte	0x91
 3932 06e8 74       		.sleb128 -12
 3933 06e9 14       		.uleb128 0x14
 3934 06ea 34030000 		.4byte	.LASF73
 3935 06ee 01       		.byte	0x1
 3936 06ef F503     		.2byte	0x3f5
 3937 06f1 6B000000 		.4byte	0x6b
 3938 06f5 02       		.uleb128 0x2
 3939 06f6 91       		.byte	0x91
 3940 06f7 73       		.sleb128 -13
 3941 06f8 00       		.byte	0
 3942 06f9 16       		.uleb128 0x16
 3943 06fa FC030000 		.4byte	.LASF82
 3944 06fe 01       		.byte	0x1
 3945 06ff 1104     		.2byte	0x411
 3946 0701 00000000 		.4byte	.LFB54
 3947 0705 24000000 		.4byte	.LFE54-.LFB54
 3948 0709 01       		.uleb128 0x1
 3949 070a 9C       		.byte	0x9c
 3950 070b 2E070000 		.4byte	0x72e
 3951 070f 14       		.uleb128 0x14
 3952 0710 EC020000 		.4byte	.LASF53
 3953 0714 01       		.byte	0x1
 3954 0715 1104     		.2byte	0x411
 3955 0717 83000000 		.4byte	0x83
 3956 071b 02       		.uleb128 0x2
 3957 071c 91       		.byte	0x91
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 121


 3958 071d 74       		.sleb128 -12
 3959 071e 14       		.uleb128 0x14
 3960 071f 34030000 		.4byte	.LASF73
 3961 0723 01       		.byte	0x1
 3962 0724 1104     		.2byte	0x411
 3963 0726 6B000000 		.4byte	0x6b
 3964 072a 02       		.uleb128 0x2
 3965 072b 91       		.byte	0x91
 3966 072c 73       		.sleb128 -13
 3967 072d 00       		.byte	0
 3968 072e 16       		.uleb128 0x16
 3969 072f E0070000 		.4byte	.LASF83
 3970 0733 01       		.byte	0x1
 3971 0734 2D04     		.2byte	0x42d
 3972 0736 00000000 		.4byte	.LFB55
 3973 073a 24000000 		.4byte	.LFE55-.LFB55
 3974 073e 01       		.uleb128 0x1
 3975 073f 9C       		.byte	0x9c
 3976 0740 63070000 		.4byte	0x763
 3977 0744 14       		.uleb128 0x14
 3978 0745 85040000 		.4byte	.LASF51
 3979 0749 01       		.byte	0x1
 3980 074a 2D04     		.2byte	0x42d
 3981 074c 83000000 		.4byte	0x83
 3982 0750 02       		.uleb128 0x2
 3983 0751 91       		.byte	0x91
 3984 0752 74       		.sleb128 -12
 3985 0753 14       		.uleb128 0x14
 3986 0754 34030000 		.4byte	.LASF73
 3987 0758 01       		.byte	0x1
 3988 0759 2D04     		.2byte	0x42d
 3989 075b 6B000000 		.4byte	0x6b
 3990 075f 02       		.uleb128 0x2
 3991 0760 91       		.byte	0x91
 3992 0761 73       		.sleb128 -13
 3993 0762 00       		.byte	0
 3994 0763 17       		.uleb128 0x17
 3995 0764 9D090000 		.4byte	.LASF84
 3996 0768 01       		.byte	0x1
 3997 0769 5B04     		.2byte	0x45b
 3998 076b 83000000 		.4byte	0x83
 3999 076f 00000000 		.4byte	.LFB56
 4000 0773 58010000 		.4byte	.LFE56-.LFB56
 4001 0777 01       		.uleb128 0x1
 4002 0778 9C       		.byte	0x9c
 4003 0779 D8070000 		.4byte	0x7d8
 4004 077d 14       		.uleb128 0x14
 4005 077e 85040000 		.4byte	.LASF51
 4006 0782 01       		.byte	0x1
 4007 0783 5B04     		.2byte	0x45b
 4008 0785 83000000 		.4byte	0x83
 4009 0789 02       		.uleb128 0x2
 4010 078a 91       		.byte	0x91
 4011 078b 6C       		.sleb128 -20
 4012 078c 13       		.uleb128 0x13
 4013 078d EC020000 		.4byte	.LASF53
 4014 0791 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 122


 4015 0792 5D04     		.2byte	0x45d
 4016 0794 6B000000 		.4byte	0x6b
 4017 0798 02       		.uleb128 0x2
 4018 0799 91       		.byte	0x91
 4019 079a 76       		.sleb128 -10
 4020 079b 13       		.uleb128 0x13
 4021 079c D5050000 		.4byte	.LASF85
 4022 07a0 01       		.byte	0x1
 4023 07a1 5E04     		.2byte	0x45e
 4024 07a3 6B000000 		.4byte	0x6b
 4025 07a7 02       		.uleb128 0x2
 4026 07a8 91       		.byte	0x91
 4027 07a9 73       		.sleb128 -13
 4028 07aa 13       		.uleb128 0x13
 4029 07ab 050B0000 		.4byte	.LASF86
 4030 07af 01       		.byte	0x1
 4031 07b0 5F04     		.2byte	0x45f
 4032 07b2 6B000000 		.4byte	0x6b
 4033 07b6 02       		.uleb128 0x2
 4034 07b7 91       		.byte	0x91
 4035 07b8 77       		.sleb128 -9
 4036 07b9 13       		.uleb128 0x13
 4037 07ba C00A0000 		.4byte	.LASF87
 4038 07be 01       		.byte	0x1
 4039 07bf 6104     		.2byte	0x461
 4040 07c1 6B000000 		.4byte	0x6b
 4041 07c5 02       		.uleb128 0x2
 4042 07c6 91       		.byte	0x91
 4043 07c7 75       		.sleb128 -11
 4044 07c8 13       		.uleb128 0x13
 4045 07c9 F1030000 		.4byte	.LASF88
 4046 07cd 01       		.byte	0x1
 4047 07ce 6204     		.2byte	0x462
 4048 07d0 6B000000 		.4byte	0x6b
 4049 07d4 02       		.uleb128 0x2
 4050 07d5 91       		.byte	0x91
 4051 07d6 74       		.sleb128 -12
 4052 07d7 00       		.byte	0
 4053 07d8 17       		.uleb128 0x17
 4054 07d9 7C010000 		.4byte	.LASF89
 4055 07dd 01       		.byte	0x1
 4056 07de B504     		.2byte	0x4b5
 4057 07e0 83000000 		.4byte	0x83
 4058 07e4 00000000 		.4byte	.LFB57
 4059 07e8 58000000 		.4byte	.LFE57-.LFB57
 4060 07ec 01       		.uleb128 0x1
 4061 07ed 9C       		.byte	0x9c
 4062 07ee 2F080000 		.4byte	0x82f
 4063 07f2 14       		.uleb128 0x14
 4064 07f3 EC020000 		.4byte	.LASF53
 4065 07f7 01       		.byte	0x1
 4066 07f8 B504     		.2byte	0x4b5
 4067 07fa 83000000 		.4byte	0x83
 4068 07fe 02       		.uleb128 0x2
 4069 07ff 91       		.byte	0x91
 4070 0800 64       		.sleb128 -28
 4071 0801 13       		.uleb128 0x13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 123


 4072 0802 60050000 		.4byte	.LASF90
 4073 0806 01       		.byte	0x1
 4074 0807 B704     		.2byte	0x4b7
 4075 0809 83000000 		.4byte	0x83
 4076 080d 02       		.uleb128 0x2
 4077 080e 91       		.byte	0x91
 4078 080f 74       		.sleb128 -12
 4079 0810 13       		.uleb128 0x13
 4080 0811 79000000 		.4byte	.LASF91
 4081 0815 01       		.byte	0x1
 4082 0816 B804     		.2byte	0x4b8
 4083 0818 83000000 		.4byte	0x83
 4084 081c 02       		.uleb128 0x2
 4085 081d 91       		.byte	0x91
 4086 081e 6C       		.sleb128 -20
 4087 081f 13       		.uleb128 0x13
 4088 0820 7E0B0000 		.4byte	.LASF92
 4089 0824 01       		.byte	0x1
 4090 0825 B904     		.2byte	0x4b9
 4091 0827 83000000 		.4byte	0x83
 4092 082b 02       		.uleb128 0x2
 4093 082c 91       		.byte	0x91
 4094 082d 70       		.sleb128 -16
 4095 082e 00       		.byte	0
 4096 082f 17       		.uleb128 0x17
 4097 0830 6D090000 		.4byte	.LASF93
 4098 0834 01       		.byte	0x1
 4099 0835 E304     		.2byte	0x4e3
 4100 0837 83000000 		.4byte	0x83
 4101 083b 00000000 		.4byte	.LFB58
 4102 083f 36000000 		.4byte	.LFE58-.LFB58
 4103 0843 01       		.uleb128 0x1
 4104 0844 9C       		.byte	0x9c
 4105 0845 66080000 		.4byte	0x866
 4106 0849 12       		.uleb128 0x12
 4107 084a 6900     		.ascii	"i\000"
 4108 084c 01       		.byte	0x1
 4109 084d E604     		.2byte	0x4e6
 4110 084f 83000000 		.4byte	0x83
 4111 0853 02       		.uleb128 0x2
 4112 0854 91       		.byte	0x91
 4113 0855 74       		.sleb128 -12
 4114 0856 13       		.uleb128 0x13
 4115 0857 7E0B0000 		.4byte	.LASF92
 4116 085b 01       		.byte	0x1
 4117 085c E704     		.2byte	0x4e7
 4118 085e 83000000 		.4byte	0x83
 4119 0862 02       		.uleb128 0x2
 4120 0863 91       		.byte	0x91
 4121 0864 70       		.sleb128 -16
 4122 0865 00       		.byte	0
 4123 0866 11       		.uleb128 0x11
 4124 0867 550B0000 		.4byte	.LASF94
 4125 086b 01       		.byte	0x1
 4126 086c 1205     		.2byte	0x512
 4127 086e 00000000 		.4byte	.LFB59
 4128 0872 70000000 		.4byte	.LFE59-.LFB59
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 124


 4129 0876 01       		.uleb128 0x1
 4130 0877 9C       		.byte	0x9c
 4131 0878 AA080000 		.4byte	0x8aa
 4132 087c 14       		.uleb128 0x14
 4133 087d EC020000 		.4byte	.LASF53
 4134 0881 01       		.byte	0x1
 4135 0882 1205     		.2byte	0x512
 4136 0884 83000000 		.4byte	0x83
 4137 0888 02       		.uleb128 0x2
 4138 0889 91       		.byte	0x91
 4139 088a 6C       		.sleb128 -20
 4140 088b 13       		.uleb128 0x13
 4141 088c 60050000 		.4byte	.LASF90
 4142 0890 01       		.byte	0x1
 4143 0891 1505     		.2byte	0x515
 4144 0893 6B000000 		.4byte	0x6b
 4145 0897 02       		.uleb128 0x2
 4146 0898 91       		.byte	0x91
 4147 0899 77       		.sleb128 -9
 4148 089a 13       		.uleb128 0x13
 4149 089b 79000000 		.4byte	.LASF91
 4150 089f 01       		.byte	0x1
 4151 08a0 1605     		.2byte	0x516
 4152 08a2 6B000000 		.4byte	0x6b
 4153 08a6 02       		.uleb128 0x2
 4154 08a7 91       		.byte	0x91
 4155 08a8 76       		.sleb128 -10
 4156 08a9 00       		.byte	0
 4157 08aa 11       		.uleb128 0x11
 4158 08ab BE040000 		.4byte	.LASF95
 4159 08af 01       		.byte	0x1
 4160 08b0 3D05     		.2byte	0x53d
 4161 08b2 00000000 		.4byte	.LFB60
 4162 08b6 70000000 		.4byte	.LFE60-.LFB60
 4163 08ba 01       		.uleb128 0x1
 4164 08bb 9C       		.byte	0x9c
 4165 08bc EE080000 		.4byte	0x8ee
 4166 08c0 14       		.uleb128 0x14
 4167 08c1 EC020000 		.4byte	.LASF53
 4168 08c5 01       		.byte	0x1
 4169 08c6 3D05     		.2byte	0x53d
 4170 08c8 83000000 		.4byte	0x83
 4171 08cc 02       		.uleb128 0x2
 4172 08cd 91       		.byte	0x91
 4173 08ce 6C       		.sleb128 -20
 4174 08cf 13       		.uleb128 0x13
 4175 08d0 60050000 		.4byte	.LASF90
 4176 08d4 01       		.byte	0x1
 4177 08d5 3F05     		.2byte	0x53f
 4178 08d7 6B000000 		.4byte	0x6b
 4179 08db 02       		.uleb128 0x2
 4180 08dc 91       		.byte	0x91
 4181 08dd 77       		.sleb128 -9
 4182 08de 13       		.uleb128 0x13
 4183 08df 79000000 		.4byte	.LASF91
 4184 08e3 01       		.byte	0x1
 4185 08e4 4005     		.2byte	0x540
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 125


 4186 08e6 6B000000 		.4byte	0x6b
 4187 08ea 02       		.uleb128 0x2
 4188 08eb 91       		.byte	0x91
 4189 08ec 76       		.sleb128 -10
 4190 08ed 00       		.byte	0
 4191 08ee 15       		.uleb128 0x15
 4192 08ef 330C0000 		.4byte	.LASF96
 4193 08f3 01       		.byte	0x1
 4194 08f4 6F05     		.2byte	0x56f
 4195 08f6 6B000000 		.4byte	0x6b
 4196 08fa 00000000 		.4byte	.LFB61
 4197 08fe B8000000 		.4byte	.LFE61-.LFB61
 4198 0902 01       		.uleb128 0x1
 4199 0903 9C       		.byte	0x9c
 4200 0904 70090000 		.4byte	0x970
 4201 0908 14       		.uleb128 0x14
 4202 0909 C3030000 		.4byte	.LASF97
 4203 090d 01       		.byte	0x1
 4204 090e 6F05     		.2byte	0x56f
 4205 0910 6B000000 		.4byte	0x6b
 4206 0914 02       		.uleb128 0x2
 4207 0915 91       		.byte	0x91
 4208 0916 67       		.sleb128 -25
 4209 0917 14       		.uleb128 0x14
 4210 0918 7B020000 		.4byte	.LASF98
 4211 091c 01       		.byte	0x1
 4212 091d 6F05     		.2byte	0x56f
 4213 091f 6B000000 		.4byte	0x6b
 4214 0923 02       		.uleb128 0x2
 4215 0924 91       		.byte	0x91
 4216 0925 66       		.sleb128 -26
 4217 0926 14       		.uleb128 0x14
 4218 0927 C00A0000 		.4byte	.LASF87
 4219 092b 01       		.byte	0x1
 4220 092c 6F05     		.2byte	0x56f
 4221 092e 6B000000 		.4byte	0x6b
 4222 0932 02       		.uleb128 0x2
 4223 0933 91       		.byte	0x91
 4224 0934 65       		.sleb128 -27
 4225 0935 12       		.uleb128 0x12
 4226 0936 6900     		.ascii	"i\000"
 4227 0938 01       		.byte	0x1
 4228 0939 7205     		.2byte	0x572
 4229 093b 6B000000 		.4byte	0x6b
 4230 093f 02       		.uleb128 0x2
 4231 0940 91       		.byte	0x91
 4232 0941 6F       		.sleb128 -17
 4233 0942 13       		.uleb128 0x13
 4234 0943 69050000 		.4byte	.LASF99
 4235 0947 01       		.byte	0x1
 4236 0948 7C05     		.2byte	0x57c
 4237 094a 6B000000 		.4byte	0x6b
 4238 094e 02       		.uleb128 0x2
 4239 094f 91       		.byte	0x91
 4240 0950 6E       		.sleb128 -18
 4241 0951 13       		.uleb128 0x13
 4242 0952 21090000 		.4byte	.LASF100
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 126


 4243 0956 01       		.byte	0x1
 4244 0957 7E05     		.2byte	0x57e
 4245 0959 6B000000 		.4byte	0x6b
 4246 095d 02       		.uleb128 0x2
 4247 095e 91       		.byte	0x91
 4248 095f 6D       		.sleb128 -19
 4249 0960 13       		.uleb128 0x13
 4250 0961 5C070000 		.4byte	.LASF101
 4251 0965 01       		.byte	0x1
 4252 0966 7F05     		.2byte	0x57f
 4253 0968 E0010000 		.4byte	0x1e0
 4254 096c 02       		.uleb128 0x2
 4255 096d 91       		.byte	0x91
 4256 096e 68       		.sleb128 -24
 4257 096f 00       		.byte	0
 4258 0970 17       		.uleb128 0x17
 4259 0971 6B0C0000 		.4byte	.LASF102
 4260 0975 01       		.byte	0x1
 4261 0976 0E06     		.2byte	0x60e
 4262 0978 6B000000 		.4byte	0x6b
 4263 097c 00000000 		.4byte	.LFB62
 4264 0980 A0010000 		.4byte	.LFE62-.LFB62
 4265 0984 01       		.uleb128 0x1
 4266 0985 9C       		.byte	0x9c
 4267 0986 420A0000 		.4byte	0xa42
 4268 098a 14       		.uleb128 0x14
 4269 098b 69050000 		.4byte	.LASF99
 4270 098f 01       		.byte	0x1
 4271 0990 0E06     		.2byte	0x60e
 4272 0992 6B000000 		.4byte	0x6b
 4273 0996 02       		.uleb128 0x2
 4274 0997 91       		.byte	0x91
 4275 0998 57       		.sleb128 -41
 4276 0999 14       		.uleb128 0x14
 4277 099a C3030000 		.4byte	.LASF97
 4278 099e 01       		.byte	0x1
 4279 099f 0E06     		.2byte	0x60e
 4280 09a1 6B000000 		.4byte	0x6b
 4281 09a5 02       		.uleb128 0x2
 4282 09a6 91       		.byte	0x91
 4283 09a7 56       		.sleb128 -42
 4284 09a8 14       		.uleb128 0x14
 4285 09a9 7B020000 		.4byte	.LASF98
 4286 09ad 01       		.byte	0x1
 4287 09ae 0F06     		.2byte	0x60f
 4288 09b0 6B000000 		.4byte	0x6b
 4289 09b4 02       		.uleb128 0x2
 4290 09b5 91       		.byte	0x91
 4291 09b6 55       		.sleb128 -43
 4292 09b7 14       		.uleb128 0x14
 4293 09b8 55050000 		.4byte	.LASF103
 4294 09bc 01       		.byte	0x1
 4295 09bd 0F06     		.2byte	0x60f
 4296 09bf 77000000 		.4byte	0x77
 4297 09c3 02       		.uleb128 0x2
 4298 09c4 91       		.byte	0x91
 4299 09c5 52       		.sleb128 -46
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 127


 4300 09c6 14       		.uleb128 0x14
 4301 09c7 5C0A0000 		.4byte	.LASF61
 4302 09cb 01       		.byte	0x1
 4303 09cc 0F06     		.2byte	0x60f
 4304 09ce 6B000000 		.4byte	0x6b
 4305 09d2 02       		.uleb128 0x2
 4306 09d3 91       		.byte	0x91
 4307 09d4 00       		.sleb128 0
 4308 09d5 13       		.uleb128 0x13
 4309 09d6 40010000 		.4byte	.LASF104
 4310 09da 01       		.byte	0x1
 4311 09db 1306     		.2byte	0x613
 4312 09dd 6B000000 		.4byte	0x6b
 4313 09e1 02       		.uleb128 0x2
 4314 09e2 91       		.byte	0x91
 4315 09e3 6F       		.sleb128 -17
 4316 09e4 13       		.uleb128 0x13
 4317 09e5 A3000000 		.4byte	.LASF105
 4318 09e9 01       		.byte	0x1
 4319 09ea 1406     		.2byte	0x614
 4320 09ec 6B000000 		.4byte	0x6b
 4321 09f0 02       		.uleb128 0x2
 4322 09f1 91       		.byte	0x91
 4323 09f2 67       		.sleb128 -25
 4324 09f3 13       		.uleb128 0x13
 4325 09f4 4C0C0000 		.4byte	.LASF106
 4326 09f8 01       		.byte	0x1
 4327 09f9 1906     		.2byte	0x619
 4328 09fb 420A0000 		.4byte	0xa42
 4329 09ff 05       		.uleb128 0x5
 4330 0a00 03       		.byte	0x3
 4331 0a01 44000000 		.4byte	CapSense_CSD_centroid.5419
 4332 0a05 13       		.uleb128 0x13
 4333 0a06 620C0000 		.4byte	.LASF107
 4334 0a0a 01       		.byte	0x1
 4335 0a0b 2006     		.2byte	0x620
 4336 0a0d 6B000000 		.4byte	0x6b
 4337 0a11 02       		.uleb128 0x2
 4338 0a12 91       		.byte	0x91
 4339 0a13 5B       		.sleb128 -37
 4340 0a14 13       		.uleb128 0x13
 4341 0a15 1B080000 		.4byte	.LASF108
 4342 0a19 01       		.byte	0x1
 4343 0a1a 2106     		.2byte	0x621
 4344 0a1c 83000000 		.4byte	0x83
 4345 0a20 02       		.uleb128 0x2
 4346 0a21 91       		.byte	0x91
 4347 0a22 60       		.sleb128 -32
 4348 0a23 13       		.uleb128 0x13
 4349 0a24 91090000 		.4byte	.LASF109
 4350 0a28 01       		.byte	0x1
 4351 0a29 2206     		.2byte	0x622
 4352 0a2b 9B000000 		.4byte	0x9b
 4353 0a2f 02       		.uleb128 0x2
 4354 0a30 91       		.byte	0x91
 4355 0a31 5C       		.sleb128 -36
 4356 0a32 13       		.uleb128 0x13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 128


 4357 0a33 5C070000 		.4byte	.LASF101
 4358 0a37 01       		.byte	0x1
 4359 0a38 2406     		.2byte	0x624
 4360 0a3a E0010000 		.4byte	0x1e0
 4361 0a3e 02       		.uleb128 0x2
 4362 0a3f 91       		.byte	0x91
 4363 0a40 68       		.sleb128 -24
 4364 0a41 00       		.byte	0
 4365 0a42 18       		.uleb128 0x18
 4366 0a43 6B000000 		.4byte	0x6b
 4367 0a47 520A0000 		.4byte	0xa52
 4368 0a4b 19       		.uleb128 0x19
 4369 0a4c BC000000 		.4byte	0xbc
 4370 0a50 02       		.byte	0x2
 4371 0a51 00       		.byte	0
 4372 0a52 17       		.uleb128 0x17
 4373 0a53 130B0000 		.4byte	.LASF110
 4374 0a57 01       		.byte	0x1
 4375 0a58 E106     		.2byte	0x6e1
 4376 0a5a 77000000 		.4byte	0x77
 4377 0a5e 00000000 		.4byte	.LFB63
 4378 0a62 74010000 		.4byte	.LFE63-.LFB63
 4379 0a66 01       		.uleb128 0x1
 4380 0a67 9C       		.byte	0x9c
 4381 0a68 E50A0000 		.4byte	0xae5
 4382 0a6c 14       		.uleb128 0x14
 4383 0a6d EC020000 		.4byte	.LASF53
 4384 0a71 01       		.byte	0x1
 4385 0a72 E106     		.2byte	0x6e1
 4386 0a74 83000000 		.4byte	0x83
 4387 0a78 02       		.uleb128 0x2
 4388 0a79 91       		.byte	0x91
 4389 0a7a 64       		.sleb128 -28
 4390 0a7b 13       		.uleb128 0x13
 4391 0a7c 60000000 		.4byte	.LASF111
 4392 0a80 01       		.byte	0x1
 4393 0a81 E806     		.2byte	0x6e8
 4394 0a83 6B000000 		.4byte	0x6b
 4395 0a87 02       		.uleb128 0x2
 4396 0a88 91       		.byte	0x91
 4397 0a89 68       		.sleb128 -24
 4398 0a8a 13       		.uleb128 0x13
 4399 0a8b 4D070000 		.4byte	.LASF112
 4400 0a8f 01       		.byte	0x1
 4401 0a90 E906     		.2byte	0x6e9
 4402 0a92 6B000000 		.4byte	0x6b
 4403 0a96 02       		.uleb128 0x2
 4404 0a97 91       		.byte	0x91
 4405 0a98 6D       		.sleb128 -19
 4406 0a99 13       		.uleb128 0x13
 4407 0a9a 90020000 		.4byte	.LASF113
 4408 0a9e 01       		.byte	0x1
 4409 0a9f EA06     		.2byte	0x6ea
 4410 0aa1 6B000000 		.4byte	0x6b
 4411 0aa5 02       		.uleb128 0x2
 4412 0aa6 91       		.byte	0x91
 4413 0aa7 6C       		.sleb128 -20
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 129


 4414 0aa8 13       		.uleb128 0x13
 4415 0aa9 69050000 		.4byte	.LASF99
 4416 0aad 01       		.byte	0x1
 4417 0aae F406     		.2byte	0x6f4
 4418 0ab0 6B000000 		.4byte	0x6b
 4419 0ab4 02       		.uleb128 0x2
 4420 0ab5 91       		.byte	0x91
 4421 0ab6 69       		.sleb128 -23
 4422 0ab7 13       		.uleb128 0x13
 4423 0ab8 620C0000 		.4byte	.LASF107
 4424 0abc 01       		.byte	0x1
 4425 0abd F506     		.2byte	0x6f5
 4426 0abf 77000000 		.4byte	0x77
 4427 0ac3 02       		.uleb128 0x2
 4428 0ac4 91       		.byte	0x91
 4429 0ac5 6E       		.sleb128 -18
 4430 0ac6 13       		.uleb128 0x13
 4431 0ac7 C3030000 		.4byte	.LASF97
 4432 0acb 01       		.byte	0x1
 4433 0acc F606     		.2byte	0x6f6
 4434 0ace 6B000000 		.4byte	0x6b
 4435 0ad2 02       		.uleb128 0x2
 4436 0ad3 91       		.byte	0x91
 4437 0ad4 6B       		.sleb128 -21
 4438 0ad5 13       		.uleb128 0x13
 4439 0ad6 7B020000 		.4byte	.LASF98
 4440 0ada 01       		.byte	0x1
 4441 0adb F706     		.2byte	0x6f7
 4442 0add 6B000000 		.4byte	0x6b
 4443 0ae1 02       		.uleb128 0x2
 4444 0ae2 91       		.byte	0x91
 4445 0ae3 6A       		.sleb128 -22
 4446 0ae4 00       		.byte	0
 4447 0ae5 17       		.uleb128 0x17
 4448 0ae6 840B0000 		.4byte	.LASF114
 4449 0aea 01       		.byte	0x1
 4450 0aeb AC07     		.2byte	0x7ac
 4451 0aed 77000000 		.4byte	0x77
 4452 0af1 00000000 		.4byte	.LFB64
 4453 0af5 B0000000 		.4byte	.LFE64-.LFB64
 4454 0af9 01       		.uleb128 0x1
 4455 0afa 9C       		.byte	0x9c
 4456 0afb 4B0B0000 		.4byte	0xb4b
 4457 0aff 14       		.uleb128 0x14
 4458 0b00 EC020000 		.4byte	.LASF53
 4459 0b04 01       		.byte	0x1
 4460 0b05 AC07     		.2byte	0x7ac
 4461 0b07 83000000 		.4byte	0x83
 4462 0b0b 02       		.uleb128 0x2
 4463 0b0c 91       		.byte	0x91
 4464 0b0d 64       		.sleb128 -28
 4465 0b0e 13       		.uleb128 0x13
 4466 0b0f 69050000 		.4byte	.LASF99
 4467 0b13 01       		.byte	0x1
 4468 0b14 BB07     		.2byte	0x7bb
 4469 0b16 6B000000 		.4byte	0x6b
 4470 0b1a 02       		.uleb128 0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 130


 4471 0b1b 91       		.byte	0x91
 4472 0b1c 6B       		.sleb128 -21
 4473 0b1d 13       		.uleb128 0x13
 4474 0b1e 620C0000 		.4byte	.LASF107
 4475 0b22 01       		.byte	0x1
 4476 0b23 BC07     		.2byte	0x7bc
 4477 0b25 77000000 		.4byte	0x77
 4478 0b29 02       		.uleb128 0x2
 4479 0b2a 91       		.byte	0x91
 4480 0b2b 6E       		.sleb128 -18
 4481 0b2c 13       		.uleb128 0x13
 4482 0b2d C3030000 		.4byte	.LASF97
 4483 0b31 01       		.byte	0x1
 4484 0b32 BD07     		.2byte	0x7bd
 4485 0b34 6B000000 		.4byte	0x6b
 4486 0b38 02       		.uleb128 0x2
 4487 0b39 91       		.byte	0x91
 4488 0b3a 6D       		.sleb128 -19
 4489 0b3b 13       		.uleb128 0x13
 4490 0b3c 7B020000 		.4byte	.LASF98
 4491 0b40 01       		.byte	0x1
 4492 0b41 BE07     		.2byte	0x7be
 4493 0b43 6B000000 		.4byte	0x6b
 4494 0b47 02       		.uleb128 0x2
 4495 0b48 91       		.byte	0x91
 4496 0b49 6C       		.sleb128 -20
 4497 0b4a 00       		.byte	0
 4498 0b4b 15       		.uleb128 0x15
 4499 0b4c 71050000 		.4byte	.LASF115
 4500 0b50 01       		.byte	0x1
 4501 0b51 5909     		.2byte	0x959
 4502 0b53 77000000 		.4byte	0x77
 4503 0b57 00000000 		.4byte	.LFB65
 4504 0b5b 76000000 		.4byte	.LFE65-.LFB65
 4505 0b5f 01       		.uleb128 0x1
 4506 0b60 9C       		.byte	0x9c
 4507 0b61 9F0B0000 		.4byte	0xb9f
 4508 0b65 1A       		.uleb128 0x1a
 4509 0b66 783100   		.ascii	"x1\000"
 4510 0b69 01       		.byte	0x1
 4511 0b6a 5909     		.2byte	0x959
 4512 0b6c 77000000 		.4byte	0x77
 4513 0b70 02       		.uleb128 0x2
 4514 0b71 91       		.byte	0x91
 4515 0b72 66       		.sleb128 -26
 4516 0b73 1A       		.uleb128 0x1a
 4517 0b74 783200   		.ascii	"x2\000"
 4518 0b77 01       		.byte	0x1
 4519 0b78 5909     		.2byte	0x959
 4520 0b7a 77000000 		.4byte	0x77
 4521 0b7e 02       		.uleb128 0x2
 4522 0b7f 91       		.byte	0x91
 4523 0b80 64       		.sleb128 -28
 4524 0b81 1A       		.uleb128 0x1a
 4525 0b82 783300   		.ascii	"x3\000"
 4526 0b85 01       		.byte	0x1
 4527 0b86 5909     		.2byte	0x959
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 131


 4528 0b88 77000000 		.4byte	0x77
 4529 0b8c 02       		.uleb128 0x2
 4530 0b8d 91       		.byte	0x91
 4531 0b8e 62       		.sleb128 -30
 4532 0b8f 12       		.uleb128 0x12
 4533 0b90 746D7000 		.ascii	"tmp\000"
 4534 0b94 01       		.byte	0x1
 4535 0b95 5B09     		.2byte	0x95b
 4536 0b97 77000000 		.4byte	0x77
 4537 0b9b 02       		.uleb128 0x2
 4538 0b9c 91       		.byte	0x91
 4539 0b9d 6E       		.sleb128 -18
 4540 0b9e 00       		.byte	0
 4541 0b9f 15       		.uleb128 0x15
 4542 0ba0 DE050000 		.4byte	.LASF116
 4543 0ba4 01       		.byte	0x1
 4544 0ba5 D109     		.2byte	0x9d1
 4545 0ba7 77000000 		.4byte	0x77
 4546 0bab 00000000 		.4byte	.LFB66
 4547 0baf 3C000000 		.4byte	.LFE66-.LFB66
 4548 0bb3 01       		.uleb128 0x1
 4549 0bb4 9C       		.byte	0x9c
 4550 0bb5 E50B0000 		.4byte	0xbe5
 4551 0bb9 1A       		.uleb128 0x1a
 4552 0bba 783100   		.ascii	"x1\000"
 4553 0bbd 01       		.byte	0x1
 4554 0bbe D109     		.2byte	0x9d1
 4555 0bc0 77000000 		.4byte	0x77
 4556 0bc4 02       		.uleb128 0x2
 4557 0bc5 91       		.byte	0x91
 4558 0bc6 6E       		.sleb128 -18
 4559 0bc7 1A       		.uleb128 0x1a
 4560 0bc8 783200   		.ascii	"x2\000"
 4561 0bcb 01       		.byte	0x1
 4562 0bcc D109     		.2byte	0x9d1
 4563 0bce 77000000 		.4byte	0x77
 4564 0bd2 02       		.uleb128 0x2
 4565 0bd3 91       		.byte	0x91
 4566 0bd4 6C       		.sleb128 -20
 4567 0bd5 12       		.uleb128 0x12
 4568 0bd6 746D7000 		.ascii	"tmp\000"
 4569 0bda 01       		.byte	0x1
 4570 0bdb D309     		.2byte	0x9d3
 4571 0bdd 83000000 		.4byte	0x83
 4572 0be1 02       		.uleb128 0x2
 4573 0be2 91       		.byte	0x91
 4574 0be3 74       		.sleb128 -12
 4575 0be4 00       		.byte	0
 4576 0be5 15       		.uleb128 0x15
 4577 0be6 36040000 		.4byte	.LASF117
 4578 0bea 01       		.byte	0x1
 4579 0beb F909     		.2byte	0x9f9
 4580 0bed 77000000 		.4byte	0x77
 4581 0bf1 00000000 		.4byte	.LFB67
 4582 0bf5 4C000000 		.4byte	.LFE67-.LFB67
 4583 0bf9 01       		.uleb128 0x1
 4584 0bfa 9C       		.byte	0x9c
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 132


 4585 0bfb 1C0C0000 		.4byte	0xc1c
 4586 0bff 1A       		.uleb128 0x1a
 4587 0c00 783100   		.ascii	"x1\000"
 4588 0c03 01       		.byte	0x1
 4589 0c04 F909     		.2byte	0x9f9
 4590 0c06 77000000 		.4byte	0x77
 4591 0c0a 02       		.uleb128 0x2
 4592 0c0b 91       		.byte	0x91
 4593 0c0c 76       		.sleb128 -10
 4594 0c0d 1A       		.uleb128 0x1a
 4595 0c0e 783200   		.ascii	"x2\000"
 4596 0c11 01       		.byte	0x1
 4597 0c12 F909     		.2byte	0x9f9
 4598 0c14 77000000 		.4byte	0x77
 4599 0c18 02       		.uleb128 0x2
 4600 0c19 91       		.byte	0x91
 4601 0c1a 74       		.sleb128 -12
 4602 0c1b 00       		.byte	0
 4603 0c1c 15       		.uleb128 0x15
 4604 0c1d 2C060000 		.4byte	.LASF118
 4605 0c21 01       		.byte	0x1
 4606 0c22 BA0A     		.2byte	0xaba
 4607 0c24 83000000 		.4byte	0x83
 4608 0c28 00000000 		.4byte	.LFB68
 4609 0c2c 1C000000 		.4byte	.LFE68-.LFB68
 4610 0c30 01       		.uleb128 0x1
 4611 0c31 9C       		.byte	0x9c
 4612 0c32 460C0000 		.4byte	0xc46
 4613 0c36 14       		.uleb128 0x14
 4614 0c37 85040000 		.4byte	.LASF51
 4615 0c3b 01       		.byte	0x1
 4616 0c3c BA0A     		.2byte	0xaba
 4617 0c3e 83000000 		.4byte	0x83
 4618 0c42 02       		.uleb128 0x2
 4619 0c43 91       		.byte	0x91
 4620 0c44 74       		.sleb128 -12
 4621 0c45 00       		.byte	0
 4622 0c46 15       		.uleb128 0x15
 4623 0c47 250A0000 		.4byte	.LASF119
 4624 0c4b 01       		.byte	0x1
 4625 0c4c D40A     		.2byte	0xad4
 4626 0c4e 6B000000 		.4byte	0x6b
 4627 0c52 00000000 		.4byte	.LFB69
 4628 0c56 1C000000 		.4byte	.LFE69-.LFB69
 4629 0c5a 01       		.uleb128 0x1
 4630 0c5b 9C       		.byte	0x9c
 4631 0c5c 700C0000 		.4byte	0xc70
 4632 0c60 14       		.uleb128 0x14
 4633 0c61 85040000 		.4byte	.LASF51
 4634 0c65 01       		.byte	0x1
 4635 0c66 D40A     		.2byte	0xad4
 4636 0c68 83000000 		.4byte	0x83
 4637 0c6c 02       		.uleb128 0x2
 4638 0c6d 91       		.byte	0x91
 4639 0c6e 74       		.sleb128 -12
 4640 0c6f 00       		.byte	0
 4641 0c70 15       		.uleb128 0x15
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 133


 4642 0c71 BD010000 		.4byte	.LASF120
 4643 0c75 01       		.byte	0x1
 4644 0c76 EE0A     		.2byte	0xaee
 4645 0c78 6B000000 		.4byte	0x6b
 4646 0c7c 00000000 		.4byte	.LFB70
 4647 0c80 1C000000 		.4byte	.LFE70-.LFB70
 4648 0c84 01       		.uleb128 0x1
 4649 0c85 9C       		.byte	0x9c
 4650 0c86 9A0C0000 		.4byte	0xc9a
 4651 0c8a 14       		.uleb128 0x14
 4652 0c8b EC020000 		.4byte	.LASF53
 4653 0c8f 01       		.byte	0x1
 4654 0c90 EE0A     		.2byte	0xaee
 4655 0c92 83000000 		.4byte	0x83
 4656 0c96 02       		.uleb128 0x2
 4657 0c97 91       		.byte	0x91
 4658 0c98 74       		.sleb128 -12
 4659 0c99 00       		.byte	0
 4660 0c9a 1B       		.uleb128 0x1b
 4661 0c9b 6B0A0000 		.4byte	.LASF121
 4662 0c9f 01       		.byte	0x1
 4663 0ca0 080B     		.2byte	0xb08
 4664 0ca2 00000000 		.4byte	.LFB71
 4665 0ca6 14000000 		.4byte	.LFE71-.LFB71
 4666 0caa 01       		.uleb128 0x1
 4667 0cab 9C       		.byte	0x9c
 4668 0cac 1B       		.uleb128 0x1b
 4669 0cad 62040000 		.4byte	.LASF122
 4670 0cb1 01       		.byte	0x1
 4671 0cb2 210B     		.2byte	0xb21
 4672 0cb4 00000000 		.4byte	.LFB72
 4673 0cb8 14000000 		.4byte	.LFE72-.LFB72
 4674 0cbc 01       		.uleb128 0x1
 4675 0cbd 9C       		.byte	0x9c
 4676 0cbe 18       		.uleb128 0x18
 4677 0cbf 6B000000 		.4byte	0x6b
 4678 0cc3 CE0C0000 		.4byte	0xcce
 4679 0cc7 19       		.uleb128 0x19
 4680 0cc8 BC000000 		.4byte	0xbc
 4681 0ccc 01       		.byte	0x1
 4682 0ccd 00       		.byte	0
 4683 0cce 0F       		.uleb128 0xf
 4684 0ccf 11020000 		.4byte	.LASF123
 4685 0cd3 01       		.byte	0x1
 4686 0cd4 55       		.byte	0x55
 4687 0cd5 BE0C0000 		.4byte	0xcbe
 4688 0cd9 05       		.uleb128 0x5
 4689 0cda 03       		.byte	0x3
 4690 0cdb 40000000 		.4byte	CapSense_CSD_debounceCounter
 4691 0cdf 18       		.uleb128 0x18
 4692 0ce0 77000000 		.4byte	0x77
 4693 0ce4 EF0C0000 		.4byte	0xcef
 4694 0ce8 19       		.uleb128 0x19
 4695 0ce9 BC000000 		.4byte	0xbc
 4696 0ced 00       		.byte	0
 4697 0cee 00       		.byte	0
 4698 0cef 0F       		.uleb128 0xf
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 134


 4699 0cf0 88030000 		.4byte	.LASF124
 4700 0cf4 01       		.byte	0x1
 4701 0cf5 63       		.byte	0x63
 4702 0cf6 000D0000 		.4byte	0xd00
 4703 0cfa 05       		.uleb128 0x5
 4704 0cfb 03       		.byte	0x3
 4705 0cfc 08000000 		.4byte	CapSense_CSD_centroidMult
 4706 0d00 08       		.uleb128 0x8
 4707 0d01 DF0C0000 		.4byte	0xcdf
 4708 0d05 18       		.uleb128 0x18
 4709 0d06 6B000000 		.4byte	0x6b
 4710 0d0a 150D0000 		.4byte	0xd15
 4711 0d0e 19       		.uleb128 0x19
 4712 0d0f BC000000 		.4byte	0xbc
 4713 0d13 00       		.byte	0
 4714 0d14 00       		.byte	0
 4715 0d15 0F       		.uleb128 0xf
 4716 0d16 DE0B0000 		.4byte	.LASF125
 4717 0d1a 01       		.byte	0x1
 4718 0d1b 67       		.byte	0x67
 4719 0d1c 050D0000 		.4byte	0xd05
 4720 0d20 05       		.uleb128 0x5
 4721 0d21 03       		.byte	0x3
 4722 0d22 14000000 		.4byte	CapSense_CSD_posFiltersMask
 4723 0d26 0F       		.uleb128 0xf
 4724 0d27 000A0000 		.4byte	.LASF126
 4725 0d2b 01       		.byte	0x1
 4726 0d2c 6B       		.byte	0x6b
 4727 0d2d 420A0000 		.4byte	0xa42
 4728 0d31 05       		.uleb128 0x5
 4729 0d32 03       		.byte	0x3
 4730 0d33 18000000 		.4byte	CapSense_CSD_posFiltersData
 4731 0d37 18       		.uleb128 0x18
 4732 0d38 77000000 		.4byte	0x77
 4733 0d3c 470D0000 		.4byte	0xd47
 4734 0d40 19       		.uleb128 0x19
 4735 0d41 BC000000 		.4byte	0xbc
 4736 0d45 0C       		.byte	0xc
 4737 0d46 00       		.byte	0
 4738 0d47 1C       		.uleb128 0x1c
 4739 0d48 48010000 		.4byte	.LASF127
 4740 0d4c 01       		.byte	0x1
 4741 0d4d 2C       		.byte	0x2c
 4742 0d4e 370D0000 		.4byte	0xd37
 4743 0d52 1C       		.uleb128 0x1c
 4744 0d53 52080000 		.4byte	.LASF128
 4745 0d57 01       		.byte	0x1
 4746 0d58 2D       		.byte	0x2d
 4747 0d59 BE0C0000 		.4byte	0xcbe
 4748 0d5d 18       		.uleb128 0x18
 4749 0d5e 6B000000 		.4byte	0x6b
 4750 0d62 6D0D0000 		.4byte	0xd6d
 4751 0d66 19       		.uleb128 0x19
 4752 0d67 BC000000 		.4byte	0xbc
 4753 0d6b 0C       		.byte	0xc
 4754 0d6c 00       		.byte	0
 4755 0d6d 1C       		.uleb128 0x1c
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 135


 4756 0d6e DD0A0000 		.4byte	.LASF129
 4757 0d72 01       		.byte	0x1
 4758 0d73 2E       		.byte	0x2e
 4759 0d74 780D0000 		.4byte	0xd78
 4760 0d78 08       		.uleb128 0x8
 4761 0d79 5D0D0000 		.4byte	0xd5d
 4762 0d7d 1D       		.uleb128 0x1d
 4763 0d7e A2030000 		.4byte	.LASF130
 4764 0d82 01       		.byte	0x1
 4765 0d83 34       		.byte	0x34
 4766 0d84 370D0000 		.4byte	0xd37
 4767 0d88 05       		.uleb128 0x5
 4768 0d89 03       		.byte	0x3
 4769 0d8a 00000000 		.4byte	CapSense_CSD_sensorBaseline
 4770 0d8e 1D       		.uleb128 0x1d
 4771 0d8f 02090000 		.4byte	.LASF131
 4772 0d93 01       		.byte	0x1
 4773 0d94 35       		.byte	0x35
 4774 0d95 5D0D0000 		.4byte	0xd5d
 4775 0d99 05       		.uleb128 0x5
 4776 0d9a 03       		.byte	0x3
 4777 0d9b 00000000 		.4byte	CapSense_CSD_sensorBaselineLow
 4778 0d9f 1D       		.uleb128 0x1d
 4779 0da0 C6070000 		.4byte	.LASF132
 4780 0da4 01       		.byte	0x1
 4781 0da5 36       		.byte	0x36
 4782 0da6 5D0D0000 		.4byte	0xd5d
 4783 0daa 05       		.uleb128 0x5
 4784 0dab 03       		.byte	0x3
 4785 0dac 00000000 		.4byte	CapSense_CSD_sensorSignal
 4786 0db0 1D       		.uleb128 0x1d
 4787 0db1 FB060000 		.4byte	.LASF133
 4788 0db5 01       		.byte	0x1
 4789 0db6 37       		.byte	0x37
 4790 0db7 BE0C0000 		.4byte	0xcbe
 4791 0dbb 05       		.uleb128 0x5
 4792 0dbc 03       		.byte	0x3
 4793 0dbd 00000000 		.4byte	CapSense_CSD_sensorOnMask
 4794 0dc1 1D       		.uleb128 0x1d
 4795 0dc2 B4020000 		.4byte	.LASF134
 4796 0dc6 01       		.byte	0x1
 4797 0dc7 39       		.byte	0x39
 4798 0dc8 5D0D0000 		.4byte	0xd5d
 4799 0dcc 05       		.uleb128 0x5
 4800 0dcd 03       		.byte	0x3
 4801 0dce 00000000 		.4byte	CapSense_CSD_lowBaselineResetCnt
 4802 0dd2 1D       		.uleb128 0x1d
 4803 0dd3 42000000 		.4byte	.LASF135
 4804 0dd7 01       		.byte	0x1
 4805 0dd8 3A       		.byte	0x3a
 4806 0dd9 5D0D0000 		.4byte	0xd5d
 4807 0ddd 05       		.uleb128 0x5
 4808 0dde 03       		.byte	0x3
 4809 0ddf 00000000 		.4byte	CapSense_CSD_lowBaselineReset
 4810 0de3 1D       		.uleb128 0x1d
 4811 0de4 F4010000 		.4byte	.LASF136
 4812 0de8 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 136


 4813 0de9 49       		.byte	0x49
 4814 0dea BE0C0000 		.4byte	0xcbe
 4815 0dee 05       		.uleb128 0x5
 4816 0def 03       		.byte	0x3
 4817 0df0 00000000 		.4byte	CapSense_CSD_fingerThreshold
 4818 0df4 1D       		.uleb128 0x1d
 4819 0df5 8B050000 		.4byte	.LASF137
 4820 0df9 01       		.byte	0x1
 4821 0dfa 4B       		.byte	0x4b
 4822 0dfb BE0C0000 		.4byte	0xcbe
 4823 0dff 05       		.uleb128 0x5
 4824 0e00 03       		.byte	0x3
 4825 0e01 00000000 		.4byte	CapSense_CSD_noiseThreshold
 4826 0e05 1D       		.uleb128 0x1d
 4827 0e06 29070000 		.4byte	.LASF138
 4828 0e0a 01       		.byte	0x1
 4829 0e0b 4D       		.byte	0x4d
 4830 0e0c BE0C0000 		.4byte	0xcbe
 4831 0e10 05       		.uleb128 0x5
 4832 0e11 03       		.byte	0x3
 4833 0e12 00000000 		.4byte	CapSense_CSD_negativeNoiseThreshold
 4834 0e16 1D       		.uleb128 0x1d
 4835 0e17 26090000 		.4byte	.LASF139
 4836 0e1b 01       		.byte	0x1
 4837 0e1c 4F       		.byte	0x4f
 4838 0e1d BE0C0000 		.4byte	0xcbe
 4839 0e21 05       		.uleb128 0x5
 4840 0e22 03       		.byte	0x3
 4841 0e23 00000000 		.4byte	CapSense_CSD_hysteresis
 4842 0e27 1D       		.uleb128 0x1d
 4843 0e28 460A0000 		.4byte	.LASF140
 4844 0e2c 01       		.byte	0x1
 4845 0e2d 51       		.byte	0x51
 4846 0e2e BE0C0000 		.4byte	0xcbe
 4847 0e32 05       		.uleb128 0x5
 4848 0e33 03       		.byte	0x3
 4849 0e34 00000000 		.4byte	CapSense_CSD_debounce
 4850 0e38 1D       		.uleb128 0x1d
 4851 0e39 01080000 		.4byte	.LASF141
 4852 0e3d 01       		.byte	0x1
 4853 0e3e 59       		.byte	0x59
 4854 0e3f 490E0000 		.4byte	0xe49
 4855 0e43 05       		.uleb128 0x5
 4856 0e44 03       		.byte	0x3
 4857 0e45 00000000 		.4byte	CapSense_CSD_rawDataIndex
 4858 0e49 08       		.uleb128 0x8
 4859 0e4a BE0C0000 		.4byte	0xcbe
 4860 0e4e 1D       		.uleb128 0x1d
 4861 0e4f 9C040000 		.4byte	.LASF142
 4862 0e53 01       		.byte	0x1
 4863 0e54 5E       		.byte	0x5e
 4864 0e55 5F0E0000 		.4byte	0xe5f
 4865 0e59 05       		.uleb128 0x5
 4866 0e5a 03       		.byte	0x3
 4867 0e5b 00000000 		.4byte	CapSense_CSD_numberOfSensors
 4868 0e5f 08       		.uleb128 0x8
 4869 0e60 BE0C0000 		.4byte	0xcbe
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 137


 4870 0e64 1D       		.uleb128 0x1d
 4871 0e65 AA070000 		.4byte	.LASF143
 4872 0e69 01       		.byte	0x1
 4873 0e6a 27       		.byte	0x27
 4874 0e6b 370D0000 		.4byte	0xd37
 4875 0e6f 05       		.uleb128 0x5
 4876 0e70 03       		.byte	0x3
 4877 0e71 00000000 		.4byte	CapSense_CSD_rawFilterData1
 4878 0e75 1C       		.uleb128 0x1c
 4879 0e76 30080000 		.4byte	.LASF144
 4880 0e7a 01       		.byte	0x1
 4881 0e7b 41       		.byte	0x41
 4882 0e7c BF020000 		.4byte	0x2bf
 4883 0e80 1D       		.uleb128 0x1d
 4884 0e81 D6010000 		.4byte	.LASF145
 4885 0e85 01       		.byte	0x1
 4886 0e86 45       		.byte	0x45
 4887 0e87 6B000000 		.4byte	0x6b
 4888 0e8b 05       		.uleb128 0x5
 4889 0e8c 03       		.byte	0x3
 4890 0e8d 00000000 		.4byte	CapSense_CSD_enableRawFilters
 4891 0e91 00       		.byte	0
 4892              		.section	.debug_abbrev,"",%progbits
 4893              	.Ldebug_abbrev0:
 4894 0000 01       		.uleb128 0x1
 4895 0001 11       		.uleb128 0x11
 4896 0002 01       		.byte	0x1
 4897 0003 25       		.uleb128 0x25
 4898 0004 0E       		.uleb128 0xe
 4899 0005 13       		.uleb128 0x13
 4900 0006 0B       		.uleb128 0xb
 4901 0007 03       		.uleb128 0x3
 4902 0008 0E       		.uleb128 0xe
 4903 0009 1B       		.uleb128 0x1b
 4904 000a 0E       		.uleb128 0xe
 4905 000b 55       		.uleb128 0x55
 4906 000c 17       		.uleb128 0x17
 4907 000d 11       		.uleb128 0x11
 4908 000e 01       		.uleb128 0x1
 4909 000f 10       		.uleb128 0x10
 4910 0010 17       		.uleb128 0x17
 4911 0011 00       		.byte	0
 4912 0012 00       		.byte	0
 4913 0013 02       		.uleb128 0x2
 4914 0014 24       		.uleb128 0x24
 4915 0015 00       		.byte	0
 4916 0016 0B       		.uleb128 0xb
 4917 0017 0B       		.uleb128 0xb
 4918 0018 3E       		.uleb128 0x3e
 4919 0019 0B       		.uleb128 0xb
 4920 001a 03       		.uleb128 0x3
 4921 001b 0E       		.uleb128 0xe
 4922 001c 00       		.byte	0
 4923 001d 00       		.byte	0
 4924 001e 03       		.uleb128 0x3
 4925 001f 24       		.uleb128 0x24
 4926 0020 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 138


 4927 0021 0B       		.uleb128 0xb
 4928 0022 0B       		.uleb128 0xb
 4929 0023 3E       		.uleb128 0x3e
 4930 0024 0B       		.uleb128 0xb
 4931 0025 03       		.uleb128 0x3
 4932 0026 08       		.uleb128 0x8
 4933 0027 00       		.byte	0
 4934 0028 00       		.byte	0
 4935 0029 04       		.uleb128 0x4
 4936 002a 16       		.uleb128 0x16
 4937 002b 00       		.byte	0
 4938 002c 03       		.uleb128 0x3
 4939 002d 0E       		.uleb128 0xe
 4940 002e 3A       		.uleb128 0x3a
 4941 002f 0B       		.uleb128 0xb
 4942 0030 3B       		.uleb128 0x3b
 4943 0031 05       		.uleb128 0x5
 4944 0032 49       		.uleb128 0x49
 4945 0033 13       		.uleb128 0x13
 4946 0034 00       		.byte	0
 4947 0035 00       		.byte	0
 4948 0036 05       		.uleb128 0x5
 4949 0037 13       		.uleb128 0x13
 4950 0038 01       		.byte	0x1
 4951 0039 0B       		.uleb128 0xb
 4952 003a 0B       		.uleb128 0xb
 4953 003b 3A       		.uleb128 0x3a
 4954 003c 0B       		.uleb128 0xb
 4955 003d 3B       		.uleb128 0x3b
 4956 003e 0B       		.uleb128 0xb
 4957 003f 01       		.uleb128 0x1
 4958 0040 13       		.uleb128 0x13
 4959 0041 00       		.byte	0
 4960 0042 00       		.byte	0
 4961 0043 06       		.uleb128 0x6
 4962 0044 0D       		.uleb128 0xd
 4963 0045 00       		.byte	0
 4964 0046 03       		.uleb128 0x3
 4965 0047 0E       		.uleb128 0xe
 4966 0048 3A       		.uleb128 0x3a
 4967 0049 0B       		.uleb128 0xb
 4968 004a 3B       		.uleb128 0x3b
 4969 004b 0B       		.uleb128 0xb
 4970 004c 49       		.uleb128 0x49
 4971 004d 13       		.uleb128 0x13
 4972 004e 38       		.uleb128 0x38
 4973 004f 0B       		.uleb128 0xb
 4974 0050 00       		.byte	0
 4975 0051 00       		.byte	0
 4976 0052 07       		.uleb128 0x7
 4977 0053 0F       		.uleb128 0xf
 4978 0054 00       		.byte	0
 4979 0055 0B       		.uleb128 0xb
 4980 0056 0B       		.uleb128 0xb
 4981 0057 49       		.uleb128 0x49
 4982 0058 13       		.uleb128 0x13
 4983 0059 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 139


 4984 005a 00       		.byte	0
 4985 005b 08       		.uleb128 0x8
 4986 005c 26       		.uleb128 0x26
 4987 005d 00       		.byte	0
 4988 005e 49       		.uleb128 0x49
 4989 005f 13       		.uleb128 0x13
 4990 0060 00       		.byte	0
 4991 0061 00       		.byte	0
 4992 0062 09       		.uleb128 0x9
 4993 0063 15       		.uleb128 0x15
 4994 0064 01       		.byte	0x1
 4995 0065 27       		.uleb128 0x27
 4996 0066 19       		.uleb128 0x19
 4997 0067 49       		.uleb128 0x49
 4998 0068 13       		.uleb128 0x13
 4999 0069 01       		.uleb128 0x1
 5000 006a 13       		.uleb128 0x13
 5001 006b 00       		.byte	0
 5002 006c 00       		.byte	0
 5003 006d 0A       		.uleb128 0xa
 5004 006e 05       		.uleb128 0x5
 5005 006f 00       		.byte	0
 5006 0070 49       		.uleb128 0x49
 5007 0071 13       		.uleb128 0x13
 5008 0072 00       		.byte	0
 5009 0073 00       		.byte	0
 5010 0074 0B       		.uleb128 0xb
 5011 0075 15       		.uleb128 0x15
 5012 0076 01       		.byte	0x1
 5013 0077 27       		.uleb128 0x27
 5014 0078 19       		.uleb128 0x19
 5015 0079 01       		.uleb128 0x1
 5016 007a 13       		.uleb128 0x13
 5017 007b 00       		.byte	0
 5018 007c 00       		.byte	0
 5019 007d 0C       		.uleb128 0xc
 5020 007e 16       		.uleb128 0x16
 5021 007f 00       		.byte	0
 5022 0080 03       		.uleb128 0x3
 5023 0081 0E       		.uleb128 0xe
 5024 0082 3A       		.uleb128 0x3a
 5025 0083 0B       		.uleb128 0xb
 5026 0084 3B       		.uleb128 0x3b
 5027 0085 0B       		.uleb128 0xb
 5028 0086 49       		.uleb128 0x49
 5029 0087 13       		.uleb128 0x13
 5030 0088 00       		.byte	0
 5031 0089 00       		.byte	0
 5032 008a 0D       		.uleb128 0xd
 5033 008b 2E       		.uleb128 0x2e
 5034 008c 01       		.byte	0x1
 5035 008d 3F       		.uleb128 0x3f
 5036 008e 19       		.uleb128 0x19
 5037 008f 03       		.uleb128 0x3
 5038 0090 0E       		.uleb128 0xe
 5039 0091 3A       		.uleb128 0x3a
 5040 0092 0B       		.uleb128 0xb
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 140


 5041 0093 3B       		.uleb128 0x3b
 5042 0094 0B       		.uleb128 0xb
 5043 0095 27       		.uleb128 0x27
 5044 0096 19       		.uleb128 0x19
 5045 0097 11       		.uleb128 0x11
 5046 0098 01       		.uleb128 0x1
 5047 0099 12       		.uleb128 0x12
 5048 009a 06       		.uleb128 0x6
 5049 009b 40       		.uleb128 0x40
 5050 009c 18       		.uleb128 0x18
 5051 009d 9742     		.uleb128 0x2117
 5052 009f 19       		.uleb128 0x19
 5053 00a0 01       		.uleb128 0x1
 5054 00a1 13       		.uleb128 0x13
 5055 00a2 00       		.byte	0
 5056 00a3 00       		.byte	0
 5057 00a4 0E       		.uleb128 0xe
 5058 00a5 05       		.uleb128 0x5
 5059 00a6 00       		.byte	0
 5060 00a7 03       		.uleb128 0x3
 5061 00a8 0E       		.uleb128 0xe
 5062 00a9 3A       		.uleb128 0x3a
 5063 00aa 0B       		.uleb128 0xb
 5064 00ab 3B       		.uleb128 0x3b
 5065 00ac 0B       		.uleb128 0xb
 5066 00ad 49       		.uleb128 0x49
 5067 00ae 13       		.uleb128 0x13
 5068 00af 02       		.uleb128 0x2
 5069 00b0 18       		.uleb128 0x18
 5070 00b1 00       		.byte	0
 5071 00b2 00       		.byte	0
 5072 00b3 0F       		.uleb128 0xf
 5073 00b4 34       		.uleb128 0x34
 5074 00b5 00       		.byte	0
 5075 00b6 03       		.uleb128 0x3
 5076 00b7 0E       		.uleb128 0xe
 5077 00b8 3A       		.uleb128 0x3a
 5078 00b9 0B       		.uleb128 0xb
 5079 00ba 3B       		.uleb128 0x3b
 5080 00bb 0B       		.uleb128 0xb
 5081 00bc 49       		.uleb128 0x49
 5082 00bd 13       		.uleb128 0x13
 5083 00be 02       		.uleb128 0x2
 5084 00bf 18       		.uleb128 0x18
 5085 00c0 00       		.byte	0
 5086 00c1 00       		.byte	0
 5087 00c2 10       		.uleb128 0x10
 5088 00c3 2E       		.uleb128 0x2e
 5089 00c4 01       		.byte	0x1
 5090 00c5 3F       		.uleb128 0x3f
 5091 00c6 19       		.uleb128 0x19
 5092 00c7 03       		.uleb128 0x3
 5093 00c8 0E       		.uleb128 0xe
 5094 00c9 3A       		.uleb128 0x3a
 5095 00ca 0B       		.uleb128 0xb
 5096 00cb 3B       		.uleb128 0x3b
 5097 00cc 0B       		.uleb128 0xb
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 141


 5098 00cd 27       		.uleb128 0x27
 5099 00ce 19       		.uleb128 0x19
 5100 00cf 11       		.uleb128 0x11
 5101 00d0 01       		.uleb128 0x1
 5102 00d1 12       		.uleb128 0x12
 5103 00d2 06       		.uleb128 0x6
 5104 00d3 40       		.uleb128 0x40
 5105 00d4 18       		.uleb128 0x18
 5106 00d5 9642     		.uleb128 0x2116
 5107 00d7 19       		.uleb128 0x19
 5108 00d8 01       		.uleb128 0x1
 5109 00d9 13       		.uleb128 0x13
 5110 00da 00       		.byte	0
 5111 00db 00       		.byte	0
 5112 00dc 11       		.uleb128 0x11
 5113 00dd 2E       		.uleb128 0x2e
 5114 00de 01       		.byte	0x1
 5115 00df 3F       		.uleb128 0x3f
 5116 00e0 19       		.uleb128 0x19
 5117 00e1 03       		.uleb128 0x3
 5118 00e2 0E       		.uleb128 0xe
 5119 00e3 3A       		.uleb128 0x3a
 5120 00e4 0B       		.uleb128 0xb
 5121 00e5 3B       		.uleb128 0x3b
 5122 00e6 05       		.uleb128 0x5
 5123 00e7 27       		.uleb128 0x27
 5124 00e8 19       		.uleb128 0x19
 5125 00e9 11       		.uleb128 0x11
 5126 00ea 01       		.uleb128 0x1
 5127 00eb 12       		.uleb128 0x12
 5128 00ec 06       		.uleb128 0x6
 5129 00ed 40       		.uleb128 0x40
 5130 00ee 18       		.uleb128 0x18
 5131 00ef 9642     		.uleb128 0x2116
 5132 00f1 19       		.uleb128 0x19
 5133 00f2 01       		.uleb128 0x1
 5134 00f3 13       		.uleb128 0x13
 5135 00f4 00       		.byte	0
 5136 00f5 00       		.byte	0
 5137 00f6 12       		.uleb128 0x12
 5138 00f7 34       		.uleb128 0x34
 5139 00f8 00       		.byte	0
 5140 00f9 03       		.uleb128 0x3
 5141 00fa 08       		.uleb128 0x8
 5142 00fb 3A       		.uleb128 0x3a
 5143 00fc 0B       		.uleb128 0xb
 5144 00fd 3B       		.uleb128 0x3b
 5145 00fe 05       		.uleb128 0x5
 5146 00ff 49       		.uleb128 0x49
 5147 0100 13       		.uleb128 0x13
 5148 0101 02       		.uleb128 0x2
 5149 0102 18       		.uleb128 0x18
 5150 0103 00       		.byte	0
 5151 0104 00       		.byte	0
 5152 0105 13       		.uleb128 0x13
 5153 0106 34       		.uleb128 0x34
 5154 0107 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 142


 5155 0108 03       		.uleb128 0x3
 5156 0109 0E       		.uleb128 0xe
 5157 010a 3A       		.uleb128 0x3a
 5158 010b 0B       		.uleb128 0xb
 5159 010c 3B       		.uleb128 0x3b
 5160 010d 05       		.uleb128 0x5
 5161 010e 49       		.uleb128 0x49
 5162 010f 13       		.uleb128 0x13
 5163 0110 02       		.uleb128 0x2
 5164 0111 18       		.uleb128 0x18
 5165 0112 00       		.byte	0
 5166 0113 00       		.byte	0
 5167 0114 14       		.uleb128 0x14
 5168 0115 05       		.uleb128 0x5
 5169 0116 00       		.byte	0
 5170 0117 03       		.uleb128 0x3
 5171 0118 0E       		.uleb128 0xe
 5172 0119 3A       		.uleb128 0x3a
 5173 011a 0B       		.uleb128 0xb
 5174 011b 3B       		.uleb128 0x3b
 5175 011c 05       		.uleb128 0x5
 5176 011d 49       		.uleb128 0x49
 5177 011e 13       		.uleb128 0x13
 5178 011f 02       		.uleb128 0x2
 5179 0120 18       		.uleb128 0x18
 5180 0121 00       		.byte	0
 5181 0122 00       		.byte	0
 5182 0123 15       		.uleb128 0x15
 5183 0124 2E       		.uleb128 0x2e
 5184 0125 01       		.byte	0x1
 5185 0126 3F       		.uleb128 0x3f
 5186 0127 19       		.uleb128 0x19
 5187 0128 03       		.uleb128 0x3
 5188 0129 0E       		.uleb128 0xe
 5189 012a 3A       		.uleb128 0x3a
 5190 012b 0B       		.uleb128 0xb
 5191 012c 3B       		.uleb128 0x3b
 5192 012d 05       		.uleb128 0x5
 5193 012e 27       		.uleb128 0x27
 5194 012f 19       		.uleb128 0x19
 5195 0130 49       		.uleb128 0x49
 5196 0131 13       		.uleb128 0x13
 5197 0132 11       		.uleb128 0x11
 5198 0133 01       		.uleb128 0x1
 5199 0134 12       		.uleb128 0x12
 5200 0135 06       		.uleb128 0x6
 5201 0136 40       		.uleb128 0x40
 5202 0137 18       		.uleb128 0x18
 5203 0138 9742     		.uleb128 0x2117
 5204 013a 19       		.uleb128 0x19
 5205 013b 01       		.uleb128 0x1
 5206 013c 13       		.uleb128 0x13
 5207 013d 00       		.byte	0
 5208 013e 00       		.byte	0
 5209 013f 16       		.uleb128 0x16
 5210 0140 2E       		.uleb128 0x2e
 5211 0141 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 143


 5212 0142 3F       		.uleb128 0x3f
 5213 0143 19       		.uleb128 0x19
 5214 0144 03       		.uleb128 0x3
 5215 0145 0E       		.uleb128 0xe
 5216 0146 3A       		.uleb128 0x3a
 5217 0147 0B       		.uleb128 0xb
 5218 0148 3B       		.uleb128 0x3b
 5219 0149 05       		.uleb128 0x5
 5220 014a 27       		.uleb128 0x27
 5221 014b 19       		.uleb128 0x19
 5222 014c 11       		.uleb128 0x11
 5223 014d 01       		.uleb128 0x1
 5224 014e 12       		.uleb128 0x12
 5225 014f 06       		.uleb128 0x6
 5226 0150 40       		.uleb128 0x40
 5227 0151 18       		.uleb128 0x18
 5228 0152 9742     		.uleb128 0x2117
 5229 0154 19       		.uleb128 0x19
 5230 0155 01       		.uleb128 0x1
 5231 0156 13       		.uleb128 0x13
 5232 0157 00       		.byte	0
 5233 0158 00       		.byte	0
 5234 0159 17       		.uleb128 0x17
 5235 015a 2E       		.uleb128 0x2e
 5236 015b 01       		.byte	0x1
 5237 015c 3F       		.uleb128 0x3f
 5238 015d 19       		.uleb128 0x19
 5239 015e 03       		.uleb128 0x3
 5240 015f 0E       		.uleb128 0xe
 5241 0160 3A       		.uleb128 0x3a
 5242 0161 0B       		.uleb128 0xb
 5243 0162 3B       		.uleb128 0x3b
 5244 0163 05       		.uleb128 0x5
 5245 0164 27       		.uleb128 0x27
 5246 0165 19       		.uleb128 0x19
 5247 0166 49       		.uleb128 0x49
 5248 0167 13       		.uleb128 0x13
 5249 0168 11       		.uleb128 0x11
 5250 0169 01       		.uleb128 0x1
 5251 016a 12       		.uleb128 0x12
 5252 016b 06       		.uleb128 0x6
 5253 016c 40       		.uleb128 0x40
 5254 016d 18       		.uleb128 0x18
 5255 016e 9642     		.uleb128 0x2116
 5256 0170 19       		.uleb128 0x19
 5257 0171 01       		.uleb128 0x1
 5258 0172 13       		.uleb128 0x13
 5259 0173 00       		.byte	0
 5260 0174 00       		.byte	0
 5261 0175 18       		.uleb128 0x18
 5262 0176 01       		.uleb128 0x1
 5263 0177 01       		.byte	0x1
 5264 0178 49       		.uleb128 0x49
 5265 0179 13       		.uleb128 0x13
 5266 017a 01       		.uleb128 0x1
 5267 017b 13       		.uleb128 0x13
 5268 017c 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 144


 5269 017d 00       		.byte	0
 5270 017e 19       		.uleb128 0x19
 5271 017f 21       		.uleb128 0x21
 5272 0180 00       		.byte	0
 5273 0181 49       		.uleb128 0x49
 5274 0182 13       		.uleb128 0x13
 5275 0183 2F       		.uleb128 0x2f
 5276 0184 0B       		.uleb128 0xb
 5277 0185 00       		.byte	0
 5278 0186 00       		.byte	0
 5279 0187 1A       		.uleb128 0x1a
 5280 0188 05       		.uleb128 0x5
 5281 0189 00       		.byte	0
 5282 018a 03       		.uleb128 0x3
 5283 018b 08       		.uleb128 0x8
 5284 018c 3A       		.uleb128 0x3a
 5285 018d 0B       		.uleb128 0xb
 5286 018e 3B       		.uleb128 0x3b
 5287 018f 05       		.uleb128 0x5
 5288 0190 49       		.uleb128 0x49
 5289 0191 13       		.uleb128 0x13
 5290 0192 02       		.uleb128 0x2
 5291 0193 18       		.uleb128 0x18
 5292 0194 00       		.byte	0
 5293 0195 00       		.byte	0
 5294 0196 1B       		.uleb128 0x1b
 5295 0197 2E       		.uleb128 0x2e
 5296 0198 00       		.byte	0
 5297 0199 3F       		.uleb128 0x3f
 5298 019a 19       		.uleb128 0x19
 5299 019b 03       		.uleb128 0x3
 5300 019c 0E       		.uleb128 0xe
 5301 019d 3A       		.uleb128 0x3a
 5302 019e 0B       		.uleb128 0xb
 5303 019f 3B       		.uleb128 0x3b
 5304 01a0 05       		.uleb128 0x5
 5305 01a1 27       		.uleb128 0x27
 5306 01a2 19       		.uleb128 0x19
 5307 01a3 11       		.uleb128 0x11
 5308 01a4 01       		.uleb128 0x1
 5309 01a5 12       		.uleb128 0x12
 5310 01a6 06       		.uleb128 0x6
 5311 01a7 40       		.uleb128 0x40
 5312 01a8 18       		.uleb128 0x18
 5313 01a9 9742     		.uleb128 0x2117
 5314 01ab 19       		.uleb128 0x19
 5315 01ac 00       		.byte	0
 5316 01ad 00       		.byte	0
 5317 01ae 1C       		.uleb128 0x1c
 5318 01af 34       		.uleb128 0x34
 5319 01b0 00       		.byte	0
 5320 01b1 03       		.uleb128 0x3
 5321 01b2 0E       		.uleb128 0xe
 5322 01b3 3A       		.uleb128 0x3a
 5323 01b4 0B       		.uleb128 0xb
 5324 01b5 3B       		.uleb128 0x3b
 5325 01b6 0B       		.uleb128 0xb
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 145


 5326 01b7 49       		.uleb128 0x49
 5327 01b8 13       		.uleb128 0x13
 5328 01b9 3F       		.uleb128 0x3f
 5329 01ba 19       		.uleb128 0x19
 5330 01bb 3C       		.uleb128 0x3c
 5331 01bc 19       		.uleb128 0x19
 5332 01bd 00       		.byte	0
 5333 01be 00       		.byte	0
 5334 01bf 1D       		.uleb128 0x1d
 5335 01c0 34       		.uleb128 0x34
 5336 01c1 00       		.byte	0
 5337 01c2 03       		.uleb128 0x3
 5338 01c3 0E       		.uleb128 0xe
 5339 01c4 3A       		.uleb128 0x3a
 5340 01c5 0B       		.uleb128 0xb
 5341 01c6 3B       		.uleb128 0x3b
 5342 01c7 0B       		.uleb128 0xb
 5343 01c8 49       		.uleb128 0x49
 5344 01c9 13       		.uleb128 0x13
 5345 01ca 3F       		.uleb128 0x3f
 5346 01cb 19       		.uleb128 0x19
 5347 01cc 02       		.uleb128 0x2
 5348 01cd 18       		.uleb128 0x18
 5349 01ce 00       		.byte	0
 5350 01cf 00       		.byte	0
 5351 01d0 00       		.byte	0
 5352              		.section	.debug_aranges,"",%progbits
 5353 0000 4C010000 		.4byte	0x14c
 5354 0004 0200     		.2byte	0x2
 5355 0006 00000000 		.4byte	.Ldebug_info0
 5356 000a 04       		.byte	0x4
 5357 000b 00       		.byte	0
 5358 000c 0000     		.2byte	0
 5359 000e 0000     		.2byte	0
 5360 0010 00000000 		.4byte	.LFB34
 5361 0014 90000000 		.4byte	.LFE34-.LFB34
 5362 0018 00000000 		.4byte	.LFB35
 5363 001c 28000000 		.4byte	.LFE35-.LFB35
 5364 0020 00000000 		.4byte	.LFB36
 5365 0024 26000000 		.4byte	.LFE36-.LFB36
 5366 0028 00000000 		.4byte	.LFB37
 5367 002c 50000000 		.4byte	.LFE37-.LFB37
 5368 0030 00000000 		.4byte	.LFB38
 5369 0034 38020000 		.4byte	.LFE38-.LFB38
 5370 0038 00000000 		.4byte	.LFB39
 5371 003c 1E000000 		.4byte	.LFE39-.LFB39
 5372 0040 00000000 		.4byte	.LFB40
 5373 0044 40000000 		.4byte	.LFE40-.LFB40
 5374 0048 00000000 		.4byte	.LFB41
 5375 004c 70000000 		.4byte	.LFE41-.LFB41
 5376 0050 00000000 		.4byte	.LFB42
 5377 0054 1C000000 		.4byte	.LFE42-.LFB42
 5378 0058 00000000 		.4byte	.LFB43
 5379 005c 24000000 		.4byte	.LFE43-.LFB43
 5380 0060 00000000 		.4byte	.LFB44
 5381 0064 1C000000 		.4byte	.LFE44-.LFB44
 5382 0068 00000000 		.4byte	.LFB45
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 146


 5383 006c 24000000 		.4byte	.LFE45-.LFB45
 5384 0070 00000000 		.4byte	.LFB46
 5385 0074 1C000000 		.4byte	.LFE46-.LFB46
 5386 0078 00000000 		.4byte	.LFB47
 5387 007c 1C000000 		.4byte	.LFE47-.LFB47
 5388 0080 00000000 		.4byte	.LFB48
 5389 0084 1C000000 		.4byte	.LFE48-.LFB48
 5390 0088 00000000 		.4byte	.LFB49
 5391 008c 1C000000 		.4byte	.LFE49-.LFB49
 5392 0090 00000000 		.4byte	.LFB50
 5393 0094 24000000 		.4byte	.LFE50-.LFB50
 5394 0098 00000000 		.4byte	.LFB51
 5395 009c 24000000 		.4byte	.LFE51-.LFB51
 5396 00a0 00000000 		.4byte	.LFB52
 5397 00a4 24000000 		.4byte	.LFE52-.LFB52
 5398 00a8 00000000 		.4byte	.LFB53
 5399 00ac 24000000 		.4byte	.LFE53-.LFB53
 5400 00b0 00000000 		.4byte	.LFB54
 5401 00b4 24000000 		.4byte	.LFE54-.LFB54
 5402 00b8 00000000 		.4byte	.LFB55
 5403 00bc 24000000 		.4byte	.LFE55-.LFB55
 5404 00c0 00000000 		.4byte	.LFB56
 5405 00c4 58010000 		.4byte	.LFE56-.LFB56
 5406 00c8 00000000 		.4byte	.LFB57
 5407 00cc 58000000 		.4byte	.LFE57-.LFB57
 5408 00d0 00000000 		.4byte	.LFB58
 5409 00d4 36000000 		.4byte	.LFE58-.LFB58
 5410 00d8 00000000 		.4byte	.LFB59
 5411 00dc 70000000 		.4byte	.LFE59-.LFB59
 5412 00e0 00000000 		.4byte	.LFB60
 5413 00e4 70000000 		.4byte	.LFE60-.LFB60
 5414 00e8 00000000 		.4byte	.LFB61
 5415 00ec B8000000 		.4byte	.LFE61-.LFB61
 5416 00f0 00000000 		.4byte	.LFB62
 5417 00f4 A0010000 		.4byte	.LFE62-.LFB62
 5418 00f8 00000000 		.4byte	.LFB63
 5419 00fc 74010000 		.4byte	.LFE63-.LFB63
 5420 0100 00000000 		.4byte	.LFB64
 5421 0104 B0000000 		.4byte	.LFE64-.LFB64
 5422 0108 00000000 		.4byte	.LFB65
 5423 010c 76000000 		.4byte	.LFE65-.LFB65
 5424 0110 00000000 		.4byte	.LFB66
 5425 0114 3C000000 		.4byte	.LFE66-.LFB66
 5426 0118 00000000 		.4byte	.LFB67
 5427 011c 4C000000 		.4byte	.LFE67-.LFB67
 5428 0120 00000000 		.4byte	.LFB68
 5429 0124 1C000000 		.4byte	.LFE68-.LFB68
 5430 0128 00000000 		.4byte	.LFB69
 5431 012c 1C000000 		.4byte	.LFE69-.LFB69
 5432 0130 00000000 		.4byte	.LFB70
 5433 0134 1C000000 		.4byte	.LFE70-.LFB70
 5434 0138 00000000 		.4byte	.LFB71
 5435 013c 14000000 		.4byte	.LFE71-.LFB71
 5436 0140 00000000 		.4byte	.LFB72
 5437 0144 14000000 		.4byte	.LFE72-.LFB72
 5438 0148 00000000 		.4byte	0
 5439 014c 00000000 		.4byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 147


 5440              		.section	.debug_ranges,"",%progbits
 5441              	.Ldebug_ranges0:
 5442 0000 00000000 		.4byte	.LFB34
 5443 0004 90000000 		.4byte	.LFE34
 5444 0008 00000000 		.4byte	.LFB35
 5445 000c 28000000 		.4byte	.LFE35
 5446 0010 00000000 		.4byte	.LFB36
 5447 0014 26000000 		.4byte	.LFE36
 5448 0018 00000000 		.4byte	.LFB37
 5449 001c 50000000 		.4byte	.LFE37
 5450 0020 00000000 		.4byte	.LFB38
 5451 0024 38020000 		.4byte	.LFE38
 5452 0028 00000000 		.4byte	.LFB39
 5453 002c 1E000000 		.4byte	.LFE39
 5454 0030 00000000 		.4byte	.LFB40
 5455 0034 40000000 		.4byte	.LFE40
 5456 0038 00000000 		.4byte	.LFB41
 5457 003c 70000000 		.4byte	.LFE41
 5458 0040 00000000 		.4byte	.LFB42
 5459 0044 1C000000 		.4byte	.LFE42
 5460 0048 00000000 		.4byte	.LFB43
 5461 004c 24000000 		.4byte	.LFE43
 5462 0050 00000000 		.4byte	.LFB44
 5463 0054 1C000000 		.4byte	.LFE44
 5464 0058 00000000 		.4byte	.LFB45
 5465 005c 24000000 		.4byte	.LFE45
 5466 0060 00000000 		.4byte	.LFB46
 5467 0064 1C000000 		.4byte	.LFE46
 5468 0068 00000000 		.4byte	.LFB47
 5469 006c 1C000000 		.4byte	.LFE47
 5470 0070 00000000 		.4byte	.LFB48
 5471 0074 1C000000 		.4byte	.LFE48
 5472 0078 00000000 		.4byte	.LFB49
 5473 007c 1C000000 		.4byte	.LFE49
 5474 0080 00000000 		.4byte	.LFB50
 5475 0084 24000000 		.4byte	.LFE50
 5476 0088 00000000 		.4byte	.LFB51
 5477 008c 24000000 		.4byte	.LFE51
 5478 0090 00000000 		.4byte	.LFB52
 5479 0094 24000000 		.4byte	.LFE52
 5480 0098 00000000 		.4byte	.LFB53
 5481 009c 24000000 		.4byte	.LFE53
 5482 00a0 00000000 		.4byte	.LFB54
 5483 00a4 24000000 		.4byte	.LFE54
 5484 00a8 00000000 		.4byte	.LFB55
 5485 00ac 24000000 		.4byte	.LFE55
 5486 00b0 00000000 		.4byte	.LFB56
 5487 00b4 58010000 		.4byte	.LFE56
 5488 00b8 00000000 		.4byte	.LFB57
 5489 00bc 58000000 		.4byte	.LFE57
 5490 00c0 00000000 		.4byte	.LFB58
 5491 00c4 36000000 		.4byte	.LFE58
 5492 00c8 00000000 		.4byte	.LFB59
 5493 00cc 70000000 		.4byte	.LFE59
 5494 00d0 00000000 		.4byte	.LFB60
 5495 00d4 70000000 		.4byte	.LFE60
 5496 00d8 00000000 		.4byte	.LFB61
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 148


 5497 00dc B8000000 		.4byte	.LFE61
 5498 00e0 00000000 		.4byte	.LFB62
 5499 00e4 A0010000 		.4byte	.LFE62
 5500 00e8 00000000 		.4byte	.LFB63
 5501 00ec 74010000 		.4byte	.LFE63
 5502 00f0 00000000 		.4byte	.LFB64
 5503 00f4 B0000000 		.4byte	.LFE64
 5504 00f8 00000000 		.4byte	.LFB65
 5505 00fc 76000000 		.4byte	.LFE65
 5506 0100 00000000 		.4byte	.LFB66
 5507 0104 3C000000 		.4byte	.LFE66
 5508 0108 00000000 		.4byte	.LFB67
 5509 010c 4C000000 		.4byte	.LFE67
 5510 0110 00000000 		.4byte	.LFB68
 5511 0114 1C000000 		.4byte	.LFE68
 5512 0118 00000000 		.4byte	.LFB69
 5513 011c 1C000000 		.4byte	.LFE69
 5514 0120 00000000 		.4byte	.LFB70
 5515 0124 1C000000 		.4byte	.LFE70
 5516 0128 00000000 		.4byte	.LFB71
 5517 012c 14000000 		.4byte	.LFE71
 5518 0130 00000000 		.4byte	.LFB72
 5519 0134 14000000 		.4byte	.LFE72
 5520 0138 00000000 		.4byte	0
 5521 013c 00000000 		.4byte	0
 5522              		.section	.debug_line,"",%progbits
 5523              	.Ldebug_line0:
 5524 0000 C0040000 		.section	.debug_str,"MS",%progbits,1
 5524      02006600 
 5524      00000201 
 5524      FB0E0D00 
 5524      01010101 
 5525              	.LASF32:
 5526 0000 7363616E 		.ascii	"scanSpeedTbl\000"
 5526      53706565 
 5526      6454626C 
 5526      00
 5527              	.LASF35:
 5528 000d 6E756D62 		.ascii	"numberOfSensors\000"
 5528      65724F66 
 5528      53656E73 
 5528      6F727300 
 5529              	.LASF39:
 5530 001d 70747247 		.ascii	"ptrGetBitValue\000"
 5530      65744269 
 5530      7456616C 
 5530      756500
 5531              	.LASF49:
 5532 002c 43617053 		.ascii	"CapSense_CSD_BaseInit\000"
 5532      656E7365 
 5532      5F435344 
 5532      5F426173 
 5532      65496E69 
 5533              	.LASF135:
 5534 0042 43617053 		.ascii	"CapSense_CSD_lowBaselineReset\000"
 5534      656E7365 
 5534      5F435344 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 149


 5534      5F6C6F77 
 5534      42617365 
 5535              	.LASF111:
 5536 0060 706F7349 		.ascii	"posIndex\000"
 5536      6E646578 
 5536      00
 5537              	.LASF55:
 5538 0069 69735365 		.ascii	"isSensorEnabled\000"
 5538      6E736F72 
 5538      456E6162 
 5538      6C656400 
 5539              	.LASF91:
 5540 0079 6E756D4F 		.ascii	"numOfSensors\000"
 5540      6653656E 
 5540      736F7273 
 5540      00
 5541              	.LASF8:
 5542 0086 756E7369 		.ascii	"unsigned int\000"
 5542      676E6564 
 5542      20696E74 
 5542      00
 5543              	.LASF44:
 5544 0093 746F7461 		.ascii	"totalSensorsNum\000"
 5544      6C53656E 
 5544      736F7273 
 5544      4E756D00 
 5545              	.LASF105:
 5546 00a3 706F734E 		.ascii	"posNext\000"
 5546      65787400 
 5547              	.LASF54:
 5548 00ab 43617053 		.ascii	"CapSense_CSD_InitializeEnabledBaselines\000"
 5548      656E7365 
 5548      5F435344 
 5548      5F496E69 
 5548      7469616C 
 5549              	.LASF68:
 5550 00d3 43617053 		.ascii	"CapSense_CSD_SetBaselineData\000"
 5550      656E7365 
 5550      5F435344 
 5550      5F536574 
 5550      42617365 
 5551              	.LASF12:
 5552 00f0 696E7431 		.ascii	"int16\000"
 5552      3600
 5553              	.LASF29:
 5554 00f6 73616D70 		.ascii	"sampleMaxTbl\000"
 5554      6C654D61 
 5554      7854626C 
 5554      00
 5555              	.LASF147:
 5556 0103 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSD_CSHL.c\000"
 5556      6E657261 
 5556      7465645F 
 5556      536F7572 
 5556      63655C50 
 5557              	.LASF27:
 5558 0130 7369676E 		.ascii	"signRegisterTbl\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 150


 5558      52656769 
 5558      73746572 
 5558      54626C00 
 5559              	.LASF104:
 5560 0140 706F7350 		.ascii	"posPrev\000"
 5560      72657600 
 5561              	.LASF127:
 5562 0148 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 5562      656E7365 
 5562      5F435344 
 5562      5F73656E 
 5562      736F7252 
 5563              	.LASF34:
 5564 015f 72617744 		.ascii	"rawDataIndex\000"
 5564      61746149 
 5564      6E646578 
 5564      00
 5565              	.LASF43:
 5566 016c 746F7461 		.ascii	"totalWidgetsNum\000"
 5566      6C576964 
 5566      67657473 
 5566      4E756D00 
 5567              	.LASF89:
 5568 017c 43617053 		.ascii	"CapSense_CSD_CheckIsWidgetActive\000"
 5568      656E7365 
 5568      5F435344 
 5568      5F436865 
 5568      636B4973 
 5569              	.LASF78:
 5570 019d 43617053 		.ascii	"CapSense_CSD_SetFingerThreshold\000"
 5570      656E7365 
 5570      5F435344 
 5570      5F536574 
 5570      46696E67 
 5571              	.LASF120:
 5572 01bd 43617053 		.ascii	"CapSense_CSD_GetDebounce\000"
 5572      656E7365 
 5572      5F435344 
 5572      5F476574 
 5572      4465626F 
 5573              	.LASF145:
 5574 01d6 43617053 		.ascii	"CapSense_CSD_enableRawFilters\000"
 5574      656E7365 
 5574      5F435344 
 5574      5F656E61 
 5574      626C6552 
 5575              	.LASF136:
 5576 01f4 43617053 		.ascii	"CapSense_CSD_fingerThreshold\000"
 5576      656E7365 
 5576      5F435344 
 5576      5F66696E 
 5576      67657254 
 5577              	.LASF123:
 5578 0211 43617053 		.ascii	"CapSense_CSD_debounceCounter\000"
 5578      656E7365 
 5578      5F435344 
 5578      5F646562 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 151


 5578      6F756E63 
 5579              	.LASF75:
 5580 022e 43617053 		.ascii	"CapSense_CSD_GetNoiseThreshold\000"
 5580      656E7365 
 5580      5F435344 
 5580      5F476574 
 5580      4E6F6973 
 5581              	.LASF48:
 5582 024d 43617053 		.ascii	"CapSense_CSD_CONFIG_TYPE_P4_v2_40\000"
 5582      656E7365 
 5582      5F435344 
 5582      5F434F4E 
 5582      4649475F 
 5583              	.LASF14:
 5584 026f 666C6F61 		.ascii	"float\000"
 5584      7400
 5585              	.LASF13:
 5586 0275 696E7433 		.ascii	"int32\000"
 5586      3200
 5587              	.LASF98:
 5588 027b 636F756E 		.ascii	"count\000"
 5588      7400
 5589              	.LASF24:
 5590 0281 7265736F 		.ascii	"resolutionsTbl\000"
 5590      6C757469 
 5590      6F6E7354 
 5590      626C00
 5591              	.LASF113:
 5592 0290 706F7346 		.ascii	"posFiltersMask\000"
 5592      696C7465 
 5592      72734D61 
 5592      736B00
 5593              	.LASF26:
 5594 029f 72756E6E 		.ascii	"runningDifferenceTbl\000"
 5594      696E6744 
 5594      69666665 
 5594      72656E63 
 5594      6554626C 
 5595              	.LASF134:
 5596 02b4 43617053 		.ascii	"CapSense_CSD_lowBaselineResetCnt\000"
 5596      656E7365 
 5596      5F435344 
 5596      5F6C6F77 
 5596      42617365 
 5597              	.LASF7:
 5598 02d5 6C6F6E67 		.ascii	"long long unsigned int\000"
 5598      206C6F6E 
 5598      6720756E 
 5598      7369676E 
 5598      65642069 
 5599              	.LASF53:
 5600 02ec 77696467 		.ascii	"widget\000"
 5600      657400
 5601              	.LASF79:
 5602 02f3 43617053 		.ascii	"CapSense_CSD_SetNoiseThreshold\000"
 5602      656E7365 
 5602      5F435344 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 152


 5602      5F536574 
 5602      4E6F6973 
 5603              	.LASF64:
 5604 0312 43617053 		.ascii	"CapSense_CSD_UpdateWidgetBaseline\000"
 5604      656E7365 
 5604      5F435344 
 5604      5F557064 
 5604      61746557 
 5605              	.LASF73:
 5606 0334 76616C75 		.ascii	"value\000"
 5606      6500
 5607              	.LASF81:
 5608 033a 43617053 		.ascii	"CapSense_CSD_SetNegativeNoiseThreshold\000"
 5608      656E7365 
 5608      5F435344 
 5608      5F536574 
 5608      4E656761 
 5609              	.LASF56:
 5610 0361 43617053 		.ascii	"CapSense_CSD_UpdateBaselineNoThreshold\000"
 5610      656E7365 
 5610      5F435344 
 5610      5F557064 
 5610      61746542 
 5611              	.LASF124:
 5612 0388 43617053 		.ascii	"CapSense_CSD_centroidMult\000"
 5612      656E7365 
 5612      5F435344 
 5612      5F63656E 
 5612      74726F69 
 5613              	.LASF130:
 5614 03a2 43617053 		.ascii	"CapSense_CSD_sensorBaseline\000"
 5614      656E7365 
 5614      5F435344 
 5614      5F73656E 
 5614      736F7242 
 5615              	.LASF58:
 5616 03be 7369676E 		.ascii	"sign\000"
 5616      00
 5617              	.LASF97:
 5618 03c3 6F666673 		.ascii	"offset\000"
 5618      657400
 5619              	.LASF25:
 5620 03ca 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 5620      65456E76 
 5620      656C6F70 
 5620      6554626C 
 5620      00
 5621              	.LASF57:
 5622 03db 63616C63 		.ascii	"calc\000"
 5622      00
 5623              	.LASF38:
 5624 03e0 70747252 		.ascii	"ptrReadSensorRaw\000"
 5624      65616453 
 5624      656E736F 
 5624      72526177 
 5624      00
 5625              	.LASF88:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 153


 5626 03f1 68797374 		.ascii	"hysteresis\000"
 5626      65726573 
 5626      697300
 5627              	.LASF82:
 5628 03fc 43617053 		.ascii	"CapSense_CSD_SetDebounce\000"
 5628      656E7365 
 5628      5F435344 
 5628      5F536574 
 5628      4465626F 
 5629              	.LASF60:
 5630 0415 66696C74 		.ascii	"filteredRawData\000"
 5630      65726564 
 5630      52617744 
 5630      61746100 
 5631              	.LASF65:
 5632 0425 73656E73 		.ascii	"sensorsPerWidget\000"
 5632      6F727350 
 5632      65725769 
 5632      64676574 
 5632      00
 5633              	.LASF117:
 5634 0436 43617053 		.ascii	"CapSense_CSD_JitterFilter\000"
 5634      656E7365 
 5634      5F435344 
 5634      5F4A6974 
 5634      74657246 
 5635              	.LASF42:
 5636 0450 746F7461 		.ascii	"totalScanslotsNum\000"
 5636      6C536361 
 5636      6E736C6F 
 5636      74734E75 
 5636      6D00
 5637              	.LASF122:
 5638 0462 43617053 		.ascii	"CapSense_CSD_DisableRawDataFilters\000"
 5638      656E7365 
 5638      5F435344 
 5638      5F446973 
 5638      61626C65 
 5639              	.LASF51:
 5640 0485 73656E73 		.ascii	"sensor\000"
 5640      6F7200
 5641              	.LASF45:
 5642 048c 73656E73 		.ascii	"sensetivitySeed\000"
 5642      65746976 
 5642      69747953 
 5642      65656400 
 5643              	.LASF142:
 5644 049c 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 5644      656E7365 
 5644      5F435344 
 5644      5F6E756D 
 5644      6265724F 
 5645              	.LASF16:
 5646 04b9 63686172 		.ascii	"char\000"
 5646      00
 5647              	.LASF95:
 5648 04be 43617053 		.ascii	"CapSense_CSD_DisableWidget\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 154


 5648      656E7365 
 5648      5F435344 
 5648      5F446973 
 5648      61626C65 
 5649              	.LASF33:
 5650 04d9 70726573 		.ascii	"prescalerTable\000"
 5650      63616C65 
 5650      72546162 
 5650      6C6500
 5651              	.LASF41:
 5652 04e8 43617053 		.ascii	"CapSense_CSD_CONFIG_TYPE_POINTERS_P4_v2_40\000"
 5652      656E7365 
 5652      5F435344 
 5652      5F434F4E 
 5652      4649475F 
 5653              	.LASF10:
 5654 0513 75696E74 		.ascii	"uint16\000"
 5654      313600
 5655              	.LASF69:
 5656 051a 64617461 		.ascii	"data\000"
 5656      00
 5657              	.LASF18:
 5658 051f 69646163 		.ascii	"idac1LevelsTbl\000"
 5658      314C6576 
 5658      656C7354 
 5658      626C00
 5659              	.LASF77:
 5660 052e 43617053 		.ascii	"CapSense_CSD_GetNegativeNoiseThreshold\000"
 5660      656E7365 
 5660      5F435344 
 5660      5F476574 
 5660      4E656761 
 5661              	.LASF103:
 5662 0555 7265736F 		.ascii	"resolution\000"
 5662      6C757469 
 5662      6F6E00
 5663              	.LASF90:
 5664 0560 72617749 		.ascii	"rawIndex\000"
 5664      6E646578 
 5664      00
 5665              	.LASF99:
 5666 0569 6D617869 		.ascii	"maximum\000"
 5666      6D756D00 
 5667              	.LASF115:
 5668 0571 43617053 		.ascii	"CapSense_CSD_MedianFilter\000"
 5668      656E7365 
 5668      5F435344 
 5668      5F4D6564 
 5668      69616E46 
 5669              	.LASF137:
 5670 058b 43617053 		.ascii	"CapSense_CSD_noiseThreshold\000"
 5670      656E7365 
 5670      5F435344 
 5670      5F6E6F69 
 5670      73655468 
 5671              	.LASF6:
 5672 05a7 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 155


 5672      206C6F6E 
 5672      6720696E 
 5672      7400
 5673              	.LASF74:
 5674 05b5 43617053 		.ascii	"CapSense_CSD_GetFingerThreshold\000"
 5674      656E7365 
 5674      5F435344 
 5674      5F476574 
 5674      46696E67 
 5675              	.LASF85:
 5676 05d5 6465626F 		.ascii	"debounce\000"
 5676      756E6365 
 5676      00
 5677              	.LASF116:
 5678 05de 43617053 		.ascii	"CapSense_CSD_IIR4Filter\000"
 5678      656E7365 
 5678      5F435344 
 5678      5F494952 
 5678      3446696C 
 5679              	.LASF37:
 5680 05f6 70747250 		.ascii	"ptrPreScan\000"
 5680      72655363 
 5680      616E00
 5681              	.LASF76:
 5682 0601 43617053 		.ascii	"CapSense_CSD_GetFingerHysteresis\000"
 5682      656E7365 
 5682      5F435344 
 5682      5F476574 
 5682      46696E67 
 5683              	.LASF36:
 5684 0622 70747247 		.ascii	"ptrGetRaw\000"
 5684      65745261 
 5684      7700
 5685              	.LASF118:
 5686 062c 43617053 		.ascii	"CapSense_CSD_GetWidgetNumber\000"
 5686      656E7365 
 5686      5F435344 
 5686      5F476574 
 5686      57696467 
 5687              	.LASF146:
 5688 0649 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5688      4320342E 
 5688      392E3320 
 5688      32303135 
 5688      30333033 
 5689 067c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5689      20726576 
 5689      6973696F 
 5689      6E203232 
 5689      31323230 
 5690 06af 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5690      66756E63 
 5690      74696F6E 
 5690      2D736563 
 5690      74696F6E 
 5691              	.LASF63:
 5692 06d7 43617053 		.ascii	"CapSense_CSD_UpdateEnabledBaselines\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 156


 5692      656E7365 
 5692      5F435344 
 5692      5F557064 
 5692      61746545 
 5693              	.LASF133:
 5694 06fb 43617053 		.ascii	"CapSense_CSD_sensorOnMask\000"
 5694      656E7365 
 5694      5F435344 
 5694      5F73656E 
 5694      736F724F 
 5695              	.LASF28:
 5696 0715 73616D70 		.ascii	"sampleMinTbl\000"
 5696      6C654D69 
 5696      6E54626C 
 5696      00
 5697              	.LASF11:
 5698 0722 75696E74 		.ascii	"uint32\000"
 5698      333200
 5699              	.LASF138:
 5700 0729 43617053 		.ascii	"CapSense_CSD_negativeNoiseThreshold\000"
 5700      656E7365 
 5700      5F435344 
 5700      5F6E6567 
 5700      61746976 
 5701              	.LASF112:
 5702 074d 66697273 		.ascii	"firstTimeIndex\000"
 5702      7454696D 
 5702      65496E64 
 5702      657800
 5703              	.LASF101:
 5704 075c 73746172 		.ascii	"startOfSlider\000"
 5704      744F6653 
 5704      6C696465 
 5704      7200
 5705              	.LASF72:
 5706 076a 43617053 		.ascii	"CapSense_CSD_SetDiffCountData\000"
 5706      656E7365 
 5706      5F435344 
 5706      5F536574 
 5706      44696666 
 5707              	.LASF62:
 5708 0788 43617053 		.ascii	"CapSense_CSD_UpdateSensorBaseline\000"
 5708      656E7365 
 5708      5F435344 
 5708      5F557064 
 5708      61746553 
 5709              	.LASF143:
 5710 07aa 43617053 		.ascii	"CapSense_CSD_rawFilterData1\000"
 5710      656E7365 
 5710      5F435344 
 5710      5F726177 
 5710      46696C74 
 5711              	.LASF132:
 5712 07c6 43617053 		.ascii	"CapSense_CSD_sensorSignal\000"
 5712      656E7365 
 5712      5F435344 
 5712      5F73656E 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 157


 5712      736F7253 
 5713              	.LASF83:
 5714 07e0 43617053 		.ascii	"CapSense_CSD_SetLowBaselineReset\000"
 5714      656E7365 
 5714      5F435344 
 5714      5F536574 
 5714      4C6F7742 
 5715              	.LASF141:
 5716 0801 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 5716      656E7365 
 5716      5F435344 
 5716      5F726177 
 5716      44617461 
 5717              	.LASF108:
 5718 081b 6E756D65 		.ascii	"numerator\000"
 5718      7261746F 
 5718      7200
 5719              	.LASF67:
 5720 0825 6C617374 		.ascii	"lastSensor\000"
 5720      53656E73 
 5720      6F7200
 5721              	.LASF144:
 5722 0830 43617053 		.ascii	"CapSense_CSD_config\000"
 5722      656E7365 
 5722      5F435344 
 5722      5F636F6E 
 5722      66696700 
 5723              	.LASF46:
 5724 0844 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5724      6B467265 
 5724      715F4D48 
 5724      7A00
 5725              	.LASF128:
 5726 0852 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 5726      656E7365 
 5726      5F435344 
 5726      5F73656E 
 5726      736F7245 
 5727              	.LASF19:
 5728 0870 69646163 		.ascii	"idac2LevelsTbl\000"
 5728      324C6576 
 5728      656C7354 
 5728      626C00
 5729              	.LASF148:
 5730 087f 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Google Drive\\Virtuell"
 5730      73657273 
 5730      5C4C756B 
 5730      61732043 
 5730      72657574 
 5731 08ae 65205265 		.ascii	"e Realitaeten\\PSoCWorkspace\\VRProject\\CapSense.c"
 5731      616C6974 
 5731      61657465 
 5731      6E5C5053 
 5731      6F43576F 
 5732 08de 7964736E 		.ascii	"ydsn\000"
 5732      00
 5733              	.LASF2:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 158


 5734 08e3 73686F72 		.ascii	"short int\000"
 5734      7420696E 
 5734      7400
 5735              	.LASF4:
 5736 08ed 6C6F6E67 		.ascii	"long int\000"
 5736      20696E74 
 5736      00
 5737              	.LASF66:
 5738 08f6 66697273 		.ascii	"firstSensor\000"
 5738      7453656E 
 5738      736F7200 
 5739              	.LASF131:
 5740 0902 43617053 		.ascii	"CapSense_CSD_sensorBaselineLow\000"
 5740      656E7365 
 5740      5F435344 
 5740      5F73656E 
 5740      736F7242 
 5741              	.LASF100:
 5742 0921 74656D70 		.ascii	"temp\000"
 5742      00
 5743              	.LASF139:
 5744 0926 43617053 		.ascii	"CapSense_CSD_hysteresis\000"
 5744      656E7365 
 5744      5F435344 
 5744      5F687973 
 5744      74657265 
 5745              	.LASF71:
 5746 093e 43617053 		.ascii	"CapSense_CSD_GetDiffCountData\000"
 5746      656E7365 
 5746      5F435344 
 5746      5F476574 
 5746      44696666 
 5747              	.LASF23:
 5748 095c 77696467 		.ascii	"widgetNubmersTbl\000"
 5748      65744E75 
 5748      626D6572 
 5748      7354626C 
 5748      00
 5749              	.LASF93:
 5750 096d 43617053 		.ascii	"CapSense_CSD_CheckIsAnyWidgetActive\000"
 5750      656E7365 
 5750      5F435344 
 5750      5F436865 
 5750      636B4973 
 5751              	.LASF109:
 5752 0991 64656E6F 		.ascii	"denominator\000"
 5752      6D696E61 
 5752      746F7200 
 5753              	.LASF84:
 5754 099d 43617053 		.ascii	"CapSense_CSD_CheckIsSensorActive\000"
 5754      656E7365 
 5754      5F435344 
 5754      5F436865 
 5754      636B4973 
 5755              	.LASF31:
 5756 09be 6B56616C 		.ascii	"kValueTbl\000"
 5756      75655462 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 159


 5756      6C00
 5757              	.LASF70:
 5758 09c8 43617053 		.ascii	"CapSense_CSD_GetBaselineData\000"
 5758      656E7365 
 5758      5F435344 
 5758      5F476574 
 5758      42617365 
 5759              	.LASF17:
 5760 09e5 73697A65 		.ascii	"sizetype\000"
 5760      74797065 
 5760      00
 5761              	.LASF5:
 5762 09ee 6C6F6E67 		.ascii	"long unsigned int\000"
 5762      20756E73 
 5762      69676E65 
 5762      6420696E 
 5762      7400
 5763              	.LASF126:
 5764 0a00 43617053 		.ascii	"CapSense_CSD_posFiltersData\000"
 5764      656E7365 
 5764      5F435344 
 5764      5F706F73 
 5764      46696C74 
 5765              	.LASF47:
 5766 0a1c 706F696E 		.ascii	"pointers\000"
 5766      74657273 
 5766      00
 5767              	.LASF119:
 5768 0a25 43617053 		.ascii	"CapSense_CSD_GetLowBaselineReset\000"
 5768      656E7365 
 5768      5F435344 
 5768      5F476574 
 5768      4C6F7742 
 5769              	.LASF140:
 5770 0a46 43617053 		.ascii	"CapSense_CSD_debounce\000"
 5770      656E7365 
 5770      5F435344 
 5770      5F646562 
 5770      6F756E63 
 5771              	.LASF61:
 5772 0a5c 6E6F6973 		.ascii	"noiseThreshold\000"
 5772      65546872 
 5772      6573686F 
 5772      6C6400
 5773              	.LASF121:
 5774 0a6b 43617053 		.ascii	"CapSense_CSD_EnableRawDataFilters\000"
 5774      656E7365 
 5774      5F435344 
 5774      5F456E61 
 5774      626C6552 
 5775              	.LASF80:
 5776 0a8d 43617053 		.ascii	"CapSense_CSD_SetFingerHysteresis\000"
 5776      656E7365 
 5776      5F435344 
 5776      5F536574 
 5776      46696E67 
 5777              	.LASF30:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 160


 5778 0aae 70726576 		.ascii	"previousSampleTbl\000"
 5778      696F7573 
 5778      53616D70 
 5778      6C655462 
 5778      6C00
 5779              	.LASF87:
 5780 0ac0 66696E67 		.ascii	"fingerThreshold\000"
 5780      65725468 
 5780      72657368 
 5780      6F6C6400 
 5781              	.LASF21:
 5782 0ad0 63686172 		.ascii	"chargeDivTbl\000"
 5782      67654469 
 5782      7654626C 
 5782      00
 5783              	.LASF129:
 5784 0add 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 5784      656E7365 
 5784      5F435344 
 5784      5F776964 
 5784      6765744E 
 5785              	.LASF1:
 5786 0af7 756E7369 		.ascii	"unsigned char\000"
 5786      676E6564 
 5786      20636861 
 5786      7200
 5787              	.LASF86:
 5788 0b05 6465626F 		.ascii	"debounceIndex\000"
 5788      756E6365 
 5788      496E6465 
 5788      7800
 5789              	.LASF110:
 5790 0b13 43617053 		.ascii	"CapSense_CSD_GetCentroidPos\000"
 5790      656E7365 
 5790      5F435344 
 5790      5F476574 
 5790      43656E74 
 5791              	.LASF50:
 5792 0b2f 43617053 		.ascii	"CapSense_CSD_InitializeSensorBaseline\000"
 5792      656E7365 
 5792      5F435344 
 5792      5F496E69 
 5792      7469616C 
 5793              	.LASF94:
 5794 0b55 43617053 		.ascii	"CapSense_CSD_EnableWidget\000"
 5794      656E7365 
 5794      5F435344 
 5794      5F456E61 
 5794      626C6557 
 5795              	.LASF20:
 5796 0b6f 73656E73 		.ascii	"sensetivityTbl\000"
 5796      65746976 
 5796      69747954 
 5796      626C00
 5797              	.LASF92:
 5798 0b7e 73746174 		.ascii	"state\000"
 5798      6500
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 161


 5799              	.LASF114:
 5800 0b84 43617053 		.ascii	"CapSense_CSD_GetRadialCentroidPos\000"
 5800      656E7365 
 5800      5F435344 
 5800      5F476574 
 5800      52616469 
 5801              	.LASF22:
 5802 0ba6 6D6F6444 		.ascii	"modDivTbl\000"
 5802      69765462 
 5802      6C00
 5803              	.LASF0:
 5804 0bb0 7369676E 		.ascii	"signed char\000"
 5804      65642063 
 5804      68617200 
 5805              	.LASF3:
 5806 0bbc 73686F72 		.ascii	"short unsigned int\000"
 5806      7420756E 
 5806      7369676E 
 5806      65642069 
 5806      6E7400
 5807              	.LASF40:
 5808 0bcf 70747253 		.ascii	"ptrSetBitValue\000"
 5808      65744269 
 5808      7456616C 
 5808      756500
 5809              	.LASF125:
 5810 0bde 43617053 		.ascii	"CapSense_CSD_posFiltersMask\000"
 5810      656E7365 
 5810      5F435344 
 5810      5F706F73 
 5810      46696C74 
 5811              	.LASF52:
 5812 0bfa 43617053 		.ascii	"CapSense_CSD_InitializeAllBaselines\000"
 5812      656E7365 
 5812      5F435344 
 5812      5F496E69 
 5812      7469616C 
 5813              	.LASF59:
 5814 0c1e 74656D70 		.ascii	"tempRaw\000"
 5814      52617700 
 5815              	.LASF9:
 5816 0c26 75696E74 		.ascii	"uint8\000"
 5816      3800
 5817              	.LASF15:
 5818 0c2c 646F7562 		.ascii	"double\000"
 5818      6C6500
 5819              	.LASF96:
 5820 0c33 43617053 		.ascii	"CapSense_CSD_FindMaximum\000"
 5820      656E7365 
 5820      5F435344 
 5820      5F46696E 
 5820      644D6178 
 5821              	.LASF106:
 5822 0c4c 43617053 		.ascii	"CapSense_CSD_centroid\000"
 5822      656E7365 
 5822      5F435344 
 5822      5F63656E 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccrijgnB.s 			page 162


 5822      74726F69 
 5823              	.LASF107:
 5824 0c62 706F7369 		.ascii	"position\000"
 5824      74696F6E 
 5824      00
 5825              	.LASF102:
 5826 0c6b 43617053 		.ascii	"CapSense_CSD_CalcCentroid\000"
 5826      656E7365 
 5826      5F435344 
 5826      5F43616C 
 5826      6343656E 
 5827              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
