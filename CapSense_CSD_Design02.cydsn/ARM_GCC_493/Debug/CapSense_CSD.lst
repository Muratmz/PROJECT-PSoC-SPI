ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CapSense_CSD.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.bss
  19              	CapSense_CSD_initVar:
  20 0000 00       		.space	1
  21              		.comm	CapSense_CSD_csv,1,1
  22              		.comm	CapSense_CSD_sensorIndex,1,1
  23              		.comm	CapSense_CSD_sensorRaw,14,4
  24              		.global	CapSense_CSD_sensorEnableMask
  25              		.data
  26              		.align	2
  27              		.type	CapSense_CSD_sensorEnableMask, %object
  28              		.size	CapSense_CSD_sensorEnableMask, 1
  29              	CapSense_CSD_sensorEnableMask:
  30 0000 7F       		.byte	127
  31              		.global	CapSense_CSD_pcTable
  32              		.section	.rodata
  33              		.align	2
  34              		.type	CapSense_CSD_pcTable, %object
  35              		.size	CapSense_CSD_pcTable, 28
  36              	CapSense_CSD_pcTable:
  37 0000 05500040 		.word	1073762309
  38 0004 06500040 		.word	1073762310
  39 0008 00500040 		.word	1073762304
  40 000c 01500040 		.word	1073762305
  41 0010 02500040 		.word	1073762306
  42 0014 03500040 		.word	1073762307
  43 0018 04500040 		.word	1073762308
  44              		.global	CapSense_CSD_portTable
  45              		.align	2
  46              		.type	CapSense_CSD_portTable, %object
  47              		.size	CapSense_CSD_portTable, 7
  48              	CapSense_CSD_portTable:
  49 001c 00000000 		.space	7
  49      000000
  50              		.global	CapSense_CSD_maskTable
  51 0023 00       		.align	2
  52              		.type	CapSense_CSD_maskTable, %object
  53              		.size	CapSense_CSD_maskTable, 7
  54              	CapSense_CSD_maskTable:
  55 0024 20       		.byte	32
  56 0025 40       		.byte	64
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 2


  57 0026 01       		.byte	1
  58 0027 02       		.byte	2
  59 0028 04       		.byte	4
  60 0029 08       		.byte	8
  61 002a 10       		.byte	16
  62              		.global	CapSense_CSD_csTable
  63 002b 00       		.align	2
  64              		.type	CapSense_CSD_csTable, %object
  65              		.size	CapSense_CSD_csTable, 32
  66              	CapSense_CSD_csTable:
  67 002c 06520040 		.word	1073762822
  68 0030 0E520040 		.word	1073762830
  69 0034 16520040 		.word	1073762838
  70 0038 1E520040 		.word	1073762846
  71 003c 26520040 		.word	1073762854
  72 0040 2E520040 		.word	1073762862
  73 0044 36520040 		.word	1073762870
  74 0048 7E520040 		.word	1073762942
  75              		.global	CapSense_CSD_idacSettings
  76              		.data
  77 0001 000000   		.align	2
  78              		.type	CapSense_CSD_idacSettings, %object
  79              		.size	CapSense_CSD_idacSettings, 7
  80              	CapSense_CSD_idacSettings:
  81 0004 2B       		.byte	43
  82 0005 29       		.byte	41
  83 0006 30       		.byte	48
  84 0007 31       		.byte	49
  85 0008 29       		.byte	41
  86 0009 26       		.byte	38
  87 000a 22       		.byte	34
  88              		.global	CapSense_CSD_widgetResolution
  89 000b 00       		.align	2
  90              		.type	CapSense_CSD_widgetResolution, %object
  91              		.size	CapSense_CSD_widgetResolution, 3
  92              	CapSense_CSD_widgetResolution:
  93 000c 3F       		.byte	63
  94 000d 3F       		.byte	63
  95 000e 1F       		.byte	31
  96              		.global	CapSense_CSD_analogSwitchDivider
  97 000f 00       		.align	2
  98              		.type	CapSense_CSD_analogSwitchDivider, %object
  99              		.size	CapSense_CSD_analogSwitchDivider, 7
 100              	CapSense_CSD_analogSwitchDivider:
 101 0010 02       		.byte	2
 102 0011 02       		.byte	2
 103 0012 03       		.byte	3
 104 0013 03       		.byte	3
 105 0014 03       		.byte	3
 106 0015 03       		.byte	3
 107 0016 03       		.byte	3
 108              		.global	CapSense_CSD_widgetNumber
 109 0017 00       		.section	.rodata
 110              		.align	2
 111              		.type	CapSense_CSD_widgetNumber, %object
 112              		.size	CapSense_CSD_widgetNumber, 7
 113              	CapSense_CSD_widgetNumber:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 3


 114 004c 01       		.byte	1
 115 004d 02       		.byte	2
 116 004e 00       		.byte	0
 117 004f 00       		.byte	0
 118 0050 00       		.byte	0
 119 0051 00       		.byte	0
 120 0052 00       		.byte	0
 121 0053 00       		.section	.text.CapSense_CSD_Init,"ax",%progbits
 122              		.align	2
 123              		.global	CapSense_CSD_Init
 124              		.thumb
 125              		.thumb_func
 126              		.type	CapSense_CSD_Init, %function
 127              	CapSense_CSD_Init:
 128              	.LFB0:
 129              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense_CSD.c"
   1:.\Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense_CSD.c **** * File Name: CapSense_CSD.c
   3:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Version 3.40
   4:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
   5:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  component.
   8:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
   9:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
  11:.\Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense_CSD.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense_CSD.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CapSense_CSD.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
  18:.\Generated_Source\PSoC5/CapSense_CSD.c **** #include "CapSense_CSD.h"
  19:.\Generated_Source\PSoC5/CapSense_CSD.c **** #include "cyapicallbacks.h"
  20:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
  21:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
  22:.\Generated_Source\PSoC5/CapSense_CSD.c **** static uint8 CapSense_CSD_initVar = 0u;
  23:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
  24:.\Generated_Source\PSoC5/CapSense_CSD.c **** /* Global software variables */
  25:.\Generated_Source\PSoC5/CapSense_CSD.c **** volatile uint8 CapSense_CSD_csv;            /* CapSense CSD status, control variable */
  26:.\Generated_Source\PSoC5/CapSense_CSD.c **** volatile uint8 CapSense_CSD_sensorIndex;    /* Index of scannig sensor */
  27:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
  28:.\Generated_Source\PSoC5/CapSense_CSD.c **** /* AutoTunning start */
  29:.\Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
  30:.\Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_lowLevelTuningDone = 1u;
  31:.\Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
  32:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
  33:.\Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
  34:.\Generated_Source\PSoC5/CapSense_CSD.c ****     uint8  CapSense_CSD_extRbCh0Cur = CapSense_CSD_RBLEED1;
  35:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
  36:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8  CapSense_CSD_extRbCh1Cur = (CapSense_CSD_RBLEED1 + CapSense_CSD_TOTAL_RB_NUMBER__CH0
  37:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)*/ 
  38:.\Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB) */ 
  39:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
  40:.\Generated_Source\PSoC5/CapSense_CSD.c **** /* Global array of Raw Counts */
  41:.\Generated_Source\PSoC5/CapSense_CSD.c **** uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT]; 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 4


  42:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
  43:.\Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_sensorEnableMask[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:.\Generated_Source\PSoC5/CapSense_CSD.c **** 0x7Fu, };
  45:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
  46:.\Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CYXDATA * const CYCODE CapSense_CSD_pcTable[] = {
  47:.\Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__Button0__BTN__PC, 
  48:.\Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__Button1__BTN__PC, 
  49:.\Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e0__LS__PC, 
  50:.\Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e1__LS__PC, 
  51:.\Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e2__LS__PC, 
  52:.\Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e3__LS__PC, 
  53:.\Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CapSense_CSD_PortCH0__LinearSlider0_e4__LS__PC, 
  54:.\Generated_Source\PSoC5/CapSense_CSD.c **** };
  55:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
  56:.\Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_portTable[] = {
  57:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button0__BTN__PORT, 
  58:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button1__BTN__PORT, 
  59:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e0__LS__PORT, 
  60:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e1__LS__PORT, 
  61:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e2__LS__PORT, 
  62:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e3__LS__PORT, 
  63:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e4__LS__PORT, 
  64:.\Generated_Source\PSoC5/CapSense_CSD.c **** };
  65:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
  66:.\Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_maskTable[] = {
  67:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button0__BTN__MASK,
  68:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__Button1__BTN__MASK,
  69:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e0__LS__MASK,
  70:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e1__LS__MASK,
  71:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e2__LS__MASK,
  72:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e3__LS__MASK,
  73:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PortCH0__LinearSlider0_e4__LS__MASK,
  74:.\Generated_Source\PSoC5/CapSense_CSD.c **** };
  75:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
  76:.\Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CYXDATA * const CYCODE CapSense_CSD_csTable[] = {
  77:.\Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  78:.\Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  79:.\Generated_Source\PSoC5/CapSense_CSD.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  80:.\Generated_Source\PSoC5/CapSense_CSD.c **** };
  81:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
  82:.\Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_idacSettings[] = {
  83:.\Generated_Source\PSoC5/CapSense_CSD.c ****     43u,41u,48u,49u,41u,38u,34u,
  84:.\Generated_Source\PSoC5/CapSense_CSD.c **** };
  85:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
  86:.\Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_widgetResolution[] = {
  87:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PWM_RESOLUTION_14_BITS,
  88:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PWM_RESOLUTION_14_BITS,
  89:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PWM_RESOLUTION_13_BITS,
  90:.\Generated_Source\PSoC5/CapSense_CSD.c **** };
  91:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
  92:.\Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_analogSwitchDivider[CapSense_CSD_TOTAL_SCANSLOT_COUNT] = {
  93:.\Generated_Source\PSoC5/CapSense_CSD.c ****     2u, 2u, 3u, 3u, 3u, 3u, 3u, 
  94:.\Generated_Source\PSoC5/CapSense_CSD.c **** };
  95:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
  96:.\Generated_Source\PSoC5/CapSense_CSD.c **** const uint8 CYCODE CapSense_CSD_widgetNumber[] = {
  97:.\Generated_Source\PSoC5/CapSense_CSD.c ****     1u, /* Button0__BTN */
  98:.\Generated_Source\PSoC5/CapSense_CSD.c ****     2u, /* Button1__BTN */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 5


  99:.\Generated_Source\PSoC5/CapSense_CSD.c ****     0u, 0u, 0u, 0u, 0u, /* LinearSlider0__LS */
 100:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 101:.\Generated_Source\PSoC5/CapSense_CSD.c **** };
 102:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 103:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 104:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 105:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 106:.\Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 107:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Init
 108:.\Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 109:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 110:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 111:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Inits default CapSense configuration provided with customizer that defines 
 112:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  mode of component operations and resets all sensors to an inactive state.
 113:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 114:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 115:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 116:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 117:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 118:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 119:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 120:.\Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 121:.\Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Init(void) 
 122:.\Generated_Source\PSoC5/CapSense_CSD.c **** {
 130              		.loc 1 122 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 8
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134 0000 80B5     		push	{r7, lr}
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 138 0002 82B0     		sub	sp, sp, #8
 139              		.cfi_def_cfa_offset 16
 140 0004 00AF     		add	r7, sp, #0
 141              		.cfi_def_cfa_register 7
 123:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if ( (CapSense_CSD_PRS_OPTIONS) || \
 124:.\Generated_Source\PSoC5/CapSense_CSD.c ****           (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB) || \
 125:.\Generated_Source\PSoC5/CapSense_CSD.c ****           ( (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
 126:.\Generated_Source\PSoC5/CapSense_CSD.c ****             (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB)) )
 127:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 128:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enableInterrupts;
 129:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* ( (CapSense_CSD_PRS_OPTIONS) || \
 130:.\Generated_Source\PSoC5/CapSense_CSD.c ****            * (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB) || \
 131:.\Generated_Source\PSoC5/CapSense_CSD.c ****            * ( (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
 132:.\Generated_Source\PSoC5/CapSense_CSD.c ****            * (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_UDB)) ) 
 133:.\Generated_Source\PSoC5/CapSense_CSD.c ****            */
 134:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 135:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clear all sensors */
 136:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_ClearSensors();
 142              		.loc 1 136 0
 143 0006 FFF7FEFF 		bl	CapSense_CSD_ClearSensors
 137:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 138:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set Prescaler */
 139:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 140:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 141:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 6


 142:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_CONTROL_REG   = (CapSense_CSD_PRESCALER_CTRL_ENABLE |
 143:.\Generated_Source\PSoC5/CapSense_CSD.c ****                                                     CapSense_CSD_PRESCALER_CTRL_MODE_CMP);
 144:.\Generated_Source\PSoC5/CapSense_CSD.c ****                                                
 145:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_CONTROL2_REG |= CapSense_CSD_PRESCALER_CTRL_CMP_LESS_EQ;
 146:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 147:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 148:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 149:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 150:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set PRS */
 151:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRS_OPTIONS)
 152:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SetAnalogSwitchesSource(CapSense_CSD_ANALOG_SWITCHES_SRC_PRS);
 144              		.loc 1 152 0
 145 000a 0220     		movs	r0, #2
 146 000c FFF7FEFF 		bl	CapSense_CSD_SetAnalogSwitchesSource
 153:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_PRS_OPTIONS) */
 154:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 155:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_8BITS)
 156:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */
 157:.\Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 158:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 159:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 160:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 161:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 162:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_REG   = CapSense_CSD_PRS8_DEFAULT_POLYNOM;
 163:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 164:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 165:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 166:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_16BITS)
 167:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */ 
 168:.\Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();  
 147              		.loc 1 168 0
 148 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 149 0014 0346     		mov	r3, r0
 150 0016 FB71     		strb	r3, [r7, #7]
 169:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 151              		.loc 1 169 0
 152 0018 3B4A     		ldr	r2, .L2
 153 001a 3B4B     		ldr	r3, .L2
 154 001c 1B78     		ldrb	r3, [r3]
 155 001e DBB2     		uxtb	r3, r3
 156 0020 43F00303 		orr	r3, r3, #3
 157 0024 DBB2     		uxtb	r3, r3
 158 0026 1370     		strb	r3, [r2]
 170:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_B_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 159              		.loc 1 170 0
 160 0028 384A     		ldr	r2, .L2+4
 161 002a 384B     		ldr	r3, .L2+4
 162 002c 1B78     		ldrb	r3, [r3]
 163 002e DBB2     		uxtb	r3, r3
 164 0030 43F00303 		orr	r3, r3, #3
 165 0034 DBB2     		uxtb	r3, r3
 166 0036 1370     		strb	r3, [r2]
 171:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 167              		.loc 1 171 0
 168 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 169 003a 1846     		mov	r0, r3
 170 003c FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 7


 172:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 173:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 174:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_POLYNOM_PTR, CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 171              		.loc 1 174 0
 172 0040 334B     		ldr	r3, .L2+8
 173 0042 4FF43442 		mov	r2, #46080
 174 0046 1A80     		strh	r2, [r3]	@ movhi
 175:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 176:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_SEED_COPY_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 175              		.loc 1 176 0
 176 0048 324B     		ldr	r3, .L2+12
 177 004a 4FF6FF72 		movw	r2, #65535
 178 004e 1A80     		strh	r2, [r3]	@ movhi
 177:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 
 178:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_16BITS_4X)
 179:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Aux control set FIFO as REG */
 180:.\Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 181:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AUX_CONTROL_A_REG  |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 182:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 183:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 184:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write polynomial */
 185:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_A__D1_REG   = HI8(CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 186:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_POLYNOM_A__D0_REG   = LO8(CapSense_CSD_PRS16_DEFAULT_POLYNOM);
 187:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Write FIFO with seed */
 188:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_A__F1_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 189:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_SEED_COPY_A__F0_REG = CapSense_CSD_MEASURE_FULL_RANGE_LOW; 
 190:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 191:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 192:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without PRS */
 193:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRS_OPTIONS == CapSense_CSD_PRS_8BITS) */ 
 194:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 195:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set ScanSpeed */
 196:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_PERIOD_REG = CapSense_CSD_SCANSPEED_VALUE;
 179              		.loc 1 196 0
 180 0050 314B     		ldr	r3, .L2+16
 181 0052 0722     		movs	r2, #7
 182 0054 1A70     		strb	r2, [r3]
 197:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 198:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set the Measure */
 199:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 200:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 201:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 202:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 203:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_PWM_CH0_COUNTER_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 204:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 205:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 206:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 207:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 208:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CY_SET_REG16(CapSense_CSD_RAW_CH0_PERIOD_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 209:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 210:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 211:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /*Window PWM and Raw Counter AUX set */
 212:.\Generated_Source\PSoC5/CapSense_CSD.c ****         enableInterrupts = CyEnterCriticalSection();
 183              		.loc 1 212 0
 184 0056 FFF7FEFF 		bl	CyEnterCriticalSection
 185 005a 0346     		mov	r3, r0
 186 005c FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 8


 213:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 187              		.loc 1 213 0
 188 005e 2F4A     		ldr	r2, .L2+20
 189 0060 2E4B     		ldr	r3, .L2+20
 190 0062 1B78     		ldrb	r3, [r3]
 191 0064 DBB2     		uxtb	r3, r3
 192 0066 43F00303 		orr	r3, r3, #3
 193 006a DBB2     		uxtb	r3, r3
 194 006c 1370     		strb	r3, [r2]
 214:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 195              		.loc 1 214 0
 196 006e 2C4A     		ldr	r2, .L2+24
 197 0070 2B4B     		ldr	r3, .L2+24
 198 0072 1B78     		ldrb	r3, [r3]
 199 0074 DBB2     		uxtb	r3, r3
 200 0076 43F00303 		orr	r3, r3, #3
 201 007a DBB2     		uxtb	r3, r3
 202 007c 1370     		strb	r3, [r2]
 215:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CyExitCriticalSection(enableInterrupts);
 203              		.loc 1 215 0
 204 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 205 0080 1846     		mov	r0, r3
 206 0082 FFF7FEFF 		bl	CyExitCriticalSection
 216:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 217:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 218:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 207              		.loc 1 218 0
 208 0086 274B     		ldr	r3, .L2+28
 209 0088 FF22     		movs	r2, #255
 210 008a 1A70     		strb	r2, [r3]
 219:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 211              		.loc 1 219 0
 212 008c 264B     		ldr	r3, .L2+32
 213 008e FF22     		movs	r2, #255
 214 0090 1A70     		strb	r2, [r3]
 220:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_COUNTER_LO_REG   = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 215              		.loc 1 220 0
 216 0092 264B     		ldr	r3, .L2+36
 217 0094 FF22     		movs	r2, #255
 218 0096 1A70     		strb	r2, [r3]
 221:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 222:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 223:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 219              		.loc 1 223 0
 220 0098 254B     		ldr	r3, .L2+40
 221 009a FF22     		movs	r2, #255
 222 009c 1A70     		strb	r2, [r3]
 224:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_PERIOD_HI_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 223              		.loc 1 224 0
 224 009e 254B     		ldr	r3, .L2+44
 225 00a0 FF22     		movs	r2, #255
 226 00a2 1A70     		strb	r2, [r3]
 225:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 227              		.loc 1 225 0
 228 00a4 244B     		ldr	r3, .L2+48
 229 00a6 FF22     		movs	r2, #255
 230 00a8 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 9


 226:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 227:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 228:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 229:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 230:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 231:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 232:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 233:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 234:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PWM_CH1_COUNTER_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 235:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
 236:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 237:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_CONTROL_REG      = CapSense_CSD_MEASURE_CTRL_ENABLE;
 238:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_CONTROL2_REG    |= CapSense_CSD_MEASURE_CTRL_PULSEWIDTH;
 239:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_RAW_CH1_PERIOD_PTR, CapSense_CSD_MEASURE_FULL_RANGE);
 240:.\Generated_Source\PSoC5/CapSense_CSD.c ****            
 241:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 242:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /*Window PWM and Raw Counter AUX set */
 243:.\Generated_Source\PSoC5/CapSense_CSD.c ****             enableInterrupts = CyEnterCriticalSection();
 244:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 245:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_AUX_CONTROL_REG |= CapSense_CSD_AUXCTRL_FIFO_SINGLE_REG;
 246:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CyExitCriticalSection(enableInterrupts);
 247:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
 248:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 249:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 250:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 251:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_COUNTER_LO_REG   = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 252:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
 253:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 254:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
 255:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ADD_VALUE_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 256:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_PERIOD_HI_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 257:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_PERIOD_LO_REG    = CapSense_CSD_MEASURE_FULL_RANGE_LOW;
 258:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
 259:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 260:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 261:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 262:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 263:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup ISR */
 264:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 231              		.loc 1 264 0
 232 00aa 244B     		ldr	r3, .L2+52
 233 00ac 0122     		movs	r2, #1
 234 00ae 1A60     		str	r2, [r3]
 265:.\Generated_Source\PSoC5/CapSense_CSD.c ****     (void)CyIntSetVector(CapSense_CSD_IsrCH0_ISR_NUMBER, &CapSense_CSD_IsrCH0_ISR);
 235              		.loc 1 265 0
 236 00b0 0020     		movs	r0, #0
 237 00b2 2349     		ldr	r1, .L2+56
 238 00b4 FFF7FEFF 		bl	CyIntSetVector
 266:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntSetPriority(CapSense_CSD_IsrCH0_ISR_NUMBER, CapSense_CSD_IsrCH0_ISR_PRIORITY);
 239              		.loc 1 266 0
 240 00b8 0020     		movs	r0, #0
 241 00ba 0721     		movs	r1, #7
 242 00bc FFF7FEFF 		bl	CyIntSetPriority
 267:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 268:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 269:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntDisable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 270:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntSetVector(CapSense_CSD_IsrCH1_ISR_NUMBER, CapSense_CSD_IsrCH1_ISR);
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 10


 271:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntSetPriority(CapSense_CSD_IsrCH1_ISR_NUMBER, CapSense_CSD_IsrCH1_ISR_PRIORITY);
 272:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 273:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 274:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 275:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Init();
 243              		.loc 1 275 0
 244 00c0 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Init
 276:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_CMOD_CHANNEL);
 245              		.loc 1 276 0
 246 00c4 0720     		movs	r0, #7
 247 00c6 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 277:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_CMP_VP_CHANNEL);
 248              		.loc 1 277 0
 249 00ca 0820     		movs	r0, #8
 250 00cc FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 278:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 279:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
 251              		.loc 1 279 0
 252 00d0 0920     		movs	r0, #9
 253 00d2 FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
 280:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 281:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 282:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 283:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Init();
 284:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_CMOD_CHANNEL);
 285:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_CMP_VP_CHANNEL);
 286:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 287:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
 288:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 289:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 290:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 291:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Int Rb */
 292:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
 293:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_InitRb();
 294:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB) */
 295:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 296:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable window generation */
 297:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 254              		.loc 1 297 0
 255 00d6 1B4A     		ldr	r2, .L2+60
 256 00d8 1A4B     		ldr	r3, .L2+60
 257 00da 1B78     		ldrb	r3, [r3]
 258 00dc DBB2     		uxtb	r3, r3
 259 00de 43F00403 		orr	r3, r3, #4
 260 00e2 DBB2     		uxtb	r3, r3
 261 00e4 1370     		strb	r3, [r2]
 298:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 299:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 300:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 301:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 302:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Initialize Cmp and Idac */
 303:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Init();
 262              		.loc 1 303 0
 263 00e6 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Init
 304:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 305:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Init();
 264              		.loc 1 305 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 11


 265 00ea FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Init
 306:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetPolarity(CapSense_CSD_IdacCH0_IDIR);
 266              		.loc 1 306 0
 267 00ee 0020     		movs	r0, #0
 268 00f0 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetPolarity
 307:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetRange(CapSense_CSD_IDAC_RANGE_VALUE);
 269              		.loc 1 307 0
 270 00f4 0420     		movs	r0, #4
 271 00f6 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetRange
 308:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 272              		.loc 1 308 0
 273 00fa 0020     		movs	r0, #0
 274 00fc FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
 309:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 310:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 311:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 312:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Init();
 313:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 314:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Init();
 315:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetPolarity(CapSense_CSD_IdacCH1_IDIR);
 316:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetRange(CapSense_CSD_IDAC_RANGE_VALUE);
 317:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 318:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 319:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 320:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 321:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Initialize Vref if as VDAC */
 322:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 323:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Init();
 324:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 325:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Init();
 326:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE */
 327:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_VREF_OPTIONS */
 328:.\Generated_Source\PSoC5/CapSense_CSD.c **** }
 275              		.loc 1 328 0
 276 0100 0837     		adds	r7, r7, #8
 277              		.cfi_def_cfa_offset 8
 278 0102 BD46     		mov	sp, r7
 279              		.cfi_def_cfa_register 13
 280              		@ sp needed
 281 0104 80BD     		pop	{r7, pc}
 282              	.L3:
 283 0106 00BF     		.align	2
 284              	.L2:
 285 0108 98640040 		.word	1073767576
 286 010c 99640040 		.word	1073767577
 287 0110 28640040 		.word	1073767464
 288 0114 48640040 		.word	1073767496
 289 0118 8A640040 		.word	1073767562
 290 011c 9C640040 		.word	1073767580
 291 0120 9D640040 		.word	1073767581
 292 0124 2C640040 		.word	1073767468
 293 0128 4C640040 		.word	1073767500
 294 012c 0C640040 		.word	1073767436
 295 0130 2D640040 		.word	1073767469
 296 0134 5D640040 		.word	1073767517
 297 0138 4D640040 		.word	1073767501
 298 013c 80E100E0 		.word	-536813184
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 12


 299 0140 00000000 		.word	CapSense_CSD_IsrCH0_ISR
 300 0144 79640040 		.word	1073767545
 301              		.cfi_endproc
 302              	.LFE0:
 303              		.size	CapSense_CSD_Init, .-CapSense_CSD_Init
 304              		.section	.text.CapSense_CSD_Enable,"ax",%progbits
 305              		.align	2
 306              		.global	CapSense_CSD_Enable
 307              		.thumb
 308              		.thumb_func
 309              		.type	CapSense_CSD_Enable, %function
 310              	CapSense_CSD_Enable:
 311              	.LFB1:
 329:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 330:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 331:.\Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 332:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Enable
 333:.\Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 334:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 335:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 336:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Enables active mode power template bits for number of component used within 
 337:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense.
 338:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 339:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 340:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 341:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 342:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 343:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 344:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 345:.\Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 346:.\Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Enable(void) 
 347:.\Generated_Source\PSoC5/CapSense_CSD.c **** {
 312              		.loc 1 347 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 8
 315              		@ frame_needed = 1, uses_anonymous_args = 0
 316 0000 80B5     		push	{r7, lr}
 317              		.cfi_def_cfa_offset 8
 318              		.cfi_offset 7, -8
 319              		.cfi_offset 14, -4
 320 0002 82B0     		sub	sp, sp, #8
 321              		.cfi_def_cfa_offset 16
 322 0004 00AF     		add	r7, sp, #0
 323              		.cfi_def_cfa_register 7
 348:.\Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 enableInterrupts;
 349:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 350:.\Generated_Source\PSoC5/CapSense_CSD.c ****     enableInterrupts = CyEnterCriticalSection();
 324              		.loc 1 350 0
 325 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 326 000a 0346     		mov	r3, r0
 327 000c FB71     		strb	r3, [r7, #7]
 351:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 352:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Prescaler */
 353:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 354:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing  for UDB */
 355:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
 356:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_ACT_PWRMGR_REG  |= CapSense_CSD_PRESCALER_ACT_PWR_EN;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 13


 357:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_STBY_PWRMGR_REG |= CapSense_CSD_PRESCALER_STBY_PWR_EN;
 358:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 359:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 360:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 361:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 362:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 363:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable ScanSpeed */
 364:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_AUX_CONTROL_REG |= CapSense_CSD_SCANSPEED_CTRL_ENABLE;
 328              		.loc 1 364 0
 329 000e 1C4A     		ldr	r2, .L5
 330 0010 1B4B     		ldr	r3, .L5
 331 0012 1B78     		ldrb	r3, [r3]
 332 0014 DBB2     		uxtb	r3, r3
 333 0016 43F02003 		orr	r3, r3, #32
 334 001a DBB2     		uxtb	r3, r3
 335 001c 1370     		strb	r3, [r2]
 365:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 366:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Measure CH0 */
 367:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 368:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 369:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_CSD_PWM_CH0_ACT_PWR_EN;
 370:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_STBY_PWRMGR_REG |= CapSense_CSD_PWM_CH0_STBY_PWR_EN;
 371:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 372:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 373:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_CSD_RAW_CH0_ACT_PWR_EN;
 374:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_STBY_PWRMGR_REG |= CapSense_CSD_RAW_CH0_STBY_PWR_EN;
 375:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 376:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 377:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 378:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 379:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 380:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 381:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 382:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Measure CH1*/
 383:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 384:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 385:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 386:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_CSD_PWM_CH1_ACT_PWR_EN;
 387:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_STBY_PWRMGR_REG |= CapSense_CSD_PWM_CH1_STBY_PWR_EN;
 388:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
 389:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 390:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_CSD_RAW_CH1_ACT_PWR_EN;
 391:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_STBY_PWRMGR_REG |= CapSense_CSD_RAW_CH1_STBY_PWR_EN;
 392:.\Generated_Source\PSoC5/CapSense_CSD.c ****            
 393:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 394:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 395:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 396:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 397:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 398:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 399:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 400:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 401:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable the Clock */
 402:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CLOCK_SOURCE == CapSense_CSD_INTERNAL_CLOCK)
 403:.\Generated_Source\PSoC5/CapSense_CSD.c ****        CapSense_CSD_IntClock_Enable();
 336              		.loc 1 403 0
 337 001e FFF7FEFF 		bl	CapSense_CSD_IntClock_Start
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 14


 404:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CLOCK_SOURCE */
 405:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 406:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Setup Cmp and Idac */
 407:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Enable();
 338              		.loc 1 407 0
 339 0022 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Enable
 408:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 409:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Enable();
 340              		.loc 1 409 0
 341 0026 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Enable
 410:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 411:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 412:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 413:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Enable();
 414:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 415:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Enable();
 416:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 417:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 418:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 419:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable Vref */
 420:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 421:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Enable();
 422:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_SetValue(CapSense_CSD_VdacRefCH0_DEFAULT_DATA);
 423:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 424:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Enable();
 425:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_SetValue(CapSense_CSD_VdacRefCH1_DEFAULT_DATA);
 426:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 427:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 428:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 429:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_STBY_PWRMGR_REG |= CapSense_CSD_BufCH0_STBY_PWR_EN;
 342              		.loc 1 429 0
 343 002a 164A     		ldr	r2, .L5+4
 344 002c 154B     		ldr	r3, .L5+4
 345 002e 1B78     		ldrb	r3, [r3]
 346 0030 DBB2     		uxtb	r3, r3
 347 0032 43F01003 		orr	r3, r3, #16
 348 0036 DBB2     		uxtb	r3, r3
 349 0038 1370     		strb	r3, [r2]
 430:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_ACT_PWRMGR_REG  |= CapSense_CSD_BufCH0_ACT_PWR_EN;
 350              		.loc 1 430 0
 351 003a 134A     		ldr	r2, .L5+8
 352 003c 124B     		ldr	r3, .L5+8
 353 003e 1B78     		ldrb	r3, [r3]
 354 0040 DBB2     		uxtb	r3, r3
 355 0042 43F01003 		orr	r3, r3, #16
 356 0046 DBB2     		uxtb	r3, r3
 357 0048 1370     		strb	r3, [r2]
 431:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 432:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 433:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_STBY_PWRMGR_REG |= CapSense_CSD_BufCH1_STBY_PWR_EN;
 434:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_ACT_PWRMGR_REG  |= CapSense_CSD_BufCH1_ACT_PWR_EN;
 435:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 436:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
 437:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 438:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set reference on AMux Bus */
 439:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 440:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Connect Vdac to AMux Bus */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 15


 441:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
 442:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 443:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
 444:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 445:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 446:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 447:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 448:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 358              		.loc 1 448 0
 359 004a 104A     		ldr	r2, .L5+12
 360 004c 0F4B     		ldr	r3, .L5+12
 361 004e 1B78     		ldrb	r3, [r3]
 362 0050 DBB2     		uxtb	r3, r3
 363 0052 43F00103 		orr	r3, r3, #1
 364 0056 DBB2     		uxtb	r3, r3
 365 0058 1370     		strb	r3, [r2]
 449:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 450:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 451:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 452:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 453:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)*/
 454:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 455:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CyExitCriticalSection(enableInterrupts);
 366              		.loc 1 455 0
 367 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 368 005c 1846     		mov	r0, r3
 369 005e FFF7FEFF 		bl	CyExitCriticalSection
 456:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 457:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Enable interrupt */
 458:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntEnable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 370              		.loc 1 458 0
 371 0062 0B4B     		ldr	r3, .L5+16
 372 0064 0122     		movs	r2, #1
 373 0066 1A60     		str	r2, [r3]
 459:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 460:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntEnable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 461:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 462:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 463:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set CapSense Enable state */
 464:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_CAPSENSE_EN;
 374              		.loc 1 464 0
 375 0068 0A4A     		ldr	r2, .L5+20
 376 006a 0A4B     		ldr	r3, .L5+20
 377 006c 1B78     		ldrb	r3, [r3]
 378 006e DBB2     		uxtb	r3, r3
 379 0070 63F07F03 		orn	r3, r3, #127
 380 0074 DBB2     		uxtb	r3, r3
 381 0076 1370     		strb	r3, [r2]
 465:.\Generated_Source\PSoC5/CapSense_CSD.c **** }
 382              		.loc 1 465 0
 383 0078 0837     		adds	r7, r7, #8
 384              		.cfi_def_cfa_offset 8
 385 007a BD46     		mov	sp, r7
 386              		.cfi_def_cfa_register 13
 387              		@ sp needed
 388 007c 80BD     		pop	{r7, pc}
 389              	.L6:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 16


 390 007e 00BF     		.align	2
 391              	.L5:
 392 0080 9A640040 		.word	1073767578
 393 0084 BB430040 		.word	1073759163
 394 0088 AB430040 		.word	1073759147
 395 008c 70580040 		.word	1073764464
 396 0090 00E100E0 		.word	-536813312
 397 0094 79640040 		.word	1073767545
 398              		.cfi_endproc
 399              	.LFE1:
 400              		.size	CapSense_CSD_Enable, .-CapSense_CSD_Enable
 401              		.section	.text.CapSense_CSD_Start,"ax",%progbits
 402              		.align	2
 403              		.global	CapSense_CSD_Start
 404              		.thumb
 405              		.thumb_func
 406              		.type	CapSense_CSD_Start, %function
 407              	CapSense_CSD_Start:
 408              	.LFB2:
 466:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 467:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 468:.\Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 469:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Start
 470:.\Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 471:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 472:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 473:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 474:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 475:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 476:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  applied for all sensors.
 477:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 478:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 479:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 480:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 481:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 482:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 483:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 484:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 485:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_initVar - used to check initial configuration, modified on 
 486:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  first function call.
 487:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_lowLevelTuningDone - used to notify the Tuner GUI that 
 488:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  tuning of scanning parameters are done.
 489:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 490:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 491:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 492:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 493:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Note:
 494:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 495:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  must be manually enabled as their long scan time is incompatible 
 496:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  with the fast response required of other widget types. 
 497:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 498:.\Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 499:.\Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Start(void)  
 500:.\Generated_Source\PSoC5/CapSense_CSD.c **** {
 409              		.loc 1 500 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 17


 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413 0000 80B5     		push	{r7, lr}
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 7, -8
 416              		.cfi_offset 14, -4
 417 0002 00AF     		add	r7, sp, #0
 418              		.cfi_def_cfa_register 7
 501:.\Generated_Source\PSoC5/CapSense_CSD.c ****     if (CapSense_CSD_initVar == 0u)
 419              		.loc 1 501 0
 420 0004 054B     		ldr	r3, .L9
 421 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 422 0008 002B     		cmp	r3, #0
 423 000a 04D1     		bne	.L8
 502:.\Generated_Source\PSoC5/CapSense_CSD.c ****     {
 503:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_Init();
 424              		.loc 1 503 0
 425 000c FFF7FEFF 		bl	CapSense_CSD_Init
 504:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_initVar = 1u;
 426              		.loc 1 504 0
 427 0010 024B     		ldr	r3, .L9
 428 0012 0122     		movs	r2, #1
 429 0014 1A70     		strb	r2, [r3]
 430              	.L8:
 505:.\Generated_Source\PSoC5/CapSense_CSD.c ****     }
 506:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_Enable();
 431              		.loc 1 506 0
 432 0016 FFF7FEFF 		bl	CapSense_CSD_Enable
 507:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 508:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* AutoTunning start */
 509:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
 510:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* AutoTune by sensor or pair of sensor basis */
 511:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_AutoTune();
 512:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_lowLevelTuningDone = 1u;
 513:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
 514:.\Generated_Source\PSoC5/CapSense_CSD.c **** }
 433              		.loc 1 514 0
 434 001a 80BD     		pop	{r7, pc}
 435              	.L10:
 436              		.align	2
 437              	.L9:
 438 001c 00000000 		.word	CapSense_CSD_initVar
 439              		.cfi_endproc
 440              	.LFE2:
 441              		.size	CapSense_CSD_Start, .-CapSense_CSD_Start
 442              		.section	.text.CapSense_CSD_Stop,"ax",%progbits
 443              		.align	2
 444              		.global	CapSense_CSD_Stop
 445              		.thumb
 446              		.thumb_func
 447              		.type	CapSense_CSD_Stop, %function
 448              	CapSense_CSD_Stop:
 449              	.LFB3:
 515:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 516:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 517:.\Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 518:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_Stop
 519:.\Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 18


 520:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 521:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 522:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 523:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 524:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  number of component used within CapSense.
 525:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 526:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 527:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 528:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 529:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 530:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 531:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 532:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Side Effects:
 533:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  This function should be called after scans will be completed.
 534:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 535:.\Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 536:.\Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_Stop(void) 
 537:.\Generated_Source\PSoC5/CapSense_CSD.c **** {
 450              		.loc 1 537 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454 0000 80B5     		push	{r7, lr}
 455              		.cfi_def_cfa_offset 8
 456              		.cfi_offset 7, -8
 457              		.cfi_offset 14, -4
 458 0002 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
 538:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Stop Capsensing */
 539:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG &= (uint8)(~CapSense_CSD_CTRL_START);
 460              		.loc 1 539 0
 461 0004 1D4A     		ldr	r2, .L12
 462 0006 1D4B     		ldr	r3, .L12
 463 0008 1B78     		ldrb	r3, [r3]
 464 000a DBB2     		uxtb	r3, r3
 465 000c 23F00203 		bic	r3, r3, #2
 466 0010 DBB2     		uxtb	r3, r3
 467 0012 1370     		strb	r3, [r2]
 540:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 541:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable interrupt */
 542:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_IsrCH0_ISR_NUMBER);
 468              		.loc 1 542 0
 469 0014 1A4B     		ldr	r3, .L12+4
 470 0016 0122     		movs	r2, #1
 471 0018 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 544:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CyIntDisable(CapSense_CSD_IsrCH1_ISR_NUMBER);
 545:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 546:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 547:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clear all sensors */
 548:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_ClearSensors();
 472              		.loc 1 548 0
 473 001a FFF7FEFF 		bl	CapSense_CSD_ClearSensors
 549:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 550:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Prescaler */
 551:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
 552:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing  for UDB */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 19


 553:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)        
 554:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_CSD_PRESCALER_ACT_PWR_EN;
 555:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_CSD_PRESCALER_STBY_PWR_EN;
 556:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 557:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 558:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Do nothing = config without prescaler */
 559:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
 560:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 561:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable ScanSpeed */
 562:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_CSD_SCANSPEED_CTRL_ENABLE);
 474              		.loc 1 562 0
 475 001e 194A     		ldr	r2, .L12+8
 476 0020 184B     		ldr	r3, .L12+8
 477 0022 1B78     		ldrb	r3, [r3]
 478 0024 DBB2     		uxtb	r3, r3
 479 0026 23F02003 		bic	r3, r3, #32
 480 002a DBB2     		uxtb	r3, r3
 481 002c 1370     		strb	r3, [r2]
 563:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 564:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Measure CH0 */
 565:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 566:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
 567:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_CSD_PWM_CH0_ACT_PWR_EN;
 568:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_CSD_PWM_CH0_STBY_PWR_EN;
 569:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 570:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter */
 571:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_CSD_RAW_CH0_ACT_PWR_EN;
 572:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_CSD_RAW_CH0_STBY_PWR_EN;
 573:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 574:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 575:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 576:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 577:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 578:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 579:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 580:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Measure CH1 */
 581:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 582:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 583:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Window PWM */
 584:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_CSD_PWM_CH1_ACT_PWR_EN;
 585:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_CSD_PWM_CH1_STBY_PWR_EN;
 586:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 587:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Raw Counter */
 588:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_CSD_RAW_CH1_ACT_PWR_EN;
 589:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_CSD_RAW_CH1_STBY_PWR_EN;
 590:.\Generated_Source\PSoC5/CapSense_CSD.c ****            
 591:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 592:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM -  Do nothing */
 593:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Raw Counter - Do nothing */
 594:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 595:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
 596:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 597:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 598:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 599:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable the Clock */
 600:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CLOCK_SOURCE == CapSense_CSD_INTERNAL_CLOCK)
 601:.\Generated_Source\PSoC5/CapSense_CSD.c ****        CapSense_CSD_IntClock_Stop();
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 20


 482              		.loc 1 601 0
 483 002e FFF7FEFF 		bl	CapSense_CSD_IntClock_Stop
 602:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CLOCK_SOURCE */
 603:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 604:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable power from Cmp and Idac */
 605:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CompCH0_Stop();
 484              		.loc 1 605 0
 485 0032 FFF7FEFF 		bl	CapSense_CSD_CompCH0_Stop
 606:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CURRENT_SOURCE)
 607:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_IdacCH0_Stop();
 486              		.loc 1 607 0
 487 0036 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_Stop
 608:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_CURRENT_SOURCE */
 609:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 610:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) 
 611:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CompCH1_Stop();
 612:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 613:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_Stop();
 614:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 615:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */    
 616:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 617:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disable Vref if as VDAC */
 618:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
 619:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_VdacRefCH0_Stop();
 620:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 621:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_VdacRefCH1_Stop();
 622:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE */
 623:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_VREF_OPTIONS */
 624:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 625:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
 626:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* The Idac turn off before */
 627:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 628:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable CapSense Buf */
 629:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSD_CSBUF_ENABLE);
 488              		.loc 1 629 0
 489 003a 134A     		ldr	r2, .L12+12
 490 003c 124B     		ldr	r3, .L12+12
 491 003e 1B78     		ldrb	r3, [r3]
 492 0040 DBB2     		uxtb	r3, r3
 493 0042 23F00103 		bic	r3, r3, #1
 494 0046 DBB2     		uxtb	r3, r3
 495 0048 1370     		strb	r3, [r2]
 630:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH0_ACT_PWR_EN);
 496              		.loc 1 630 0
 497 004a 104A     		ldr	r2, .L12+16
 498 004c 0F4B     		ldr	r3, .L12+16
 499 004e 1B78     		ldrb	r3, [r3]
 500 0050 DBB2     		uxtb	r3, r3
 501 0052 23F01003 		bic	r3, r3, #16
 502 0056 DBB2     		uxtb	r3, r3
 503 0058 1370     		strb	r3, [r2]
 631:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH0_STBY_PWR_EN);
 504              		.loc 1 631 0
 505 005a 0D4A     		ldr	r2, .L12+20
 506 005c 0C4B     		ldr	r3, .L12+20
 507 005e 1B78     		ldrb	r3, [r3]
 508 0060 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 21


 509 0062 23F01003 		bic	r3, r3, #16
 510 0066 DBB2     		uxtb	r3, r3
 511 0068 1370     		strb	r3, [r2]
 632:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 633:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 634:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSD_CSBUF_ENABLE);
 635:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH1_ACT_PWR_EN);
 636:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_CSD_BufCH1_STBY_PWR_EN);
 637:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /*(CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) */
 638:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
 639:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 640:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set CapSense Disable state */
 641:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG &= (uint8)(~CapSense_CSD_CTRL_CAPSENSE_EN);
 512              		.loc 1 641 0
 513 006a 044A     		ldr	r2, .L12
 514 006c 034B     		ldr	r3, .L12
 515 006e 1B78     		ldrb	r3, [r3]
 516 0070 DBB2     		uxtb	r3, r3
 517 0072 03F07F03 		and	r3, r3, #127
 518 0076 DBB2     		uxtb	r3, r3
 519 0078 1370     		strb	r3, [r2]
 642:.\Generated_Source\PSoC5/CapSense_CSD.c **** }
 520              		.loc 1 642 0
 521 007a 80BD     		pop	{r7, pc}
 522              	.L13:
 523              		.align	2
 524              	.L12:
 525 007c 79640040 		.word	1073767545
 526 0080 80E100E0 		.word	-536813184
 527 0084 9A640040 		.word	1073767578
 528 0088 70580040 		.word	1073764464
 529 008c AB430040 		.word	1073759147
 530 0090 BB430040 		.word	1073759163
 531              		.cfi_endproc
 532              	.LFE3:
 533              		.size	CapSense_CSD_Stop, .-CapSense_CSD_Stop
 534              		.section	.text.CapSense_CSD_FindNextSensor,"ax",%progbits
 535              		.align	2
 536              		.global	CapSense_CSD_FindNextSensor
 537              		.thumb
 538              		.thumb_func
 539              		.type	CapSense_CSD_FindNextSensor, %function
 540              	CapSense_CSD_FindNextSensor:
 541              	.LFB4:
 643:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 644:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 645:.\Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 646:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
 647:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_FindNextSensor
 648:.\Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
 649:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
 650:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
 651:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  Finds next sensor to scan. 
 652:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
 653:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
 654:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  snsIndex:  Current index of sensor.
 655:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 22


 656:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
 657:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  Returns the next sensor index to scan.
 658:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
 659:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
 660:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of enabled 
 661:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensors.
 662:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 0
 663:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 664:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for sensors 
 665:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  8 through 15 (if needed), and so on.
 666:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *    0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 667:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *    1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 668:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
 669:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Note: 
 670:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function has effect on current scanning scanning and should not
 671:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  be used outisde of component.
 672:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
 673:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
 674:.\Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_FindNextSensor(uint8 snsIndex) CYREENTRANT
 675:.\Generated_Source\PSoC5/CapSense_CSD.c ****     {
 542              		.loc 1 675 0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 16
 545              		@ frame_needed = 1, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 547 0000 80B4     		push	{r7}
 548              		.cfi_def_cfa_offset 4
 549              		.cfi_offset 7, -4
 550 0002 85B0     		sub	sp, sp, #20
 551              		.cfi_def_cfa_offset 24
 552 0004 00AF     		add	r7, sp, #0
 553              		.cfi_def_cfa_register 7
 554 0006 0346     		mov	r3, r0
 555 0008 FB71     		strb	r3, [r7, #7]
 556              	.L17:
 676:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 pos;
 677:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enMask;
 678:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 679:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor enabled */
 680:.\Generated_Source\PSoC5/CapSense_CSD.c ****         do
 681:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
 682:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Proceed with the next sensor */
 683:.\Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex++;
 557              		.loc 1 683 0
 558 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 559 000c 0133     		adds	r3, r3, #1
 560 000e FB71     		strb	r3, [r7, #7]
 684:.\Generated_Source\PSoC5/CapSense_CSD.c ****             if(snsIndex == CapSense_CSD_TOTAL_SENSOR_COUNT)
 561              		.loc 1 684 0
 562 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 563 0012 072B     		cmp	r3, #7
 564 0014 00D1     		bne	.L15
 685:.\Generated_Source\PSoC5/CapSense_CSD.c ****             {
 686:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 565              		.loc 1 686 0
 566 0016 11E0     		b	.L16
 567              	.L15:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 23


 687:.\Generated_Source\PSoC5/CapSense_CSD.c ****             }
 688:.\Generated_Source\PSoC5/CapSense_CSD.c ****             pos = (snsIndex >> 3u);
 568              		.loc 1 688 0
 569 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 570 001a DB08     		lsrs	r3, r3, #3
 571 001c FB73     		strb	r3, [r7, #15]
 689:.\Generated_Source\PSoC5/CapSense_CSD.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 572              		.loc 1 689 0
 573 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 574 0020 03F00703 		and	r3, r3, #7
 575 0024 0122     		movs	r2, #1
 576 0026 02FA03F3 		lsl	r3, r2, r3
 577 002a BB73     		strb	r3, [r7, #14]
 690:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }    
 691:.\Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[pos] & enMask) == 0u);
 578              		.loc 1 691 0
 579 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 580 002e 074A     		ldr	r2, .L19
 581 0030 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 582 0032 BB7B     		ldrb	r3, [r7, #14]
 583 0034 1340     		ands	r3, r3, r2
 584 0036 DBB2     		uxtb	r3, r3
 585 0038 002B     		cmp	r3, #0
 586 003a E6D0     		beq	.L17
 587              	.L16:
 692:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 693:.\Generated_Source\PSoC5/CapSense_CSD.c ****         return snsIndex;
 588              		.loc 1 693 0
 589 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 694:.\Generated_Source\PSoC5/CapSense_CSD.c ****     }
 590              		.loc 1 694 0
 591 003e 1846     		mov	r0, r3
 592 0040 1437     		adds	r7, r7, #20
 593              		.cfi_def_cfa_offset 4
 594 0042 BD46     		mov	sp, r7
 595              		.cfi_def_cfa_register 13
 596              		@ sp needed
 597 0044 5DF8047B 		ldr	r7, [sp], #4
 598              		.cfi_restore 7
 599              		.cfi_def_cfa_offset 0
 600 0048 7047     		bx	lr
 601              	.L20:
 602 004a 00BF     		.align	2
 603              	.L19:
 604 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 605              		.cfi_endproc
 606              	.LFE4:
 607              		.size	CapSense_CSD_FindNextSensor, .-CapSense_CSD_FindNextSensor
 608              		.section	.text.CapSense_CSD_SetScanSlotSettings,"ax",%progbits
 609              		.align	2
 610              		.global	CapSense_CSD_SetScanSlotSettings
 611              		.thumb
 612              		.thumb_func
 613              		.type	CapSense_CSD_SetScanSlotSettings, %function
 614              	CapSense_CSD_SetScanSlotSettings:
 615              	.LFB5:
 695:.\Generated_Source\PSoC5/CapSense_CSD.c ****  #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 24


 696:.\Generated_Source\PSoC5/CapSense_CSD.c ****  
 697:.\Generated_Source\PSoC5/CapSense_CSD.c ****  
 698:.\Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN)
 699:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
 700:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_FindNextPair
 701:.\Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
 702:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
 703:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
 704:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 705:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  
 706:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
 707:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  snsIndex:  Current index pair of sensors.
 708:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
 709:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
 710:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  Returns the next pair of sensors index to scan.
 711:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
 712:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
 713:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of enabled 
 714:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensors.
 715:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 0
 716:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 717:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for sensors 
 718:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  8 through 15 (if needed), and so on.
 719:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *    0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 720:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *    1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 721:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
 722:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Note: 
 723:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function has effect on control signals set for scanning and should not
 724:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  be used outisde of component.
 725:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
 726:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
 727:.\Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_FindNextPair(uint8 snsIndex) CYREENTRANT
 728:.\Generated_Source\PSoC5/CapSense_CSD.c ****     {
 729:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 posCh;
 730:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 enMaskCh;
 731:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 newRegValue;
 732:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 indexCh0 = snsIndex;
 733:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 indexCh1 = snsIndex + CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
 734:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 735:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find enabled sensor on channel 0 */
 736:.\Generated_Source\PSoC5/CapSense_CSD.c ****         do
 737:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
 738:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Procced the scanning */
 739:.\Generated_Source\PSoC5/CapSense_CSD.c ****             indexCh0++;
 740:.\Generated_Source\PSoC5/CapSense_CSD.c ****             if (indexCh0 >= CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 741:.\Generated_Source\PSoC5/CapSense_CSD.c ****             {
 742:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Lets hadle now all from CH1 */
 743:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 indexCh0 = CapSense_CSD_END_OF_SCAN__CH0;
 744:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 745:.\Generated_Source\PSoC5/CapSense_CSD.c ****             }
 746:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
 747:.\Generated_Source\PSoC5/CapSense_CSD.c ****             posCh = (indexCh0 >> 3u);
 748:.\Generated_Source\PSoC5/CapSense_CSD.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 749:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
 750:.\Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[posCh] & enMaskCh) == 0u);
 751:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 752:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find enabled sensor on channel 1 */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 25


 753:.\Generated_Source\PSoC5/CapSense_CSD.c ****         do
 754:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
 755:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Procced the scanning */
 756:.\Generated_Source\PSoC5/CapSense_CSD.c ****             indexCh1++;        
 757:.\Generated_Source\PSoC5/CapSense_CSD.c ****             if (indexCh1 >= CapSense_CSD_TOTAL_SENSOR_COUNT)
 758:.\Generated_Source\PSoC5/CapSense_CSD.c ****             {
 759:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Lets hadle now all from CH0 */
 760:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 indexCh1 = CapSense_CSD_END_OF_SCAN__CH1;
 761:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 break;
 762:.\Generated_Source\PSoC5/CapSense_CSD.c ****             }
 763:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
 764:.\Generated_Source\PSoC5/CapSense_CSD.c ****             posCh = (indexCh1 >> 3u);
 765:.\Generated_Source\PSoC5/CapSense_CSD.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 766:.\Generated_Source\PSoC5/CapSense_CSD.c ****         } 
 767:.\Generated_Source\PSoC5/CapSense_CSD.c ****         while((CapSense_CSD_sensorEnableMask[posCh] & enMaskCh) == 0u);
 768:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 769:.\Generated_Source\PSoC5/CapSense_CSD.c ****         indexCh1 -= CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
 770:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 771:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find the pair to scan */
 772:.\Generated_Source\PSoC5/CapSense_CSD.c ****         if(indexCh0 == indexCh1)
 773:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
 774:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Scans TWO Channels */
 775:.\Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex = indexCh0;
 776:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
 777:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= (CapSense_CSD_CTRL_WINDOW_EN__CH0 | 
 778:.\Generated_Source\PSoC5/CapSense_CSD.c ****                                              CapSense_CSD_CTRL_WINDOW_EN__CH1);
 779:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
 780:.\Generated_Source\PSoC5/CapSense_CSD.c ****         else if(indexCh0 < indexCh1)
 781:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
 782:.\Generated_Source\PSoC5/CapSense_CSD.c ****            /* Scans Channel ONE only */
 783:.\Generated_Source\PSoC5/CapSense_CSD.c ****            snsIndex = indexCh0;
 784:.\Generated_Source\PSoC5/CapSense_CSD.c ****            
 785:.\Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue = CapSense_CSD_CONTROL_REG;
 786:.\Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 787:.\Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue &= ~CapSense_CSD_CTRL_WINDOW_EN__CH1;
 788:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG = newRegValue;
 789:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
 790:.\Generated_Source\PSoC5/CapSense_CSD.c ****         else
 791:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
 792:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Scans Channel TWO only */
 793:.\Generated_Source\PSoC5/CapSense_CSD.c ****             snsIndex = indexCh1;
 794:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
 795:.\Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue = CapSense_CSD_CONTROL_REG;
 796:.\Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 797:.\Generated_Source\PSoC5/CapSense_CSD.c ****             newRegValue &= ~CapSense_CSD_CTRL_WINDOW_EN__CH0;
 798:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG = newRegValue;
 799:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
 800:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 801:.\Generated_Source\PSoC5/CapSense_CSD.c ****         return (snsIndex);
 802:.\Generated_Source\PSoC5/CapSense_CSD.c ****     }
 803:.\Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN */
 804:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 805:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 806:.\Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 807:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetScanSlotSettings
 808:.\Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 809:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 26


 810:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 811:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 812:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 813:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 814:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  widget.
 815:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 816:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 817:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 818:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 819:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 820:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 821:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 822:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 823:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_idacSettings[] - used to store idac value for every sensor.
 824:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_widgetResolution[] - used to store scan resolution of every 
 825:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  widget.
 826:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 827:.\Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 828:.\Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_SetScanSlotSettings(uint8 slot) CYREENTRANT
 829:.\Generated_Source\PSoC5/CapSense_CSD.c **** {
 616              		.loc 1 829 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 16
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620 0000 80B5     		push	{r7, lr}
 621              		.cfi_def_cfa_offset 8
 622              		.cfi_offset 7, -8
 623              		.cfi_offset 14, -4
 624 0002 84B0     		sub	sp, sp, #16
 625              		.cfi_def_cfa_offset 24
 626 0004 00AF     		add	r7, sp, #0
 627              		.cfi_def_cfa_register 7
 628 0006 0346     		mov	r3, r0
 629 0008 FB71     		strb	r3, [r7, #7]
 830:.\Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 widget;
 831:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 832:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 833:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Define widget sensor belongs to */
 834:.\Generated_Source\PSoC5/CapSense_CSD.c ****         widget = CapSense_CSD_widgetNumber[slot];
 630              		.loc 1 834 0
 631 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 632 000c 0B4A     		ldr	r2, .L22
 633 000e D35C     		ldrb	r3, [r2, r3]
 634 0010 FB73     		strb	r3, [r7, #15]
 835:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 836:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Set Idac Value */
 837:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
 838:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_idacSettings[slot]);
 635              		.loc 1 838 0
 636 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 637 0014 0A4A     		ldr	r2, .L22+4
 638 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 639 0018 1846     		mov	r0, r3
 640 001a FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
 839:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_CURRENT_SOURCE */
 840:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 841:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Window PWM */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 27


 842:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 843:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PWM_CH0_PERIOD_PTR,
 844:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FULL_
 845:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
 846:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PWM_CH0_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 641              		.loc 1 846 0
 642 001e 094A     		ldr	r2, .L22+8
 643 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 644 0022 0949     		ldr	r1, .L22+12
 645 0024 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 646 0026 1370     		strb	r3, [r2]
 847:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */ 
 848:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 849:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if ( (CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 850:.\Generated_Source\PSoC5/CapSense_CSD.c ****               (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) )
 851:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider[slot]);
 647              		.loc 1 851 0
 648 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 649 002a 084A     		ldr	r2, .L22+16
 650 002c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 651 002e 1846     		mov	r0, r3
 652 0030 FFF7FEFF 		bl	CapSense_CSD_SetPrescaler
 852:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS)
 853:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider);
 854:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif /* ((CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 855:.\Generated_Source\PSoC5/CapSense_CSD.c ****                *   (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING))
 856:.\Generated_Source\PSoC5/CapSense_CSD.c ****                */
 857:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 858:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 859:.\Generated_Source\PSoC5/CapSense_CSD.c ****         if(slot < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 860:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
 861:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Define widget sensor belongs to */
 862:.\Generated_Source\PSoC5/CapSense_CSD.c ****             widget = CapSense_CSD_widgetNumber[slot];
 863:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
 864:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Idac Value */
 865:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE)
 866:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_idacSettings[slot]);
 867:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* CapSense_CSD_CURRENT_SOURCE */
 868:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
 869:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Pwm Resolution */
 870:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 871:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CY_SET_REG16(CapSense_CSD_PWM_CH0_PERIOD_PTR,
 872:.\Generated_Source\PSoC5/CapSense_CSD.c ****                   ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FUL
 873:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #else
 874:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_PWM_CH0_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 875:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*
 876:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
 877:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 878:.\Generated_Source\PSoC5/CapSense_CSD.c ****         if(slot < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 879:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
 880:.\Generated_Source\PSoC5/CapSense_CSD.c ****             widget = CapSense_CSD_widgetNumber[slot+CapSense_CSD_TOTAL_SENSOR_COUNT__CH0];
 881:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 882:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Idac Value */
 883:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE)
 884:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_idacSettings[slot+
 885:.\Generated_Source\PSoC5/CapSense_CSD.c ****                                                                              CapSense_CSD_TOTAL_SEN
 886:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* CapSense_CSD_CURRENT_SOURCE */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 28


 887:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
 888:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Set Pwm Resolution */
 889:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
 890:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CY_SET_REG16(CapSense_CSD_PWM_CH1_PERIOD_PTR,
 891:.\Generated_Source\PSoC5/CapSense_CSD.c ****                   ((uint16) CapSense_CSD_widgetResolution[widget] << 8u) | CapSense_CSD_MEASURE_FUL
 892:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #else
 893:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_PWM_CH1_PERIOD_HI_REG = CapSense_CSD_widgetResolution[widget];
 894:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*
 895:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
 896:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 897:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if ( (CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 898:.\Generated_Source\PSoC5/CapSense_CSD.c ****               (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) )
 899:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider[slot]);
 900:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS)
 901:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_SetPrescaler(CapSense_CSD_analogSwitchDivider);
 902:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif /* ((CapSense_CSD_MULTIPLE_PRESCALER_ENABLED) || \
 903:.\Generated_Source\PSoC5/CapSense_CSD.c ****                *   (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING))
 904:.\Generated_Source\PSoC5/CapSense_CSD.c ****                */
 905:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 906:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 907:.\Generated_Source\PSoC5/CapSense_CSD.c **** }
 653              		.loc 1 907 0
 654 0034 1037     		adds	r7, r7, #16
 655              		.cfi_def_cfa_offset 8
 656 0036 BD46     		mov	sp, r7
 657              		.cfi_def_cfa_register 13
 658              		@ sp needed
 659 0038 80BD     		pop	{r7, pc}
 660              	.L23:
 661 003a 00BF     		.align	2
 662              	.L22:
 663 003c 00000000 		.word	CapSense_CSD_widgetNumber
 664 0040 00000000 		.word	CapSense_CSD_idacSettings
 665 0044 5C640040 		.word	1073767516
 666 0048 00000000 		.word	CapSense_CSD_widgetResolution
 667 004c 00000000 		.word	CapSense_CSD_analogSwitchDivider
 668              		.cfi_endproc
 669              	.LFE5:
 670              		.size	CapSense_CSD_SetScanSlotSettings, .-CapSense_CSD_SetScanSlotSettings
 671              		.section	.text.CapSense_CSD_ScanSensor,"ax",%progbits
 672              		.align	2
 673              		.global	CapSense_CSD_ScanSensor
 674              		.thumb
 675              		.thumb_func
 676              		.type	CapSense_CSD_ScanSensor, %function
 677              	CapSense_CSD_ScanSensor:
 678              	.LFB6:
 908:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 909:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 910:.\Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 911:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanSensor
 912:.\Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 913:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 914:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 915:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 916:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 917:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  at the same time. After scanning is complete the isr copies the measured 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 29


 918:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 919:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 920:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  This number is assigned by the CapSense customizer in sequence.
 921:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 922:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 923:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
 924:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 925:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
 926:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 927:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 928:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
 929:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
 930:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 931:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  For two channel design the additional bits are set to define if scan a 
 932:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  pair of sensors or single one.
 933:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store sensor scanning sensor number.
 934:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets to provided sensor argument.
 935:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 936:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
 937:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  No
 938:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 939:.\Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
 940:.\Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ScanSensor(uint8 sensor)  
 941:.\Generated_Source\PSoC5/CapSense_CSD.c **** {
 679              		.loc 1 941 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 8
 682              		@ frame_needed = 1, uses_anonymous_args = 0
 683 0000 80B5     		push	{r7, lr}
 684              		.cfi_def_cfa_offset 8
 685              		.cfi_offset 7, -8
 686              		.cfi_offset 14, -4
 687 0002 82B0     		sub	sp, sp, #8
 688              		.cfi_def_cfa_offset 16
 689 0004 00AF     		add	r7, sp, #0
 690              		.cfi_def_cfa_register 7
 691 0006 0346     		mov	r3, r0
 692 0008 FB71     		strb	r3, [r7, #7]
 942:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
 943:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_csv = 0u;
 693              		.loc 1 943 0
 694 000a 084B     		ldr	r3, .L25
 695 000c 0022     		movs	r2, #0
 696 000e 1A70     		strb	r2, [r3]
 944:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = sensor;
 697              		.loc 1 944 0
 698 0010 074A     		ldr	r2, .L25+4
 699 0012 FB79     		ldrb	r3, [r7, #7]
 700 0014 1370     		strb	r3, [r2]
 945:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
 946:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 947:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start of sensor scan */
 948:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_csv = (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_SINGLE_SCAN);
 701              		.loc 1 948 0
 702 0016 054B     		ldr	r3, .L25
 703 0018 8122     		movs	r2, #129
 704 001a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 30


 949:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PreScan(sensor);
 705              		.loc 1 949 0
 706 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 707 001e 1846     		mov	r0, r3
 708 0020 FFF7FEFF 		bl	CapSense_CSD_PreScan
 950:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 951:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #else
 952:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* CH0: check end of scan conditions */
 953:.\Generated_Source\PSoC5/CapSense_CSD.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 954:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
 955:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH0;
 956:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
 957:.\Generated_Source\PSoC5/CapSense_CSD.c ****         else
 958:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
 959:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~CapSense_CSD_CTRL_WINDOW_EN__CH0;
 960:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
 961:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 962:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* CH1: check end of scan conditions */
 963:.\Generated_Source\PSoC5/CapSense_CSD.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 964:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
 965:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_WINDOW_EN__CH1;
 966:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
 967:.\Generated_Source\PSoC5/CapSense_CSD.c ****         else
 968:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
 969:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~CapSense_CSD_CTRL_WINDOW_EN__CH1;
 970:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
 971:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 972:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start sensor scan */
 973:.\Generated_Source\PSoC5/CapSense_CSD.c ****         if( ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) != 0u) || 
 974:.\Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) != 0u) )
 975:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
 976:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 977:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_SINGLE_SCAN);
 978:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(sensor);
 979:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
 980:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
 981:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
 982:.\Generated_Source\PSoC5/CapSense_CSD.c **** }
 709              		.loc 1 982 0
 710 0024 0837     		adds	r7, r7, #8
 711              		.cfi_def_cfa_offset 8
 712 0026 BD46     		mov	sp, r7
 713              		.cfi_def_cfa_register 13
 714              		@ sp needed
 715 0028 80BD     		pop	{r7, pc}
 716              	.L26:
 717 002a 00BF     		.align	2
 718              	.L25:
 719 002c 00000000 		.word	CapSense_CSD_csv
 720 0030 00000000 		.word	CapSense_CSD_sensorIndex
 721              		.cfi_endproc
 722              	.LFE6:
 723              		.size	CapSense_CSD_ScanSensor, .-CapSense_CSD_ScanSensor
 724              		.section	.text.CapSense_CSD_ScanEnabledWidgets,"ax",%progbits
 725              		.align	2
 726              		.global	CapSense_CSD_ScanEnabledWidgets
 727              		.thumb
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 31


 728              		.thumb_func
 729              		.type	CapSense_CSD_ScanEnabledWidgets, %function
 730              	CapSense_CSD_ScanEnabledWidgets:
 731              	.LFB7:
 983:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 984:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
 985:.\Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
 986:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanEnableWidgets
 987:.\Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
 988:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 989:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
 990:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
 991:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
 992:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
 993:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
 994:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Proximity widgets must be manually enabled as their long scan time is 
 995:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  incompatible with fast response desired of other widget types.
 996:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
 997:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
 998:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
 999:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1000:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1001:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1002:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1003:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1004:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
1005:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets busy status(scan in progress) and clears single scan mode.
1006:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  For two channel design the additional bits are set to define if scan a 
1007:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  pair of sensors or single one. 
1008:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store sensor scanning sensor number.
1009:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets to 0xFF and provided to function CapSense_CSD_FindNextSensor or
1010:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_FindNextPair, these functions starts with sensor index
1011:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  increment and overflow of uint8 gives desired index 0.
1012:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1013:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Reentrant:
1014:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  No
1015:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1016:.\Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1017:.\Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ScanEnabledWidgets(void) 
1018:.\Generated_Source\PSoC5/CapSense_CSD.c **** {
 732              		.loc 1 1018 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 1, uses_anonymous_args = 0
 736 0000 80B5     		push	{r7, lr}
 737              		.cfi_def_cfa_offset 8
 738              		.cfi_offset 7, -8
 739              		.cfi_offset 14, -4
 740 0002 00AF     		add	r7, sp, #0
 741              		.cfi_def_cfa_register 7
1019:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
1020:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_csv = 0u;
 742              		.loc 1 1020 0
 743 0004 114B     		ldr	r3, .L29
 744 0006 0022     		movs	r2, #0
 745 0008 1A70     		strb	r2, [r3]
1021:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = 0xFFu;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 32


 746              		.loc 1 1021 0
 747 000a 114B     		ldr	r3, .L29+4
 748 000c FF22     		movs	r2, #255
 749 000e 1A70     		strb	r2, [r3]
1022:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1023:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1024:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find next sensor */
1025:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_sensorIndex = CapSense_CSD_FindNextSensor(CapSense_CSD_sensorIndex);
 750              		.loc 1 1025 0
 751 0010 0F4B     		ldr	r3, .L29+4
 752 0012 1B78     		ldrb	r3, [r3]
 753 0014 DBB2     		uxtb	r3, r3
 754 0016 1846     		mov	r0, r3
 755 0018 FFF7FEFF 		bl	CapSense_CSD_FindNextSensor
 756 001c 0346     		mov	r3, r0
 757 001e 1A46     		mov	r2, r3
 758 0020 0B4B     		ldr	r3, .L29+4
 759 0022 1A70     		strb	r2, [r3]
1026:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1027:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check end of scan condition */
1028:.\Generated_Source\PSoC5/CapSense_CSD.c ****         if(CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT)
 760              		.loc 1 1028 0
 761 0024 0A4B     		ldr	r3, .L29+4
 762 0026 1B78     		ldrb	r3, [r3]
 763 0028 DBB2     		uxtb	r3, r3
 764 002a 062B     		cmp	r3, #6
 765 002c 0DD8     		bhi	.L27
1029:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
1030:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= CapSense_CSD_SW_STS_BUSY;
 766              		.loc 1 1030 0
 767 002e 074B     		ldr	r3, .L29
 768 0030 1B78     		ldrb	r3, [r3]
 769 0032 DBB2     		uxtb	r3, r3
 770 0034 43F00103 		orr	r3, r3, #1
 771 0038 DAB2     		uxtb	r2, r3
 772 003a 044B     		ldr	r3, .L29
 773 003c 1A70     		strb	r2, [r3]
1031:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(CapSense_CSD_sensorIndex);
 774              		.loc 1 1031 0
 775 003e 044B     		ldr	r3, .L29+4
 776 0040 1B78     		ldrb	r3, [r3]
 777 0042 DBB2     		uxtb	r3, r3
 778 0044 1846     		mov	r0, r3
 779 0046 FFF7FEFF 		bl	CapSense_CSD_PreScan
 780              	.L27:
1032:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
1033:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1034:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1035:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Find next sensor and set proper control register */
1036:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_sensorIndex = CapSense_CSD_FindNextPair(CapSense_CSD_sensorIndex);
1037:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1038:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Start sensor scan */
1039:.\Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) || 
1040:.\Generated_Source\PSoC5/CapSense_CSD.c ****            (CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1))
1041:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
1042:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_csv |= CapSense_CSD_SW_STS_BUSY;
1043:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PreScan(CapSense_CSD_sensorIndex);
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 33


1044:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
1045:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1046:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
1047:.\Generated_Source\PSoC5/CapSense_CSD.c **** }
 781              		.loc 1 1047 0
 782 004a 80BD     		pop	{r7, pc}
 783              	.L30:
 784              		.align	2
 785              	.L29:
 786 004c 00000000 		.word	CapSense_CSD_csv
 787 0050 00000000 		.word	CapSense_CSD_sensorIndex
 788              		.cfi_endproc
 789              	.LFE7:
 790              		.size	CapSense_CSD_ScanEnabledWidgets, .-CapSense_CSD_ScanEnabledWidgets
 791              		.section	.text.CapSense_CSD_IsBusy,"ax",%progbits
 792              		.align	2
 793              		.global	CapSense_CSD_IsBusy
 794              		.thumb
 795              		.thumb_func
 796              		.type	CapSense_CSD_IsBusy, %function
 797              	CapSense_CSD_IsBusy:
 798              	.LFB8:
1048:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1049:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1050:.\Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1051:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_IsBusy
1052:.\Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1053:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1054:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1055:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1056:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  progress and 0 means that scanning is complete.
1057:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1058:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1059:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1060:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1061:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1062:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1063:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  completed.
1064:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1065:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1066:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csv - used to provide status and mode of scanning process. 
1067:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Checks the busy status.
1068:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1069:.\Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1070:.\Generated_Source\PSoC5/CapSense_CSD.c **** uint8 CapSense_CSD_IsBusy(void) 
1071:.\Generated_Source\PSoC5/CapSense_CSD.c **** {
 799              		.loc 1 1071 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 1, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804 0000 80B4     		push	{r7}
 805              		.cfi_def_cfa_offset 4
 806              		.cfi_offset 7, -4
 807 0002 00AF     		add	r7, sp, #0
 808              		.cfi_def_cfa_register 7
1072:.\Generated_Source\PSoC5/CapSense_CSD.c ****     return ((0u != (CapSense_CSD_csv & CapSense_CSD_SW_STS_BUSY)) ? 1u : 0u);
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 34


 809              		.loc 1 1072 0
 810 0004 054B     		ldr	r3, .L33
 811 0006 1B78     		ldrb	r3, [r3]
 812 0008 DBB2     		uxtb	r3, r3
 813 000a 03F00103 		and	r3, r3, #1
 814 000e DBB2     		uxtb	r3, r3
1073:.\Generated_Source\PSoC5/CapSense_CSD.c **** }
 815              		.loc 1 1073 0
 816 0010 1846     		mov	r0, r3
 817 0012 BD46     		mov	sp, r7
 818              		.cfi_def_cfa_register 13
 819              		@ sp needed
 820 0014 5DF8047B 		ldr	r7, [sp], #4
 821              		.cfi_restore 7
 822              		.cfi_def_cfa_offset 0
 823 0018 7047     		bx	lr
 824              	.L34:
 825 001a 00BF     		.align	2
 826              	.L33:
 827 001c 00000000 		.word	CapSense_CSD_csv
 828              		.cfi_endproc
 829              	.LFE8:
 830              		.size	CapSense_CSD_IsBusy, .-CapSense_CSD_IsBusy
 831              		.section	.text.CapSense_CSD_ReadSensorRaw,"ax",%progbits
 832              		.align	2
 833              		.global	CapSense_CSD_ReadSensorRaw
 834              		.thumb
 835              		.thumb_func
 836              		.type	CapSense_CSD_ReadSensorRaw, %function
 837              	CapSense_CSD_ReadSensorRaw:
 838              	.LFB9:
1074:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1075:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1076:.\Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1077:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ReadSensorRaw
1078:.\Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1079:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1080:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1081:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns scan sensor raw data from the CapSense_CSD_sensorRaw[] array. 
1082:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1083:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  is assigned by the CapSense customizer in sequence.
1084:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1085:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1086:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1087:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1088:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1089:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Returns current raw data value for defined sensor number.
1090:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1091:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1092:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1093:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1094:.\Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1095:.\Generated_Source\PSoC5/CapSense_CSD.c **** uint16 CapSense_CSD_ReadSensorRaw(uint8 sensor) 
1096:.\Generated_Source\PSoC5/CapSense_CSD.c **** {
 839              		.loc 1 1096 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 35


 842              		@ frame_needed = 1, uses_anonymous_args = 0
 843              		@ link register save eliminated.
 844 0000 80B4     		push	{r7}
 845              		.cfi_def_cfa_offset 4
 846              		.cfi_offset 7, -4
 847 0002 83B0     		sub	sp, sp, #12
 848              		.cfi_def_cfa_offset 16
 849 0004 00AF     		add	r7, sp, #0
 850              		.cfi_def_cfa_register 7
 851 0006 0346     		mov	r3, r0
 852 0008 FB71     		strb	r3, [r7, #7]
1097:.\Generated_Source\PSoC5/CapSense_CSD.c ****     return (CapSense_CSD_sensorRaw[sensor]);
 853              		.loc 1 1097 0
 854 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 855 000c 044A     		ldr	r2, .L37
 856 000e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
1098:.\Generated_Source\PSoC5/CapSense_CSD.c **** }
 857              		.loc 1 1098 0
 858 0012 1846     		mov	r0, r3
 859 0014 0C37     		adds	r7, r7, #12
 860              		.cfi_def_cfa_offset 4
 861 0016 BD46     		mov	sp, r7
 862              		.cfi_def_cfa_register 13
 863              		@ sp needed
 864 0018 5DF8047B 		ldr	r7, [sp], #4
 865              		.cfi_restore 7
 866              		.cfi_def_cfa_offset 0
 867 001c 7047     		bx	lr
 868              	.L38:
 869 001e 00BF     		.align	2
 870              	.L37:
 871 0020 00000000 		.word	CapSense_CSD_sensorRaw
 872              		.cfi_endproc
 873              	.LFE9:
 874              		.size	CapSense_CSD_ReadSensorRaw, .-CapSense_CSD_ReadSensorRaw
 875              		.section	.text.CapSense_CSD_ClearSensors,"ax",%progbits
 876              		.align	2
 877              		.global	CapSense_CSD_ClearSensors
 878              		.thumb
 879              		.thumb_func
 880              		.type	CapSense_CSD_ClearSensors, %function
 881              	CapSense_CSD_ClearSensors:
 882              	.LFB10:
1099:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1100:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1101:.\Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1102:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_ClearSensors
1103:.\Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1104:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1105:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1106:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1107:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1108:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1109:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1110:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1111:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1112:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 36


1113:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1114:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1115:.\Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1116:.\Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_ClearSensors(void) 
1117:.\Generated_Source\PSoC5/CapSense_CSD.c **** {
 883              		.loc 1 1117 0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 8
 886              		@ frame_needed = 1, uses_anonymous_args = 0
 887 0000 80B5     		push	{r7, lr}
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 7, -8
 890              		.cfi_offset 14, -4
 891 0002 82B0     		sub	sp, sp, #8
 892              		.cfi_def_cfa_offset 16
 893 0004 00AF     		add	r7, sp, #0
 894              		.cfi_def_cfa_register 7
1118:.\Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 i;
1119:.\Generated_Source\PSoC5/CapSense_CSD.c ****    
1120:.\Generated_Source\PSoC5/CapSense_CSD.c ****     for (i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 895              		.loc 1 1120 0
 896 0006 0023     		movs	r3, #0
 897 0008 FB71     		strb	r3, [r7, #7]
 898 000a 06E0     		b	.L40
 899              	.L41:
1121:.\Generated_Source\PSoC5/CapSense_CSD.c ****     {
1122:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(i);
 900              		.loc 1 1122 0 discriminator 3
 901 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 902 000e 1846     		mov	r0, r3
 903 0010 FFF7FEFF 		bl	CapSense_CSD_DisableSensor
1120:.\Generated_Source\PSoC5/CapSense_CSD.c ****     {
 904              		.loc 1 1120 0 discriminator 3
 905 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 906 0016 0133     		adds	r3, r3, #1
 907 0018 FB71     		strb	r3, [r7, #7]
 908              	.L40:
1120:.\Generated_Source\PSoC5/CapSense_CSD.c ****     {
 909              		.loc 1 1120 0 is_stmt 0 discriminator 1
 910 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 911 001c 062B     		cmp	r3, #6
 912 001e F5D9     		bls	.L41
1123:.\Generated_Source\PSoC5/CapSense_CSD.c ****     }
1124:.\Generated_Source\PSoC5/CapSense_CSD.c **** }
 913              		.loc 1 1124 0 is_stmt 1
 914 0020 0837     		adds	r7, r7, #8
 915              		.cfi_def_cfa_offset 8
 916 0022 BD46     		mov	sp, r7
 917              		.cfi_def_cfa_register 13
 918              		@ sp needed
 919 0024 80BD     		pop	{r7, pc}
 920              		.cfi_endproc
 921              	.LFE10:
 922              		.size	CapSense_CSD_ClearSensors, .-CapSense_CSD_ClearSensors
 923 0026 00BF     		.section	.text.CapSense_CSD_EnableSensor,"ax",%progbits
 924              		.align	2
 925              		.global	CapSense_CSD_EnableSensor
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 37


 926              		.thumb
 927              		.thumb_func
 928              		.type	CapSense_CSD_EnableSensor, %function
 929              	CapSense_CSD_EnableSensor:
 930              	.LFB11:
1125:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1126:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1127:.\Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1128:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1129:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_EnableScanSlot
1130:.\Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1131:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1132:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1133:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  Configures the selected slot to measure during the next measurement 
1134:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1135:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1136:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1137:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1138:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  slot:  Slot number.
1139:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1140:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1141:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1142:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1143:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Constants:
1144:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin 
1145:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  belongs to for every sensor.
1146:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for 
1147:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  every sensor.
1148:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
1149:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  The offset and position in this array are stored in port and mask table for 
1150:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  complex sensors.
1151:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1152:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1153:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1154:.\Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_EnableScanSlot(uint8 slot) CYREENTRANT
1155:.\Generated_Source\PSoC5/CapSense_CSD.c ****     {
1156:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 j;
1157:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsNumber;
1158:.\Generated_Source\PSoC5/CapSense_CSD.c ****         const uint8 CYCODE *index;
1159:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read the sensor type: single or complex */
1160:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
1161:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1162:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor is complex */
1163:.\Generated_Source\PSoC5/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1164:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
1165:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable sensor (signle) */
1166:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableSensor(slot);
1167:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
1168:.\Generated_Source\PSoC5/CapSense_CSD.c ****         else
1169:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
1170:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable complex sensor */
1171:.\Generated_Source\PSoC5/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1172:.\Generated_Source\PSoC5/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
1173:.\Generated_Source\PSoC5/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
1174:.\Generated_Source\PSoC5/CapSense_CSD.c ****                         
1175:.\Generated_Source\PSoC5/CapSense_CSD.c ****             for (j=0u; j < snsNumber; j++)
1176:.\Generated_Source\PSoC5/CapSense_CSD.c ****             {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 38


1177:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableSensor(index[j]);
1178:.\Generated_Source\PSoC5/CapSense_CSD.c ****             }
1179:.\Generated_Source\PSoC5/CapSense_CSD.c ****         } 
1180:.\Generated_Source\PSoC5/CapSense_CSD.c ****     }
1181:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1182:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1183:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1184:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_DisableScanSlot
1185:.\Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1186:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1187:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1188:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1189:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1190:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1191:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1192:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  slot:  Slot number.
1193:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1194:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1195:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1196:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1197:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1198:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin 
1199:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  belongs to for every sensor.
1200:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for 
1201:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  every sensor.
1202:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
1203:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  The offset and position in this array are stored in port and mask table for 
1204:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  complex sensors.
1205:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1206:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1207:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1208:.\Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_DisableScanSlot(uint8 slot) CYREENTRANT
1209:.\Generated_Source\PSoC5/CapSense_CSD.c ****     {
1210:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 j;
1211:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsNumber;
1212:.\Generated_Source\PSoC5/CapSense_CSD.c ****         const uint8 CYCODE *index;
1213:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read the sensor type: single or complex */
1214:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
1215:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1216:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Check if sensor is complex */
1217:.\Generated_Source\PSoC5/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1218:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
1219:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable sensor (signle) */
1220:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_DisableSensor(slot);
1221:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
1222:.\Generated_Source\PSoC5/CapSense_CSD.c ****         else
1223:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
1224:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable complex sensor */
1225:.\Generated_Source\PSoC5/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1226:.\Generated_Source\PSoC5/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
1227:.\Generated_Source\PSoC5/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
1228:.\Generated_Source\PSoC5/CapSense_CSD.c ****                         
1229:.\Generated_Source\PSoC5/CapSense_CSD.c ****             for (j=0u; j < snsNumber; j++)
1230:.\Generated_Source\PSoC5/CapSense_CSD.c ****             {
1231:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_DisableSensor(index[j]);
1232:.\Generated_Source\PSoC5/CapSense_CSD.c ****             }
1233:.\Generated_Source\PSoC5/CapSense_CSD.c ****         } 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 39


1234:.\Generated_Source\PSoC5/CapSense_CSD.c ****     }
1235:.\Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1236:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1237:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1238:.\Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1239:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_EnableSensor
1240:.\Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1241:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1242:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1243:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1244:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1245:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Analog Mux Bus. This also enables the comparator function.
1246:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1247:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1248:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1249:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1250:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1251:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1252:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1253:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1254:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
1255:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  belongs to for every sensor.
1256:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_maskTable[] - used to store the pin within the port for 
1257:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  every sensor.
1258:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csTable[]   - used to store the pointers to CAPS_SEL 
1259:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  registers for every port.
1260:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_pcTable[]   - used to store the pointers to PC pin 
1261:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  register for every sensor.
1262:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_amuxIndex[] - used to store corrected AMUX index when 
1263:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  complex sensors are defeined.
1264:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1265:.\Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1266:.\Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_EnableSensor(uint8 sensor) CYREENTRANT
1267:.\Generated_Source\PSoC5/CapSense_CSD.c **** {
 931              		.loc 1 1267 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 16
 934              		@ frame_needed = 1, uses_anonymous_args = 0
 935 0000 80B5     		push	{r7, lr}
 936              		.cfi_def_cfa_offset 8
 937              		.cfi_offset 7, -8
 938              		.cfi_offset 14, -4
 939 0002 84B0     		sub	sp, sp, #16
 940              		.cfi_def_cfa_offset 24
 941 0004 00AF     		add	r7, sp, #0
 942              		.cfi_def_cfa_register 7
 943 0006 0346     		mov	r3, r0
 944 0008 FB71     		strb	r3, [r7, #7]
1268:.\Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 port = CapSense_CSD_portTable[sensor];
 945              		.loc 1 1268 0
 946 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 947 000c 124A     		ldr	r2, .L44
 948 000e D35C     		ldrb	r3, [r2, r3]
 949 0010 FB73     		strb	r3, [r7, #15]
1269:.\Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 mask = CapSense_CSD_maskTable[sensor];
 950              		.loc 1 1269 0
 951 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 40


 952 0014 114A     		ldr	r2, .L44+4
 953 0016 D35C     		ldrb	r3, [r2, r3]
 954 0018 BB73     		strb	r3, [r7, #14]
1270:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1271:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1272:.\Generated_Source\PSoC5/CapSense_CSD.c ****          (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1273:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 amuxCh = CapSense_CSD_amuxIndex[sensor];
1274:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1275:.\Generated_Source\PSoC5/CapSense_CSD.c ****             *   (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1276:.\Generated_Source\PSoC5/CapSense_CSD.c ****             */
1277:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1278:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Make sensor High-Z */
1279:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_HIGHZ;
 955              		.loc 1 1279 0
 956 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 957 001c 104A     		ldr	r2, .L44+8
 958 001e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 959 0022 0922     		movs	r2, #9
 960 0024 1A70     		strb	r2, [r3]
1280:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1281:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Connect to DSI output */
1282:.\Generated_Source\PSoC5/CapSense_CSD.c **** 	if(port == 15u)
 961              		.loc 1 1282 0
 962 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 963 0028 0F2B     		cmp	r3, #15
 964 002a 01D1     		bne	.L43
1283:.\Generated_Source\PSoC5/CapSense_CSD.c **** 	{
1284:.\Generated_Source\PSoC5/CapSense_CSD.c **** 		port = 7u;
 965              		.loc 1 1284 0
 966 002c 0723     		movs	r3, #7
 967 002e FB73     		strb	r3, [r7, #15]
 968              	.L43:
1285:.\Generated_Source\PSoC5/CapSense_CSD.c **** 	}
1286:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_csTable[port] |= mask;
 969              		.loc 1 1286 0
 970 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 971 0032 0C4A     		ldr	r2, .L44+12
 972 0034 52F82330 		ldr	r3, [r2, r3, lsl #2]
 973 0038 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 974 003a 0A49     		ldr	r1, .L44+12
 975 003c 51F82220 		ldr	r2, [r1, r2, lsl #2]
 976 0040 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 977 0042 BA7B     		ldrb	r2, [r7, #14]
 978 0044 0A43     		orrs	r2, r2, r1
 979 0046 D2B2     		uxtb	r2, r2
 980 0048 1A70     		strb	r2, [r3]
1287:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1288:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Connect to AMUX */
1289:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1290:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1291:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_amuxIndex[sensor]);
1292:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1293:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(sensor);
 981              		.loc 1 1293 0
 982 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 983 004c 1846     		mov	r0, r3
 984 004e FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Set
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 41


1294:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1295:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 
1296:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1297:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1298:.\Generated_Source\PSoC5/CapSense_CSD.c ****             if ((amuxCh & CapSense_CSD_CHANNEL1_FLAG) == 0u)
1299:.\Generated_Source\PSoC5/CapSense_CSD.c ****             {
1300:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(amuxCh);
1301:.\Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1302:.\Generated_Source\PSoC5/CapSense_CSD.c ****             else
1303:.\Generated_Source\PSoC5/CapSense_CSD.c ****             {
1304:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 amuxCh &= ~ CapSense_CSD_CHANNEL1_FLAG;
1305:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(amuxCh);
1306:.\Generated_Source\PSoC5/CapSense_CSD.c ****             }
1307:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
1308:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1309:.\Generated_Source\PSoC5/CapSense_CSD.c ****             if (sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) 
1310:.\Generated_Source\PSoC5/CapSense_CSD.c ****             {
1311:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(sensor);
1312:.\Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1313:.\Generated_Source\PSoC5/CapSense_CSD.c ****             else
1314:.\Generated_Source\PSoC5/CapSense_CSD.c ****             {
1315:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(sensor - CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
1316:.\Generated_Source\PSoC5/CapSense_CSD.c ****             }
1317:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
1318:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1319:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1320:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */
1321:.\Generated_Source\PSoC5/CapSense_CSD.c **** }
 985              		.loc 1 1321 0
 986 0052 1037     		adds	r7, r7, #16
 987              		.cfi_def_cfa_offset 8
 988 0054 BD46     		mov	sp, r7
 989              		.cfi_def_cfa_register 13
 990              		@ sp needed
 991 0056 80BD     		pop	{r7, pc}
 992              	.L45:
 993              		.align	2
 994              	.L44:
 995 0058 00000000 		.word	CapSense_CSD_portTable
 996 005c 00000000 		.word	CapSense_CSD_maskTable
 997 0060 00000000 		.word	CapSense_CSD_pcTable
 998 0064 00000000 		.word	CapSense_CSD_csTable
 999              		.cfi_endproc
 1000              	.LFE11:
 1001              		.size	CapSense_CSD_EnableSensor, .-CapSense_CSD_EnableSensor
 1002              		.section	.text.CapSense_CSD_DisableSensor,"ax",%progbits
 1003              		.align	2
 1004              		.global	CapSense_CSD_DisableSensor
 1005              		.thumb
 1006              		.thumb_func
 1007              		.type	CapSense_CSD_DisableSensor, %function
 1008              	CapSense_CSD_DisableSensor:
 1009              	.LFB12:
1322:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1323:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1324:.\Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1325:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_DisableSensor
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 42


1326:.\Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1327:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1328:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1329:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1330:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1331:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1332:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1333:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number
1334:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1335:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1336:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1337:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1338:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1339:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin 
1340:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  belongs to for every sensor.
1341:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_maskTable[] - used to store the pin within the port for 
1342:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  every sensor.
1343:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_csTable[]   - used to store the pointers to CAPS_SEL 
1344:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  registers for every port.
1345:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_pcTable[]   - used to store the pointers to PC pin 
1346:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  register for every sensor.
1347:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_amuxIndex[] - used to store corrected AMUX index when 
1348:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  complex sensors are defeined.
1349:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1350:.\Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1351:.\Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_DisableSensor(uint8 sensor) CYREENTRANT
1352:.\Generated_Source\PSoC5/CapSense_CSD.c **** {
 1010              		.loc 1 1352 0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 16
 1013              		@ frame_needed = 1, uses_anonymous_args = 0
 1014 0000 80B5     		push	{r7, lr}
 1015              		.cfi_def_cfa_offset 8
 1016              		.cfi_offset 7, -8
 1017              		.cfi_offset 14, -4
 1018 0002 84B0     		sub	sp, sp, #16
 1019              		.cfi_def_cfa_offset 24
 1020 0004 00AF     		add	r7, sp, #0
 1021              		.cfi_def_cfa_register 7
 1022 0006 0346     		mov	r3, r0
 1023 0008 FB71     		strb	r3, [r7, #7]
1353:.\Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 port = CapSense_CSD_portTable[sensor];
 1024              		.loc 1 1353 0
 1025 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1026 000c 134A     		ldr	r2, .L48
 1027 000e D35C     		ldrb	r3, [r2, r3]
 1028 0010 FB73     		strb	r3, [r7, #15]
1354:.\Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 mask = CapSense_CSD_maskTable[sensor];
 1029              		.loc 1 1354 0
 1030 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1031 0014 124A     		ldr	r2, .L48+4
 1032 0016 D35C     		ldrb	r3, [r2, r3]
 1033 0018 BB73     		strb	r3, [r7, #14]
1355:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1356:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1357:.\Generated_Source\PSoC5/CapSense_CSD.c ****          (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1358:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 amuxCh = CapSense_CSD_amuxIndex[sensor];
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 43


1359:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* ((CapSense_CSD_DESIGN_TYPE == CapSense_CSD_TWO_CHANNELS_DESIGN) && \
1360:.\Generated_Source\PSoC5/CapSense_CSD.c ****             *   (CapSense_CSD_IS_COMPLEX_SCANSLOTS))
1361:.\Generated_Source\PSoC5/CapSense_CSD.c ****             */
1362:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1363:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disconnect from AMUX */
1364:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1365:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1366:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_amuxIndex[sensor]);
1367:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1368:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Disconnect(sensor);
 1034              		.loc 1 1368 0
 1035 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1036 001c 1846     		mov	r0, r3
 1037 001e FFF7FEFF 		bl	CapSense_CSD_AMuxCH0_Unset
1369:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1370:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 
1371:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1372:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1373:.\Generated_Source\PSoC5/CapSense_CSD.c ****             if ((amuxCh & CapSense_CSD_CHANNEL1_FLAG) == 0u)
1374:.\Generated_Source\PSoC5/CapSense_CSD.c ****             {
1375:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(amuxCh);
1376:.\Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1377:.\Generated_Source\PSoC5/CapSense_CSD.c ****             else
1378:.\Generated_Source\PSoC5/CapSense_CSD.c ****             {
1379:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 amuxCh &= ~ CapSense_CSD_CHANNEL1_FLAG;
1380:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(amuxCh);
1381:.\Generated_Source\PSoC5/CapSense_CSD.c ****             }
1382:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
1383:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1384:.\Generated_Source\PSoC5/CapSense_CSD.c ****             if (sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0) 
1385:.\Generated_Source\PSoC5/CapSense_CSD.c ****             {
1386:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(sensor);
1387:.\Generated_Source\PSoC5/CapSense_CSD.c ****             } 
1388:.\Generated_Source\PSoC5/CapSense_CSD.c ****             else
1389:.\Generated_Source\PSoC5/CapSense_CSD.c ****             {
1390:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(sensor - CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
1391:.\Generated_Source\PSoC5/CapSense_CSD.c ****             }
1392:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
1393:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1394:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1395:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* CapSense_CSD_DESIGN_TYPE */
1396:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1397:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Disconnect from DSI output */
1398:.\Generated_Source\PSoC5/CapSense_CSD.c **** 	if(port == 15u)
 1038              		.loc 1 1398 0
 1039 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1040 0024 0F2B     		cmp	r3, #15
 1041 0026 01D1     		bne	.L47
1399:.\Generated_Source\PSoC5/CapSense_CSD.c **** 	{
1400:.\Generated_Source\PSoC5/CapSense_CSD.c **** 		port = 7u;
 1042              		.loc 1 1400 0
 1043 0028 0723     		movs	r3, #7
 1044 002a FB73     		strb	r3, [r7, #15]
 1045              	.L47:
1401:.\Generated_Source\PSoC5/CapSense_CSD.c **** 	}
1402:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *CapSense_CSD_csTable[port] &= (uint8)~mask;
 1046              		.loc 1 1402 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 44


 1047 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1048 002e 0D4A     		ldr	r2, .L48+8
 1049 0030 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1050 0034 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1051 0036 0B49     		ldr	r1, .L48+8
 1052 0038 51F82220 		ldr	r2, [r1, r2, lsl #2]
 1053 003c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1054 003e BA7B     		ldrb	r2, [r7, #14]
 1055 0040 D243     		mvns	r2, r2
 1056 0042 D2B2     		uxtb	r2, r2
 1057 0044 0A40     		ands	r2, r2, r1
 1058 0046 D2B2     		uxtb	r2, r2
 1059 0048 1A70     		strb	r2, [r3]
1403:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1404:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set sensor to inactive state */
1405:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_GND)
1406:.\Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_GND;
 1060              		.loc 1 1406 0
 1061 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1062 004c 064A     		ldr	r2, .L48+12
 1063 004e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1064 0052 0822     		movs	r2, #8
 1065 0054 1A70     		strb	r2, [r3]
1407:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #elif (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_HIGHZ)
1408:.\Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_HIGHZ;
1409:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1410:.\Generated_Source\PSoC5/CapSense_CSD.c ****         *CapSense_CSD_pcTable[sensor] = CapSense_CSD_PRT_PC_SHIELD;
1411:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_CONNECT_INACTIVE_SNS == CapSense_CSD_CIS_GND) */
1412:.\Generated_Source\PSoC5/CapSense_CSD.c **** }
 1066              		.loc 1 1412 0
 1067 0056 1037     		adds	r7, r7, #16
 1068              		.cfi_def_cfa_offset 8
 1069 0058 BD46     		mov	sp, r7
 1070              		.cfi_def_cfa_register 13
 1071              		@ sp needed
 1072 005a 80BD     		pop	{r7, pc}
 1073              	.L49:
 1074              		.align	2
 1075              	.L48:
 1076 005c 00000000 		.word	CapSense_CSD_portTable
 1077 0060 00000000 		.word	CapSense_CSD_maskTable
 1078 0064 00000000 		.word	CapSense_CSD_csTable
 1079 0068 00000000 		.word	CapSense_CSD_pcTable
 1080              		.cfi_endproc
 1081              	.LFE12:
 1082              		.size	CapSense_CSD_DisableSensor, .-CapSense_CSD_DisableSensor
 1083              		.section	.text.CapSense_CSD_PreScan,"ax",%progbits
 1084              		.align	2
 1085              		.global	CapSense_CSD_PreScan
 1086              		.thumb
 1087              		.thumb_func
 1088              		.type	CapSense_CSD_PreScan, %function
 1089              	CapSense_CSD_PreScan:
 1090              	.LFB13:
1413:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1414:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1415:.\Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 45


1416:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_PreScan
1417:.\Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1418:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1419:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1420:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1421:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  scanning process of the sensor.
1422:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1423:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1424:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  sensor:  Sensor number.
1425:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1426:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1427:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1428:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1429:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Global Variables:
1430:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  CapSense_CSD_rbTable[] - used to store pointers to PC pin registers for 
1431:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1432:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  resistor.
1433:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1434:.\Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1435:.\Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_PreScan(uint8 sensor) CYREENTRANT
1436:.\Generated_Source\PSoC5/CapSense_CSD.c **** {
 1091              		.loc 1 1436 0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 8
 1094              		@ frame_needed = 1, uses_anonymous_args = 0
 1095 0000 80B5     		push	{r7, lr}
 1096              		.cfi_def_cfa_offset 8
 1097              		.cfi_offset 7, -8
 1098              		.cfi_offset 14, -4
 1099 0002 82B0     		sub	sp, sp, #8
 1100              		.cfi_def_cfa_offset 16
 1101 0004 00AF     		add	r7, sp, #0
 1102              		.cfi_def_cfa_register 7
 1103 0006 0346     		mov	r3, r0
 1104 0008 FB71     		strb	r3, [r7, #7]
1437:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Set Sensor Settings */
1438:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SetScanSlotSettings(sensor);
 1105              		.loc 1 1438 0
 1106 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1107 000c 1846     		mov	r0, r3
 1108 000e FFF7FEFF 		bl	CapSense_CSD_SetScanSlotSettings
1439:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1440:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1441:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#START CapSense_CSD_PreScan_DisableInt` */
1442:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1443:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#END` */
1444:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1445:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #ifdef CapSense_CSD_PRE_SCAN_DISABLE_INT_CALLBACK
1446:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_PreScan_DisableInt_Callback();
1447:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* CapSense_CSD_PRE_SCAN_DISABLE_INT_CALLBACK */
1448:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1449:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Resets digital and pre-charge clocks */
1450:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_SYNC_EN;
 1109              		.loc 1 1450 0
 1110 0012 0F4A     		ldr	r2, .L51
 1111 0014 0E4B     		ldr	r3, .L51
 1112 0016 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 46


 1113 0018 DBB2     		uxtb	r3, r3
 1114 001a 43F00103 		orr	r3, r3, #1
 1115 001e DBB2     		uxtb	r3, r3
 1116 0020 1370     		strb	r3, [r2]
1451:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1452:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1453:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1454:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable Vref from AMux */
1455:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1456:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1457:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1458:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
 1117              		.loc 1 1458 0
 1118 0022 0C4A     		ldr	r2, .L51+4
 1119 0024 0B4B     		ldr	r3, .L51+4
 1120 0026 1B78     		ldrb	r3, [r3]
 1121 0028 DBB2     		uxtb	r3, r3
 1122 002a 23F00103 		bic	r3, r3, #1
 1123 002e DBB2     		uxtb	r3, r3
 1124 0030 1370     		strb	r3, [r2]
1459:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_VREF_VDAC != CapSense_CSD_VREF_OPTIONS) */
1460:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1461:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1462:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
 1125              		.loc 1 1462 0
 1126 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1127 0034 1846     		mov	r0, r3
 1128 0036 FFF7FEFF 		bl	CapSense_CSD_EnableSensor
1463:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
1464:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1465:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Connect IDAC */
1466:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1467:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
1468:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1469:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
1470:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 
1471:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable CapSense Buffer */
1472:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSD_CSBUF_ENABLE;
1473:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
1474:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1475:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Connect DSI output to Rb */
1476:.\Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] |= CapSense_CSD_BYP_MASK;
1477:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
1478:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Enable Sensor */
1479:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_EnableScanSlot(sensor);
1480:.\Generated_Source\PSoC5/CapSense_CSD.c ****              
1481:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disable CapSense Buffer */
1482:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1483:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1484:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1485:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1486:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #else
1487:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1488:.\Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) != 0u)
1489:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
1490:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1491:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 47


1492:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1493:.\Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1494:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 #else
1495:.\Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1496:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 #endif  /* (CapSense_CSD_VREF_VDAC != CapSense_CSD_VREF_OPTIONS) */
1497:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 
1498:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1499:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1500:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 
1501:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1502:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect IDAC */
1503:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1504:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 
1505:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1506:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1507:.\Generated_Source\PSoC5/CapSense_CSD.c ****                     
1508:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1509:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1510:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 
1511:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1512:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect DSI output to Rb */
1513:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] |= CapSense_CSD_BYP_MASK;
1514:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 
1515:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1516:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1517:.\Generated_Source\PSoC5/CapSense_CSD.c ****                     
1518:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1519:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1520:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
1521:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1522:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
1523:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
1524:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1525:.\Generated_Source\PSoC5/CapSense_CSD.c ****         if((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) != 0u)
1526:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
1527:.\Generated_Source\PSoC5/CapSense_CSD.c ****             sensor += CapSense_CSD_TOTAL_SENSOR_COUNT__CH0;
1528:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
1529:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE)
1530:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1531:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 #if (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS)
1532:.\Generated_Source\PSoC5/CapSense_CSD.c ****                    CapSense_CSD_AMuxCH1_Disconnect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
1533:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 #else 
1534:.\Generated_Source\PSoC5/CapSense_CSD.c ****                     CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1535:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1536:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 
1537:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1538:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1539:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 
1540:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #elif (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1541:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect IDAC */
1542:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
1543:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 
1544:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1545:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1546:.\Generated_Source\PSoC5/CapSense_CSD.c ****                     
1547:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1548:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 48


1549:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 
1550:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #else
1551:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Connect DSI output to Rb */
1552:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 *CapSense_CSD_rbTable[CapSense_CSD_extRbCh1Cur] |= CapSense_CSD_BYP_MASK;
1553:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 
1554:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Enable Sensor */
1555:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_EnableScanSlot(sensor);
1556:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 
1557:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disable Vref from AMux */
1558:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSD_CSBUF_ENABLE;
1559:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
1560:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SOURCE) */
1561:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
1562:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1563:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN) */
1564:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1565:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1566:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_CONTROL_REG |= CapSense_CSD_CTRL_START;
 1129              		.loc 1 1566 0
 1130 003a 054A     		ldr	r2, .L51
 1131 003c 044B     		ldr	r3, .L51
 1132 003e 1B78     		ldrb	r3, [r3]
 1133 0040 DBB2     		uxtb	r3, r3
 1134 0042 43F00203 		orr	r3, r3, #2
 1135 0046 DBB2     		uxtb	r3, r3
 1136 0048 1370     		strb	r3, [r2]
1567:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1568:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1569:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#START CapSense_CSD_PreScan_EnableInt` */
1570:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1571:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /* `#END` */
1572:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1573:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #ifdef CapSense_CSD_PRE_SCAN_ENABLE_INT_CALLBACK
1574:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_PreScan_EnableInt_Callback();
1575:.\Generated_Source\PSoC5/CapSense_CSD.c ****     #endif /* CapSense_CSD_PRE_SCAN_ENABLE_INT_CALLBACK */
1576:.\Generated_Source\PSoC5/CapSense_CSD.c **** }
 1137              		.loc 1 1576 0
 1138 004a 0837     		adds	r7, r7, #8
 1139              		.cfi_def_cfa_offset 8
 1140 004c BD46     		mov	sp, r7
 1141              		.cfi_def_cfa_register 13
 1142              		@ sp needed
 1143 004e 80BD     		pop	{r7, pc}
 1144              	.L52:
 1145              		.align	2
 1146              	.L51:
 1147 0050 79640040 		.word	1073767545
 1148 0054 70580040 		.word	1073764464
 1149              		.cfi_endproc
 1150              	.LFE13:
 1151              		.size	CapSense_CSD_PreScan, .-CapSense_CSD_PreScan
 1152              		.section	.text.CapSense_CSD_PostScan,"ax",%progbits
 1153              		.align	2
 1154              		.global	CapSense_CSD_PostScan
 1155              		.thumb
 1156              		.thumb_func
 1157              		.type	CapSense_CSD_PostScan, %function
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 49


 1158              	CapSense_CSD_PostScan:
 1159              	.LFB14:
1577:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1578:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1579:.\Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1580:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1581:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScan
1582:.\Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1583:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1584:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1585:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1586:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1587:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1588:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only one channel designs.
1589:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1590:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1591:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1592:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1593:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1594:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1595:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1596:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1597:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1598:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1599:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1600:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1601:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1602:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1603:.\Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScan(uint8 sensor) CYREENTRANT
1604:.\Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1160              		.loc 1 1604 0
 1161              		.cfi_startproc
 1162              		@ args = 0, pretend = 0, frame = 8
 1163              		@ frame_needed = 1, uses_anonymous_args = 0
 1164 0000 80B5     		push	{r7, lr}
 1165              		.cfi_def_cfa_offset 8
 1166              		.cfi_offset 7, -8
 1167              		.cfi_offset 14, -4
 1168 0002 82B0     		sub	sp, sp, #8
 1169              		.cfi_def_cfa_offset 16
 1170 0004 00AF     		add	r7, sp, #0
 1171              		.cfi_def_cfa_register 7
 1172 0006 0346     		mov	r3, r0
 1173 0008 FB71     		strb	r3, [r7, #7]
1605:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Stop Capsensing and rearm sync */
1606:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_CONTROL_REG &= (uint8)~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
 1174              		.loc 1 1606 0
 1175 000a 1E4A     		ldr	r2, .L54
 1176 000c 1D4B     		ldr	r3, .L54
 1177 000e 1B78     		ldrb	r3, [r3]
 1178 0010 DBB2     		uxtb	r3, r3
 1179 0012 23F00303 		bic	r3, r3, #3
 1180 0016 DBB2     		uxtb	r3, r3
 1181 0018 1370     		strb	r3, [r2]
1607:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1608:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1609:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 50


1610:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1611:.\Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH0_COUNTER_PTR
1612:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1613:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH0_COUNTER_HI_REG << 8u);
 1182              		.loc 1 1613 0
 1183 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1184 001c 1A4A     		ldr	r2, .L54+4
 1185 001e 1278     		ldrb	r2, [r2]
 1186 0020 D2B2     		uxtb	r2, r2
 1187 0022 92B2     		uxth	r2, r2
 1188 0024 1202     		lsls	r2, r2, #8
 1189 0026 91B2     		uxth	r1, r2
 1190 0028 184A     		ldr	r2, .L54+8
 1191 002a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1614:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH0_COUNTER_LO_REG;
 1192              		.loc 1 1614 0
 1193 002e 184B     		ldr	r3, .L54+12
 1194 0030 1B78     		ldrb	r3, [r3]
 1195 0032 DBB2     		uxtb	r3, r3
 1196 0034 9AB2     		uxth	r2, r3
 1197 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1198 0038 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1199 003a 1448     		ldr	r0, .L54+8
 1200 003c 30F81110 		ldrh	r1, [r0, r1, lsl #1]
 1201 0040 0A43     		orrs	r2, r2, r1
 1202 0042 91B2     		uxth	r1, r2
 1203 0044 114A     		ldr	r2, .L54+8
 1204 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1615:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE -
 1205              		.loc 1 1615 0
 1206 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1616:.\Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
 1207              		.loc 1 1616 0
 1208 004c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1209 004e 0F49     		ldr	r1, .L54+8
 1210 0050 31F81220 		ldrh	r2, [r1, r2, lsl #1]
1615:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE -
 1211              		.loc 1 1615 0
 1212 0054 D243     		mvns	r2, r2
 1213 0056 91B2     		uxth	r1, r2
 1214 0058 0C4A     		ldr	r2, .L54+8
 1215 005a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1617:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION == CapSense_CSD_MEASURE_IMPLEMENTATION_FF) */
1618:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1619:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1620:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
 1216              		.loc 1 1620 0
 1217 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1218 0060 1846     		mov	r0, r3
 1219 0062 FFF7FEFF 		bl	CapSense_CSD_DisableSensor
1621:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1622:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if(CapSense_CSD_CURRENT_SOURCE)
1623:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1624:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
 1220              		.loc 1 1624 0
 1221 0066 0020     		movs	r0, #0
 1222 0068 FFF7FEFF 		bl	CapSense_CSD_IdacCH0_SetValue
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 51


1625:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1626:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1627:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1628:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1629:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1630:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1631:.\Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] &= ~CapSense_CSD_BYP_MASK; 
1632:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1633:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
1634:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1635:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1636:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
1637:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1638:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
 1223              		.loc 1 1638 0
 1224 006c 094A     		ldr	r2, .L54+16
 1225 006e 094B     		ldr	r3, .L54+16
 1226 0070 1B78     		ldrb	r3, [r3]
 1227 0072 DBB2     		uxtb	r3, r3
 1228 0074 43F00103 		orr	r3, r3, #1
 1229 0078 DBB2     		uxtb	r3, r3
 1230 007a 1370     		strb	r3, [r2]
1639:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1640:.\Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1231              		.loc 1 1640 0
 1232 007c 0837     		adds	r7, r7, #8
 1233              		.cfi_def_cfa_offset 8
 1234 007e BD46     		mov	sp, r7
 1235              		.cfi_def_cfa_register 13
 1236              		@ sp needed
 1237 0080 80BD     		pop	{r7, pc}
 1238              	.L55:
 1239 0082 00BF     		.align	2
 1240              	.L54:
 1241 0084 79640040 		.word	1073767545
 1242 0088 1D640040 		.word	1073767453
 1243 008c 00000000 		.word	CapSense_CSD_sensorRaw
 1244 0090 0D640040 		.word	1073767437
 1245 0094 70580040 		.word	1073764464
 1246              		.cfi_endproc
 1247              	.LFE14:
 1248              		.size	CapSense_CSD_PostScan, .-CapSense_CSD_PostScan
 1249              		.section	.text.CapSense_CSD_SetPrescaler,"ax",%progbits
 1250              		.align	2
 1251              		.global	CapSense_CSD_SetPrescaler
 1252              		.thumb
 1253              		.thumb_func
 1254              		.type	CapSense_CSD_SetPrescaler, %function
 1255              	CapSense_CSD_SetPrescaler:
 1256              	.LFB15:
1641:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1642:.\Generated_Source\PSoC5/CapSense_CSD.c **** #else
1643:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1644:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1645:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScan
1646:.\Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1647:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 52


1648:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1649:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1650:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1651:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1652:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only used for channel 0 in two channes designs.
1653:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1654:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1655:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1656:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1657:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1658:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1659:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1660:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1661:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1662:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1663:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1664:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1665:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1666:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1667:.\Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScanCh0(uint8 sensor) CYREENTRANT
1668:.\Generated_Source\PSoC5/CapSense_CSD.c ****     {
1669:.\Generated_Source\PSoC5/CapSense_CSD.c ****         if (((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) == 0u) && 
1670:.\Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) == 0u)) 
1671:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
1672:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Stop Capsensing and rearm sync */
1673:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
1674:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
1675:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1676:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1677:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1678:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1679:.\Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH0_COUNTER_PTR
1680:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1681:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH0_COUNTER_HI_REG << 8u);
1682:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH0_COUNTER_LO_REG;
1683:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1684:.\Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
1685:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH0 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*/
1686:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1687:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1688:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
1689:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1690:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
1691:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1692:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH0_SetValue(CapSense_CSD_TURN_OFF_IDAC);
1693:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1694:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
1695:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH0_Disconnect(CapSense_CSD_AMuxCH0_IDAC_CHANNEL);
1696:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1697:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1698:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1699:.\Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh0Cur] &= ~CapSense_CSD_BYP_MASK; 
1700:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1701:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1702:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1703:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1704:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH0_Connect(CapSense_CSD_AMuxCH0_VREF_CHANNEL);
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 53


1705:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1706:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH0_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
1707:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1708:.\Generated_Source\PSoC5/CapSense_CSD.c ****     }
1709:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1710:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1711:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1712:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_PostScanCh1
1713:.\Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1714:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1715:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1716:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  Store results of measurament in CapSense_CSD_SensorResult[] array,
1717:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1718:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1719:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  Only used for channel 1 in two channes designs.
1720:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1721:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1722:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  sensor:  Sensor number.
1723:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1724:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1725:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1726:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1727:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1728:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1729:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1730:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1731:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1732:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1733:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1734:.\Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_PostScanCh1(uint8 sensor) CYREENTRANT
1735:.\Generated_Source\PSoC5/CapSense_CSD.c ****     {
1736:.\Generated_Source\PSoC5/CapSense_CSD.c ****         if (((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH0) == 0u) && 
1737:.\Generated_Source\PSoC5/CapSense_CSD.c ****             ((CapSense_CSD_CONTROL_REG & CapSense_CSD_CTRL_WINDOW_EN__CH1) == 0u))
1738:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
1739:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Stop Capsensing and rearm sync */
1740:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= ~(CapSense_CSD_CTRL_START | CapSense_CSD_CTRL_SYNC_EN);
1741:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
1742:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1743:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Read SlotResult from Raw Counter */
1744:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)
1745:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1746:.\Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CY_GET_REG16(CapSense_CSD_RAW_CH1_COUNTER_PTR
1747:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1748:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = ((uint16) CapSense_CSD_RAW_CH1_COUNTER_HI_REG << 8u);
1749:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor] |= (uint16) CapSense_CSD_RAW_CH1_COUNTER_LO_REG;
1750:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_sensorRaw[sensor]  = CapSense_CSD_MEASURE_FULL_RANGE - 
1751:.\Generated_Source\PSoC5/CapSense_CSD.c ****                                                       CapSense_CSD_sensorRaw[sensor];
1752:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_IMPLEMENTATION_CH1 == CapSense_CSD_MEASURE_IMPLEMENTATION_FF)*/
1753:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1754:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable Sensor */
1755:.\Generated_Source\PSoC5/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(sensor);
1756:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1757:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_CURRENT_SOURCE)
1758:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Turn off IDAC */
1759:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_IdacCH1_SetValue(CapSense_CSD_TURN_OFF_IDAC);
1760:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK)
1761:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 /* Disconnect IDAC */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 54


1762:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_AMuxCH1_Disconnect(CapSense_CSD_AMuxCH1_IDAC_CHANNEL);
1763:.\Generated_Source\PSoC5/CapSense_CSD.c ****             #endif  /* (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_IDAC_SINK) */
1764:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1765:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Disconnect DSI output from Rb */
1766:.\Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[CapSense_CSD_extRbCh1Cur] &= ~CapSense_CSD_BYP_MASK; 
1767:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_CURRENT_SOURCE)*/
1768:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1769:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Enable Vref on AMUX */
1770:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_VREF_OPTIONS == CapSense_CSD_VREF_VDAC)
1771:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_AMuxCH1_Connect(CapSense_CSD_AMuxCH1_VREF_CHANNEL);
1772:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1773:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_BufCH1_CAPS_CFG0_REG |= CapSense_CSD_CSBUF_ENABLE;
1774:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_VREF_VDAC == CapSense_CSD_VREF_OPTIONS) */
1775:.\Generated_Source\PSoC5/CapSense_CSD.c ****     }
1776:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1777:.\Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_DESIGN_TYPE */
1778:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1779:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1780:.\Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB)
1781:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1782:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name:  CapSense_CSD_InitRb
1783:.\Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1784:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1785:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1786:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1787:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  while next measure.
1788:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is available only if Current Source is External Resistor.
1789:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1790:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1791:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1792:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1793:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1794:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1795:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1796:.\Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************/
1797:.\Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_InitRb(void) 
1798:.\Generated_Source\PSoC5/CapSense_CSD.c ****     {
1799:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 i;
1800:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1801:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Disable all Rb */
1802:.\Generated_Source\PSoC5/CapSense_CSD.c ****         for(i = 0u; i < CapSense_CSD_TOTAL_RB_NUMBER; i++)
1803:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
1804:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Make High-Z */
1805:.\Generated_Source\PSoC5/CapSense_CSD.c ****             *CapSense_CSD_rbTable[i] = CapSense_CSD_PRT_PC_HIGHZ;
1806:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
1807:.\Generated_Source\PSoC5/CapSense_CSD.c ****     }
1808:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1809:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1810:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1811:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetRBleed
1812:.\Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1813:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1814:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1815:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1816:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1817:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1818:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is available only if Current Source is External Resistor.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 55


1819:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * 
1820:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1821:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1822:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  customizer.
1823:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1824:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1825:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1826:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1827:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Global Variables:
1828:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_extRbCh0Cur - used to store current number of active 
1829:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  bleed resistor (Rb) of channel 0.
1830:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  CapSense_CSD_extRbCh1Cur - used to store current number of active 
1831:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  bleed resistor (Rb) of channel 1.
1832:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1833:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  cycle.
1834:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1835:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1836:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1837:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1838:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1839:.\Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetRBleed(uint8 rbleed) 
1840:.\Generated_Source\PSoC5/CapSense_CSD.c ****     {
1841:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
1842:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_extRbCh0Cur = rbleed;
1843:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
1844:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1845:.\Generated_Source\PSoC5/CapSense_CSD.c ****             if(rbleed < CapSense_CSD_TOTAL_RB_NUMBER__CH0)
1846:.\Generated_Source\PSoC5/CapSense_CSD.c ****             {
1847:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_extRbCh0Cur = rbleed;
1848:.\Generated_Source\PSoC5/CapSense_CSD.c ****             }
1849:.\Generated_Source\PSoC5/CapSense_CSD.c ****             else
1850:.\Generated_Source\PSoC5/CapSense_CSD.c ****             {
1851:.\Generated_Source\PSoC5/CapSense_CSD.c ****                 CapSense_CSD_extRbCh1Cur = (rbleed - CapSense_CSD_TOTAL_RB_NUMBER__CH0);   
1852:.\Generated_Source\PSoC5/CapSense_CSD.c ****             }
1853:.\Generated_Source\PSoC5/CapSense_CSD.c ****     
1854:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN */ 
1855:.\Generated_Source\PSoC5/CapSense_CSD.c ****     }
1856:.\Generated_Source\PSoC5/CapSense_CSD.c **** #endif /* CapSense_CSD_CURRENT_SOURCE == CapSense_CSD_EXTERNAL_RB */ 
1857:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1858:.\Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_PRESCALER_OPTIONS)
1859:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1860:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetPrescaler
1861:.\Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1862:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1863:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1864:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  Sets analog switch divider.
1865:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1866:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1867:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  prescaler:  Sets prescaler divider values.
1868:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1869:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1870:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1871:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1872:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1873:.\Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetPrescaler(uint8 prescaler) CYREENTRANT
1874:.\Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1257              		.loc 1 1874 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 56


 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 8
 1260              		@ frame_needed = 1, uses_anonymous_args = 0
 1261              		@ link register save eliminated.
 1262 0000 80B4     		push	{r7}
 1263              		.cfi_def_cfa_offset 4
 1264              		.cfi_offset 7, -4
 1265 0002 83B0     		sub	sp, sp, #12
 1266              		.cfi_def_cfa_offset 16
 1267 0004 00AF     		add	r7, sp, #0
 1268              		.cfi_def_cfa_register 7
 1269 0006 0346     		mov	r3, r0
 1270 0008 FB71     		strb	r3, [r7, #7]
1875:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Set Prescaler */
1876:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
1877:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PRESCALER_PERIOD_REG = prescaler;
 1271              		.loc 1 1877 0
 1272 000a 064A     		ldr	r2, .L57
 1273 000c FB79     		ldrb	r3, [r7, #7]
 1274 000e 1370     		strb	r3, [r2]
1878:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 1275              		.loc 1 1878 0
 1276 0010 054A     		ldr	r2, .L57+4
 1277 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1278 0014 5B08     		lsrs	r3, r3, #1
 1279 0016 DBB2     		uxtb	r3, r3
 1280 0018 1370     		strb	r3, [r2]
1879:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
1880:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1881:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CY_SET_REG16(CapSense_CSD_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1882:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1883:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Do nothing = config without prescaler */
1884:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
1885:.\Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1281              		.loc 1 1885 0
 1282 001a 0C37     		adds	r7, r7, #12
 1283              		.cfi_def_cfa_offset 4
 1284 001c BD46     		mov	sp, r7
 1285              		.cfi_def_cfa_register 13
 1286              		@ sp needed
 1287 001e 5DF8047B 		ldr	r7, [sp], #4
 1288              		.cfi_restore 7
 1289              		.cfi_def_cfa_offset 0
 1290 0022 7047     		bx	lr
 1291              	.L58:
 1292              		.align	2
 1293              	.L57:
 1294 0024 2B640040 		.word	1073767467
 1295 0028 3B640040 		.word	1073767483
 1296              		.cfi_endproc
 1297              	.LFE15:
 1298              		.size	CapSense_CSD_SetPrescaler, .-CapSense_CSD_SetPrescaler
 1299              		.section	.text.CapSense_CSD_GetPrescaler,"ax",%progbits
 1300              		.align	2
 1301              		.global	CapSense_CSD_GetPrescaler
 1302              		.thumb
 1303              		.thumb_func
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 57


 1304              		.type	CapSense_CSD_GetPrescaler, %function
 1305              	CapSense_CSD_GetPrescaler:
 1306              	.LFB16:
1886:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1887:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1888:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1889:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_GetPrescaler
1890:.\Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1891:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1892:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1893:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  Gets analog switch divider.
1894:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1895:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1896:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1897:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1898:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1899:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *   Returns the prescaler divider value.
1900:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1901:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1902:.\Generated_Source\PSoC5/CapSense_CSD.c ****     uint8 CapSense_CSD_GetPrescaler(void) 
1903:.\Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1307              		.loc 1 1903 0
 1308              		.cfi_startproc
 1309              		@ args = 0, pretend = 0, frame = 8
 1310              		@ frame_needed = 1, uses_anonymous_args = 0
 1311              		@ link register save eliminated.
 1312 0000 80B4     		push	{r7}
 1313              		.cfi_def_cfa_offset 4
 1314              		.cfi_offset 7, -4
 1315 0002 83B0     		sub	sp, sp, #12
 1316              		.cfi_def_cfa_offset 16
 1317 0004 00AF     		add	r7, sp, #0
 1318              		.cfi_def_cfa_register 7
1904:.\Generated_Source\PSoC5/CapSense_CSD.c ****         uint8 prescaler = 0u;
 1319              		.loc 1 1904 0
 1320 0006 0023     		movs	r3, #0
 1321 0008 FB71     		strb	r3, [r7, #7]
1905:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1906:.\Generated_Source\PSoC5/CapSense_CSD.c ****         /* Get Prescaler */
1907:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #if (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB)
1908:.\Generated_Source\PSoC5/CapSense_CSD.c ****             prescaler = CapSense_CSD_PRESCALER_PERIOD_REG;
 1322              		.loc 1 1908 0
 1323 000a 054B     		ldr	r3, .L61
 1324 000c 1B78     		ldrb	r3, [r3]
 1325 000e FB71     		strb	r3, [r7, #7]
1909:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
1910:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #elif (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_FF)
1911:.\Generated_Source\PSoC5/CapSense_CSD.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_CSD_PRESCALER_PERIOD_PTR);
1912:.\Generated_Source\PSoC5/CapSense_CSD.c ****             
1913:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #else
1914:.\Generated_Source\PSoC5/CapSense_CSD.c ****             /* Do nothing = config without prescaler */
1915:.\Generated_Source\PSoC5/CapSense_CSD.c ****         #endif  /* (CapSense_CSD_PRESCALER_OPTIONS == CapSense_CSD_PRESCALER_UDB) */
1916:.\Generated_Source\PSoC5/CapSense_CSD.c ****         
1917:.\Generated_Source\PSoC5/CapSense_CSD.c ****         return (prescaler);
 1326              		.loc 1 1917 0
 1327 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1918:.\Generated_Source\PSoC5/CapSense_CSD.c ****     }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 58


 1328              		.loc 1 1918 0
 1329 0012 1846     		mov	r0, r3
 1330 0014 0C37     		adds	r7, r7, #12
 1331              		.cfi_def_cfa_offset 4
 1332 0016 BD46     		mov	sp, r7
 1333              		.cfi_def_cfa_register 13
 1334              		@ sp needed
 1335 0018 5DF8047B 		ldr	r7, [sp], #4
 1336              		.cfi_restore 7
 1337              		.cfi_def_cfa_offset 0
 1338 001c 7047     		bx	lr
 1339              	.L62:
 1340 001e 00BF     		.align	2
 1341              	.L61:
 1342 0020 2B640040 		.word	1073767467
 1343              		.cfi_endproc
 1344              	.LFE16:
 1345              		.size	CapSense_CSD_GetPrescaler, .-CapSense_CSD_GetPrescaler
 1346              		.section	.text.CapSense_CSD_SetScanSpeed,"ax",%progbits
 1347              		.align	2
 1348              		.global	CapSense_CSD_SetScanSpeed
 1349              		.thumb
 1350              		.thumb_func
 1351              		.type	CapSense_CSD_SetScanSpeed, %function
 1352              	CapSense_CSD_SetScanSpeed:
 1353              	.LFB17:
1919:.\Generated_Source\PSoC5/CapSense_CSD.c **** #endif  /* CapSense_CSD_PRESCALER_OPTIONS */
1920:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1921:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1922:.\Generated_Source\PSoC5/CapSense_CSD.c **** /*******************************************************************************
1923:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetScanSpeed
1924:.\Generated_Source\PSoC5/CapSense_CSD.c **** ********************************************************************************
1925:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1926:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Summary:
1927:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  Sets ScanSpeed divider.
1928:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1929:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Parameters:
1930:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  scanspeed:  Sets ScanSpeed divider.
1931:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1932:.\Generated_Source\PSoC5/CapSense_CSD.c **** * Return:
1933:.\Generated_Source\PSoC5/CapSense_CSD.c **** *  None
1934:.\Generated_Source\PSoC5/CapSense_CSD.c **** *
1935:.\Generated_Source\PSoC5/CapSense_CSD.c **** *******************************************************************************/
1936:.\Generated_Source\PSoC5/CapSense_CSD.c **** void CapSense_CSD_SetScanSpeed(uint8 scanSpeed) 
1937:.\Generated_Source\PSoC5/CapSense_CSD.c **** {
 1354              		.loc 1 1937 0
 1355              		.cfi_startproc
 1356              		@ args = 0, pretend = 0, frame = 8
 1357              		@ frame_needed = 1, uses_anonymous_args = 0
 1358              		@ link register save eliminated.
 1359 0000 80B4     		push	{r7}
 1360              		.cfi_def_cfa_offset 4
 1361              		.cfi_offset 7, -4
 1362 0002 83B0     		sub	sp, sp, #12
 1363              		.cfi_def_cfa_offset 16
 1364 0004 00AF     		add	r7, sp, #0
 1365              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 59


 1366 0006 0346     		mov	r3, r0
 1367 0008 FB71     		strb	r3, [r7, #7]
1938:.\Generated_Source\PSoC5/CapSense_CSD.c ****     CapSense_CSD_SCANSPEED_PERIOD_REG = scanSpeed; 
 1368              		.loc 1 1938 0
 1369 000a 044A     		ldr	r2, .L64
 1370 000c FB79     		ldrb	r3, [r7, #7]
 1371 000e 1370     		strb	r3, [r2]
1939:.\Generated_Source\PSoC5/CapSense_CSD.c **** }
 1372              		.loc 1 1939 0
 1373 0010 0C37     		adds	r7, r7, #12
 1374              		.cfi_def_cfa_offset 4
 1375 0012 BD46     		mov	sp, r7
 1376              		.cfi_def_cfa_register 13
 1377              		@ sp needed
 1378 0014 5DF8047B 		ldr	r7, [sp], #4
 1379              		.cfi_restore 7
 1380              		.cfi_def_cfa_offset 0
 1381 0018 7047     		bx	lr
 1382              	.L65:
 1383 001a 00BF     		.align	2
 1384              	.L64:
 1385 001c 8A640040 		.word	1073767562
 1386              		.cfi_endproc
 1387              	.LFE17:
 1388              		.size	CapSense_CSD_SetScanSpeed, .-CapSense_CSD_SetScanSpeed
 1389              		.section	.text.CapSense_CSD_SetAnalogSwitchesSource,"ax",%progbits
 1390              		.align	2
 1391              		.global	CapSense_CSD_SetAnalogSwitchesSource
 1392              		.thumb
 1393              		.thumb_func
 1394              		.type	CapSense_CSD_SetAnalogSwitchesSource, %function
 1395              	CapSense_CSD_SetAnalogSwitchesSource:
 1396              	.LFB18:
1940:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1941:.\Generated_Source\PSoC5/CapSense_CSD.c **** 
1942:.\Generated_Source\PSoC5/CapSense_CSD.c **** #if (CapSense_CSD_PRS_OPTIONS)
1943:.\Generated_Source\PSoC5/CapSense_CSD.c ****     /*******************************************************************************
1944:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetAnalogSwitchesSource
1945:.\Generated_Source\PSoC5/CapSense_CSD.c ****     ********************************************************************************
1946:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1947:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Summary:
1948:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1949:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1950:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  This function is used in auto-tuning procedure.
1951:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1952:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Parameters:
1953:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  src:  analog switches source:
1954:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *           CapSense_CSD_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1955:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *           CapSense_CSD_ANALOG_SWITCHES_SRC_PRS - selects PRS
1956:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1957:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Return:
1958:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  None
1959:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *
1960:.\Generated_Source\PSoC5/CapSense_CSD.c ****     * Reentrant:
1961:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *  No
1962:.\Generated_Source\PSoC5/CapSense_CSD.c ****     *******************************************************************************/
1963:.\Generated_Source\PSoC5/CapSense_CSD.c ****     void CapSense_CSD_SetAnalogSwitchesSource(uint8 src)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 60


1964:.\Generated_Source\PSoC5/CapSense_CSD.c ****                       
1965:.\Generated_Source\PSoC5/CapSense_CSD.c ****     {
 1397              		.loc 1 1965 0
 1398              		.cfi_startproc
 1399              		@ args = 0, pretend = 0, frame = 8
 1400              		@ frame_needed = 1, uses_anonymous_args = 0
 1401              		@ link register save eliminated.
 1402 0000 80B4     		push	{r7}
 1403              		.cfi_def_cfa_offset 4
 1404              		.cfi_offset 7, -4
 1405 0002 83B0     		sub	sp, sp, #12
 1406              		.cfi_def_cfa_offset 16
 1407 0004 00AF     		add	r7, sp, #0
 1408              		.cfi_def_cfa_register 7
 1409 0006 0346     		mov	r3, r0
 1410 0008 FB71     		strb	r3, [r7, #7]
1966:.\Generated_Source\PSoC5/CapSense_CSD.c ****         if(src == CapSense_CSD_ANALOG_SWITCHES_SRC_PRESCALER)
 1411              		.loc 1 1966 0
 1412 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1413 000c 012B     		cmp	r3, #1
 1414 000e 08D1     		bne	.L67
1967:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
1968:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG &= (uint8)~0x10u;
 1415              		.loc 1 1968 0
 1416 0010 0A4A     		ldr	r2, .L69
 1417 0012 0A4B     		ldr	r3, .L69
 1418 0014 1B78     		ldrb	r3, [r3]
 1419 0016 DBB2     		uxtb	r3, r3
 1420 0018 23F01003 		bic	r3, r3, #16
 1421 001c DBB2     		uxtb	r3, r3
 1422 001e 1370     		strb	r3, [r2]
 1423 0020 07E0     		b	.L66
 1424              	.L67:
1969:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
1970:.\Generated_Source\PSoC5/CapSense_CSD.c ****         else
1971:.\Generated_Source\PSoC5/CapSense_CSD.c ****         {
1972:.\Generated_Source\PSoC5/CapSense_CSD.c ****             CapSense_CSD_CONTROL_REG |= 0x10u;
 1425              		.loc 1 1972 0
 1426 0022 064A     		ldr	r2, .L69
 1427 0024 054B     		ldr	r3, .L69
 1428 0026 1B78     		ldrb	r3, [r3]
 1429 0028 DBB2     		uxtb	r3, r3
 1430 002a 43F01003 		orr	r3, r3, #16
 1431 002e DBB2     		uxtb	r3, r3
 1432 0030 1370     		strb	r3, [r2]
 1433              	.L66:
1973:.\Generated_Source\PSoC5/CapSense_CSD.c ****         }
1974:.\Generated_Source\PSoC5/CapSense_CSD.c ****     }
 1434              		.loc 1 1974 0
 1435 0032 0C37     		adds	r7, r7, #12
 1436              		.cfi_def_cfa_offset 4
 1437 0034 BD46     		mov	sp, r7
 1438              		.cfi_def_cfa_register 13
 1439              		@ sp needed
 1440 0036 5DF8047B 		ldr	r7, [sp], #4
 1441              		.cfi_restore 7
 1442              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 61


 1443 003a 7047     		bx	lr
 1444              	.L70:
 1445              		.align	2
 1446              	.L69:
 1447 003c 79640040 		.word	1073767545
 1448              		.cfi_endproc
 1449              	.LFE18:
 1450              		.size	CapSense_CSD_SetAnalogSwitchesSource, .-CapSense_CSD_SetAnalogSwitchesSource
 1451              		.text
 1452              	.Letext0:
 1453              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1454              		.section	.debug_info,"",%progbits
 1455              	.Ldebug_info0:
 1456 0000 2E050000 		.4byte	0x52e
 1457 0004 0400     		.2byte	0x4
 1458 0006 00000000 		.4byte	.Ldebug_abbrev0
 1459 000a 04       		.byte	0x4
 1460 000b 01       		.uleb128 0x1
 1461 000c F3020000 		.4byte	.LASF60
 1462 0010 01       		.byte	0x1
 1463 0011 67040000 		.4byte	.LASF61
 1464 0015 5A020000 		.4byte	.LASF62
 1465 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1466 001d 00000000 		.4byte	0
 1467 0021 00000000 		.4byte	.Ldebug_line0
 1468 0025 02       		.uleb128 0x2
 1469 0026 01       		.byte	0x1
 1470 0027 06       		.byte	0x6
 1471 0028 7D000000 		.4byte	.LASF0
 1472 002c 02       		.uleb128 0x2
 1473 002d 01       		.byte	0x1
 1474 002e 08       		.byte	0x8
 1475 002f B0030000 		.4byte	.LASF1
 1476 0033 02       		.uleb128 0x2
 1477 0034 02       		.byte	0x2
 1478 0035 05       		.byte	0x5
 1479 0036 BE030000 		.4byte	.LASF2
 1480 003a 02       		.uleb128 0x2
 1481 003b 02       		.byte	0x2
 1482 003c 07       		.byte	0x7
 1483 003d B4010000 		.4byte	.LASF3
 1484 0041 02       		.uleb128 0x2
 1485 0042 04       		.byte	0x4
 1486 0043 05       		.byte	0x5
 1487 0044 B4000000 		.4byte	.LASF4
 1488 0048 02       		.uleb128 0x2
 1489 0049 04       		.byte	0x4
 1490 004a 07       		.byte	0x7
 1491 004b 81010000 		.4byte	.LASF5
 1492 004f 02       		.uleb128 0x2
 1493 0050 08       		.byte	0x8
 1494 0051 05       		.byte	0x5
 1495 0052 6F000000 		.4byte	.LASF6
 1496 0056 02       		.uleb128 0x2
 1497 0057 08       		.byte	0x8
 1498 0058 07       		.byte	0x7
 1499 0059 2A000000 		.4byte	.LASF7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 62


 1500 005d 03       		.uleb128 0x3
 1501 005e 04       		.byte	0x4
 1502 005f 05       		.byte	0x5
 1503 0060 696E7400 		.ascii	"int\000"
 1504 0064 02       		.uleb128 0x2
 1505 0065 04       		.byte	0x4
 1506 0066 07       		.byte	0x7
 1507 0067 74010000 		.4byte	.LASF8
 1508 006b 04       		.uleb128 0x4
 1509 006c F2000000 		.4byte	.LASF9
 1510 0070 02       		.byte	0x2
 1511 0071 9201     		.2byte	0x192
 1512 0073 2C000000 		.4byte	0x2c
 1513 0077 04       		.uleb128 0x4
 1514 0078 00000000 		.4byte	.LASF10
 1515 007c 02       		.byte	0x2
 1516 007d 9301     		.2byte	0x193
 1517 007f 3A000000 		.4byte	0x3a
 1518 0083 04       		.uleb128 0x4
 1519 0084 14010000 		.4byte	.LASF11
 1520 0088 02       		.byte	0x2
 1521 0089 9401     		.2byte	0x194
 1522 008b 48000000 		.4byte	0x48
 1523 008f 02       		.uleb128 0x2
 1524 0090 04       		.byte	0x4
 1525 0091 04       		.byte	0x4
 1526 0092 81030000 		.4byte	.LASF12
 1527 0096 02       		.uleb128 0x2
 1528 0097 08       		.byte	0x8
 1529 0098 04       		.byte	0x4
 1530 0099 F8000000 		.4byte	.LASF13
 1531 009d 02       		.uleb128 0x2
 1532 009e 01       		.byte	0x1
 1533 009f 08       		.byte	0x8
 1534 00a0 26040000 		.4byte	.LASF14
 1535 00a4 04       		.uleb128 0x4
 1536 00a5 AB030000 		.4byte	.LASF15
 1537 00a9 02       		.byte	0x2
 1538 00aa 3C02     		.2byte	0x23c
 1539 00ac B0000000 		.4byte	0xb0
 1540 00b0 05       		.uleb128 0x5
 1541 00b1 6B000000 		.4byte	0x6b
 1542 00b5 04       		.uleb128 0x4
 1543 00b6 EC000000 		.4byte	.LASF16
 1544 00ba 02       		.byte	0x2
 1545 00bb 3D02     		.2byte	0x23d
 1546 00bd C1000000 		.4byte	0xc1
 1547 00c1 05       		.uleb128 0x5
 1548 00c2 77000000 		.4byte	0x77
 1549 00c6 04       		.uleb128 0x4
 1550 00c7 31020000 		.4byte	.LASF17
 1551 00cb 02       		.byte	0x2
 1552 00cc 3E02     		.2byte	0x23e
 1553 00ce D2000000 		.4byte	0xd2
 1554 00d2 05       		.uleb128 0x5
 1555 00d3 83000000 		.4byte	0x83
 1556 00d7 02       		.uleb128 0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 63


 1557 00d8 04       		.byte	0x4
 1558 00d9 07       		.byte	0x7
 1559 00da 51020000 		.4byte	.LASF18
 1560 00de 06       		.uleb128 0x6
 1561 00df A2000000 		.4byte	.LASF19
 1562 00e3 01       		.byte	0x1
 1563 00e4 79       		.byte	0x79
 1564 00e5 00000000 		.4byte	.LFB0
 1565 00e9 48010000 		.4byte	.LFE0-.LFB0
 1566 00ed 01       		.uleb128 0x1
 1567 00ee 9C       		.byte	0x9c
 1568 00ef 02010000 		.4byte	0x102
 1569 00f3 07       		.uleb128 0x7
 1570 00f4 DB040000 		.4byte	.LASF21
 1571 00f8 01       		.byte	0x1
 1572 00f9 80       		.byte	0x80
 1573 00fa 6B000000 		.4byte	0x6b
 1574 00fe 02       		.uleb128 0x2
 1575 00ff 91       		.byte	0x91
 1576 0100 77       		.sleb128 -9
 1577 0101 00       		.byte	0
 1578 0102 08       		.uleb128 0x8
 1579 0103 C7040000 		.4byte	.LASF20
 1580 0107 01       		.byte	0x1
 1581 0108 5A01     		.2byte	0x15a
 1582 010a 00000000 		.4byte	.LFB1
 1583 010e 98000000 		.4byte	.LFE1-.LFB1
 1584 0112 01       		.uleb128 0x1
 1585 0113 9C       		.byte	0x9c
 1586 0114 28010000 		.4byte	0x128
 1587 0118 09       		.uleb128 0x9
 1588 0119 DB040000 		.4byte	.LASF21
 1589 011d 01       		.byte	0x1
 1590 011e 5C01     		.2byte	0x15c
 1591 0120 6B000000 		.4byte	0x6b
 1592 0124 02       		.uleb128 0x2
 1593 0125 91       		.byte	0x91
 1594 0126 77       		.sleb128 -9
 1595 0127 00       		.byte	0
 1596 0128 0A       		.uleb128 0xa
 1597 0129 B1020000 		.4byte	.LASF22
 1598 012d 01       		.byte	0x1
 1599 012e F301     		.2byte	0x1f3
 1600 0130 00000000 		.4byte	.LFB2
 1601 0134 20000000 		.4byte	.LFE2-.LFB2
 1602 0138 01       		.uleb128 0x1
 1603 0139 9C       		.byte	0x9c
 1604 013a 0A       		.uleb128 0xa
 1605 013b 14040000 		.4byte	.LASF23
 1606 013f 01       		.byte	0x1
 1607 0140 1802     		.2byte	0x218
 1608 0142 00000000 		.4byte	.LFB3
 1609 0146 94000000 		.4byte	.LFE3-.LFB3
 1610 014a 01       		.uleb128 0x1
 1611 014b 9C       		.byte	0x9c
 1612 014c 0B       		.uleb128 0xb
 1613 014d EC040000 		.4byte	.LASF32
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 64


 1614 0151 01       		.byte	0x1
 1615 0152 A202     		.2byte	0x2a2
 1616 0154 6B000000 		.4byte	0x6b
 1617 0158 00000000 		.4byte	.LFB4
 1618 015c 50000000 		.4byte	.LFE4-.LFB4
 1619 0160 01       		.uleb128 0x1
 1620 0161 9C       		.byte	0x9c
 1621 0162 94010000 		.4byte	0x194
 1622 0166 0C       		.uleb128 0xc
 1623 0167 07000000 		.4byte	.LASF26
 1624 016b 01       		.byte	0x1
 1625 016c A202     		.2byte	0x2a2
 1626 016e 6B000000 		.4byte	0x6b
 1627 0172 02       		.uleb128 0x2
 1628 0173 91       		.byte	0x91
 1629 0174 6F       		.sleb128 -17
 1630 0175 0D       		.uleb128 0xd
 1631 0176 706F7300 		.ascii	"pos\000"
 1632 017a 01       		.byte	0x1
 1633 017b A402     		.2byte	0x2a4
 1634 017d 6B000000 		.4byte	0x6b
 1635 0181 02       		.uleb128 0x2
 1636 0182 91       		.byte	0x91
 1637 0183 77       		.sleb128 -9
 1638 0184 09       		.uleb128 0x9
 1639 0185 CE020000 		.4byte	.LASF24
 1640 0189 01       		.byte	0x1
 1641 018a A502     		.2byte	0x2a5
 1642 018c 6B000000 		.4byte	0x6b
 1643 0190 02       		.uleb128 0x2
 1644 0191 91       		.byte	0x91
 1645 0192 76       		.sleb128 -10
 1646 0193 00       		.byte	0
 1647 0194 08       		.uleb128 0x8
 1648 0195 2B040000 		.4byte	.LASF25
 1649 0199 01       		.byte	0x1
 1650 019a 3C03     		.2byte	0x33c
 1651 019c 00000000 		.4byte	.LFB5
 1652 01a0 50000000 		.4byte	.LFE5-.LFB5
 1653 01a4 01       		.uleb128 0x1
 1654 01a5 9C       		.byte	0x9c
 1655 01a6 C9010000 		.4byte	0x1c9
 1656 01aa 0C       		.uleb128 0xc
 1657 01ab FF010000 		.4byte	.LASF27
 1658 01af 01       		.byte	0x1
 1659 01b0 3C03     		.2byte	0x33c
 1660 01b2 6B000000 		.4byte	0x6b
 1661 01b6 02       		.uleb128 0x2
 1662 01b7 91       		.byte	0x91
 1663 01b8 6F       		.sleb128 -17
 1664 01b9 09       		.uleb128 0x9
 1665 01ba C8030000 		.4byte	.LASF28
 1666 01be 01       		.byte	0x1
 1667 01bf 3E03     		.2byte	0x33e
 1668 01c1 6B000000 		.4byte	0x6b
 1669 01c5 02       		.uleb128 0x2
 1670 01c6 91       		.byte	0x91
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 65


 1671 01c7 77       		.sleb128 -9
 1672 01c8 00       		.byte	0
 1673 01c9 08       		.uleb128 0x8
 1674 01ca 19020000 		.4byte	.LASF29
 1675 01ce 01       		.byte	0x1
 1676 01cf AC03     		.2byte	0x3ac
 1677 01d1 00000000 		.4byte	.LFB6
 1678 01d5 34000000 		.4byte	.LFE6-.LFB6
 1679 01d9 01       		.uleb128 0x1
 1680 01da 9C       		.byte	0x9c
 1681 01db EF010000 		.4byte	0x1ef
 1682 01df 0C       		.uleb128 0xc
 1683 01e0 C7010000 		.4byte	.LASF30
 1684 01e4 01       		.byte	0x1
 1685 01e5 AC03     		.2byte	0x3ac
 1686 01e7 6B000000 		.4byte	0x6b
 1687 01eb 02       		.uleb128 0x2
 1688 01ec 91       		.byte	0x91
 1689 01ed 77       		.sleb128 -9
 1690 01ee 00       		.byte	0
 1691 01ef 0A       		.uleb128 0xa
 1692 01f0 1B010000 		.4byte	.LASF31
 1693 01f4 01       		.byte	0x1
 1694 01f5 F903     		.2byte	0x3f9
 1695 01f7 00000000 		.4byte	.LFB7
 1696 01fb 54000000 		.4byte	.LFE7-.LFB7
 1697 01ff 01       		.uleb128 0x1
 1698 0200 9C       		.byte	0x9c
 1699 0201 0E       		.uleb128 0xe
 1700 0202 CF030000 		.4byte	.LASF63
 1701 0206 01       		.byte	0x1
 1702 0207 2E04     		.2byte	0x42e
 1703 0209 6B000000 		.4byte	0x6b
 1704 020d 00000000 		.4byte	.LFB8
 1705 0211 20000000 		.4byte	.LFE8-.LFB8
 1706 0215 01       		.uleb128 0x1
 1707 0216 9C       		.byte	0x9c
 1708 0217 0B       		.uleb128 0xb
 1709 0218 4C040000 		.4byte	.LASF33
 1710 021c 01       		.byte	0x1
 1711 021d 4704     		.2byte	0x447
 1712 021f 77000000 		.4byte	0x77
 1713 0223 00000000 		.4byte	.LFB9
 1714 0227 24000000 		.4byte	.LFE9-.LFB9
 1715 022b 01       		.uleb128 0x1
 1716 022c 9C       		.byte	0x9c
 1717 022d 41020000 		.4byte	0x241
 1718 0231 0C       		.uleb128 0xc
 1719 0232 C7010000 		.4byte	.LASF30
 1720 0236 01       		.byte	0x1
 1721 0237 4704     		.2byte	0x447
 1722 0239 6B000000 		.4byte	0x6b
 1723 023d 02       		.uleb128 0x2
 1724 023e 91       		.byte	0x91
 1725 023f 77       		.sleb128 -9
 1726 0240 00       		.byte	0
 1727 0241 08       		.uleb128 0x8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 66


 1728 0242 40010000 		.4byte	.LASF34
 1729 0246 01       		.byte	0x1
 1730 0247 5C04     		.2byte	0x45c
 1731 0249 00000000 		.4byte	.LFB10
 1732 024d 26000000 		.4byte	.LFE10-.LFB10
 1733 0251 01       		.uleb128 0x1
 1734 0252 9C       		.byte	0x9c
 1735 0253 65020000 		.4byte	0x265
 1736 0257 0D       		.uleb128 0xd
 1737 0258 6900     		.ascii	"i\000"
 1738 025a 01       		.byte	0x1
 1739 025b 5E04     		.2byte	0x45e
 1740 025d 6B000000 		.4byte	0x6b
 1741 0261 02       		.uleb128 0x2
 1742 0262 91       		.byte	0x91
 1743 0263 77       		.sleb128 -9
 1744 0264 00       		.byte	0
 1745 0265 08       		.uleb128 0x8
 1746 0266 37020000 		.4byte	.LASF35
 1747 026a 01       		.byte	0x1
 1748 026b F204     		.2byte	0x4f2
 1749 026d 00000000 		.4byte	.LFB11
 1750 0271 68000000 		.4byte	.LFE11-.LFB11
 1751 0275 01       		.uleb128 0x1
 1752 0276 9C       		.byte	0x9c
 1753 0277 A9020000 		.4byte	0x2a9
 1754 027b 0C       		.uleb128 0xc
 1755 027c C7010000 		.4byte	.LASF30
 1756 0280 01       		.byte	0x1
 1757 0281 F204     		.2byte	0x4f2
 1758 0283 6B000000 		.4byte	0x6b
 1759 0287 02       		.uleb128 0x2
 1760 0288 91       		.byte	0x91
 1761 0289 6F       		.sleb128 -17
 1762 028a 09       		.uleb128 0x9
 1763 028b 5A010000 		.4byte	.LASF36
 1764 028f 01       		.byte	0x1
 1765 0290 F404     		.2byte	0x4f4
 1766 0292 6B000000 		.4byte	0x6b
 1767 0296 02       		.uleb128 0x2
 1768 0297 91       		.byte	0x91
 1769 0298 77       		.sleb128 -9
 1770 0299 09       		.uleb128 0x9
 1771 029a 3B010000 		.4byte	.LASF37
 1772 029e 01       		.byte	0x1
 1773 029f F504     		.2byte	0x4f5
 1774 02a1 6B000000 		.4byte	0x6b
 1775 02a5 02       		.uleb128 0x2
 1776 02a6 91       		.byte	0x91
 1777 02a7 76       		.sleb128 -10
 1778 02a8 00       		.byte	0
 1779 02a9 08       		.uleb128 0x8
 1780 02aa CE010000 		.4byte	.LASF38
 1781 02ae 01       		.byte	0x1
 1782 02af 4705     		.2byte	0x547
 1783 02b1 00000000 		.4byte	.LFB12
 1784 02b5 6C000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 67


 1785 02b9 01       		.uleb128 0x1
 1786 02ba 9C       		.byte	0x9c
 1787 02bb ED020000 		.4byte	0x2ed
 1788 02bf 0C       		.uleb128 0xc
 1789 02c0 C7010000 		.4byte	.LASF30
 1790 02c4 01       		.byte	0x1
 1791 02c5 4705     		.2byte	0x547
 1792 02c7 6B000000 		.4byte	0x6b
 1793 02cb 02       		.uleb128 0x2
 1794 02cc 91       		.byte	0x91
 1795 02cd 6F       		.sleb128 -17
 1796 02ce 09       		.uleb128 0x9
 1797 02cf 5A010000 		.4byte	.LASF36
 1798 02d3 01       		.byte	0x1
 1799 02d4 4905     		.2byte	0x549
 1800 02d6 6B000000 		.4byte	0x6b
 1801 02da 02       		.uleb128 0x2
 1802 02db 91       		.byte	0x91
 1803 02dc 77       		.sleb128 -9
 1804 02dd 09       		.uleb128 0x9
 1805 02de 3B010000 		.4byte	.LASF37
 1806 02e2 01       		.byte	0x1
 1807 02e3 4A05     		.2byte	0x54a
 1808 02e5 6B000000 		.4byte	0x6b
 1809 02e9 02       		.uleb128 0x2
 1810 02ea 91       		.byte	0x91
 1811 02eb 76       		.sleb128 -10
 1812 02ec 00       		.byte	0
 1813 02ed 08       		.uleb128 0x8
 1814 02ee 5F010000 		.4byte	.LASF39
 1815 02f2 01       		.byte	0x1
 1816 02f3 9B05     		.2byte	0x59b
 1817 02f5 00000000 		.4byte	.LFB13
 1818 02f9 58000000 		.4byte	.LFE13-.LFB13
 1819 02fd 01       		.uleb128 0x1
 1820 02fe 9C       		.byte	0x9c
 1821 02ff 13030000 		.4byte	0x313
 1822 0303 0C       		.uleb128 0xc
 1823 0304 C7010000 		.4byte	.LASF30
 1824 0308 01       		.byte	0x1
 1825 0309 9B05     		.2byte	0x59b
 1826 030b 6B000000 		.4byte	0x6b
 1827 030f 02       		.uleb128 0x2
 1828 0310 91       		.byte	0x91
 1829 0311 77       		.sleb128 -9
 1830 0312 00       		.byte	0
 1831 0313 08       		.uleb128 0x8
 1832 0314 E9010000 		.4byte	.LASF40
 1833 0318 01       		.byte	0x1
 1834 0319 4306     		.2byte	0x643
 1835 031b 00000000 		.4byte	.LFB14
 1836 031f 98000000 		.4byte	.LFE14-.LFB14
 1837 0323 01       		.uleb128 0x1
 1838 0324 9C       		.byte	0x9c
 1839 0325 39030000 		.4byte	0x339
 1840 0329 0C       		.uleb128 0xc
 1841 032a C7010000 		.4byte	.LASF30
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 68


 1842 032e 01       		.byte	0x1
 1843 032f 4306     		.2byte	0x643
 1844 0331 6B000000 		.4byte	0x6b
 1845 0335 02       		.uleb128 0x2
 1846 0336 91       		.byte	0x91
 1847 0337 77       		.sleb128 -9
 1848 0338 00       		.byte	0
 1849 0339 0F       		.uleb128 0xf
 1850 033a 10000000 		.4byte	.LASF41
 1851 033e 01       		.byte	0x1
 1852 033f 5107     		.2byte	0x751
 1853 0341 00000000 		.4byte	.LFB15
 1854 0345 2C000000 		.4byte	.LFE15-.LFB15
 1855 0349 01       		.uleb128 0x1
 1856 034a 9C       		.byte	0x9c
 1857 034b 5F030000 		.4byte	0x35f
 1858 034f 0C       		.uleb128 0xc
 1859 0350 87030000 		.4byte	.LASF42
 1860 0354 01       		.byte	0x1
 1861 0355 5107     		.2byte	0x751
 1862 0357 6B000000 		.4byte	0x6b
 1863 035b 02       		.uleb128 0x2
 1864 035c 91       		.byte	0x91
 1865 035d 77       		.sleb128 -9
 1866 035e 00       		.byte	0
 1867 035f 0B       		.uleb128 0xb
 1868 0360 91030000 		.4byte	.LASF43
 1869 0364 01       		.byte	0x1
 1870 0365 6E07     		.2byte	0x76e
 1871 0367 6B000000 		.4byte	0x6b
 1872 036b 00000000 		.4byte	.LFB16
 1873 036f 24000000 		.4byte	.LFE16-.LFB16
 1874 0373 01       		.uleb128 0x1
 1875 0374 9C       		.byte	0x9c
 1876 0375 89030000 		.4byte	0x389
 1877 0379 09       		.uleb128 0x9
 1878 037a 87030000 		.4byte	.LASF42
 1879 037e 01       		.byte	0x1
 1880 037f 7007     		.2byte	0x770
 1881 0381 6B000000 		.4byte	0x6b
 1882 0385 02       		.uleb128 0x2
 1883 0386 91       		.byte	0x91
 1884 0387 77       		.sleb128 -9
 1885 0388 00       		.byte	0
 1886 0389 0F       		.uleb128 0xf
 1887 038a FA030000 		.4byte	.LASF44
 1888 038e 01       		.byte	0x1
 1889 038f 9007     		.2byte	0x790
 1890 0391 00000000 		.4byte	.LFB17
 1891 0395 20000000 		.4byte	.LFE17-.LFB17
 1892 0399 01       		.uleb128 0x1
 1893 039a 9C       		.byte	0x9c
 1894 039b AF030000 		.4byte	0x3af
 1895 039f 0C       		.uleb128 0xc
 1896 03a0 C4020000 		.4byte	.LASF45
 1897 03a4 01       		.byte	0x1
 1898 03a5 9007     		.2byte	0x790
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 69


 1899 03a7 6B000000 		.4byte	0x6b
 1900 03ab 02       		.uleb128 0x2
 1901 03ac 91       		.byte	0x91
 1902 03ad 77       		.sleb128 -9
 1903 03ae 00       		.byte	0
 1904 03af 0F       		.uleb128 0xf
 1905 03b0 08050000 		.4byte	.LASF46
 1906 03b4 01       		.byte	0x1
 1907 03b5 AB07     		.2byte	0x7ab
 1908 03b7 00000000 		.4byte	.LFB18
 1909 03bb 40000000 		.4byte	.LFE18-.LFB18
 1910 03bf 01       		.uleb128 0x1
 1911 03c0 9C       		.byte	0x9c
 1912 03c1 D5030000 		.4byte	0x3d5
 1913 03c5 10       		.uleb128 0x10
 1914 03c6 73726300 		.ascii	"src\000"
 1915 03ca 01       		.byte	0x1
 1916 03cb AB07     		.2byte	0x7ab
 1917 03cd 6B000000 		.4byte	0x6b
 1918 03d1 02       		.uleb128 0x2
 1919 03d2 91       		.byte	0x91
 1920 03d3 77       		.sleb128 -9
 1921 03d4 00       		.byte	0
 1922 03d5 07       		.uleb128 0x7
 1923 03d6 FF000000 		.4byte	.LASF47
 1924 03da 01       		.byte	0x1
 1925 03db 16       		.byte	0x16
 1926 03dc 6B000000 		.4byte	0x6b
 1927 03e0 05       		.uleb128 0x5
 1928 03e1 03       		.byte	0x3
 1929 03e2 00000000 		.4byte	CapSense_CSD_initVar
 1930 03e6 11       		.uleb128 0x11
 1931 03e7 2D050000 		.4byte	.LASF48
 1932 03eb 01       		.byte	0x1
 1933 03ec 19       		.byte	0x19
 1934 03ed B0000000 		.4byte	0xb0
 1935 03f1 05       		.uleb128 0x5
 1936 03f2 03       		.byte	0x3
 1937 03f3 00000000 		.4byte	CapSense_CSD_csv
 1938 03f7 11       		.uleb128 0x11
 1939 03f8 89000000 		.4byte	.LASF49
 1940 03fc 01       		.byte	0x1
 1941 03fd 1A       		.byte	0x1a
 1942 03fe B0000000 		.4byte	0xb0
 1943 0402 05       		.uleb128 0x5
 1944 0403 03       		.byte	0x3
 1945 0404 00000000 		.4byte	CapSense_CSD_sensorIndex
 1946 0408 12       		.uleb128 0x12
 1947 0409 77000000 		.4byte	0x77
 1948 040d 18040000 		.4byte	0x418
 1949 0411 13       		.uleb128 0x13
 1950 0412 D7000000 		.4byte	0xd7
 1951 0416 06       		.byte	0x6
 1952 0417 00       		.byte	0
 1953 0418 11       		.uleb128 0x11
 1954 0419 E3030000 		.4byte	.LASF50
 1955 041d 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 70


 1956 041e 29       		.byte	0x29
 1957 041f 08040000 		.4byte	0x408
 1958 0423 05       		.uleb128 0x5
 1959 0424 03       		.byte	0x3
 1960 0425 00000000 		.4byte	CapSense_CSD_sensorRaw
 1961 0429 12       		.uleb128 0x12
 1962 042a 6B000000 		.4byte	0x6b
 1963 042e 39040000 		.4byte	0x439
 1964 0432 13       		.uleb128 0x13
 1965 0433 D7000000 		.4byte	0xd7
 1966 0437 00       		.byte	0
 1967 0438 00       		.byte	0
 1968 0439 11       		.uleb128 0x11
 1969 043a D5020000 		.4byte	.LASF51
 1970 043e 01       		.byte	0x1
 1971 043f 2B       		.byte	0x2b
 1972 0440 29040000 		.4byte	0x429
 1973 0444 05       		.uleb128 0x5
 1974 0445 03       		.byte	0x3
 1975 0446 00000000 		.4byte	CapSense_CSD_sensorEnableMask
 1976 044a 12       		.uleb128 0x12
 1977 044b 5A040000 		.4byte	0x45a
 1978 044f 5A040000 		.4byte	0x45a
 1979 0453 13       		.uleb128 0x13
 1980 0454 D7000000 		.4byte	0xd7
 1981 0458 06       		.byte	0x6
 1982 0459 00       		.byte	0
 1983 045a 14       		.uleb128 0x14
 1984 045b 04       		.byte	0x4
 1985 045c 6B000000 		.4byte	0x6b
 1986 0460 11       		.uleb128 0x11
 1987 0461 04020000 		.4byte	.LASF52
 1988 0465 01       		.byte	0x1
 1989 0466 2E       		.byte	0x2e
 1990 0467 71040000 		.4byte	0x471
 1991 046b 05       		.uleb128 0x5
 1992 046c 03       		.byte	0x3
 1993 046d 00000000 		.4byte	CapSense_CSD_pcTable
 1994 0471 15       		.uleb128 0x15
 1995 0472 4A040000 		.4byte	0x44a
 1996 0476 12       		.uleb128 0x12
 1997 0477 6B000000 		.4byte	0x6b
 1998 047b 86040000 		.4byte	0x486
 1999 047f 13       		.uleb128 0x13
 2000 0480 D7000000 		.4byte	0xd7
 2001 0484 06       		.byte	0x6
 2002 0485 00       		.byte	0
 2003 0486 11       		.uleb128 0x11
 2004 0487 58000000 		.4byte	.LASF53
 2005 048b 01       		.byte	0x1
 2006 048c 38       		.byte	0x38
 2007 048d 97040000 		.4byte	0x497
 2008 0491 05       		.uleb128 0x5
 2009 0492 03       		.byte	0x3
 2010 0493 00000000 		.4byte	CapSense_CSD_portTable
 2011 0497 15       		.uleb128 0x15
 2012 0498 76040000 		.4byte	0x476
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 71


 2013 049c 11       		.uleb128 0x11
 2014 049d 41000000 		.4byte	.LASF54
 2015 04a1 01       		.byte	0x1
 2016 04a2 42       		.byte	0x42
 2017 04a3 AD040000 		.4byte	0x4ad
 2018 04a7 05       		.uleb128 0x5
 2019 04a8 03       		.byte	0x3
 2020 04a9 00000000 		.4byte	CapSense_CSD_maskTable
 2021 04ad 15       		.uleb128 0x15
 2022 04ae 76040000 		.4byte	0x476
 2023 04b2 12       		.uleb128 0x12
 2024 04b3 5A040000 		.4byte	0x45a
 2025 04b7 C2040000 		.4byte	0x4c2
 2026 04bb 13       		.uleb128 0x13
 2027 04bc D7000000 		.4byte	0xd7
 2028 04c0 07       		.byte	0x7
 2029 04c1 00       		.byte	0
 2030 04c2 11       		.uleb128 0x11
 2031 04c3 D7000000 		.4byte	.LASF55
 2032 04c7 01       		.byte	0x1
 2033 04c8 4C       		.byte	0x4c
 2034 04c9 D3040000 		.4byte	0x4d3
 2035 04cd 05       		.uleb128 0x5
 2036 04ce 03       		.byte	0x3
 2037 04cf 00000000 		.4byte	CapSense_CSD_csTable
 2038 04d3 15       		.uleb128 0x15
 2039 04d4 B2040000 		.4byte	0x4b2
 2040 04d8 11       		.uleb128 0x11
 2041 04d9 AD040000 		.4byte	.LASF56
 2042 04dd 01       		.byte	0x1
 2043 04de 52       		.byte	0x52
 2044 04df 76040000 		.4byte	0x476
 2045 04e3 05       		.uleb128 0x5
 2046 04e4 03       		.byte	0x3
 2047 04e5 00000000 		.4byte	CapSense_CSD_idacSettings
 2048 04e9 12       		.uleb128 0x12
 2049 04ea 6B000000 		.4byte	0x6b
 2050 04ee F9040000 		.4byte	0x4f9
 2051 04f2 13       		.uleb128 0x13
 2052 04f3 D7000000 		.4byte	0xd7
 2053 04f7 02       		.byte	0x2
 2054 04f8 00       		.byte	0
 2055 04f9 11       		.uleb128 0x11
 2056 04fa 8F040000 		.4byte	.LASF57
 2057 04fe 01       		.byte	0x1
 2058 04ff 56       		.byte	0x56
 2059 0500 E9040000 		.4byte	0x4e9
 2060 0504 05       		.uleb128 0x5
 2061 0505 03       		.byte	0x3
 2062 0506 00000000 		.4byte	CapSense_CSD_widgetResolution
 2063 050a 11       		.uleb128 0x11
 2064 050b 93010000 		.4byte	.LASF58
 2065 050f 01       		.byte	0x1
 2066 0510 5C       		.byte	0x5c
 2067 0511 76040000 		.4byte	0x476
 2068 0515 05       		.uleb128 0x5
 2069 0516 03       		.byte	0x3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 72


 2070 0517 00000000 		.4byte	CapSense_CSD_analogSwitchDivider
 2071 051b 11       		.uleb128 0x11
 2072 051c BD000000 		.4byte	.LASF59
 2073 0520 01       		.byte	0x1
 2074 0521 60       		.byte	0x60
 2075 0522 2C050000 		.4byte	0x52c
 2076 0526 05       		.uleb128 0x5
 2077 0527 03       		.byte	0x3
 2078 0528 00000000 		.4byte	CapSense_CSD_widgetNumber
 2079 052c 15       		.uleb128 0x15
 2080 052d 76040000 		.4byte	0x476
 2081 0531 00       		.byte	0
 2082              		.section	.debug_abbrev,"",%progbits
 2083              	.Ldebug_abbrev0:
 2084 0000 01       		.uleb128 0x1
 2085 0001 11       		.uleb128 0x11
 2086 0002 01       		.byte	0x1
 2087 0003 25       		.uleb128 0x25
 2088 0004 0E       		.uleb128 0xe
 2089 0005 13       		.uleb128 0x13
 2090 0006 0B       		.uleb128 0xb
 2091 0007 03       		.uleb128 0x3
 2092 0008 0E       		.uleb128 0xe
 2093 0009 1B       		.uleb128 0x1b
 2094 000a 0E       		.uleb128 0xe
 2095 000b 55       		.uleb128 0x55
 2096 000c 17       		.uleb128 0x17
 2097 000d 11       		.uleb128 0x11
 2098 000e 01       		.uleb128 0x1
 2099 000f 10       		.uleb128 0x10
 2100 0010 17       		.uleb128 0x17
 2101 0011 00       		.byte	0
 2102 0012 00       		.byte	0
 2103 0013 02       		.uleb128 0x2
 2104 0014 24       		.uleb128 0x24
 2105 0015 00       		.byte	0
 2106 0016 0B       		.uleb128 0xb
 2107 0017 0B       		.uleb128 0xb
 2108 0018 3E       		.uleb128 0x3e
 2109 0019 0B       		.uleb128 0xb
 2110 001a 03       		.uleb128 0x3
 2111 001b 0E       		.uleb128 0xe
 2112 001c 00       		.byte	0
 2113 001d 00       		.byte	0
 2114 001e 03       		.uleb128 0x3
 2115 001f 24       		.uleb128 0x24
 2116 0020 00       		.byte	0
 2117 0021 0B       		.uleb128 0xb
 2118 0022 0B       		.uleb128 0xb
 2119 0023 3E       		.uleb128 0x3e
 2120 0024 0B       		.uleb128 0xb
 2121 0025 03       		.uleb128 0x3
 2122 0026 08       		.uleb128 0x8
 2123 0027 00       		.byte	0
 2124 0028 00       		.byte	0
 2125 0029 04       		.uleb128 0x4
 2126 002a 16       		.uleb128 0x16
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 73


 2127 002b 00       		.byte	0
 2128 002c 03       		.uleb128 0x3
 2129 002d 0E       		.uleb128 0xe
 2130 002e 3A       		.uleb128 0x3a
 2131 002f 0B       		.uleb128 0xb
 2132 0030 3B       		.uleb128 0x3b
 2133 0031 05       		.uleb128 0x5
 2134 0032 49       		.uleb128 0x49
 2135 0033 13       		.uleb128 0x13
 2136 0034 00       		.byte	0
 2137 0035 00       		.byte	0
 2138 0036 05       		.uleb128 0x5
 2139 0037 35       		.uleb128 0x35
 2140 0038 00       		.byte	0
 2141 0039 49       		.uleb128 0x49
 2142 003a 13       		.uleb128 0x13
 2143 003b 00       		.byte	0
 2144 003c 00       		.byte	0
 2145 003d 06       		.uleb128 0x6
 2146 003e 2E       		.uleb128 0x2e
 2147 003f 01       		.byte	0x1
 2148 0040 3F       		.uleb128 0x3f
 2149 0041 19       		.uleb128 0x19
 2150 0042 03       		.uleb128 0x3
 2151 0043 0E       		.uleb128 0xe
 2152 0044 3A       		.uleb128 0x3a
 2153 0045 0B       		.uleb128 0xb
 2154 0046 3B       		.uleb128 0x3b
 2155 0047 0B       		.uleb128 0xb
 2156 0048 27       		.uleb128 0x27
 2157 0049 19       		.uleb128 0x19
 2158 004a 11       		.uleb128 0x11
 2159 004b 01       		.uleb128 0x1
 2160 004c 12       		.uleb128 0x12
 2161 004d 06       		.uleb128 0x6
 2162 004e 40       		.uleb128 0x40
 2163 004f 18       		.uleb128 0x18
 2164 0050 9642     		.uleb128 0x2116
 2165 0052 19       		.uleb128 0x19
 2166 0053 01       		.uleb128 0x1
 2167 0054 13       		.uleb128 0x13
 2168 0055 00       		.byte	0
 2169 0056 00       		.byte	0
 2170 0057 07       		.uleb128 0x7
 2171 0058 34       		.uleb128 0x34
 2172 0059 00       		.byte	0
 2173 005a 03       		.uleb128 0x3
 2174 005b 0E       		.uleb128 0xe
 2175 005c 3A       		.uleb128 0x3a
 2176 005d 0B       		.uleb128 0xb
 2177 005e 3B       		.uleb128 0x3b
 2178 005f 0B       		.uleb128 0xb
 2179 0060 49       		.uleb128 0x49
 2180 0061 13       		.uleb128 0x13
 2181 0062 02       		.uleb128 0x2
 2182 0063 18       		.uleb128 0x18
 2183 0064 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 74


 2184 0065 00       		.byte	0
 2185 0066 08       		.uleb128 0x8
 2186 0067 2E       		.uleb128 0x2e
 2187 0068 01       		.byte	0x1
 2188 0069 3F       		.uleb128 0x3f
 2189 006a 19       		.uleb128 0x19
 2190 006b 03       		.uleb128 0x3
 2191 006c 0E       		.uleb128 0xe
 2192 006d 3A       		.uleb128 0x3a
 2193 006e 0B       		.uleb128 0xb
 2194 006f 3B       		.uleb128 0x3b
 2195 0070 05       		.uleb128 0x5
 2196 0071 27       		.uleb128 0x27
 2197 0072 19       		.uleb128 0x19
 2198 0073 11       		.uleb128 0x11
 2199 0074 01       		.uleb128 0x1
 2200 0075 12       		.uleb128 0x12
 2201 0076 06       		.uleb128 0x6
 2202 0077 40       		.uleb128 0x40
 2203 0078 18       		.uleb128 0x18
 2204 0079 9642     		.uleb128 0x2116
 2205 007b 19       		.uleb128 0x19
 2206 007c 01       		.uleb128 0x1
 2207 007d 13       		.uleb128 0x13
 2208 007e 00       		.byte	0
 2209 007f 00       		.byte	0
 2210 0080 09       		.uleb128 0x9
 2211 0081 34       		.uleb128 0x34
 2212 0082 00       		.byte	0
 2213 0083 03       		.uleb128 0x3
 2214 0084 0E       		.uleb128 0xe
 2215 0085 3A       		.uleb128 0x3a
 2216 0086 0B       		.uleb128 0xb
 2217 0087 3B       		.uleb128 0x3b
 2218 0088 05       		.uleb128 0x5
 2219 0089 49       		.uleb128 0x49
 2220 008a 13       		.uleb128 0x13
 2221 008b 02       		.uleb128 0x2
 2222 008c 18       		.uleb128 0x18
 2223 008d 00       		.byte	0
 2224 008e 00       		.byte	0
 2225 008f 0A       		.uleb128 0xa
 2226 0090 2E       		.uleb128 0x2e
 2227 0091 00       		.byte	0
 2228 0092 3F       		.uleb128 0x3f
 2229 0093 19       		.uleb128 0x19
 2230 0094 03       		.uleb128 0x3
 2231 0095 0E       		.uleb128 0xe
 2232 0096 3A       		.uleb128 0x3a
 2233 0097 0B       		.uleb128 0xb
 2234 0098 3B       		.uleb128 0x3b
 2235 0099 05       		.uleb128 0x5
 2236 009a 27       		.uleb128 0x27
 2237 009b 19       		.uleb128 0x19
 2238 009c 11       		.uleb128 0x11
 2239 009d 01       		.uleb128 0x1
 2240 009e 12       		.uleb128 0x12
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 75


 2241 009f 06       		.uleb128 0x6
 2242 00a0 40       		.uleb128 0x40
 2243 00a1 18       		.uleb128 0x18
 2244 00a2 9642     		.uleb128 0x2116
 2245 00a4 19       		.uleb128 0x19
 2246 00a5 00       		.byte	0
 2247 00a6 00       		.byte	0
 2248 00a7 0B       		.uleb128 0xb
 2249 00a8 2E       		.uleb128 0x2e
 2250 00a9 01       		.byte	0x1
 2251 00aa 3F       		.uleb128 0x3f
 2252 00ab 19       		.uleb128 0x19
 2253 00ac 03       		.uleb128 0x3
 2254 00ad 0E       		.uleb128 0xe
 2255 00ae 3A       		.uleb128 0x3a
 2256 00af 0B       		.uleb128 0xb
 2257 00b0 3B       		.uleb128 0x3b
 2258 00b1 05       		.uleb128 0x5
 2259 00b2 27       		.uleb128 0x27
 2260 00b3 19       		.uleb128 0x19
 2261 00b4 49       		.uleb128 0x49
 2262 00b5 13       		.uleb128 0x13
 2263 00b6 11       		.uleb128 0x11
 2264 00b7 01       		.uleb128 0x1
 2265 00b8 12       		.uleb128 0x12
 2266 00b9 06       		.uleb128 0x6
 2267 00ba 40       		.uleb128 0x40
 2268 00bb 18       		.uleb128 0x18
 2269 00bc 9742     		.uleb128 0x2117
 2270 00be 19       		.uleb128 0x19
 2271 00bf 01       		.uleb128 0x1
 2272 00c0 13       		.uleb128 0x13
 2273 00c1 00       		.byte	0
 2274 00c2 00       		.byte	0
 2275 00c3 0C       		.uleb128 0xc
 2276 00c4 05       		.uleb128 0x5
 2277 00c5 00       		.byte	0
 2278 00c6 03       		.uleb128 0x3
 2279 00c7 0E       		.uleb128 0xe
 2280 00c8 3A       		.uleb128 0x3a
 2281 00c9 0B       		.uleb128 0xb
 2282 00ca 3B       		.uleb128 0x3b
 2283 00cb 05       		.uleb128 0x5
 2284 00cc 49       		.uleb128 0x49
 2285 00cd 13       		.uleb128 0x13
 2286 00ce 02       		.uleb128 0x2
 2287 00cf 18       		.uleb128 0x18
 2288 00d0 00       		.byte	0
 2289 00d1 00       		.byte	0
 2290 00d2 0D       		.uleb128 0xd
 2291 00d3 34       		.uleb128 0x34
 2292 00d4 00       		.byte	0
 2293 00d5 03       		.uleb128 0x3
 2294 00d6 08       		.uleb128 0x8
 2295 00d7 3A       		.uleb128 0x3a
 2296 00d8 0B       		.uleb128 0xb
 2297 00d9 3B       		.uleb128 0x3b
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 76


 2298 00da 05       		.uleb128 0x5
 2299 00db 49       		.uleb128 0x49
 2300 00dc 13       		.uleb128 0x13
 2301 00dd 02       		.uleb128 0x2
 2302 00de 18       		.uleb128 0x18
 2303 00df 00       		.byte	0
 2304 00e0 00       		.byte	0
 2305 00e1 0E       		.uleb128 0xe
 2306 00e2 2E       		.uleb128 0x2e
 2307 00e3 00       		.byte	0
 2308 00e4 3F       		.uleb128 0x3f
 2309 00e5 19       		.uleb128 0x19
 2310 00e6 03       		.uleb128 0x3
 2311 00e7 0E       		.uleb128 0xe
 2312 00e8 3A       		.uleb128 0x3a
 2313 00e9 0B       		.uleb128 0xb
 2314 00ea 3B       		.uleb128 0x3b
 2315 00eb 05       		.uleb128 0x5
 2316 00ec 27       		.uleb128 0x27
 2317 00ed 19       		.uleb128 0x19
 2318 00ee 49       		.uleb128 0x49
 2319 00ef 13       		.uleb128 0x13
 2320 00f0 11       		.uleb128 0x11
 2321 00f1 01       		.uleb128 0x1
 2322 00f2 12       		.uleb128 0x12
 2323 00f3 06       		.uleb128 0x6
 2324 00f4 40       		.uleb128 0x40
 2325 00f5 18       		.uleb128 0x18
 2326 00f6 9742     		.uleb128 0x2117
 2327 00f8 19       		.uleb128 0x19
 2328 00f9 00       		.byte	0
 2329 00fa 00       		.byte	0
 2330 00fb 0F       		.uleb128 0xf
 2331 00fc 2E       		.uleb128 0x2e
 2332 00fd 01       		.byte	0x1
 2333 00fe 3F       		.uleb128 0x3f
 2334 00ff 19       		.uleb128 0x19
 2335 0100 03       		.uleb128 0x3
 2336 0101 0E       		.uleb128 0xe
 2337 0102 3A       		.uleb128 0x3a
 2338 0103 0B       		.uleb128 0xb
 2339 0104 3B       		.uleb128 0x3b
 2340 0105 05       		.uleb128 0x5
 2341 0106 27       		.uleb128 0x27
 2342 0107 19       		.uleb128 0x19
 2343 0108 11       		.uleb128 0x11
 2344 0109 01       		.uleb128 0x1
 2345 010a 12       		.uleb128 0x12
 2346 010b 06       		.uleb128 0x6
 2347 010c 40       		.uleb128 0x40
 2348 010d 18       		.uleb128 0x18
 2349 010e 9742     		.uleb128 0x2117
 2350 0110 19       		.uleb128 0x19
 2351 0111 01       		.uleb128 0x1
 2352 0112 13       		.uleb128 0x13
 2353 0113 00       		.byte	0
 2354 0114 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 77


 2355 0115 10       		.uleb128 0x10
 2356 0116 05       		.uleb128 0x5
 2357 0117 00       		.byte	0
 2358 0118 03       		.uleb128 0x3
 2359 0119 08       		.uleb128 0x8
 2360 011a 3A       		.uleb128 0x3a
 2361 011b 0B       		.uleb128 0xb
 2362 011c 3B       		.uleb128 0x3b
 2363 011d 05       		.uleb128 0x5
 2364 011e 49       		.uleb128 0x49
 2365 011f 13       		.uleb128 0x13
 2366 0120 02       		.uleb128 0x2
 2367 0121 18       		.uleb128 0x18
 2368 0122 00       		.byte	0
 2369 0123 00       		.byte	0
 2370 0124 11       		.uleb128 0x11
 2371 0125 34       		.uleb128 0x34
 2372 0126 00       		.byte	0
 2373 0127 03       		.uleb128 0x3
 2374 0128 0E       		.uleb128 0xe
 2375 0129 3A       		.uleb128 0x3a
 2376 012a 0B       		.uleb128 0xb
 2377 012b 3B       		.uleb128 0x3b
 2378 012c 0B       		.uleb128 0xb
 2379 012d 49       		.uleb128 0x49
 2380 012e 13       		.uleb128 0x13
 2381 012f 3F       		.uleb128 0x3f
 2382 0130 19       		.uleb128 0x19
 2383 0131 02       		.uleb128 0x2
 2384 0132 18       		.uleb128 0x18
 2385 0133 00       		.byte	0
 2386 0134 00       		.byte	0
 2387 0135 12       		.uleb128 0x12
 2388 0136 01       		.uleb128 0x1
 2389 0137 01       		.byte	0x1
 2390 0138 49       		.uleb128 0x49
 2391 0139 13       		.uleb128 0x13
 2392 013a 01       		.uleb128 0x1
 2393 013b 13       		.uleb128 0x13
 2394 013c 00       		.byte	0
 2395 013d 00       		.byte	0
 2396 013e 13       		.uleb128 0x13
 2397 013f 21       		.uleb128 0x21
 2398 0140 00       		.byte	0
 2399 0141 49       		.uleb128 0x49
 2400 0142 13       		.uleb128 0x13
 2401 0143 2F       		.uleb128 0x2f
 2402 0144 0B       		.uleb128 0xb
 2403 0145 00       		.byte	0
 2404 0146 00       		.byte	0
 2405 0147 14       		.uleb128 0x14
 2406 0148 0F       		.uleb128 0xf
 2407 0149 00       		.byte	0
 2408 014a 0B       		.uleb128 0xb
 2409 014b 0B       		.uleb128 0xb
 2410 014c 49       		.uleb128 0x49
 2411 014d 13       		.uleb128 0x13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 78


 2412 014e 00       		.byte	0
 2413 014f 00       		.byte	0
 2414 0150 15       		.uleb128 0x15
 2415 0151 26       		.uleb128 0x26
 2416 0152 00       		.byte	0
 2417 0153 49       		.uleb128 0x49
 2418 0154 13       		.uleb128 0x13
 2419 0155 00       		.byte	0
 2420 0156 00       		.byte	0
 2421 0157 00       		.byte	0
 2422              		.section	.debug_aranges,"",%progbits
 2423 0000 AC000000 		.4byte	0xac
 2424 0004 0200     		.2byte	0x2
 2425 0006 00000000 		.4byte	.Ldebug_info0
 2426 000a 04       		.byte	0x4
 2427 000b 00       		.byte	0
 2428 000c 0000     		.2byte	0
 2429 000e 0000     		.2byte	0
 2430 0010 00000000 		.4byte	.LFB0
 2431 0014 48010000 		.4byte	.LFE0-.LFB0
 2432 0018 00000000 		.4byte	.LFB1
 2433 001c 98000000 		.4byte	.LFE1-.LFB1
 2434 0020 00000000 		.4byte	.LFB2
 2435 0024 20000000 		.4byte	.LFE2-.LFB2
 2436 0028 00000000 		.4byte	.LFB3
 2437 002c 94000000 		.4byte	.LFE3-.LFB3
 2438 0030 00000000 		.4byte	.LFB4
 2439 0034 50000000 		.4byte	.LFE4-.LFB4
 2440 0038 00000000 		.4byte	.LFB5
 2441 003c 50000000 		.4byte	.LFE5-.LFB5
 2442 0040 00000000 		.4byte	.LFB6
 2443 0044 34000000 		.4byte	.LFE6-.LFB6
 2444 0048 00000000 		.4byte	.LFB7
 2445 004c 54000000 		.4byte	.LFE7-.LFB7
 2446 0050 00000000 		.4byte	.LFB8
 2447 0054 20000000 		.4byte	.LFE8-.LFB8
 2448 0058 00000000 		.4byte	.LFB9
 2449 005c 24000000 		.4byte	.LFE9-.LFB9
 2450 0060 00000000 		.4byte	.LFB10
 2451 0064 26000000 		.4byte	.LFE10-.LFB10
 2452 0068 00000000 		.4byte	.LFB11
 2453 006c 68000000 		.4byte	.LFE11-.LFB11
 2454 0070 00000000 		.4byte	.LFB12
 2455 0074 6C000000 		.4byte	.LFE12-.LFB12
 2456 0078 00000000 		.4byte	.LFB13
 2457 007c 58000000 		.4byte	.LFE13-.LFB13
 2458 0080 00000000 		.4byte	.LFB14
 2459 0084 98000000 		.4byte	.LFE14-.LFB14
 2460 0088 00000000 		.4byte	.LFB15
 2461 008c 2C000000 		.4byte	.LFE15-.LFB15
 2462 0090 00000000 		.4byte	.LFB16
 2463 0094 24000000 		.4byte	.LFE16-.LFB16
 2464 0098 00000000 		.4byte	.LFB17
 2465 009c 20000000 		.4byte	.LFE17-.LFB17
 2466 00a0 00000000 		.4byte	.LFB18
 2467 00a4 40000000 		.4byte	.LFE18-.LFB18
 2468 00a8 00000000 		.4byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 79


 2469 00ac 00000000 		.4byte	0
 2470              		.section	.debug_ranges,"",%progbits
 2471              	.Ldebug_ranges0:
 2472 0000 00000000 		.4byte	.LFB0
 2473 0004 48010000 		.4byte	.LFE0
 2474 0008 00000000 		.4byte	.LFB1
 2475 000c 98000000 		.4byte	.LFE1
 2476 0010 00000000 		.4byte	.LFB2
 2477 0014 20000000 		.4byte	.LFE2
 2478 0018 00000000 		.4byte	.LFB3
 2479 001c 94000000 		.4byte	.LFE3
 2480 0020 00000000 		.4byte	.LFB4
 2481 0024 50000000 		.4byte	.LFE4
 2482 0028 00000000 		.4byte	.LFB5
 2483 002c 50000000 		.4byte	.LFE5
 2484 0030 00000000 		.4byte	.LFB6
 2485 0034 34000000 		.4byte	.LFE6
 2486 0038 00000000 		.4byte	.LFB7
 2487 003c 54000000 		.4byte	.LFE7
 2488 0040 00000000 		.4byte	.LFB8
 2489 0044 20000000 		.4byte	.LFE8
 2490 0048 00000000 		.4byte	.LFB9
 2491 004c 24000000 		.4byte	.LFE9
 2492 0050 00000000 		.4byte	.LFB10
 2493 0054 26000000 		.4byte	.LFE10
 2494 0058 00000000 		.4byte	.LFB11
 2495 005c 68000000 		.4byte	.LFE11
 2496 0060 00000000 		.4byte	.LFB12
 2497 0064 6C000000 		.4byte	.LFE12
 2498 0068 00000000 		.4byte	.LFB13
 2499 006c 58000000 		.4byte	.LFE13
 2500 0070 00000000 		.4byte	.LFB14
 2501 0074 98000000 		.4byte	.LFE14
 2502 0078 00000000 		.4byte	.LFB15
 2503 007c 2C000000 		.4byte	.LFE15
 2504 0080 00000000 		.4byte	.LFB16
 2505 0084 24000000 		.4byte	.LFE16
 2506 0088 00000000 		.4byte	.LFB17
 2507 008c 20000000 		.4byte	.LFE17
 2508 0090 00000000 		.4byte	.LFB18
 2509 0094 40000000 		.4byte	.LFE18
 2510 0098 00000000 		.4byte	0
 2511 009c 00000000 		.4byte	0
 2512              		.section	.debug_line,"",%progbits
 2513              	.Ldebug_line0:
 2514 0000 57020000 		.section	.debug_str,"MS",%progbits,1
 2514      02004B00 
 2514      00000201 
 2514      FB0E0D00 
 2514      01010101 
 2515              	.LASF10:
 2516 0000 75696E74 		.ascii	"uint16\000"
 2516      313600
 2517              	.LASF26:
 2518 0007 736E7349 		.ascii	"snsIndex\000"
 2518      6E646578 
 2518      00
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 80


 2519              	.LASF41:
 2520 0010 43617053 		.ascii	"CapSense_CSD_SetPrescaler\000"
 2520      656E7365 
 2520      5F435344 
 2520      5F536574 
 2520      50726573 
 2521              	.LASF7:
 2522 002a 6C6F6E67 		.ascii	"long long unsigned int\000"
 2522      206C6F6E 
 2522      6720756E 
 2522      7369676E 
 2522      65642069 
 2523              	.LASF54:
 2524 0041 43617053 		.ascii	"CapSense_CSD_maskTable\000"
 2524      656E7365 
 2524      5F435344 
 2524      5F6D6173 
 2524      6B546162 
 2525              	.LASF53:
 2526 0058 43617053 		.ascii	"CapSense_CSD_portTable\000"
 2526      656E7365 
 2526      5F435344 
 2526      5F706F72 
 2526      74546162 
 2527              	.LASF6:
 2528 006f 6C6F6E67 		.ascii	"long long int\000"
 2528      206C6F6E 
 2528      6720696E 
 2528      7400
 2529              	.LASF0:
 2530 007d 7369676E 		.ascii	"signed char\000"
 2530      65642063 
 2530      68617200 
 2531              	.LASF49:
 2532 0089 43617053 		.ascii	"CapSense_CSD_sensorIndex\000"
 2532      656E7365 
 2532      5F435344 
 2532      5F73656E 
 2532      736F7249 
 2533              	.LASF19:
 2534 00a2 43617053 		.ascii	"CapSense_CSD_Init\000"
 2534      656E7365 
 2534      5F435344 
 2534      5F496E69 
 2534      7400
 2535              	.LASF4:
 2536 00b4 6C6F6E67 		.ascii	"long int\000"
 2536      20696E74 
 2536      00
 2537              	.LASF59:
 2538 00bd 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 2538      656E7365 
 2538      5F435344 
 2538      5F776964 
 2538      6765744E 
 2539              	.LASF55:
 2540 00d7 43617053 		.ascii	"CapSense_CSD_csTable\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 81


 2540      656E7365 
 2540      5F435344 
 2540      5F637354 
 2540      61626C65 
 2541              	.LASF16:
 2542 00ec 72656731 		.ascii	"reg16\000"
 2542      3600
 2543              	.LASF9:
 2544 00f2 75696E74 		.ascii	"uint8\000"
 2544      3800
 2545              	.LASF13:
 2546 00f8 646F7562 		.ascii	"double\000"
 2546      6C6500
 2547              	.LASF47:
 2548 00ff 43617053 		.ascii	"CapSense_CSD_initVar\000"
 2548      656E7365 
 2548      5F435344 
 2548      5F696E69 
 2548      74566172 
 2549              	.LASF11:
 2550 0114 75696E74 		.ascii	"uint32\000"
 2550      333200
 2551              	.LASF31:
 2552 011b 43617053 		.ascii	"CapSense_CSD_ScanEnabledWidgets\000"
 2552      656E7365 
 2552      5F435344 
 2552      5F536361 
 2552      6E456E61 
 2553              	.LASF37:
 2554 013b 6D61736B 		.ascii	"mask\000"
 2554      00
 2555              	.LASF34:
 2556 0140 43617053 		.ascii	"CapSense_CSD_ClearSensors\000"
 2556      656E7365 
 2556      5F435344 
 2556      5F436C65 
 2556      61725365 
 2557              	.LASF36:
 2558 015a 706F7274 		.ascii	"port\000"
 2558      00
 2559              	.LASF39:
 2560 015f 43617053 		.ascii	"CapSense_CSD_PreScan\000"
 2560      656E7365 
 2560      5F435344 
 2560      5F507265 
 2560      5363616E 
 2561              	.LASF8:
 2562 0174 756E7369 		.ascii	"unsigned int\000"
 2562      676E6564 
 2562      20696E74 
 2562      00
 2563              	.LASF5:
 2564 0181 6C6F6E67 		.ascii	"long unsigned int\000"
 2564      20756E73 
 2564      69676E65 
 2564      6420696E 
 2564      7400
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 82


 2565              	.LASF58:
 2566 0193 43617053 		.ascii	"CapSense_CSD_analogSwitchDivider\000"
 2566      656E7365 
 2566      5F435344 
 2566      5F616E61 
 2566      6C6F6753 
 2567              	.LASF3:
 2568 01b4 73686F72 		.ascii	"short unsigned int\000"
 2568      7420756E 
 2568      7369676E 
 2568      65642069 
 2568      6E7400
 2569              	.LASF30:
 2570 01c7 73656E73 		.ascii	"sensor\000"
 2570      6F7200
 2571              	.LASF38:
 2572 01ce 43617053 		.ascii	"CapSense_CSD_DisableSensor\000"
 2572      656E7365 
 2572      5F435344 
 2572      5F446973 
 2572      61626C65 
 2573              	.LASF40:
 2574 01e9 43617053 		.ascii	"CapSense_CSD_PostScan\000"
 2574      656E7365 
 2574      5F435344 
 2574      5F506F73 
 2574      74536361 
 2575              	.LASF27:
 2576 01ff 736C6F74 		.ascii	"slot\000"
 2576      00
 2577              	.LASF52:
 2578 0204 43617053 		.ascii	"CapSense_CSD_pcTable\000"
 2578      656E7365 
 2578      5F435344 
 2578      5F706354 
 2578      61626C65 
 2579              	.LASF29:
 2580 0219 43617053 		.ascii	"CapSense_CSD_ScanSensor\000"
 2580      656E7365 
 2580      5F435344 
 2580      5F536361 
 2580      6E53656E 
 2581              	.LASF17:
 2582 0231 72656733 		.ascii	"reg32\000"
 2582      3200
 2583              	.LASF35:
 2584 0237 43617053 		.ascii	"CapSense_CSD_EnableSensor\000"
 2584      656E7365 
 2584      5F435344 
 2584      5F456E61 
 2584      626C6553 
 2585              	.LASF18:
 2586 0251 73697A65 		.ascii	"sizetype\000"
 2586      74797065 
 2586      00
 2587              	.LASF62:
 2588 025a 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\GitHub\\fre"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 83


 2588      73657273 
 2588      5C4C756B 
 2588      61732043 
 2588      72657574 
 2589 0288 65445350 		.ascii	"eDSPPSoC-I2C\\CapSense_CSD_Design02.cydsn\000"
 2589      50536F43 
 2589      2D493243 
 2589      5C436170 
 2589      53656E73 
 2590              	.LASF22:
 2591 02b1 43617053 		.ascii	"CapSense_CSD_Start\000"
 2591      656E7365 
 2591      5F435344 
 2591      5F537461 
 2591      727400
 2592              	.LASF45:
 2593 02c4 7363616E 		.ascii	"scanSpeed\000"
 2593      53706565 
 2593      6400
 2594              	.LASF24:
 2595 02ce 656E4D61 		.ascii	"enMask\000"
 2595      736B00
 2596              	.LASF51:
 2597 02d5 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 2597      656E7365 
 2597      5F435344 
 2597      5F73656E 
 2597      736F7245 
 2598              	.LASF60:
 2599 02f3 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2599      4320342E 
 2599      392E3320 
 2599      32303135 
 2599      30333033 
 2600 0326 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2600      20726576 
 2600      6973696F 
 2600      6E203232 
 2600      31323230 
 2601 0359 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2601      66756E63 
 2601      74696F6E 
 2601      2D736563 
 2601      74696F6E 
 2602              	.LASF12:
 2603 0381 666C6F61 		.ascii	"float\000"
 2603      7400
 2604              	.LASF42:
 2605 0387 70726573 		.ascii	"prescaler\000"
 2605      63616C65 
 2605      7200
 2606              	.LASF43:
 2607 0391 43617053 		.ascii	"CapSense_CSD_GetPrescaler\000"
 2607      656E7365 
 2607      5F435344 
 2607      5F476574 
 2607      50726573 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 84


 2608              	.LASF15:
 2609 03ab 72656738 		.ascii	"reg8\000"
 2609      00
 2610              	.LASF1:
 2611 03b0 756E7369 		.ascii	"unsigned char\000"
 2611      676E6564 
 2611      20636861 
 2611      7200
 2612              	.LASF2:
 2613 03be 73686F72 		.ascii	"short int\000"
 2613      7420696E 
 2613      7400
 2614              	.LASF28:
 2615 03c8 77696467 		.ascii	"widget\000"
 2615      657400
 2616              	.LASF63:
 2617 03cf 43617053 		.ascii	"CapSense_CSD_IsBusy\000"
 2617      656E7365 
 2617      5F435344 
 2617      5F497342 
 2617      75737900 
 2618              	.LASF50:
 2619 03e3 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 2619      656E7365 
 2619      5F435344 
 2619      5F73656E 
 2619      736F7252 
 2620              	.LASF44:
 2621 03fa 43617053 		.ascii	"CapSense_CSD_SetScanSpeed\000"
 2621      656E7365 
 2621      5F435344 
 2621      5F536574 
 2621      5363616E 
 2622              	.LASF23:
 2623 0414 43617053 		.ascii	"CapSense_CSD_Stop\000"
 2623      656E7365 
 2623      5F435344 
 2623      5F53746F 
 2623      7000
 2624              	.LASF14:
 2625 0426 63686172 		.ascii	"char\000"
 2625      00
 2626              	.LASF25:
 2627 042b 43617053 		.ascii	"CapSense_CSD_SetScanSlotSettings\000"
 2627      656E7365 
 2627      5F435344 
 2627      5F536574 
 2627      5363616E 
 2628              	.LASF33:
 2629 044c 43617053 		.ascii	"CapSense_CSD_ReadSensorRaw\000"
 2629      656E7365 
 2629      5F435344 
 2629      5F526561 
 2629      6453656E 
 2630              	.LASF61:
 2631 0467 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense_CSD.c\000"
 2631      6E657261 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cciu0sSa.s 			page 85


 2631      7465645F 
 2631      536F7572 
 2631      63655C50 
 2632              	.LASF57:
 2633 048f 43617053 		.ascii	"CapSense_CSD_widgetResolution\000"
 2633      656E7365 
 2633      5F435344 
 2633      5F776964 
 2633      67657452 
 2634              	.LASF56:
 2635 04ad 43617053 		.ascii	"CapSense_CSD_idacSettings\000"
 2635      656E7365 
 2635      5F435344 
 2635      5F696461 
 2635      63536574 
 2636              	.LASF20:
 2637 04c7 43617053 		.ascii	"CapSense_CSD_Enable\000"
 2637      656E7365 
 2637      5F435344 
 2637      5F456E61 
 2637      626C6500 
 2638              	.LASF21:
 2639 04db 656E6162 		.ascii	"enableInterrupts\000"
 2639      6C65496E 
 2639      74657272 
 2639      75707473 
 2639      00
 2640              	.LASF32:
 2641 04ec 43617053 		.ascii	"CapSense_CSD_FindNextSensor\000"
 2641      656E7365 
 2641      5F435344 
 2641      5F46696E 
 2641      644E6578 
 2642              	.LASF46:
 2643 0508 43617053 		.ascii	"CapSense_CSD_SetAnalogSwitchesSource\000"
 2643      656E7365 
 2643      5F435344 
 2643      5F536574 
 2643      416E616C 
 2644              	.LASF48:
 2645 052d 43617053 		.ascii	"CapSense_CSD_csv\000"
 2645      656E7365 
 2645      5F435344 
 2645      5F637376 
 2645      00
 2646              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
