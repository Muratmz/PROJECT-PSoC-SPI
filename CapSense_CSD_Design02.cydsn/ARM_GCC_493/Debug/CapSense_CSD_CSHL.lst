ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CapSense_CSD_CSHL.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	CapSense_CSD_sensorBaseline,14,4
  19              		.comm	CapSense_CSD_sensorBaselineLow,7,4
  20              		.comm	CapSense_CSD_sensorSignal,14,4
  21              		.comm	CapSense_CSD_sensorOnMask,1,4
  22              		.comm	CapSense_CSD_lowBaselineResetCnt,7,4
  23              		.global	CapSense_CSD_fingerThreshold
  24              		.data
  25              		.align	2
  26              		.type	CapSense_CSD_fingerThreshold, %object
  27              		.size	CapSense_CSD_fingerThreshold, 6
  28              	CapSense_CSD_fingerThreshold:
  29 0000 5400     		.short	84
  30 0002 7C00     		.short	124
  31 0004 4200     		.short	66
  32              		.global	CapSense_CSD_noiseThreshold
  33 0006 0000     		.align	2
  34              		.type	CapSense_CSD_noiseThreshold, %object
  35              		.size	CapSense_CSD_noiseThreshold, 6
  36              	CapSense_CSD_noiseThreshold:
  37 0008 2A00     		.short	42
  38 000a 2D00     		.short	45
  39 000c 2100     		.short	33
  40              		.global	CapSense_CSD_hysteresis
  41 000e 0000     		.align	2
  42              		.type	CapSense_CSD_hysteresis, %object
  43              		.size	CapSense_CSD_hysteresis, 6
  44              	CapSense_CSD_hysteresis:
  45 0010 0000     		.short	0
  46 0012 1200     		.short	18
  47 0014 0900     		.short	9
  48              		.global	CapSense_CSD_debounce
  49 0016 0000     		.align	2
  50              		.type	CapSense_CSD_debounce, %object
  51              		.size	CapSense_CSD_debounce, 3
  52              	CapSense_CSD_debounce:
  53 0018 01       		.byte	1
  54 0019 05       		.byte	5
  55 001a 05       		.byte	5
  56              		.global	CapSense_CSD_debounceCounter
  57 001b 00       		.bss
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 2


  58              		.align	2
  59              		.type	CapSense_CSD_debounceCounter, %object
  60              		.size	CapSense_CSD_debounceCounter, 3
  61              	CapSense_CSD_debounceCounter:
  62 0000 000000   		.space	3
  63              		.global	CapSense_CSD_rawDataIndex
  64              		.section	.rodata
  65              		.align	2
  66              		.type	CapSense_CSD_rawDataIndex, %object
  67              		.size	CapSense_CSD_rawDataIndex, 3
  68              	CapSense_CSD_rawDataIndex:
  69 0000 02       		.byte	2
  70 0001 00       		.byte	0
  71 0002 01       		.byte	1
  72              		.global	CapSense_CSD_numberOfSensors
  73 0003 00       		.align	2
  74              		.type	CapSense_CSD_numberOfSensors, %object
  75              		.size	CapSense_CSD_numberOfSensors, 3
  76              	CapSense_CSD_numberOfSensors:
  77 0004 05       		.byte	5
  78 0005 01       		.byte	1
  79 0006 01       		.byte	1
  80              		.global	CapSense_CSD_centroidMult
  81 0007 00       		.align	2
  82              		.type	CapSense_CSD_centroidMult, %object
  83              		.size	CapSense_CSD_centroidMult, 2
  84              	CapSense_CSD_centroidMult:
  85 0008 0019     		.short	6400
  86 000a 0000     		.section	.text.CapSense_CSD_BaseInit,"ax",%progbits
  87              		.align	2
  88              		.global	CapSense_CSD_BaseInit
  89              		.thumb
  90              		.thumb_func
  91              		.type	CapSense_CSD_BaseInit, %function
  92              	CapSense_CSD_BaseInit:
  93              	.LFB0:
  94              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense_CSD_CSHL.c"
   1:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * File Name: CapSense_CSD_CSHL.c
   3:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Version 3.40
   4:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
   5:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
   9:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  11:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  18:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_CSHL.h"
  19:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  20:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /* Storage of filters data */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 3


  21:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
  22:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****       (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  23:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  24:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  25:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData2[CapSense_CSD_TOTAL_SENSOR_COUNT];
  26:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  27:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #elif ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)   | \
  28:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)   | \
  29:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) | \
  30:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)   | \
  31:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER) )
  32:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
  33:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  34:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  35:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #else
  36:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* No Raw filters */
  37:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif  /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
  38:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         *    (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  39:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         */
  40:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  41:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorBaseline[CapSense_CSD_TOTAL_SENSOR_COUNT];
  42:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorBaselineLow[CapSense_CSD_TOTAL_SENSOR_COUNT];
  43:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorSignal[CapSense_CSD_TOTAL_SENSOR_COUNT];
  44:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorOnMask[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  46:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineResetCnt[CapSense_CSD_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  48:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_fingerThreshold[] = {
  49:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     84u, 124u, 66u, 
  50:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  51:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  52:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_noiseThreshold[] = {
  53:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     42u, 45u, 33u, 
  54:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  55:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  56:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_hysteresis[] = {
  57:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, 18u, 9u, 
  58:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  59:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  60:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounce[] = {
  61:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, 5u, 5u, 
  62:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  63:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  64:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounceCounter[] = {
  65:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, 0u, 0u, 
  66:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  67:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  68:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_rawDataIndex[] = {
  69:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     2u, /* LinearSlider0__LS */
  70:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     0u, /* Button0__BTN */
  71:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, /* Button1__BTN */
  72:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  73:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  74:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  75:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint8 CYCODE CapSense_CSD_numberOfSensors[] = {
  76:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     5u, /* LinearSlider0__LS */
  77:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, /* Button0__BTN */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 4


  78:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     1u, /* Button1__BTN */
  79:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  80:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  81:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  82:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** const uint16 CYCODE CapSense_CSD_centroidMult[] = {
  83:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     6400u, 
  84:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** };
  85:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  86:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  87:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  88:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
  89:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_BaseInit
  91:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
  93:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
  94:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
  95:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value which is equal to raw count value. 
  96:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Resets to zero CapSense_CSD_sensorBaselineLow[sensor] and 
  97:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[sensor] array element.
  98:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads CapSense_CSD_debounceCounter[sensor] array element with initial 
  99:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  value equal CapSense_CSD_debounce[].
 100:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_rawFilterData2[sensor] and 
 101:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[sensor] array element with an 
 102:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
 103:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 104:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 105:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 106:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 107:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 108:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 109:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 110:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 111:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 112:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of 
 113:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline value.
 114:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 115:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 116:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store current debounce 
 117:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 118:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 119:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 120:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of 
 121:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 122:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 123:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 124:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 125:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 126:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 127:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 128:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 129:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_BaseInit(uint8 sensor) 
 130:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
  95              		.loc 1 130 0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 16
  98              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 5


  99              		@ link register save eliminated.
 100 0000 80B4     		push	{r7}
 101              		.cfi_def_cfa_offset 4
 102              		.cfi_offset 7, -4
 103 0002 85B0     		sub	sp, sp, #20
 104              		.cfi_def_cfa_offset 24
 105 0004 00AF     		add	r7, sp, #0
 106              		.cfi_def_cfa_register 7
 107 0006 0346     		mov	r3, r0
 108 0008 FB71     		strb	r3, [r7, #7]
 131:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_TOTAL_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || \
 132:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****          (CapSense_CSD_TOTAL_GENERICS_COUNT))
 133:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 widget = CapSense_CSD_widgetNumber[sensor];
 109              		.loc 1 133 0
 110 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 111 000c 114A     		ldr	r2, .L3
 112 000e D35C     		ldrb	r3, [r2, r3]
 113 0010 FB73     		strb	r3, [r7, #15]
 134:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* ((CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUN
 135:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 136:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)
 137:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 debounceIndex;
 138:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) */
 139:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 140:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 141:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 142:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 143:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 144:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 145:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 146:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Initialize Baseline */
 147:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = CapSense_CSD_sensorRaw[sensor];
 114              		.loc 1 147 0
 115 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 116 0014 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 117 0016 1049     		ldr	r1, .L3+4
 118 0018 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 119 001c 0F4A     		ldr	r2, .L3+8
 120 001e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 148:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaselineLow[sensor] = 0u;
 121              		.loc 1 148 0
 122 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 123 0024 0E4A     		ldr	r2, .L3+12
 124 0026 0021     		movs	r1, #0
 125 0028 D154     		strb	r1, [r2, r3]
 149:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = 0u;
 126              		.loc 1 149 0
 127 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 128 002c 0D4A     		ldr	r2, .L3+16
 129 002e 0021     		movs	r1, #0
 130 0030 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 150:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 151:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if(widget > CapSense_CSD_END_OF_TOUCH_PAD_INDEX)
 131              		.loc 1 151 0
 132 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 133 0036 002B     		cmp	r3, #0
 134 0038 06D0     		beq	.L1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 6


 152:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 153:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_debounceCounter[widget - (CapSense_CSD_END_OF_TOUCH_PAD_INDEX + 1)] =  CapSens
 135              		.loc 1 153 0
 136 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 137 003c 013B     		subs	r3, r3, #1
 138 003e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 139 0040 0949     		ldr	r1, .L3+20
 140 0042 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 141 0044 094A     		ldr	r2, .L3+24
 142 0046 D154     		strb	r1, [r2, r3]
 143              	.L1:
 154:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 155:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 156:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 157:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) |\
 158:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****          (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 159:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 160:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 161:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_sensorRaw[sensor];
 162:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 163:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) |\
 164:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) |\
 165:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) |\
 166:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER) |\
 167:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
 168:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             
 169:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 170:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 171:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 172:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 173:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) | \
 174:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             *   (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 175:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             */
 176:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 177:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 178:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 179:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 180:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 181:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 144              		.loc 1 181 0
 145 0048 1437     		adds	r7, r7, #20
 146              		.cfi_def_cfa_offset 4
 147 004a BD46     		mov	sp, r7
 148              		.cfi_def_cfa_register 13
 149              		@ sp needed
 150 004c 5DF8047B 		ldr	r7, [sp], #4
 151              		.cfi_restore 7
 152              		.cfi_def_cfa_offset 0
 153 0050 7047     		bx	lr
 154              	.L4:
 155 0052 00BF     		.align	2
 156              	.L3:
 157 0054 00000000 		.word	CapSense_CSD_widgetNumber
 158 0058 00000000 		.word	CapSense_CSD_sensorRaw
 159 005c 00000000 		.word	CapSense_CSD_sensorBaseline
 160 0060 00000000 		.word	CapSense_CSD_sensorBaselineLow
 161 0064 00000000 		.word	CapSense_CSD_sensorSignal
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 7


 162 0068 00000000 		.word	CapSense_CSD_debounce
 163 006c 00000000 		.word	CapSense_CSD_debounceCounter
 164              		.cfi_endproc
 165              	.LFE0:
 166              		.size	CapSense_CSD_BaseInit, .-CapSense_CSD_BaseInit
 167              		.section	.text.CapSense_CSD_InitializeSensorBaseline,"ax",%progbits
 168              		.align	2
 169              		.global	CapSense_CSD_InitializeSensorBaseline
 170              		.thumb
 171              		.thumb_func
 172              		.type	CapSense_CSD_InitializeSensorBaseline, %function
 173              	CapSense_CSD_InitializeSensorBaseline:
 174              	.LFB1:
 182:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 183:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 184:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 185:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeSensorBaseline
 186:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 187:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 188:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 189:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an 
 190:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 191:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 192:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 193:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  enabled.
 194:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 195:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 196:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 197:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 198:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 199:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 200:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 201:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 202:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 203:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 204:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 205:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeSensorBaseline(uint8 sensor)
 206:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                           
 207:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 175              		.loc 1 207 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 8
 178              		@ frame_needed = 1, uses_anonymous_args = 0
 179 0000 80B5     		push	{r7, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 82B0     		sub	sp, sp, #8
 184              		.cfi_def_cfa_offset 16
 185 0004 00AF     		add	r7, sp, #0
 186              		.cfi_def_cfa_register 7
 187 0006 0346     		mov	r3, r0
 188 0008 FB71     		strb	r3, [r7, #7]
 208:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Scan sensor */
 209:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanSensor(sensor);
 189              		.loc 1 209 0
 190 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 8


 191 000c 1846     		mov	r0, r3
 192 000e FFF7FEFF 		bl	CapSense_CSD_ScanSensor
 210:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 193              		.loc 1 210 0
 194 0012 00BF     		nop
 195              	.L6:
 196              		.loc 1 210 0 is_stmt 0 discriminator 1
 197 0014 FFF7FEFF 		bl	CapSense_CSD_IsBusy
 198 0018 0346     		mov	r3, r0
 199 001a 002B     		cmp	r3, #0
 200 001c FAD1     		bne	.L6
 211:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 212:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Wait while busy */
 213:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 214:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 215:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN)
 216:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 217:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_BaseInit(sensor);
 201              		.loc 1 217 0 is_stmt 1
 202 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 203 0020 1846     		mov	r0, r3
 204 0022 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 218:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 219:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 220:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 221:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH0)
 222:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 223:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 224:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 225:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 226:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 227:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(sensor < CapSense_CSD_TOTAL_SENSOR_COUNT__CH1)
 228:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 229:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 230:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor + CapSense_CSD_TOTAL_SENSOR_COUNT__CH0);
 231:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 232:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 233:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_DESIGN_TYPE == CapSense_CSD_ONE_CHANNEL_DESIGN) */
 234:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 205              		.loc 1 234 0
 206 0026 0837     		adds	r7, r7, #8
 207              		.cfi_def_cfa_offset 8
 208 0028 BD46     		mov	sp, r7
 209              		.cfi_def_cfa_register 13
 210              		@ sp needed
 211 002a 80BD     		pop	{r7, pc}
 212              		.cfi_endproc
 213              	.LFE1:
 214              		.size	CapSense_CSD_InitializeSensorBaseline, .-CapSense_CSD_InitializeSensorBaseline
 215              		.section	.text.CapSense_CSD_InitializeAllBaselines,"ax",%progbits
 216              		.align	2
 217              		.global	CapSense_CSD_InitializeAllBaselines
 218              		.thumb
 219              		.thumb_func
 220              		.type	CapSense_CSD_InitializeAllBaselines, %function
 221              	CapSense_CSD_InitializeAllBaselines:
 222              	.LFB2:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 9


 235:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 236:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 237:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 238:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeAllBaselines
 239:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 240:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 241:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 242:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Uses the CapSense_CSD_InitializeSensorBaseline function to loads the 
 243:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] array with an initial values by scanning 
 244:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 245:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 246:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 247:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 248:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 249:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 250:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 251:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 252:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 253:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 254:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 255:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 256:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 257:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeAllBaselines(void)
 258:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                           
 259:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 223              		.loc 1 259 0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 8
 226              		@ frame_needed = 1, uses_anonymous_args = 0
 227 0000 80B5     		push	{r7, lr}
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 7, -8
 230              		.cfi_offset 14, -4
 231 0002 82B0     		sub	sp, sp, #8
 232              		.cfi_def_cfa_offset 16
 233 0004 00AF     		add	r7, sp, #0
 234              		.cfi_def_cfa_register 7
 260:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 261:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 262:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 263:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 235              		.loc 1 263 0
 236 0006 0023     		movs	r3, #0
 237 0008 FB71     		strb	r3, [r7, #7]
 238 000a 06E0     		b	.L8
 239              	.L9:
 264:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 265:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_InitializeSensorBaseline(i);
 240              		.loc 1 265 0 discriminator 3
 241 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 242 000e 1846     		mov	r0, r3
 243 0010 FFF7FEFF 		bl	CapSense_CSD_InitializeSensorBaseline
 263:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 244              		.loc 1 263 0 discriminator 3
 245 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 246 0016 0133     		adds	r3, r3, #1
 247 0018 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 10


 248              	.L8:
 263:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 249              		.loc 1 263 0 is_stmt 0 discriminator 1
 250 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 251 001c 062B     		cmp	r3, #6
 252 001e F5D9     		bls	.L9
 266:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 267:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 253              		.loc 1 267 0 is_stmt 1
 254 0020 0837     		adds	r7, r7, #8
 255              		.cfi_def_cfa_offset 8
 256 0022 BD46     		mov	sp, r7
 257              		.cfi_def_cfa_register 13
 258              		@ sp needed
 259 0024 80BD     		pop	{r7, pc}
 260              		.cfi_endproc
 261              	.LFE2:
 262              		.size	CapSense_CSD_InitializeAllBaselines, .-CapSense_CSD_InitializeAllBaselines
 263 0026 00BF     		.section	.text.CapSense_CSD_InitializeEnabledBaselines,"ax",%progbits
 264              		.align	2
 265              		.global	CapSense_CSD_InitializeEnabledBaselines
 266              		.thumb
 267              		.thumb_func
 268              		.type	CapSense_CSD_InitializeEnabledBaselines, %function
 269              	CapSense_CSD_InitializeEnabledBaselines:
 270              	.LFB3:
 268:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 269:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 270:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 271:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeEnabledBaselines
 272:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 273:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 274:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 275:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 276:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 277:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 278:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The raw data filters are initialized if enabled.
 279:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 280:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 281:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 282:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 283:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 284:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 285:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 286:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 287:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 288:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 289:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 290:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeEnabledBaselines(void)
 291:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                              
 292:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 271              		.loc 1 292 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 8
 274              		@ frame_needed = 1, uses_anonymous_args = 0
 275 0000 80B5     		push	{r7, lr}
 276              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 11


 277              		.cfi_offset 7, -8
 278              		.cfi_offset 14, -4
 279 0002 82B0     		sub	sp, sp, #8
 280              		.cfi_def_cfa_offset 16
 281 0004 00AF     		add	r7, sp, #0
 282              		.cfi_def_cfa_register 7
 293:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 294:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 295:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 296:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 297:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanEnabledWidgets();
 283              		.loc 1 297 0
 284 0006 FFF7FEFF 		bl	CapSense_CSD_ScanEnabledWidgets
 298:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 285              		.loc 1 298 0
 286 000a 00BF     		nop
 287              	.L11:
 288              		.loc 1 298 0 is_stmt 0 discriminator 1
 289 000c FFF7FEFF 		bl	CapSense_CSD_IsBusy
 290 0010 0346     		mov	r3, r0
 291 0012 002B     		cmp	r3, #0
 292 0014 FAD1     		bne	.L11
 299:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 300:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Wait while busy */
 301:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 302:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 303:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 293              		.loc 1 303 0 is_stmt 1
 294 0016 0023     		movs	r3, #0
 295 0018 FB71     		strb	r3, [r7, #7]
 296 001a 1DE0     		b	.L12
 297              	.L14:
 304:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 305:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (i >> 3u);
 298              		.loc 1 305 0
 299 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 300 001e DB08     		lsrs	r3, r3, #3
 301 0020 BB71     		strb	r3, [r7, #6]
 306:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 302              		.loc 1 306 0
 303 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 304 0024 03F00703 		and	r3, r3, #7
 305 0028 0122     		movs	r2, #1
 306 002a 02FA03F3 		lsl	r3, r2, r3
 307 002e 7B71     		strb	r3, [r7, #5]
 307:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 308:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 309:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if((CapSense_CSD_sensorEnableMask[pos] & enMask) == 0u)
 308              		.loc 1 309 0
 309 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 310 0032 0C4A     		ldr	r2, .L15
 311 0034 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 312 0036 7B79     		ldrb	r3, [r7, #5]
 313 0038 1340     		ands	r3, r3, r2
 314 003a DBB2     		uxtb	r3, r3
 315 003c 002B     		cmp	r3, #0
 316 003e 04D1     		bne	.L13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 12


 310:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 311:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorRaw[i] = 0u;
 317              		.loc 1 311 0
 318 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 319 0042 094A     		ldr	r2, .L15+4
 320 0044 0021     		movs	r1, #0
 321 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 322              	.L13:
 312:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 313:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 314:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Initialize baselines */
 315:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_BaseInit(i);
 323              		.loc 1 315 0 discriminator 2
 324 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 325 004c 1846     		mov	r0, r3
 326 004e FFF7FEFF 		bl	CapSense_CSD_BaseInit
 303:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 327              		.loc 1 303 0 discriminator 2
 328 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 329 0054 0133     		adds	r3, r3, #1
 330 0056 FB71     		strb	r3, [r7, #7]
 331              	.L12:
 303:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 332              		.loc 1 303 0 is_stmt 0 discriminator 1
 333 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 334 005a 062B     		cmp	r3, #6
 335 005c DED9     		bls	.L14
 316:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 317:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }  
 336              		.loc 1 317 0 is_stmt 1
 337 005e 0837     		adds	r7, r7, #8
 338              		.cfi_def_cfa_offset 8
 339 0060 BD46     		mov	sp, r7
 340              		.cfi_def_cfa_register 13
 341              		@ sp needed
 342 0062 80BD     		pop	{r7, pc}
 343              	.L16:
 344              		.align	2
 345              	.L15:
 346 0064 00000000 		.word	CapSense_CSD_sensorEnableMask
 347 0068 00000000 		.word	CapSense_CSD_sensorRaw
 348              		.cfi_endproc
 349              	.LFE3:
 350              		.size	CapSense_CSD_InitializeEnabledBaselines, .-CapSense_CSD_InitializeEnabledBaselines
 351              		.section	.text.CapSense_CSD_UpdateSensorBaseline,"ax",%progbits
 352              		.align	2
 353              		.global	CapSense_CSD_UpdateSensorBaseline
 354              		.thumb
 355              		.thumb_func
 356              		.type	CapSense_CSD_UpdateSensorBaseline, %function
 357              	CapSense_CSD_UpdateSensorBaseline:
 358              	.LFB4:
 318:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 319:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 320:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 321:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateSensorBaseline
 322:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 13


 323:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 324:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 325:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the 
 326:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 327:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 328:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_SensorSignal[sensor]. 
 329:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 330:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 331:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 332:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  that noise threshold.
 333:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 334:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  calculation.
 335:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 336:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 337:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 338:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 339:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 340:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 341:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 342:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 343:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 344:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of 
 345:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  baseline value.
 346:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 347:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 348:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of 
 349:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 350:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 351:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 352:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 353:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 354:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 355:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 356:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 357:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateSensorBaseline(uint8 sensor)
 358:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 359:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 359              		.loc 1 359 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 24
 362              		@ frame_needed = 1, uses_anonymous_args = 0
 363 0000 80B5     		push	{r7, lr}
 364              		.cfi_def_cfa_offset 8
 365              		.cfi_offset 7, -8
 366              		.cfi_offset 14, -4
 367 0002 86B0     		sub	sp, sp, #24
 368              		.cfi_def_cfa_offset 32
 369 0004 00AF     		add	r7, sp, #0
 370              		.cfi_def_cfa_register 7
 371 0006 0346     		mov	r3, r0
 372 0008 FB71     		strb	r3, [r7, #7]
 360:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint32 calc;
 361:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 tempRaw;
 362:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 filteredRawData;
 363:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 373              		.loc 1 363 0
 374 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 14


 375 000c 454A     		ldr	r2, .L27
 376 000e D35C     		ldrb	r3, [r2, r3]
 377 0010 7B75     		strb	r3, [r7, #21]
 364:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 noiseThreshold = CapSense_CSD_noiseThreshold[widget];
 378              		.loc 1 364 0
 379 0012 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 380 0014 444A     		ldr	r2, .L27+4
 381 0016 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 382 001a 7B82     		strh	r3, [r7, #18]	@ movhi
 365:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 366:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 367:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 368:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 369:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 370:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 371:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 372:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     filteredRawData = CapSense_CSD_sensorRaw[sensor];
 383              		.loc 1 372 0
 384 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 385 001e 434A     		ldr	r2, .L27+8
 386 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 387 0024 3B82     		strh	r3, [r7, #16]	@ movhi
 373:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 374:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)
 375:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData;
 376:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_MedianFilter(filteredRawData, CapSense_CSD_rawFilterData1[se
 377:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                         CapSense_CSD_rawFilterData2[sensor]);
 378:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 379:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 380:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 381:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)
 382:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData;
 383:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_AveragingFilter(filteredRawData, CapSense_CSD_rawFilterData1
 384:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                            CapSense_CSD_rawFilterData2[sensor]);
 385:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 386:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 387:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 388:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)
 389:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR2Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 390:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 391:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 392:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)
 393:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR4Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 394:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 395:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             
 396:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)
 397:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_JitterFilter(filteredRawData, CapSense_CSD_rawFilterData1[se
 398:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 399:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 400:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)
 401:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR8Filter(filteredRawData, CapSense_CSD_rawFilterData1[sens
 402:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 403:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 404:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)
 405:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         filteredRawData = CapSense_CSD_IIR16Filter(filteredRawData, CapSense_CSD_rawFilterData1[sen
 406:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 407:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 15


 408:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else
 409:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 410:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) */
 411:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 412:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING)
 413:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_CalculateThresholds(sensor);
 414:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD_AUTO_TUNING) */
 415:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 416:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 417:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Baseline calculation */
 418:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 419:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if(filteredRawData >= CapSense_CSD_sensorBaseline[sensor])
 388              		.loc 1 419 0
 389 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 390 0028 414A     		ldr	r2, .L27+12
 391 002a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 392 002e 3A8A     		ldrh	r2, [r7, #16]
 393 0030 9A42     		cmp	r2, r3
 394 0032 09D3     		bcc	.L18
 420:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 421:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData - CapSense_CSD_sensorBaseline[sensor];
 395              		.loc 1 421 0
 396 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 397 0036 3E4A     		ldr	r2, .L27+12
 398 0038 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 399 003c 3A8A     		ldrh	r2, [r7, #16]	@ movhi
 400 003e D31A     		subs	r3, r2, r3
 401 0040 FB82     		strh	r3, [r7, #22]	@ movhi
 422:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 402              		.loc 1 422 0
 403 0042 0123     		movs	r3, #1
 404 0044 7B75     		strb	r3, [r7, #21]
 405 0046 08E0     		b	.L19
 406              	.L18:
 423:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 424:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 425:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 426:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         tempRaw = CapSense_CSD_sensorBaseline[sensor] - filteredRawData;
 407              		.loc 1 426 0
 408 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 409 004a 394A     		ldr	r2, .L27+12
 410 004c 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 411 0050 3B8A     		ldrh	r3, [r7, #16]	@ movhi
 412 0052 D31A     		subs	r3, r2, r3
 413 0054 FB82     		strh	r3, [r7, #22]	@ movhi
 427:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 414              		.loc 1 427 0
 415 0056 0023     		movs	r3, #0
 416 0058 7B75     		strb	r3, [r7, #21]
 417              	.L19:
 428:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 429:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 430:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD))
 418              		.loc 1 430 0
 419 005a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 420 005c 002B     		cmp	r3, #0
 421 005e 18D1     		bne	.L20
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 16


 422              		.loc 1 430 0 is_stmt 0 discriminator 1
 423 0060 FB8A     		ldrh	r3, [r7, #22]
 424 0062 142B     		cmp	r3, #20
 425 0064 15D9     		bls	.L20
 431:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 432:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_LOW_BASELINE_RESET)
 426              		.loc 1 432 0 is_stmt 1
 427 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 428 0068 324A     		ldr	r2, .L27+16
 429 006a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 430 006c 042B     		cmp	r3, #4
 431 006e 08D9     		bls	.L21
 433:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 434:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 432              		.loc 1 434 0
 433 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 434 0072 1846     		mov	r0, r3
 435 0074 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 435:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 436              		.loc 1 435 0
 437 0078 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 438 007a 2E4A     		ldr	r2, .L27+16
 439 007c 0021     		movs	r1, #0
 440 007e D154     		strb	r1, [r2, r3]
 432:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 441              		.loc 1 432 0
 442 0080 3AE0     		b	.L23
 443              	.L21:
 436:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 437:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
 438:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 439:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor]++;
 444              		.loc 1 439 0
 445 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 446 0084 2B4A     		ldr	r2, .L27+16
 447 0086 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 448 0088 0132     		adds	r2, r2, #1
 449 008a D1B2     		uxtb	r1, r2
 450 008c 294A     		ldr	r2, .L27+16
 451 008e D154     		strb	r1, [r2, r3]
 432:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 452              		.loc 1 432 0
 453 0090 32E0     		b	.L23
 454              	.L20:
 440:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 441:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 442:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 443:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 444:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 445:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 446:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 455              		.loc 1 446 0
 456 0092 FA8A     		ldrh	r2, [r7, #22]
 457 0094 7B8A     		ldrh	r3, [r7, #18]
 458 0096 9A42     		cmp	r2, r3
 459 0098 05D9     		bls	.L24
 460              		.loc 1 446 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 17


 461 009a FB8A     		ldrh	r3, [r7, #22]
 462 009c 132B     		cmp	r3, #19
 463 009e 2BD8     		bhi	.L23
 447:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                  ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 448:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                    && (widget == 0u)))
 464              		.loc 1 448 0 is_stmt 1
 465 00a0 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 466 00a2 002B     		cmp	r3, #0
 467 00a4 28D1     		bne	.L23
 468              	.L24:
 449:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 450:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 451:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Make full Baseline 23 bits */
 452:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc = (uint32) CapSense_CSD_sensorBaseline[sensor] << 8u;
 469              		.loc 1 452 0
 470 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 471 00a8 214A     		ldr	r2, .L27+12
 472 00aa 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 473 00ae 1B02     		lsls	r3, r3, #8
 474 00b0 FB60     		str	r3, [r7, #12]
 453:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc |= (uint32) CapSense_CSD_sensorBaselineLow[sensor];
 475              		.loc 1 453 0
 476 00b2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 477 00b4 204A     		ldr	r2, .L27+20
 478 00b6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 479 00b8 1A46     		mov	r2, r3
 480 00ba FB68     		ldr	r3, [r7, #12]
 481 00bc 1343     		orrs	r3, r3, r2
 482 00be FB60     		str	r3, [r7, #12]
 454:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 455:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Add Raw Data to Baseline */
 456:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc += filteredRawData;
 483              		.loc 1 456 0
 484 00c0 3B8A     		ldrh	r3, [r7, #16]
 485 00c2 FA68     		ldr	r2, [r7, #12]
 486 00c4 1344     		add	r3, r3, r2
 487 00c6 FB60     		str	r3, [r7, #12]
 457:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 458:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Sub the high Baseline */
 459:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 calc -= CapSense_CSD_sensorBaseline[sensor];
 488              		.loc 1 459 0
 489 00c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 490 00ca 194A     		ldr	r2, .L27+12
 491 00cc 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 492 00d0 1A46     		mov	r2, r3
 493 00d2 FB68     		ldr	r3, [r7, #12]
 494 00d4 9B1A     		subs	r3, r3, r2
 495 00d6 FB60     		str	r3, [r7, #12]
 460:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 461:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Put Baseline and BaselineLow */
 462:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 496              		.loc 1 462 0
 497 00d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 498 00da FA68     		ldr	r2, [r7, #12]
 499 00dc 120A     		lsrs	r2, r2, #8
 500 00de 91B2     		uxth	r1, r2
 501 00e0 134A     		ldr	r2, .L27+12
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 18


 502 00e2 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 463:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 503              		.loc 1 463 0
 504 00e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 505 00e8 FA68     		ldr	r2, [r7, #12]
 506 00ea D1B2     		uxtb	r1, r2
 507 00ec 124A     		ldr	r2, .L27+20
 508 00ee D154     		strb	r1, [r2, r3]
 464:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 465:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 509              		.loc 1 465 0
 510 00f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 511 00f2 104A     		ldr	r2, .L27+16
 512 00f4 0021     		movs	r1, #0
 513 00f6 D154     		strb	r1, [r2, r3]
 514              	.L23:
 466:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 467:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 468:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 469:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 470:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 471:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 472:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 515              		.loc 1 472 0
 516 00f8 FA8A     		ldrh	r2, [r7, #22]
 517 00fa 7B8A     		ldrh	r3, [r7, #18]
 518 00fc 9A42     		cmp	r2, r3
 519 00fe 08D9     		bls	.L25
 520              		.loc 1 472 0 is_stmt 0 discriminator 1
 521 0100 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 522 0102 002B     		cmp	r3, #0
 523 0104 05D0     		beq	.L25
 473:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 474:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8)
 475:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Over flow defence for uint8 */
 476:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
 477:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 478:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = 0xFFu;
 479:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }    
 480:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else 
 481:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 482:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = ((uint8) tempRaw);
 483:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 484:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
 485:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorSignal[sensor] = ((uint16) tempRaw);
 524              		.loc 1 485 0 is_stmt 1
 525 0106 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 526 0108 0C49     		ldr	r1, .L27+24
 527 010a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 528 010c 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 529 0110 04E0     		b	.L17
 530              	.L25:
 486:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8) */
 487:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 488:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 489:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 490:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Signal is zero */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 19


 491:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorSignal[sensor] = 0u;
 531              		.loc 1 491 0
 532 0112 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 533 0114 094A     		ldr	r2, .L27+24
 534 0116 0021     		movs	r1, #0
 535 0118 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 536              	.L17:
 492:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 493:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 494:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 495:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 496:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 497:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 498:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 537              		.loc 1 498 0
 538 011c 1837     		adds	r7, r7, #24
 539              		.cfi_def_cfa_offset 8
 540 011e BD46     		mov	sp, r7
 541              		.cfi_def_cfa_register 13
 542              		@ sp needed
 543 0120 80BD     		pop	{r7, pc}
 544              	.L28:
 545 0122 00BF     		.align	2
 546              	.L27:
 547 0124 00000000 		.word	CapSense_CSD_widgetNumber
 548 0128 00000000 		.word	CapSense_CSD_noiseThreshold
 549 012c 00000000 		.word	CapSense_CSD_sensorRaw
 550 0130 00000000 		.word	CapSense_CSD_sensorBaseline
 551 0134 00000000 		.word	CapSense_CSD_lowBaselineResetCnt
 552 0138 00000000 		.word	CapSense_CSD_sensorBaselineLow
 553 013c 00000000 		.word	CapSense_CSD_sensorSignal
 554              		.cfi_endproc
 555              	.LFE4:
 556              		.size	CapSense_CSD_UpdateSensorBaseline, .-CapSense_CSD_UpdateSensorBaseline
 557              		.section	.text.CapSense_CSD_UpdateEnabledBaselines,"ax",%progbits
 558              		.align	2
 559              		.global	CapSense_CSD_UpdateEnabledBaselines
 560              		.thumb
 561              		.thumb_func
 562              		.type	CapSense_CSD_UpdateEnabledBaselines, %function
 563              	CapSense_CSD_UpdateEnabledBaselines:
 564              	.LFB5:
 499:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 500:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 501:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 502:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateEnabledBaselines
 503:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 504:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 505:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 506:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the 
 507:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines 
 508:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  for enabled sensors.
 509:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 510:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 511:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 512:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 513:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 20


 514:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 515:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 516:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 517:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 518:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 519:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 520:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 521:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 522:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 523:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 524:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 525:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 526:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 527:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 528:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 529:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 530:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateEnabledBaselines(void)
 531:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 532:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 565              		.loc 1 532 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 8
 568              		@ frame_needed = 1, uses_anonymous_args = 0
 569 0000 80B5     		push	{r7, lr}
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 7, -8
 572              		.cfi_offset 14, -4
 573 0002 82B0     		sub	sp, sp, #8
 574              		.cfi_def_cfa_offset 16
 575 0004 00AF     		add	r7, sp, #0
 576              		.cfi_def_cfa_register 7
 533:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 534:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 535:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 536:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 537:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 577              		.loc 1 537 0
 578 0006 0023     		movs	r3, #0
 579 0008 FB71     		strb	r3, [r7, #7]
 580 000a 18E0     		b	.L30
 581              	.L32:
 538:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 539:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (i >> 3u);
 582              		.loc 1 539 0
 583 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 584 000e DB08     		lsrs	r3, r3, #3
 585 0010 BB71     		strb	r3, [r7, #6]
 540:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 586              		.loc 1 540 0
 587 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 588 0014 03F00703 		and	r3, r3, #7
 589 0018 0122     		movs	r2, #1
 590 001a 02FA03F3 		lsl	r3, r2, r3
 591 001e 7B71     		strb	r3, [r7, #5]
 541:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if((CapSense_CSD_sensorEnableMask[pos] & enMask) != 0u)
 592              		.loc 1 541 0
 593 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 21


 594 0022 0A4A     		ldr	r2, .L33
 595 0024 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 596 0026 7B79     		ldrb	r3, [r7, #5]
 597 0028 1340     		ands	r3, r3, r2
 598 002a DBB2     		uxtb	r3, r3
 599 002c 002B     		cmp	r3, #0
 600 002e 03D0     		beq	.L31
 542:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 543:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 601              		.loc 1 543 0
 602 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 603 0032 1846     		mov	r0, r3
 604 0034 FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 605              	.L31:
 537:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 606              		.loc 1 537 0 discriminator 2
 607 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 608 003a 0133     		adds	r3, r3, #1
 609 003c FB71     		strb	r3, [r7, #7]
 610              	.L30:
 537:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 611              		.loc 1 537 0 is_stmt 0 discriminator 1
 612 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 613 0040 062B     		cmp	r3, #6
 614 0042 E3D9     		bls	.L32
 544:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 545:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 546:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 615              		.loc 1 546 0 is_stmt 1
 616 0044 0837     		adds	r7, r7, #8
 617              		.cfi_def_cfa_offset 8
 618 0046 BD46     		mov	sp, r7
 619              		.cfi_def_cfa_register 13
 620              		@ sp needed
 621 0048 80BD     		pop	{r7, pc}
 622              	.L34:
 623 004a 00BF     		.align	2
 624              	.L33:
 625 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 626              		.cfi_endproc
 627              	.LFE5:
 628              		.size	CapSense_CSD_UpdateEnabledBaselines, .-CapSense_CSD_UpdateEnabledBaselines
 629              		.section	.text.CapSense_CSD_CheckIsSensorActive,"ax",%progbits
 630              		.align	2
 631              		.global	CapSense_CSD_CheckIsSensorActive
 632              		.thumb
 633              		.thumb_func
 634              		.type	CapSense_CSD_CheckIsSensorActive, %function
 635              	CapSense_CSD_CheckIsSensorActive:
 636              	.LFB6:
 547:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 548:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 549:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 550:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsSensorActive
 551:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 552:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 553:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 22


 554:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Compares the CapSense_CSD_SensorSignal[sensor] array element to finger
 555:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 556:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 557:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  based on whether the sensor is currently active. 
 558:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 559:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 560:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The debounce counter added to the sensor active transition.
 561:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  This function updates CapSense_CSD_SensorOnMask[] array element.
 562:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 563:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 564:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 565:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 566:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 567:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 568:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 569:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 570:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store diffence between 
 571:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 572:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store current debounce 
 573:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 574:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 575:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 576:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] - used to store sensors on/off state.
 577:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[0] contains the masked bits for sensors 
 578:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 579:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 580:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 581:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor is inactive.
 582:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor is active.
 583:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 584:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 585:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 586:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 587:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 588:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsSensorActive(uint8 sensor)
 589:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                   
 590:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 637              		.loc 1 590 0
 638              		.cfi_startproc
 639              		@ args = 0, pretend = 0, frame = 24
 640              		@ frame_needed = 1, uses_anonymous_args = 0
 641              		@ link register save eliminated.
 642 0000 80B4     		push	{r7}
 643              		.cfi_def_cfa_offset 4
 644              		.cfi_offset 7, -4
 645 0002 87B0     		sub	sp, sp, #28
 646              		.cfi_def_cfa_offset 32
 647 0004 00AF     		add	r7, sp, #0
 648              		.cfi_def_cfa_register 7
 649 0006 0346     		mov	r3, r0
 650 0008 FB71     		strb	r3, [r7, #7]
 591:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 debounceIndex;
 592:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Get On/Off mask */
 593:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos = (sensor >> 3u);
 651              		.loc 1 593 0
 652 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 653 000c DB08     		lsrs	r3, r3, #3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 23


 654 000e BB75     		strb	r3, [r7, #22]
 594:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 655              		.loc 1 594 0
 656 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 657 0012 03F00703 		and	r3, r3, #7
 658 0016 0122     		movs	r2, #1
 659 0018 02FA03F3 		lsl	r3, r2, r3
 660 001c 7B75     		strb	r3, [r7, #21]
 595:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Prepare to find debounce counter index */
 596:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 661              		.loc 1 596 0
 662 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 663 0020 3A4A     		ldr	r2, .L46
 664 0022 D35C     		ldrb	r3, [r2, r3]
 665 0024 3B75     		strb	r3, [r7, #20]
 597:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 fingerThreshold = CapSense_CSD_fingerThreshold[widget];
 666              		.loc 1 597 0
 667 0026 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 668 0028 394A     		ldr	r2, .L46+4
 669 002a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 670 002e 7B82     		strh	r3, [r7, #18]	@ movhi
 598:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 hysteresis = CapSense_CSD_hysteresis[widget];
 671              		.loc 1 598 0
 672 0030 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 673 0032 384A     		ldr	r2, .L46+8
 674 0034 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 675 0038 3B82     		strh	r3, [r7, #16]	@ movhi
 599:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 debounce = CapSense_CSD_debounce[widget];
 676              		.loc 1 599 0
 677 003a 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 678 003c 364A     		ldr	r2, .L46+12
 679 003e D35C     		ldrb	r3, [r2, r3]
 680 0040 FB73     		strb	r3, [r7, #15]
 600:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 601:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if (widget < CapSense_CSD_TOTAL_CENTROIDS_COUNT)
 681              		.loc 1 601 0
 682 0042 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 683 0044 002B     		cmp	r3, #0
 684 0046 06D1     		bne	.L36
 602:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 603:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         debounceIndex = CapSense_CSD_UNUSED_DEBOUNCE_COUNTER_INDEX;
 685              		.loc 1 603 0
 686 0048 0223     		movs	r3, #2
 687 004a FB75     		strb	r3, [r7, #23]
 604:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_debounceCounter[debounceIndex] = 1u;
 688              		.loc 1 604 0
 689 004c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 690 004e 334A     		ldr	r2, .L46+16
 691 0050 0121     		movs	r1, #1
 692 0052 D154     		strb	r1, [r2, r3]
 693 0054 02E0     		b	.L37
 694              	.L36:
 605:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 606:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else
 607:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 608:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         debounceIndex = widget - (CapSense_CSD_END_OF_TOUCH_PAD_INDEX + 1);
 695              		.loc 1 608 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 24


 696 0056 3B7D     		ldrb	r3, [r7, #20]
 697 0058 013B     		subs	r3, r3, #1
 698 005a FB75     		strb	r3, [r7, #23]
 699              	.L37:
 609:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 610:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 611:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 612:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Was on */
 613:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     if (0u != (CapSense_CSD_sensorOnMask[pos] & onMask))
 700              		.loc 1 613 0
 701 005c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 702 005e 304A     		ldr	r2, .L46+20
 703 0060 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 704 0062 7B7D     		ldrb	r3, [r7, #21]
 705 0064 1340     		ands	r3, r3, r2
 706 0066 DBB2     		uxtb	r3, r3
 707 0068 002B     		cmp	r3, #0
 708 006a 19D0     		beq	.L38
 614:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 615:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Hysteresis minus */
 616:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 709              		.loc 1 616 0
 710 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 711 006e 2D4A     		ldr	r2, .L46+24
 712 0070 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 713 0074 1946     		mov	r1, r3
 714 0076 7A8A     		ldrh	r2, [r7, #18]
 715 0078 3B8A     		ldrh	r3, [r7, #16]
 716 007a D31A     		subs	r3, r2, r3
 717 007c 9942     		cmp	r1, r3
 718 007e 33DA     		bge	.L40
 617:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 618:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorOnMask[pos] &= (uint8)~onMask;
 719              		.loc 1 618 0
 720 0080 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 721 0082 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 722 0084 2649     		ldr	r1, .L46+20
 723 0086 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 724 0088 7A7D     		ldrb	r2, [r7, #21]
 725 008a D243     		mvns	r2, r2
 726 008c D2B2     		uxtb	r2, r2
 727 008e 0A40     		ands	r2, r2, r1
 728 0090 D1B2     		uxtb	r1, r2
 729 0092 234A     		ldr	r2, .L46+20
 730 0094 D154     		strb	r1, [r2, r3]
 619:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce; 
 731              		.loc 1 619 0
 732 0096 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 733 0098 2049     		ldr	r1, .L46+16
 734 009a FA7B     		ldrb	r2, [r7, #15]
 735 009c CA54     		strb	r2, [r1, r3]
 736 009e 23E0     		b	.L40
 737              	.L38:
 620:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 621:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 622:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     else    /* Was off */
 623:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 25


 624:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Hysteresis plus */
 625:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 738              		.loc 1 625 0
 739 00a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 740 00a2 204A     		ldr	r2, .L46+24
 741 00a4 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 742 00a8 1946     		mov	r1, r3
 743 00aa 7A8A     		ldrh	r2, [r7, #18]
 744 00ac 3B8A     		ldrh	r3, [r7, #16]
 745 00ae 1344     		add	r3, r3, r2
 746 00b0 9942     		cmp	r1, r3
 747 00b2 15DD     		ble	.L41
 626:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 627:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Sensor active, decrement debounce counter */
 628:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if (CapSense_CSD_debounceCounter[debounceIndex] <= 1u)
 748              		.loc 1 628 0
 749 00b4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 750 00b6 194A     		ldr	r2, .L46+16
 751 00b8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 752 00ba 012B     		cmp	r3, #1
 753 00bc 08D8     		bhi	.L42
 629:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 630:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorOnMask[pos] |= onMask; 
 754              		.loc 1 630 0
 755 00be BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 756 00c0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 757 00c2 1749     		ldr	r1, .L46+20
 758 00c4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 759 00c6 7A7D     		ldrb	r2, [r7, #21]
 760 00c8 0A43     		orrs	r2, r2, r1
 761 00ca D1B2     		uxtb	r1, r2
 762 00cc 144A     		ldr	r2, .L46+20
 763 00ce D154     		strb	r1, [r2, r3]
 764              	.L42:
 631:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 632:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex]--;
 765              		.loc 1 632 0
 766 00d0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 767 00d2 124A     		ldr	r2, .L46+16
 768 00d4 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 769 00d6 013A     		subs	r2, r2, #1
 770 00d8 D1B2     		uxtb	r1, r2
 771 00da 104A     		ldr	r2, .L46+16
 772 00dc D154     		strb	r1, [r2, r3]
 773 00de 03E0     		b	.L40
 774              	.L41:
 633:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 634:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
 635:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 636:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 637:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 775              		.loc 1 637 0
 776 00e0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 777 00e2 0E49     		ldr	r1, .L46+16
 778 00e4 FA7B     		ldrb	r2, [r7, #15]
 779 00e6 CA54     		strb	r2, [r1, r3]
 780              	.L40:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 26


 638:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 639:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 640:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 641:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (((CapSense_CSD_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 781              		.loc 1 641 0
 782 00e8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 783 00ea 0D4A     		ldr	r2, .L46+20
 784 00ec D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 785 00ee 7B7D     		ldrb	r3, [r7, #21]
 786 00f0 1340     		ands	r3, r3, r2
 787 00f2 DBB2     		uxtb	r3, r3
 788 00f4 002B     		cmp	r3, #0
 789 00f6 01D0     		beq	.L43
 790              		.loc 1 641 0 is_stmt 0 discriminator 1
 791 00f8 0123     		movs	r3, #1
 792 00fa 00E0     		b	.L44
 793              	.L43:
 794              		.loc 1 641 0 discriminator 2
 795 00fc 0023     		movs	r3, #0
 796              	.L44:
 642:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 797              		.loc 1 642 0 is_stmt 1 discriminator 4
 798 00fe 1846     		mov	r0, r3
 799 0100 1C37     		adds	r7, r7, #28
 800              		.cfi_def_cfa_offset 4
 801 0102 BD46     		mov	sp, r7
 802              		.cfi_def_cfa_register 13
 803              		@ sp needed
 804 0104 5DF8047B 		ldr	r7, [sp], #4
 805              		.cfi_restore 7
 806              		.cfi_def_cfa_offset 0
 807 0108 7047     		bx	lr
 808              	.L47:
 809 010a 00BF     		.align	2
 810              	.L46:
 811 010c 00000000 		.word	CapSense_CSD_widgetNumber
 812 0110 00000000 		.word	CapSense_CSD_fingerThreshold
 813 0114 00000000 		.word	CapSense_CSD_hysteresis
 814 0118 00000000 		.word	CapSense_CSD_debounce
 815 011c 00000000 		.word	CapSense_CSD_debounceCounter
 816 0120 00000000 		.word	CapSense_CSD_sensorOnMask
 817 0124 00000000 		.word	CapSense_CSD_sensorSignal
 818              		.cfi_endproc
 819              	.LFE6:
 820              		.size	CapSense_CSD_CheckIsSensorActive, .-CapSense_CSD_CheckIsSensorActive
 821              		.section	.text.CapSense_CSD_CheckIsWidgetActive,"ax",%progbits
 822              		.align	2
 823              		.global	CapSense_CSD_CheckIsWidgetActive
 824              		.thumb
 825              		.thumb_func
 826              		.type	CapSense_CSD_CheckIsWidgetActive, %function
 827              	CapSense_CSD_CheckIsWidgetActive:
 828              	.LFB7:
 643:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 644:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 645:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 646:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsWidgetActive
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 27


 647:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 648:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 649:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 650:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Use function CapSense_CSD_CheckIsSensorActive() to update 
 651:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] for all sensors within the widget.
 652:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 653:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  active.
 654:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 655:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  col and row to return widget active status.
 656:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 657:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 658:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 659:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 660:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 661:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 662:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 663:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 664:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 665:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 666:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 667:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 668:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsWidgetActive(uint8 widget)
 669:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 670:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 829              		.loc 1 670 0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 16
 832              		@ frame_needed = 1, uses_anonymous_args = 0
 833 0000 80B5     		push	{r7, lr}
 834              		.cfi_def_cfa_offset 8
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 84B0     		sub	sp, sp, #16
 838              		.cfi_def_cfa_offset 24
 839 0004 00AF     		add	r7, sp, #0
 840              		.cfi_def_cfa_register 7
 841 0006 0346     		mov	r3, r0
 842 0008 FB71     		strb	r3, [r7, #7]
 671:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 843              		.loc 1 671 0
 844 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 845 000c 0F4A     		ldr	r2, .L52
 846 000e D35C     		ldrb	r3, [r2, r3]
 847 0010 FB73     		strb	r3, [r7, #15]
 672:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 848              		.loc 1 672 0
 849 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 850 0014 0E4A     		ldr	r2, .L52+4
 851 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 852 0018 FB7B     		ldrb	r3, [r7, #15]
 853 001a 1344     		add	r3, r3, r2
 854 001c 7B73     		strb	r3, [r7, #13]
 673:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 state = 0u;
 855              		.loc 1 673 0
 856 001e 0023     		movs	r3, #0
 857 0020 BB73     		strb	r3, [r7, #14]
 858              	.L50:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 28


 674:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 675:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Check all sensors of the widget */
 676:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 677:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 678:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_CheckIsSensorActive(rawIndex) != 0u)
 859              		.loc 1 678 0
 860 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 861 0024 1846     		mov	r0, r3
 862 0026 FFF7FEFF 		bl	CapSense_CSD_CheckIsSensorActive
 863 002a 0346     		mov	r3, r0
 864 002c 002B     		cmp	r3, #0
 865 002e 01D0     		beq	.L49
 679:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 680:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_SENSOR_1_IS_ACTIVE;
 866              		.loc 1 680 0
 867 0030 0123     		movs	r3, #1
 868 0032 BB73     		strb	r3, [r7, #14]
 869              	.L49:
 681:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 682:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 870              		.loc 1 682 0
 871 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 872 0036 0133     		adds	r3, r3, #1
 873 0038 FB73     		strb	r3, [r7, #15]
 683:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 684:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 874              		.loc 1 684 0
 875 003a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 876 003c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 877 003e 9A42     		cmp	r2, r3
 878 0040 EFD3     		bcc	.L50
 685:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 686:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 687:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 688:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (state);
 879              		.loc 1 688 0
 880 0042 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 689:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 881              		.loc 1 689 0
 882 0044 1846     		mov	r0, r3
 883 0046 1037     		adds	r7, r7, #16
 884              		.cfi_def_cfa_offset 8
 885 0048 BD46     		mov	sp, r7
 886              		.cfi_def_cfa_register 13
 887              		@ sp needed
 888 004a 80BD     		pop	{r7, pc}
 889              	.L53:
 890              		.align	2
 891              	.L52:
 892 004c 00000000 		.word	CapSense_CSD_rawDataIndex
 893 0050 00000000 		.word	CapSense_CSD_numberOfSensors
 894              		.cfi_endproc
 895              	.LFE7:
 896              		.size	CapSense_CSD_CheckIsWidgetActive, .-CapSense_CSD_CheckIsWidgetActive
 897              		.section	.text.CapSense_CSD_CheckIsAnyWidgetActive,"ax",%progbits
 898              		.align	2
 899              		.global	CapSense_CSD_CheckIsAnyWidgetActive
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 29


 900              		.thumb
 901              		.thumb_func
 902              		.type	CapSense_CSD_CheckIsAnyWidgetActive, %function
 903              	CapSense_CSD_CheckIsAnyWidgetActive:
 904              	.LFB8:
 690:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 691:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 692:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 693:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsAnyWidgetActive
 694:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 695:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 696:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 697:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Compares all sensors of the CapSense_CSD_signal[] array to their finger 
 698:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  threshold. Calls CapSense_CSD_CheckIsWidgetActive() for each widget so 
 699:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  the CapSense_CSD_SensorOnMask[] array is up to date after calling this 
 700:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  function.
 701:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 702:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 703:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 704:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 705:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 706:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 707:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 708:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 709:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 710:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 711:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 712:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_CheckIsAnyWidgetActive(void)
 713:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  
 714:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 905              		.loc 1 714 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 8
 908              		@ frame_needed = 1, uses_anonymous_args = 0
 909 0000 80B5     		push	{r7, lr}
 910              		.cfi_def_cfa_offset 8
 911              		.cfi_offset 7, -8
 912              		.cfi_offset 14, -4
 913 0002 82B0     		sub	sp, sp, #8
 914              		.cfi_def_cfa_offset 16
 915 0004 00AF     		add	r7, sp, #0
 916              		.cfi_def_cfa_register 7
 715:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 i;
 716:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 state = 0u;
 917              		.loc 1 716 0
 918 0006 0023     		movs	r3, #0
 919 0008 BB71     		strb	r3, [r7, #6]
 717:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 718:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 920              		.loc 1 718 0
 921 000a 0023     		movs	r3, #0
 922 000c FB71     		strb	r3, [r7, #7]
 923 000e 0BE0     		b	.L55
 924              	.L57:
 719:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 720:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(i) != 0u)
 925              		.loc 1 720 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 30


 926 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 927 0012 1846     		mov	r0, r3
 928 0014 FFF7FEFF 		bl	CapSense_CSD_CheckIsWidgetActive
 929 0018 0346     		mov	r3, r0
 930 001a 002B     		cmp	r3, #0
 931 001c 01D0     		beq	.L56
 721:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
 722:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_WIDGET_IS_ACTIVE;
 932              		.loc 1 722 0
 933 001e 0123     		movs	r3, #1
 934 0020 BB71     		strb	r3, [r7, #6]
 935              	.L56:
 718:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 936              		.loc 1 718 0 discriminator 2
 937 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 938 0024 0133     		adds	r3, r3, #1
 939 0026 FB71     		strb	r3, [r7, #7]
 940              	.L55:
 718:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 941              		.loc 1 718 0 is_stmt 0 discriminator 1
 942 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 943 002a 022B     		cmp	r3, #2
 944 002c F0D9     		bls	.L57
 723:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
 724:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 725:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 726:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 727:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     return (state);
 945              		.loc 1 727 0 is_stmt 1
 946 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 728:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 947              		.loc 1 728 0
 948 0030 1846     		mov	r0, r3
 949 0032 0837     		adds	r7, r7, #8
 950              		.cfi_def_cfa_offset 8
 951 0034 BD46     		mov	sp, r7
 952              		.cfi_def_cfa_register 13
 953              		@ sp needed
 954 0036 80BD     		pop	{r7, pc}
 955              		.cfi_endproc
 956              	.LFE8:
 957              		.size	CapSense_CSD_CheckIsAnyWidgetActive, .-CapSense_CSD_CheckIsAnyWidgetActive
 958              		.section	.text.CapSense_CSD_EnableWidget,"ax",%progbits
 959              		.align	2
 960              		.global	CapSense_CSD_EnableWidget
 961              		.thumb
 962              		.thumb_func
 963              		.type	CapSense_CSD_EnableWidget, %function
 964              	CapSense_CSD_EnableWidget:
 965              	.LFB9:
 729:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 730:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 731:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 732:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_EnableWidget
 733:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 734:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 735:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 31


 736:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 737:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 738:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 739:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 740:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 741:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 742:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 743:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 744:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 745:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 746:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 747:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 748:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 749:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 750:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 751:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 752:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 753:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 754:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 755:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 756:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 757:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 758:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_EnableWidget(uint8 widget)
 759:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                    
 760:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 966              		.loc 1 760 0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 16
 969              		@ frame_needed = 1, uses_anonymous_args = 0
 970              		@ link register save eliminated.
 971 0000 80B4     		push	{r7}
 972              		.cfi_def_cfa_offset 4
 973              		.cfi_offset 7, -4
 974 0002 85B0     		sub	sp, sp, #20
 975              		.cfi_def_cfa_offset 24
 976 0004 00AF     		add	r7, sp, #0
 977              		.cfi_def_cfa_register 7
 978 0006 0346     		mov	r3, r0
 979 0008 FB71     		strb	r3, [r7, #7]
 761:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 762:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 763:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 980              		.loc 1 763 0
 981 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 982 000c 134A     		ldr	r2, .L61
 983 000e D35C     		ldrb	r3, [r2, r3]
 984 0010 FB73     		strb	r3, [r7, #15]
 764:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 985              		.loc 1 764 0
 986 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 987 0014 124A     		ldr	r2, .L61+4
 988 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 989 0018 FB7B     		ldrb	r3, [r7, #15]
 990 001a 1344     		add	r3, r3, r2
 991 001c BB73     		strb	r3, [r7, #14]
 992              	.L60:
 765:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 32


 766:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Enable all sensors of the widget */
 767:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 768:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 769:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (rawIndex >> 3u);
 993              		.loc 1 769 0 discriminator 1
 994 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 995 0020 DB08     		lsrs	r3, r3, #3
 996 0022 7B73     		strb	r3, [r7, #13]
 770:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 997              		.loc 1 770 0 discriminator 1
 998 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 999 0026 03F00703 		and	r3, r3, #7
 1000 002a 0122     		movs	r2, #1
 1001 002c 02FA03F3 		lsl	r3, r2, r3
 1002 0030 3B73     		strb	r3, [r7, #12]
 771:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 772:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorEnableMask[pos] |= enMask;
 1003              		.loc 1 772 0 discriminator 1
 1004 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1005 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1006 0036 0B49     		ldr	r1, .L61+8
 1007 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1008 003a 3A7B     		ldrb	r2, [r7, #12]
 1009 003c 0A43     		orrs	r2, r2, r1
 1010 003e D1B2     		uxtb	r1, r2
 1011 0040 084A     		ldr	r2, .L61+8
 1012 0042 D154     		strb	r1, [r2, r3]
 773:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 1013              		.loc 1 773 0 discriminator 1
 1014 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1015 0046 0133     		adds	r3, r3, #1
 1016 0048 FB73     		strb	r3, [r7, #15]
 774:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 775:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 1017              		.loc 1 775 0 discriminator 1
 1018 004a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1019 004c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1020 004e 9A42     		cmp	r2, r3
 1021 0050 E5D3     		bcc	.L60
 776:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 777:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 778:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 1022              		.loc 1 778 0
 1023 0052 1437     		adds	r7, r7, #20
 1024              		.cfi_def_cfa_offset 4
 1025 0054 BD46     		mov	sp, r7
 1026              		.cfi_def_cfa_register 13
 1027              		@ sp needed
 1028 0056 5DF8047B 		ldr	r7, [sp], #4
 1029              		.cfi_restore 7
 1030              		.cfi_def_cfa_offset 0
 1031 005a 7047     		bx	lr
 1032              	.L62:
 1033              		.align	2
 1034              	.L61:
 1035 005c 00000000 		.word	CapSense_CSD_rawDataIndex
 1036 0060 00000000 		.word	CapSense_CSD_numberOfSensors
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 33


 1037 0064 00000000 		.word	CapSense_CSD_sensorEnableMask
 1038              		.cfi_endproc
 1039              	.LFE9:
 1040              		.size	CapSense_CSD_EnableWidget, .-CapSense_CSD_EnableWidget
 1041              		.section	.text.CapSense_CSD_DisableWidget,"ax",%progbits
 1042              		.align	2
 1043              		.global	CapSense_CSD_DisableWidget
 1044              		.thumb
 1045              		.thumb_func
 1046              		.type	CapSense_CSD_DisableWidget, %function
 1047              	CapSense_CSD_DisableWidget:
 1048              	.LFB10:
 779:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 780:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 781:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** /*******************************************************************************
 782:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_DisableWidget
 783:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** ********************************************************************************
 784:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 785:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Summary:
 786:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 787:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 788:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Parameters:
 789:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 790:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 791:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Return:
 792:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  None
 793:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 794:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Global Variables:
 795:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning 
 796:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  state.
 797:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors 
 798:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 799:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for 
 800:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 801:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 802:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 803:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 804:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** * Reentrant:
 805:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *  No
 806:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *
 807:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** *******************************************************************************/
 808:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** void CapSense_CSD_DisableWidget(uint8 widget)
 809:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                     
 810:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** {
 1049              		.loc 1 810 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 16
 1052              		@ frame_needed = 1, uses_anonymous_args = 0
 1053              		@ link register save eliminated.
 1054 0000 80B4     		push	{r7}
 1055              		.cfi_def_cfa_offset 4
 1056              		.cfi_offset 7, -4
 1057 0002 85B0     		sub	sp, sp, #20
 1058              		.cfi_def_cfa_offset 24
 1059 0004 00AF     		add	r7, sp, #0
 1060              		.cfi_def_cfa_register 7
 1061 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 34


 1062 0008 FB71     		strb	r3, [r7, #7]
 811:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 pos;
 812:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 enMask;
 813:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1063              		.loc 1 813 0
 1064 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1065 000c 144A     		ldr	r2, .L65
 1066 000e D35C     		ldrb	r3, [r2, r3]
 1067 0010 FB73     		strb	r3, [r7, #15]
 814:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 numberOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1068              		.loc 1 814 0
 1069 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1070 0014 134A     		ldr	r2, .L65+4
 1071 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1072 0018 FB7B     		ldrb	r3, [r7, #15]
 1073 001a 1344     		add	r3, r3, r2
 1074 001c BB73     		strb	r3, [r7, #14]
 1075              	.L64:
 815:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****    
 816:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /* Disable all sensors of the widget */
 817:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     do
 818:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 819:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         pos = (rawIndex >> 3u);
 1076              		.loc 1 819 0 discriminator 1
 1077 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1078 0020 DB08     		lsrs	r3, r3, #3
 1079 0022 7B73     		strb	r3, [r7, #13]
 820:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1080              		.loc 1 820 0 discriminator 1
 1081 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1082 0026 03F00703 		and	r3, r3, #7
 1083 002a 0122     		movs	r2, #1
 1084 002c 02FA03F3 		lsl	r3, r2, r3
 1085 0030 3B73     		strb	r3, [r7, #12]
 821:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
 822:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorEnableMask[pos] &= (uint8)~enMask;
 1086              		.loc 1 822 0 discriminator 1
 1087 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1088 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1089 0036 0C49     		ldr	r1, .L65+8
 1090 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1091 003a 3A7B     		ldrb	r2, [r7, #12]
 1092 003c D243     		mvns	r2, r2
 1093 003e D2B2     		uxtb	r2, r2
 1094 0040 0A40     		ands	r2, r2, r1
 1095 0042 D1B2     		uxtb	r1, r2
 1096 0044 084A     		ldr	r2, .L65+8
 1097 0046 D154     		strb	r1, [r2, r3]
 823:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         rawIndex++;
 1098              		.loc 1 823 0 discriminator 1
 1099 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1100 004a 0133     		adds	r3, r3, #1
 1101 004c FB73     		strb	r3, [r7, #15]
 824:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 825:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     while(rawIndex < numberOfSensors);
 1102              		.loc 1 825 0 discriminator 1
 1103 004e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 35


 1104 0050 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1105 0052 9A42     		cmp	r2, r3
 1106 0054 E3D3     		bcc	.L64
 826:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 827:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 828:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** }
 1107              		.loc 1 828 0
 1108 0056 1437     		adds	r7, r7, #20
 1109              		.cfi_def_cfa_offset 4
 1110 0058 BD46     		mov	sp, r7
 1111              		.cfi_def_cfa_register 13
 1112              		@ sp needed
 1113 005a 5DF8047B 		ldr	r7, [sp], #4
 1114              		.cfi_restore 7
 1115              		.cfi_def_cfa_offset 0
 1116 005e 7047     		bx	lr
 1117              	.L66:
 1118              		.align	2
 1119              	.L65:
 1120 0060 00000000 		.word	CapSense_CSD_rawDataIndex
 1121 0064 00000000 		.word	CapSense_CSD_numberOfSensors
 1122 0068 00000000 		.word	CapSense_CSD_sensorEnableMask
 1123              		.cfi_endproc
 1124              	.LFE10:
 1125              		.size	CapSense_CSD_DisableWidget, .-CapSense_CSD_DisableWidget
 1126              		.section	.text.CapSense_CSD_FindMaximum,"ax",%progbits
 1127              		.align	2
 1128              		.global	CapSense_CSD_FindMaximum
 1129              		.thumb
 1130              		.thumb_func
 1131              		.type	CapSense_CSD_FindMaximum, %function
 1132              	CapSense_CSD_FindMaximum:
 1133              	.LFB11:
 829:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_CENTROIDS_COUNT)
 830:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 831:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_FindMaximum
 832:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
 833:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 834:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
 835:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 836:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_SensorSignal[] within defined cenrtoid and 
 837:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 838:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  ignored.
 839:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 840:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 841:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 842:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 843:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
 844:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_CSD_sensorSignal[] array.
 845:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  count:   number of elements within centroid.
 846:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 847:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  diplex:   pointer to diplex table.
 848:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
 849:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
 850:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 851:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 852:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 36


 853:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 854:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_IS_DIPLEX_SLIDER)
 855:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold, const uin
 856:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                       
 857:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #else 
 858:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint16 fingerThreshold)
 859:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                       
 860:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 861:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 1134              		.loc 1 861 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 16
 1137              		@ frame_needed = 1, uses_anonymous_args = 0
 1138              		@ link register save eliminated.
 1139 0000 80B4     		push	{r7}
 1140              		.cfi_def_cfa_offset 4
 1141              		.cfi_offset 7, -4
 1142 0002 85B0     		sub	sp, sp, #20
 1143              		.cfi_def_cfa_offset 24
 1144 0004 00AF     		add	r7, sp, #0
 1145              		.cfi_def_cfa_register 7
 1146 0006 0346     		mov	r3, r0
 1147 0008 FB71     		strb	r3, [r7, #7]
 1148 000a 0B46     		mov	r3, r1
 1149 000c BB71     		strb	r3, [r7, #6]
 1150 000e 1346     		mov	r3, r2	@ movhi
 1151 0010 BB80     		strh	r3, [r7, #4]	@ movhi
 862:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 i;
 863:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
 864:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 curPos = 0u;
 865:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* No centroid at the Start */
 866:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 curCntrdSize = 0u;
 867:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 868:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* The biggset centroid is zero */
 869:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 870:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
 871:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 872:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maximum = 0xFFu;
 1152              		.loc 1 872 0
 1153 0012 FF23     		movs	r3, #255
 1154 0014 BB73     		strb	r3, [r7, #14]
 873:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 temp = 0u;
 1155              		.loc 1 873 0
 1156 0016 0023     		movs	r3, #0
 1157 0018 BB81     		strh	r3, [r7, #12]	@ movhi
 874:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 *startOfSlider = &CapSense_CSD_sensorSignal[offset]; 
 1158              		.loc 1 874 0
 1159 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1160 001c 5B00     		lsls	r3, r3, #1
 1161 001e 164A     		ldr	r2, .L72
 1162 0020 1344     		add	r3, r3, r2
 1163 0022 BB60     		str	r3, [r7, #8]
 875:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 876:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
 877:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(diplex != 0u)
 878:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 879:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Initialize */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 37


 880:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 i = 0u;
 881:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
 882:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Make slider x2 as Diplexed */
 883:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 count <<= 1u;
 884:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 while(1u)
 885:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 { 
 886:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 887:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 888:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 889:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 890:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             /* Start of centroid */
 891:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = i;
 892:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
 893:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 894:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         else
 895:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 896:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
 897:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 898:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 899:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 900:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {          
 901:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if(curCntrdSize > 0u)
 902:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 903:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             /* We are in the end of current */
 904:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 905:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 906:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 907:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 908:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 909:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             
 910:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCntrdSize = 0u;
 911:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 912:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 913:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 914:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
 915:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     i++; 
 916:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     curPos = diplex[i];
 917:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if(i == count)
 918:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 919:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         break;
 920:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }            
 921:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 922:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
 923:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 924:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                        We are in the end of current */
 925:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 926:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
 927:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 928:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 929:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 930:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 931:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else
 932:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
 933:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Without diplexing */ 
 934:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 biggestCtrdSize = count;
 935:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
 936:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 38


 937:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
 938:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Check centroid size */
 939:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_NON_DIPLEX_SLIDER)
 940:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 941:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #else                    
 942:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 943:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
 944:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
 945:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 946:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 947:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
 948:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (diplex == 0u)
 949:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 950:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 curPos = i;
 951:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 952:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             else
 953:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 954:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 curPos = diplex[i];
 955:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }                    
 956:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #elif (CapSense_CSD_IS_DIPLEX_SLIDER)                    
 957:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             curPos = diplex[i];                    
 958:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLID
 959:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Looking for the grater element within centroid */
 960:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 961:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         {
 962:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 963:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
 964:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 maximum = i;
 965:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 temp = startOfSlider[curPos];
 966:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
 967:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         }
 968:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 969:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 } 
 970:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
 971:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             for (i = 0u; i < count; i++)
 1164              		.loc 1 971 0
 1165 0024 0023     		movs	r3, #0
 1166 0026 FB73     		strb	r3, [r7, #15]
 1167 0028 1AE0     		b	.L68
 1168              	.L70:
 972:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {                      
 973:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Looking for the grater element within centroid */
 974:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1169              		.loc 1 974 0
 1170 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1171 002c 5B00     		lsls	r3, r3, #1
 1172 002e BA68     		ldr	r2, [r7, #8]
 1173 0030 1344     		add	r3, r3, r2
 1174 0032 1B88     		ldrh	r3, [r3]
 1175 0034 BA88     		ldrh	r2, [r7, #4]
 1176 0036 9A42     		cmp	r2, r3
 1177 0038 0FD2     		bcs	.L69
 975:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
 976:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if(startOfSlider[i] > temp)
 1178              		.loc 1 976 0
 1179 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1180 003c 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 39


 1181 003e BA68     		ldr	r2, [r7, #8]
 1182 0040 1344     		add	r3, r3, r2
 1183 0042 1B88     		ldrh	r3, [r3]
 1184 0044 BA89     		ldrh	r2, [r7, #12]
 1185 0046 9A42     		cmp	r2, r3
 1186 0048 07D2     		bcs	.L69
 977:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
 978:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         maximum = i;
 1187              		.loc 1 978 0
 1188 004a FB7B     		ldrb	r3, [r7, #15]
 1189 004c BB73     		strb	r3, [r7, #14]
 979:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         temp = startOfSlider[i];
 1190              		.loc 1 979 0
 1191 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1192 0050 5B00     		lsls	r3, r3, #1
 1193 0052 BA68     		ldr	r2, [r7, #8]
 1194 0054 1344     		add	r3, r3, r2
 1195 0056 1B88     		ldrh	r3, [r3]	@ movhi
 1196 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 1197              	.L69:
 971:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {                      
 1198              		.loc 1 971 0 discriminator 2
 1199 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1200 005c 0133     		adds	r3, r3, #1
 1201 005e FB73     		strb	r3, [r7, #15]
 1202              	.L68:
 971:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {                      
 1203              		.loc 1 971 0 is_stmt 0 discriminator 1
 1204 0060 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1205 0062 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1206 0064 9A42     		cmp	r2, r3
 1207 0066 E0D3     		bcc	.L70
 980:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
 981:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
 982:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }    
 983:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
 984:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (maximum);
 1208              		.loc 1 984 0 is_stmt 1
 1209 0068 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 985:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 1210              		.loc 1 985 0
 1211 006a 1846     		mov	r0, r3
 1212 006c 1437     		adds	r7, r7, #20
 1213              		.cfi_def_cfa_offset 4
 1214 006e BD46     		mov	sp, r7
 1215              		.cfi_def_cfa_register 13
 1216              		@ sp needed
 1217 0070 5DF8047B 		ldr	r7, [sp], #4
 1218              		.cfi_restore 7
 1219              		.cfi_def_cfa_offset 0
 1220 0074 7047     		bx	lr
 1221              	.L73:
 1222 0076 00BF     		.align	2
 1223              	.L72:
 1224 0078 00000000 		.word	CapSense_CSD_sensorSignal
 1225              		.cfi_endproc
 1226              	.LFE11:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 40


 1227              		.size	CapSense_CSD_FindMaximum, .-CapSense_CSD_FindMaximum
 1228              		.section	.text.CapSense_CSD_CalcCentroid,"ax",%progbits
 1229              		.align	2
 1230              		.global	CapSense_CSD_CalcCentroid
 1231              		.thumb
 1232              		.thumb_func
 1233              		.type	CapSense_CSD_CalcCentroid, %function
 1234              	CapSense_CSD_CalcCentroid:
 1235              	.LFB12:
 986:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 987:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
 988:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 989:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_CalcCentroid
 990:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
 991:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 992:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
 993:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
 994:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  resolution.
 995:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
 996:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
 997:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  type:  widget type.
 998:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  diplex:  pointer to diplex table.
 999:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1000:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_CSD_SensorSignal[] array.
1001:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  count:    Number of elements within centroid.
1002:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1003:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  API resolution.
1004:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  noiseThreshold:  Noise threshould.
1005:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
1006:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1007:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value of the slider.
1008:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
1009:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1010:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Reentrant:
1011:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  No.
1012:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1013:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1014:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset, 
1015:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                         uint8 count, uint16 resolution, uint16 noiseThreshold)
1016:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 	                                    
1017:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 1236              		.loc 1 1017 0
 1237              		.cfi_startproc
 1238              		@ args = 4, pretend = 0, frame = 32
 1239              		@ frame_needed = 1, uses_anonymous_args = 0
 1240              		@ link register save eliminated.
 1241 0000 90B4     		push	{r4, r7}
 1242              		.cfi_def_cfa_offset 8
 1243              		.cfi_offset 4, -8
 1244              		.cfi_offset 7, -4
 1245 0002 88B0     		sub	sp, sp, #32
 1246              		.cfi_def_cfa_offset 40
 1247 0004 00AF     		add	r7, sp, #0
 1248              		.cfi_def_cfa_register 7
 1249 0006 0446     		mov	r4, r0
 1250 0008 0846     		mov	r0, r1
 1251 000a 1146     		mov	r1, r2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 41


 1252 000c 1A46     		mov	r2, r3
 1253 000e 2346     		mov	r3, r4
 1254 0010 FB71     		strb	r3, [r7, #7]
 1255 0012 0346     		mov	r3, r0
 1256 0014 BB71     		strb	r3, [r7, #6]
 1257 0016 0B46     		mov	r3, r1
 1258 0018 7B71     		strb	r3, [r7, #5]
 1259 001a 1346     		mov	r3, r2	@ movhi
 1260 001c 7B80     		strh	r3, [r7, #2]	@ movhi
1018:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_COUNT
1019:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posPrev = 0u;
 1261              		.loc 1 1019 0
 1262 001e 0023     		movs	r3, #0
 1263 0020 FB77     		strb	r3, [r7, #31]
1020:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posNext = 0u;
 1264              		.loc 1 1020 0
 1265 0022 0023     		movs	r3, #0
 1266 0024 BB77     		strb	r3, [r7, #30]
1021:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_C
1022:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                
1023:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)                
1024:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 pos;
1025:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1026:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1027:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Helps while centroid calulation */
1028:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         static uint16 CapSense_CSD_centroid[3u];
1029:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1030:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 position;
1031:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint32 numerator;
1032:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         int32 denominator;
1033:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 *startOfSlider = &CapSense_CSD_sensorSignal[offset];
 1267              		.loc 1 1033 0
 1268 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1269 0028 5B00     		lsls	r3, r3, #1
 1270 002a 494A     		ldr	r2, .L84
 1271 002c 1344     		add	r3, r3, r2
 1272 002e BB61     		str	r3, [r7, #24]
1034:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1035:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1036:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(type == CapSense_CSD_TYPE_RADIAL_SLIDER)
1037:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1038:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1039:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1040:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1041:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Copy Signal for found centriod */
1042:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1043:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                  
1044:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check borders for ROTARY Slider */
1045:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1046:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 { 
1047:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[count - 1u];
1048:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[1u];
1049:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1050:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1051:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1052:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1053:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[0u];
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 42


1054:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1055:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1056:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1057:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1058:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[maximum + 1u];
1059:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1060:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1061:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1062:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1063:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1064:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else
1065:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1066:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1067:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1068:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_C
1069:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)           
1070:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1071:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if(diplex == 0u)
1072:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1073:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         pos     = maximum;
1074:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1075:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posNext = maximum + 1u; 
1076:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1077:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else
1078:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1079:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         pos     = diplex[maximum];
1080:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1081:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posNext = diplex[maximum + 1u];
1082:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         count <<= 1u;
1083:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }                    
1084:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1085:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1086:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     pos     = diplex[maximum];
1087:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1088:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posNext = diplex[maximum + 1u];
1089:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     count <<= 1u;                    
1090:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #else                    
1091:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1092:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (maximum >= 1u)
 1273              		.loc 1 1092 0
 1274 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1275 0032 002B     		cmp	r3, #0
 1276 0034 02D0     		beq	.L75
1093:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1094:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
 1277              		.loc 1 1094 0
 1278 0036 FB79     		ldrb	r3, [r7, #7]
 1279 0038 013B     		subs	r3, r3, #1
 1280 003a FB77     		strb	r3, [r7, #31]
 1281              	.L75:
1095:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1096:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posNext = maximum + 1u; 
 1282              		.loc 1 1096 0
 1283 003c FB79     		ldrb	r3, [r7, #7]
 1284 003e 0133     		adds	r3, r3, #1
 1285 0040 BB77     		strb	r3, [r7, #30]
1097:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 43


1098:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1099:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Copy Signal for found centriod */
1100:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1101:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[pos];
1102:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #else
1103:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
 1286              		.loc 1 1103 0
 1287 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1288 0044 5B00     		lsls	r3, r3, #1
 1289 0046 BA69     		ldr	r2, [r7, #24]
 1290 0048 1344     		add	r3, r3, r2
 1291 004a 1A88     		ldrh	r2, [r3]
 1292 004c 414B     		ldr	r3, .L84+4
 1293 004e 5A80     		strh	r2, [r3, #2]	@ movhi
1104:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1105:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1106:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check borders for LINEAR Slider */
1107:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 1294              		.loc 1 1107 0
 1295 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1296 0052 002B     		cmp	r3, #0
 1297 0054 0AD1     		bne	.L76
1108:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 { 
1109:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
 1298              		.loc 1 1109 0
 1299 0056 3F4B     		ldr	r3, .L84+4
 1300 0058 0022     		movs	r2, #0
 1301 005a 1A80     		strh	r2, [r3]	@ movhi
1110:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
 1302              		.loc 1 1110 0
 1303 005c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1304 005e 5B00     		lsls	r3, r3, #1
 1305 0060 BA69     		ldr	r2, [r7, #24]
 1306 0062 1344     		add	r3, r3, r2
 1307 0064 1A88     		ldrh	r2, [r3]
 1308 0066 3B4B     		ldr	r3, .L84+4
 1309 0068 9A80     		strh	r2, [r3, #4]	@ movhi
 1310 006a 1DE0     		b	.L77
 1311              	.L76:
1111:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1112:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 1312              		.loc 1 1112 0
 1313 006c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1314 006e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1315 0070 013B     		subs	r3, r3, #1
 1316 0072 9A42     		cmp	r2, r3
 1317 0074 0AD1     		bne	.L78
1113:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1114:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
 1318              		.loc 1 1114 0
 1319 0076 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1320 0078 5B00     		lsls	r3, r3, #1
 1321 007a BA69     		ldr	r2, [r7, #24]
 1322 007c 1344     		add	r3, r3, r2
 1323 007e 1A88     		ldrh	r2, [r3]
 1324 0080 344B     		ldr	r3, .L84+4
 1325 0082 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 44


1115:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
 1326              		.loc 1 1115 0
 1327 0084 334B     		ldr	r3, .L84+4
 1328 0086 0022     		movs	r2, #0
 1329 0088 9A80     		strh	r2, [r3, #4]	@ movhi
 1330 008a 0DE0     		b	.L77
 1331              	.L78:
1116:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1117:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1118:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1119:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
 1332              		.loc 1 1119 0
 1333 008c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1334 008e 5B00     		lsls	r3, r3, #1
 1335 0090 BA69     		ldr	r2, [r7, #24]
 1336 0092 1344     		add	r3, r3, r2
 1337 0094 1A88     		ldrh	r2, [r3]
 1338 0096 2F4B     		ldr	r3, .L84+4
 1339 0098 1A80     		strh	r2, [r3]	@ movhi
1120:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
 1340              		.loc 1 1120 0
 1341 009a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1342 009c 5B00     		lsls	r3, r3, #1
 1343 009e BA69     		ldr	r2, [r7, #24]
 1344 00a0 1344     		add	r3, r3, r2
 1345 00a2 1A88     		ldrh	r2, [r3]
 1346 00a4 2B4B     		ldr	r3, .L84+4
 1347 00a6 9A80     		strh	r2, [r3, #4]	@ movhi
 1348              	.L77:
1121:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1122:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_CSD_TOTAL_TOUCH_PADS
1123:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1124:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1125:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1126:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1127:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     
1128:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1129:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_PREV] > noiseThreshold)
 1349              		.loc 1 1129 0
 1350 00a8 2A4B     		ldr	r3, .L84+4
 1351 00aa 1B88     		ldrh	r3, [r3]
 1352 00ac 3A8D     		ldrh	r2, [r7, #40]
 1353 00ae 9A42     		cmp	r2, r3
 1354 00b0 07D2     		bcs	.L79
1130:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1131:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] -= noiseThreshold;
 1355              		.loc 1 1131 0
 1356 00b2 284B     		ldr	r3, .L84+4
 1357 00b4 1A88     		ldrh	r2, [r3]
 1358 00b6 3B8D     		ldrh	r3, [r7, #40]	@ movhi
 1359 00b8 D31A     		subs	r3, r2, r3
 1360 00ba 9AB2     		uxth	r2, r3
 1361 00bc 254B     		ldr	r3, .L84+4
 1362 00be 1A80     		strh	r2, [r3]	@ movhi
 1363 00c0 02E0     		b	.L80
 1364              	.L79:
1132:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 45


1133:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1134:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1135:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
 1365              		.loc 1 1135 0
 1366 00c2 244B     		ldr	r3, .L84+4
 1367 00c4 0022     		movs	r2, #0
 1368 00c6 1A80     		strh	r2, [r3]	@ movhi
 1369              	.L80:
1136:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1137:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1138:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1139:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         CapSense_CSD_centroid[CapSense_CSD_POS] -= noiseThreshold;
 1370              		.loc 1 1139 0
 1371 00c8 224B     		ldr	r3, .L84+4
 1372 00ca 5A88     		ldrh	r2, [r3, #2]
 1373 00cc 3B8D     		ldrh	r3, [r7, #40]	@ movhi
 1374 00ce D31A     		subs	r3, r2, r3
 1375 00d0 9AB2     		uxth	r2, r3
 1376 00d2 204B     		ldr	r3, .L84+4
 1377 00d4 5A80     		strh	r2, [r3, #2]	@ movhi
1140:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1141:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1142:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] > noiseThreshold)
 1378              		.loc 1 1142 0
 1379 00d6 1F4B     		ldr	r3, .L84+4
 1380 00d8 9B88     		ldrh	r3, [r3, #4]
 1381 00da 3A8D     		ldrh	r2, [r7, #40]
 1382 00dc 9A42     		cmp	r2, r3
 1383 00de 07D2     		bcs	.L81
1143:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1144:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -= noiseThreshold;
 1384              		.loc 1 1144 0
 1385 00e0 1C4B     		ldr	r3, .L84+4
 1386 00e2 9A88     		ldrh	r2, [r3, #4]
 1387 00e4 3B8D     		ldrh	r3, [r7, #40]	@ movhi
 1388 00e6 D31A     		subs	r3, r2, r3
 1389 00e8 9AB2     		uxth	r2, r3
 1390 00ea 1A4B     		ldr	r3, .L84+4
 1391 00ec 9A80     		strh	r2, [r3, #4]	@ movhi
 1392 00ee 02E0     		b	.L82
 1393              	.L81:
1145:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1146:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1147:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1148:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
 1394              		.loc 1 1148 0
 1395 00f0 184B     		ldr	r3, .L84+4
 1396 00f2 0022     		movs	r2, #0
 1397 00f4 9A80     		strh	r2, [r3, #4]	@ movhi
 1398              	.L82:
1149:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1150:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1151:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1152:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Si+1 - Si-1 */
1153:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         numerator = (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -
 1399              		.loc 1 1153 0
 1400 00f6 174B     		ldr	r3, .L84+4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 46


 1401 00f8 9B88     		ldrh	r3, [r3, #4]
 1402 00fa 1A46     		mov	r2, r3
1154:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
 1403              		.loc 1 1154 0
 1404 00fc 154B     		ldr	r3, .L84+4
 1405 00fe 1B88     		ldrh	r3, [r3]
1153:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
 1406              		.loc 1 1153 0
 1407 0100 D31A     		subs	r3, r2, r3
 1408 0102 7B61     		str	r3, [r7, #20]
1155:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1156:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Si+1 + Si + Si-1 */
1157:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         denominator = (int32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV] + 
 1409              		.loc 1 1157 0
 1410 0104 134B     		ldr	r3, .L84+4
 1411 0106 1B88     		ldrh	r3, [r3]
 1412 0108 1A46     		mov	r2, r3
1158:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] + 
 1413              		.loc 1 1158 0
 1414 010a 124B     		ldr	r3, .L84+4
 1415 010c 5B88     		ldrh	r3, [r3, #2]
1157:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] + 
 1416              		.loc 1 1157 0
 1417 010e 1344     		add	r3, r3, r2
1159:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT];
 1418              		.loc 1 1159 0
 1419 0110 104A     		ldr	r2, .L84+4
 1420 0112 9288     		ldrh	r2, [r2, #4]
1157:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] + 
 1421              		.loc 1 1157 0
 1422 0114 1344     		add	r3, r3, r2
 1423 0116 3B61     		str	r3, [r7, #16]
1160:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1161:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* (numerator/denominator) + maximum */
1162:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 1424              		.loc 1 1162 0
 1425 0118 7B69     		ldr	r3, [r7, #20]
 1426 011a 1B02     		lsls	r3, r3, #8
 1427 011c 1A46     		mov	r2, r3
 1428 011e 3B69     		ldr	r3, [r7, #16]
 1429 0120 92FBF3F3 		sdiv	r3, r2, r3
 1430 0124 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1431 0126 1202     		lsls	r2, r2, #8
 1432 0128 1344     		add	r3, r3, r2
 1433 012a 3B61     		str	r3, [r7, #16]
1163:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1164:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if(CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1165:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Only required for RADIAL Slider */
1166:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(denominator < 0)
1167:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1168:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1169:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1170:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1171:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1172:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         denominator *= (int16)resolution;
 1434              		.loc 1 1172 0
 1435 012c 7B88     		ldrh	r3, [r7, #2]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 47


 1436 012e 1AB2     		sxth	r2, r3
 1437 0130 3B69     		ldr	r3, [r7, #16]
 1438 0132 02FB03F3 		mul	r3, r2, r3
 1439 0136 3B61     		str	r3, [r7, #16]
1173:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1174:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Round the relust and put it to uint8 */
1175:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CSD_CENTROID_ROUND_VALUE));
 1440              		.loc 1 1175 0
 1441 0138 3B69     		ldr	r3, [r7, #16]
 1442 013a 03F5FE43 		add	r3, r3, #32512
 1443 013e 1B0C     		lsrs	r3, r3, #16
 1444 0140 FB73     		strb	r3, [r7, #15]
1176:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1177:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (position);
 1445              		.loc 1 1177 0
 1446 0142 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1178:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }    
 1447              		.loc 1 1178 0
 1448 0144 1846     		mov	r0, r3
 1449 0146 2037     		adds	r7, r7, #32
 1450              		.cfi_def_cfa_offset 8
 1451 0148 BD46     		mov	sp, r7
 1452              		.cfi_def_cfa_register 13
 1453              		@ sp needed
 1454 014a 90BC     		pop	{r4, r7}
 1455              		.cfi_restore 7
 1456              		.cfi_restore 4
 1457              		.cfi_def_cfa_offset 0
 1458 014c 7047     		bx	lr
 1459              	.L85:
 1460 014e 00BF     		.align	2
 1461              	.L84:
 1462 0150 00000000 		.word	CapSense_CSD_sensorSignal
 1463 0154 04000000 		.word	CapSense_CSD_centroid.5126
 1464              		.cfi_endproc
 1465              	.LFE12:
 1466              		.size	CapSense_CSD_CalcCentroid, .-CapSense_CSD_CalcCentroid
 1467              		.section	.text.CapSense_CSD_GetCentroidPos,"ax",%progbits
 1468              		.align	2
 1469              		.global	CapSense_CSD_GetCentroidPos
 1470              		.thumb
 1471              		.thumb_func
 1472              		.type	CapSense_CSD_GetCentroidPos, %function
 1473              	CapSense_CSD_GetCentroidPos:
 1474              	.LFB13:
1179:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_CENTROIDS_COUNT) */
1180:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1181:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1182:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1183:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1184:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetCentroidPos
1185:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     ********************************************************************************
1186:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1187:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Summary:
1188:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1189:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1190:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 48


1191:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  result if enabled.
1192:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1193:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Parameters:
1194:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1195:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1196:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_LS__"widget_name"            5
1197:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * 
1198:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Return:
1199:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  Returns position value of the linear slider.
1200:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1201:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Side Effects:
1202:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1203:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1204:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1205:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1206:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1207:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1208:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1209:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Note:
1210:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1211:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1212:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1213:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1214:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1215:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     * Reentrant:
1216:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *  No.
1217:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *
1218:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1219:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_GetCentroidPos(uint8 widget) 
1220:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     {
 1475              		.loc 1 1220 0
 1476              		.cfi_startproc
 1477              		@ args = 0, pretend = 0, frame = 16
 1478              		@ frame_needed = 1, uses_anonymous_args = 0
 1479 0000 90B5     		push	{r4, r7, lr}
 1480              		.cfi_def_cfa_offset 12
 1481              		.cfi_offset 4, -12
 1482              		.cfi_offset 7, -8
 1483              		.cfi_offset 14, -4
 1484 0002 87B0     		sub	sp, sp, #28
 1485              		.cfi_def_cfa_offset 40
 1486 0004 02AF     		add	r7, sp, #8
 1487              		.cfi_def_cfa 7, 32
 1488 0006 0346     		mov	r3, r0
 1489 0008 FB71     		strb	r3, [r7, #7]
1221:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1222:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             const uint8 CYCODE *diplex;
1223:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1224:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 
1225:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1226:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1227:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1228:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];  
1229:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1230:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1231:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) ||
1232:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 49


1233:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1234:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MAS
1235:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_
1236:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                */
1237:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1238:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 maximum;
1239:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint16 position;
1240:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
 1490              		.loc 1 1240 0
 1491 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1492 000c 174A     		ldr	r2, .L90
 1493 000e D35C     		ldrb	r3, [r2, r3]
 1494 0010 7B73     		strb	r3, [r7, #13]
1241:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
 1495              		.loc 1 1241 0
 1496 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1497 0014 164A     		ldr	r2, .L90+4
 1498 0016 D35C     		ldrb	r3, [r2, r3]
 1499 0018 3B73     		strb	r3, [r7, #12]
1242:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1243:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1244:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             if(widget < CapSense_CSD_TOTAL_DIPLEXED_SLIDERS_COUNT)
1245:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1246:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 maximum = CapSense_CSD_diplexTable[widget];
1247:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 diplex = &CapSense_CSD_diplexTable[maximum];
1248:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1249:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             else
1250:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             {
1251:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 diplex = 0u;
1252:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             }
1253:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1254:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1255:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */      
1256:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)        
1257:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget],
1258:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #else
1259:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget])
 1500              		.loc 1 1259 0
 1501 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1502 001c 154A     		ldr	r2, .L90+8
 1503 001e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1504 0022 797B     		ldrb	r1, [r7, #13]	@ zero_extendqisi2
 1505 0024 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 1506 0026 0846     		mov	r0, r1
 1507 0028 1146     		mov	r1, r2
 1508 002a 1A46     		mov	r2, r3
 1509 002c FFF7FEFF 		bl	CapSense_CSD_FindMaximum
 1510 0030 0346     		mov	r3, r0
 1511 0032 FB72     		strb	r3, [r7, #11]
1260:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1261:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1262:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         if (maximum != 0xFFu)
 1512              		.loc 1 1262 0
 1513 0034 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1514 0036 FF2B     		cmp	r3, #255
 1515 0038 0FD0     		beq	.L87
1263:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 50


1264:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1265:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum, 
 1516              		.loc 1 1265 0
 1517 003a 4FF4C854 		mov	r4, #6400
 1518 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1519 0040 0D4A     		ldr	r2, .L90+12
 1520 0042 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1521 0046 F87A     		ldrb	r0, [r7, #11]	@ zero_extendqisi2
 1522 0048 797B     		ldrb	r1, [r7, #13]	@ zero_extendqisi2
 1523 004a 3A7B     		ldrb	r2, [r7, #12]	@ zero_extendqisi2
 1524 004c 0093     		str	r3, [sp]
 1525 004e 2346     		mov	r3, r4
 1526 0050 FFF7FEFF 		bl	CapSense_CSD_CalcCentroid
 1527 0054 0346     		mov	r3, r0
 1528 0056 FB81     		strh	r3, [r7, #14]	@ movhi
 1529 0058 02E0     		b	.L88
 1530              	.L87:
1266:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1267:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1268:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1269:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1270:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1271:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1272:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     /* Caluclate position to store filters data */
1273:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1274:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     
1275:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
1276:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1277:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Init filters */
1278:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1279:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1280:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1281:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1282:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1283:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1284:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) || 
1285:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1286:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1287:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1288:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1289:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1290:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1291:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1292:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1293:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1294:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         
1295:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
1296:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1297:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     else
1298:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     {
1299:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         /* Do filtering */
1300:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1301:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1302:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1303:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1304:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
1305:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 51


1306:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1307:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
1308:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1309:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1310:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1311:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /*(0u != (CapSense_CSD_MEDIAN_FILTER &
1312:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *         CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1313:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1314:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1315:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if(0u!=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1316:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) 
1317:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1318:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1319:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
1320:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1321:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1322:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]=CapSense_CSD_posFiltersDat
1323:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1324:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1325:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1326:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1327:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1328:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1329:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1330:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER)) 
1331:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1332:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
1333:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1334:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1335:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1336:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
1337:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1338:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1339:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1340:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1341:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1342:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1343:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
1344:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1345:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1346:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }                                
1347:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
1348:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1349:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1350:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1351:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1352:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
1353:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             {
1354:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
1355:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1356:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1357:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                             }
1358:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
1359:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1360:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                                */
1361:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     }
1362:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 52


1363:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1364:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1365:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1366:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         else
1367:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         {
1368:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             /* The maximum wasn't found */
1369:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
 1531              		.loc 1 1369 0
 1532 005a 4FF6FF73 		movw	r3, #65535
 1533 005e FB81     		strh	r3, [r7, #14]	@ movhi
 1534              	.L88:
1370:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1371:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #if(0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1372:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 /* Reset the filters */
1373:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1374:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 {
1375:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
1376:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****                 }
1377:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1378:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         }
1379:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c **** 
1380:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         
1381:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****         return (position);
 1535              		.loc 1 1381 0
 1536 0060 FB89     		ldrh	r3, [r7, #14]
1382:.\Generated_Source\PSoC5/CapSense_CSD_CSHL.c ****     }
 1537              		.loc 1 1382 0
 1538 0062 1846     		mov	r0, r3
 1539 0064 1437     		adds	r7, r7, #20
 1540              		.cfi_def_cfa_offset 12
 1541 0066 BD46     		mov	sp, r7
 1542              		.cfi_def_cfa_register 13
 1543              		@ sp needed
 1544 0068 90BD     		pop	{r4, r7, pc}
 1545              	.L91:
 1546 006a 00BF     		.align	2
 1547              	.L90:
 1548 006c 00000000 		.word	CapSense_CSD_rawDataIndex
 1549 0070 00000000 		.word	CapSense_CSD_numberOfSensors
 1550 0074 00000000 		.word	CapSense_CSD_fingerThreshold
 1551 0078 00000000 		.word	CapSense_CSD_noiseThreshold
 1552              		.cfi_endproc
 1553              	.LFE13:
 1554              		.size	CapSense_CSD_GetCentroidPos, .-CapSense_CSD_GetCentroidPos
 1555              		.bss
 1556 0003 00       		.align	2
 1557              	CapSense_CSD_centroid.5126:
 1558 0004 00000000 		.space	6
 1558      0000
 1559 000a 0000     		.text
 1560              	.Letext0:
 1561              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1562              		.file 3 ".\\Generated_Source\\PSoC5\\CapSense_CSD.h"
 1563              		.file 4 ".\\Generated_Source\\PSoC5\\CapSense_CSD_CSHL.h"
 1564              		.section	.debug_info,"",%progbits
 1565              	.Ldebug_info0:
 1566 0000 49070000 		.4byte	0x749
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 53


 1567 0004 0400     		.2byte	0x4
 1568 0006 00000000 		.4byte	.Ldebug_abbrev0
 1569 000a 04       		.byte	0x4
 1570 000b 01       		.uleb128 0x1
 1571 000c 0A030000 		.4byte	.LASF75
 1572 0010 01       		.byte	0x1
 1573 0011 A8050000 		.4byte	.LASF76
 1574 0015 74020000 		.4byte	.LASF77
 1575 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1576 001d 00000000 		.4byte	0
 1577 0021 00000000 		.4byte	.Ldebug_line0
 1578 0025 02       		.uleb128 0x2
 1579 0026 01       		.byte	0x1
 1580 0027 06       		.byte	0x6
 1581 0028 9C000000 		.4byte	.LASF0
 1582 002c 02       		.uleb128 0x2
 1583 002d 01       		.byte	0x1
 1584 002e 08       		.byte	0x8
 1585 002f 19040000 		.4byte	.LASF1
 1586 0033 02       		.uleb128 0x2
 1587 0034 02       		.byte	0x2
 1588 0035 05       		.byte	0x5
 1589 0036 36040000 		.4byte	.LASF2
 1590 003a 02       		.uleb128 0x2
 1591 003b 02       		.byte	0x2
 1592 003c 07       		.byte	0x7
 1593 003d 01020000 		.4byte	.LASF3
 1594 0041 02       		.uleb128 0x2
 1595 0042 04       		.byte	0x4
 1596 0043 05       		.byte	0x5
 1597 0044 EE000000 		.4byte	.LASF4
 1598 0048 02       		.uleb128 0x2
 1599 0049 04       		.byte	0x4
 1600 004a 07       		.byte	0x7
 1601 004b BF010000 		.4byte	.LASF5
 1602 004f 02       		.uleb128 0x2
 1603 0050 08       		.byte	0x8
 1604 0051 05       		.byte	0x5
 1605 0052 8E000000 		.4byte	.LASF6
 1606 0056 02       		.uleb128 0x2
 1607 0057 08       		.byte	0x8
 1608 0058 07       		.byte	0x7
 1609 0059 77000000 		.4byte	.LASF7
 1610 005d 03       		.uleb128 0x3
 1611 005e 04       		.byte	0x4
 1612 005f 05       		.byte	0x5
 1613 0060 696E7400 		.ascii	"int\000"
 1614 0064 02       		.uleb128 0x2
 1615 0065 04       		.byte	0x4
 1616 0066 07       		.byte	0x7
 1617 0067 A9010000 		.4byte	.LASF8
 1618 006b 04       		.uleb128 0x4
 1619 006c 27010000 		.4byte	.LASF9
 1620 0070 02       		.byte	0x2
 1621 0071 9201     		.2byte	0x192
 1622 0073 2C000000 		.4byte	0x2c
 1623 0077 04       		.uleb128 0x4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 54


 1624 0078 22000000 		.4byte	.LASF10
 1625 007c 02       		.byte	0x2
 1626 007d 9301     		.2byte	0x193
 1627 007f 3A000000 		.4byte	0x3a
 1628 0083 04       		.uleb128 0x4
 1629 0084 34010000 		.4byte	.LASF11
 1630 0088 02       		.byte	0x2
 1631 0089 9401     		.2byte	0x194
 1632 008b 48000000 		.4byte	0x48
 1633 008f 04       		.uleb128 0x4
 1634 0090 A2050000 		.4byte	.LASF12
 1635 0094 02       		.byte	0x2
 1636 0095 9601     		.2byte	0x196
 1637 0097 33000000 		.4byte	0x33
 1638 009b 04       		.uleb128 0x4
 1639 009c C1000000 		.4byte	.LASF13
 1640 00a0 02       		.byte	0x2
 1641 00a1 9701     		.2byte	0x197
 1642 00a3 41000000 		.4byte	0x41
 1643 00a7 02       		.uleb128 0x2
 1644 00a8 04       		.byte	0x4
 1645 00a9 04       		.byte	0x4
 1646 00aa B1030000 		.4byte	.LASF14
 1647 00ae 02       		.uleb128 0x2
 1648 00af 08       		.byte	0x8
 1649 00b0 04       		.byte	0x4
 1650 00b1 2D010000 		.4byte	.LASF15
 1651 00b5 02       		.uleb128 0x2
 1652 00b6 01       		.byte	0x1
 1653 00b7 08       		.byte	0x8
 1654 00b8 D3040000 		.4byte	.LASF16
 1655 00bc 02       		.uleb128 0x2
 1656 00bd 04       		.byte	0x4
 1657 00be 07       		.byte	0x7
 1658 00bf 43020000 		.4byte	.LASF17
 1659 00c3 05       		.uleb128 0x5
 1660 00c4 46010000 		.4byte	.LASF18
 1661 00c8 01       		.byte	0x1
 1662 00c9 81       		.byte	0x81
 1663 00ca 00000000 		.4byte	.LFB0
 1664 00ce 70000000 		.4byte	.LFE0-.LFB0
 1665 00d2 01       		.uleb128 0x1
 1666 00d3 9C       		.byte	0x9c
 1667 00d4 F5000000 		.4byte	0xf5
 1668 00d8 06       		.uleb128 0x6
 1669 00d9 14020000 		.4byte	.LASF20
 1670 00dd 01       		.byte	0x1
 1671 00de 81       		.byte	0x81
 1672 00df 6B000000 		.4byte	0x6b
 1673 00e3 02       		.uleb128 0x2
 1674 00e4 91       		.byte	0x91
 1675 00e5 6F       		.sleb128 -17
 1676 00e6 07       		.uleb128 0x7
 1677 00e7 40040000 		.4byte	.LASF22
 1678 00eb 01       		.byte	0x1
 1679 00ec 85       		.byte	0x85
 1680 00ed 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 55


 1681 00f1 02       		.uleb128 0x2
 1682 00f2 91       		.byte	0x91
 1683 00f3 77       		.sleb128 -9
 1684 00f4 00       		.byte	0
 1685 00f5 08       		.uleb128 0x8
 1686 00f6 49000000 		.4byte	.LASF19
 1687 00fa 01       		.byte	0x1
 1688 00fb CD       		.byte	0xcd
 1689 00fc 00000000 		.4byte	.LFB1
 1690 0100 2C000000 		.4byte	.LFE1-.LFB1
 1691 0104 01       		.uleb128 0x1
 1692 0105 9C       		.byte	0x9c
 1693 0106 19010000 		.4byte	0x119
 1694 010a 06       		.uleb128 0x6
 1695 010b 14020000 		.4byte	.LASF20
 1696 010f 01       		.byte	0x1
 1697 0110 CD       		.byte	0xcd
 1698 0111 6B000000 		.4byte	0x6b
 1699 0115 02       		.uleb128 0x2
 1700 0116 91       		.byte	0x91
 1701 0117 77       		.sleb128 -9
 1702 0118 00       		.byte	0
 1703 0119 09       		.uleb128 0x9
 1704 011a D8030000 		.4byte	.LASF21
 1705 011e 01       		.byte	0x1
 1706 011f 0101     		.2byte	0x101
 1707 0121 00000000 		.4byte	.LFB2
 1708 0125 26000000 		.4byte	.LFE2-.LFB2
 1709 0129 01       		.uleb128 0x1
 1710 012a 9C       		.byte	0x9c
 1711 012b 3D010000 		.4byte	0x13d
 1712 012f 0A       		.uleb128 0xa
 1713 0130 6900     		.ascii	"i\000"
 1714 0132 01       		.byte	0x1
 1715 0133 0401     		.2byte	0x104
 1716 0135 6B000000 		.4byte	0x6b
 1717 0139 02       		.uleb128 0x2
 1718 013a 91       		.byte	0x91
 1719 013b 77       		.sleb128 -9
 1720 013c 00       		.byte	0
 1721 013d 09       		.uleb128 0x9
 1722 013e 4C020000 		.4byte	.LASF23
 1723 0142 01       		.byte	0x1
 1724 0143 2201     		.2byte	0x122
 1725 0145 00000000 		.4byte	.LFB3
 1726 0149 6C000000 		.4byte	.LFE3-.LFB3
 1727 014d 01       		.uleb128 0x1
 1728 014e 9C       		.byte	0x9c
 1729 014f 7F010000 		.4byte	0x17f
 1730 0153 0A       		.uleb128 0xa
 1731 0154 6900     		.ascii	"i\000"
 1732 0156 01       		.byte	0x1
 1733 0157 2501     		.2byte	0x125
 1734 0159 6B000000 		.4byte	0x6b
 1735 015d 02       		.uleb128 0x2
 1736 015e 91       		.byte	0x91
 1737 015f 77       		.sleb128 -9
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 56


 1738 0160 0A       		.uleb128 0xa
 1739 0161 706F7300 		.ascii	"pos\000"
 1740 0165 01       		.byte	0x1
 1741 0166 2601     		.2byte	0x126
 1742 0168 6B000000 		.4byte	0x6b
 1743 016c 02       		.uleb128 0x2
 1744 016d 91       		.byte	0x91
 1745 016e 76       		.sleb128 -10
 1746 016f 0B       		.uleb128 0xb
 1747 0170 E5020000 		.4byte	.LASF24
 1748 0174 01       		.byte	0x1
 1749 0175 2701     		.2byte	0x127
 1750 0177 6B000000 		.4byte	0x6b
 1751 017b 02       		.uleb128 0x2
 1752 017c 91       		.byte	0x91
 1753 017d 75       		.sleb128 -11
 1754 017e 00       		.byte	0
 1755 017f 09       		.uleb128 0x9
 1756 0180 6D040000 		.4byte	.LASF25
 1757 0184 01       		.byte	0x1
 1758 0185 6501     		.2byte	0x165
 1759 0187 00000000 		.4byte	.LFB4
 1760 018b 40010000 		.4byte	.LFE4-.LFB4
 1761 018f 01       		.uleb128 0x1
 1762 0190 9C       		.byte	0x9c
 1763 0191 F0010000 		.4byte	0x1f0
 1764 0195 0C       		.uleb128 0xc
 1765 0196 14020000 		.4byte	.LASF20
 1766 019a 01       		.byte	0x1
 1767 019b 6501     		.2byte	0x165
 1768 019d 6B000000 		.4byte	0x6b
 1769 01a1 02       		.uleb128 0x2
 1770 01a2 91       		.byte	0x91
 1771 01a3 67       		.sleb128 -25
 1772 01a4 0B       		.uleb128 0xb
 1773 01a5 35020000 		.4byte	.LASF26
 1774 01a9 01       		.byte	0x1
 1775 01aa 6801     		.2byte	0x168
 1776 01ac 83000000 		.4byte	0x83
 1777 01b0 02       		.uleb128 0x2
 1778 01b1 91       		.byte	0x91
 1779 01b2 6C       		.sleb128 -20
 1780 01b3 0B       		.uleb128 0xb
 1781 01b4 11060000 		.4byte	.LASF27
 1782 01b8 01       		.byte	0x1
 1783 01b9 6901     		.2byte	0x169
 1784 01bb 77000000 		.4byte	0x77
 1785 01bf 02       		.uleb128 0x2
 1786 01c0 91       		.byte	0x91
 1787 01c1 76       		.sleb128 -10
 1788 01c2 0B       		.uleb128 0xb
 1789 01c3 29000000 		.4byte	.LASF28
 1790 01c7 01       		.byte	0x1
 1791 01c8 6A01     		.2byte	0x16a
 1792 01ca 77000000 		.4byte	0x77
 1793 01ce 02       		.uleb128 0x2
 1794 01cf 91       		.byte	0x91
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 57


 1795 01d0 70       		.sleb128 -16
 1796 01d1 0B       		.uleb128 0xb
 1797 01d2 40040000 		.4byte	.LASF22
 1798 01d6 01       		.byte	0x1
 1799 01d7 6B01     		.2byte	0x16b
 1800 01d9 6B000000 		.4byte	0x6b
 1801 01dd 02       		.uleb128 0x2
 1802 01de 91       		.byte	0x91
 1803 01df 75       		.sleb128 -11
 1804 01e0 0B       		.uleb128 0xb
 1805 01e1 27040000 		.4byte	.LASF29
 1806 01e5 01       		.byte	0x1
 1807 01e6 6C01     		.2byte	0x16c
 1808 01e8 77000000 		.4byte	0x77
 1809 01ec 02       		.uleb128 0x2
 1810 01ed 91       		.byte	0x91
 1811 01ee 72       		.sleb128 -14
 1812 01ef 00       		.byte	0
 1813 01f0 09       		.uleb128 0x9
 1814 01f1 F2040000 		.4byte	.LASF30
 1815 01f5 01       		.byte	0x1
 1816 01f6 1202     		.2byte	0x212
 1817 01f8 00000000 		.4byte	.LFB5
 1818 01fc 50000000 		.4byte	.LFE5-.LFB5
 1819 0200 01       		.uleb128 0x1
 1820 0201 9C       		.byte	0x9c
 1821 0202 32020000 		.4byte	0x232
 1822 0206 0A       		.uleb128 0xa
 1823 0207 6900     		.ascii	"i\000"
 1824 0209 01       		.byte	0x1
 1825 020a 1502     		.2byte	0x215
 1826 020c 6B000000 		.4byte	0x6b
 1827 0210 02       		.uleb128 0x2
 1828 0211 91       		.byte	0x91
 1829 0212 77       		.sleb128 -9
 1830 0213 0A       		.uleb128 0xa
 1831 0214 706F7300 		.ascii	"pos\000"
 1832 0218 01       		.byte	0x1
 1833 0219 1602     		.2byte	0x216
 1834 021b 6B000000 		.4byte	0x6b
 1835 021f 02       		.uleb128 0x2
 1836 0220 91       		.byte	0x91
 1837 0221 76       		.sleb128 -10
 1838 0222 0B       		.uleb128 0xb
 1839 0223 E5020000 		.4byte	.LASF24
 1840 0227 01       		.byte	0x1
 1841 0228 1702     		.2byte	0x217
 1842 022a 6B000000 		.4byte	0x6b
 1843 022e 02       		.uleb128 0x2
 1844 022f 91       		.byte	0x91
 1845 0230 75       		.sleb128 -11
 1846 0231 00       		.byte	0
 1847 0232 0D       		.uleb128 0xd
 1848 0233 C7000000 		.4byte	.LASF36
 1849 0237 01       		.byte	0x1
 1850 0238 4C02     		.2byte	0x24c
 1851 023a 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 58


 1852 023e 00000000 		.4byte	.LFB6
 1853 0242 28010000 		.4byte	.LFE6-.LFB6
 1854 0246 01       		.uleb128 0x1
 1855 0247 9C       		.byte	0x9c
 1856 0248 C5020000 		.4byte	0x2c5
 1857 024c 0C       		.uleb128 0xc
 1858 024d 14020000 		.4byte	.LASF20
 1859 0251 01       		.byte	0x1
 1860 0252 4C02     		.2byte	0x24c
 1861 0254 6B000000 		.4byte	0x6b
 1862 0258 02       		.uleb128 0x2
 1863 0259 91       		.byte	0x91
 1864 025a 67       		.sleb128 -25
 1865 025b 0B       		.uleb128 0xb
 1866 025c 4F050000 		.4byte	.LASF31
 1867 0260 01       		.byte	0x1
 1868 0261 4F02     		.2byte	0x24f
 1869 0263 6B000000 		.4byte	0x6b
 1870 0267 02       		.uleb128 0x2
 1871 0268 91       		.byte	0x91
 1872 0269 77       		.sleb128 -9
 1873 026a 0A       		.uleb128 0xa
 1874 026b 706F7300 		.ascii	"pos\000"
 1875 026f 01       		.byte	0x1
 1876 0270 5102     		.2byte	0x251
 1877 0272 6B000000 		.4byte	0x6b
 1878 0276 02       		.uleb128 0x2
 1879 0277 91       		.byte	0x91
 1880 0278 76       		.sleb128 -10
 1881 0279 0B       		.uleb128 0xb
 1882 027a 47040000 		.4byte	.LASF32
 1883 027e 01       		.byte	0x1
 1884 027f 5202     		.2byte	0x252
 1885 0281 6B000000 		.4byte	0x6b
 1886 0285 02       		.uleb128 0x2
 1887 0286 91       		.byte	0x91
 1888 0287 75       		.sleb128 -11
 1889 0288 0B       		.uleb128 0xb
 1890 0289 40040000 		.4byte	.LASF22
 1891 028d 01       		.byte	0x1
 1892 028e 5402     		.2byte	0x254
 1893 0290 6B000000 		.4byte	0x6b
 1894 0294 02       		.uleb128 0x2
 1895 0295 91       		.byte	0x91
 1896 0296 74       		.sleb128 -12
 1897 0297 0B       		.uleb128 0xb
 1898 0298 39000000 		.4byte	.LASF33
 1899 029c 01       		.byte	0x1
 1900 029d 5502     		.2byte	0x255
 1901 029f 77000000 		.4byte	0x77
 1902 02a3 02       		.uleb128 0x2
 1903 02a4 91       		.byte	0x91
 1904 02a5 72       		.sleb128 -14
 1905 02a6 0B       		.uleb128 0xb
 1906 02a7 3B010000 		.4byte	.LASF34
 1907 02ab 01       		.byte	0x1
 1908 02ac 5602     		.2byte	0x256
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 59


 1909 02ae 77000000 		.4byte	0x77
 1910 02b2 02       		.uleb128 0x2
 1911 02b3 91       		.byte	0x91
 1912 02b4 70       		.sleb128 -16
 1913 02b5 0B       		.uleb128 0xb
 1914 02b6 3A020000 		.4byte	.LASF35
 1915 02ba 01       		.byte	0x1
 1916 02bb 5702     		.2byte	0x257
 1917 02bd 6B000000 		.4byte	0x6b
 1918 02c1 02       		.uleb128 0x2
 1919 02c2 91       		.byte	0x91
 1920 02c3 6F       		.sleb128 -17
 1921 02c4 00       		.byte	0
 1922 02c5 0E       		.uleb128 0xe
 1923 02c6 81050000 		.4byte	.LASF37
 1924 02ca 01       		.byte	0x1
 1925 02cb 9C02     		.2byte	0x29c
 1926 02cd 6B000000 		.4byte	0x6b
 1927 02d1 00000000 		.4byte	.LFB7
 1928 02d5 54000000 		.4byte	.LFE7-.LFB7
 1929 02d9 01       		.uleb128 0x1
 1930 02da 9C       		.byte	0x9c
 1931 02db 1C030000 		.4byte	0x31c
 1932 02df 0C       		.uleb128 0xc
 1933 02e0 40040000 		.4byte	.LASF22
 1934 02e4 01       		.byte	0x1
 1935 02e5 9C02     		.2byte	0x29c
 1936 02e7 6B000000 		.4byte	0x6b
 1937 02eb 02       		.uleb128 0x2
 1938 02ec 91       		.byte	0x91
 1939 02ed 6F       		.sleb128 -17
 1940 02ee 0B       		.uleb128 0xb
 1941 02ef A8000000 		.4byte	.LASF38
 1942 02f3 01       		.byte	0x1
 1943 02f4 9F02     		.2byte	0x29f
 1944 02f6 6B000000 		.4byte	0x6b
 1945 02fa 02       		.uleb128 0x2
 1946 02fb 91       		.byte	0x91
 1947 02fc 77       		.sleb128 -9
 1948 02fd 0B       		.uleb128 0xb
 1949 02fe B1000000 		.4byte	.LASF39
 1950 0302 01       		.byte	0x1
 1951 0303 A002     		.2byte	0x2a0
 1952 0305 6B000000 		.4byte	0x6b
 1953 0309 02       		.uleb128 0x2
 1954 030a 91       		.byte	0x91
 1955 030b 75       		.sleb128 -11
 1956 030c 0B       		.uleb128 0xb
 1957 030d E8000000 		.4byte	.LASF40
 1958 0311 01       		.byte	0x1
 1959 0312 A102     		.2byte	0x2a1
 1960 0314 6B000000 		.4byte	0x6b
 1961 0318 02       		.uleb128 0x2
 1962 0319 91       		.byte	0x91
 1963 031a 76       		.sleb128 -10
 1964 031b 00       		.byte	0
 1965 031c 0E       		.uleb128 0xe
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 60


 1966 031d 5D050000 		.4byte	.LASF41
 1967 0321 01       		.byte	0x1
 1968 0322 C802     		.2byte	0x2c8
 1969 0324 6B000000 		.4byte	0x6b
 1970 0328 00000000 		.4byte	.LFB8
 1971 032c 38000000 		.4byte	.LFE8-.LFB8
 1972 0330 01       		.uleb128 0x1
 1973 0331 9C       		.byte	0x9c
 1974 0332 53030000 		.4byte	0x353
 1975 0336 0A       		.uleb128 0xa
 1976 0337 6900     		.ascii	"i\000"
 1977 0339 01       		.byte	0x1
 1978 033a CB02     		.2byte	0x2cb
 1979 033c 6B000000 		.4byte	0x6b
 1980 0340 02       		.uleb128 0x2
 1981 0341 91       		.byte	0x91
 1982 0342 77       		.sleb128 -9
 1983 0343 0B       		.uleb128 0xb
 1984 0344 E8000000 		.4byte	.LASF40
 1985 0348 01       		.byte	0x1
 1986 0349 CC02     		.2byte	0x2cc
 1987 034b 6B000000 		.4byte	0x6b
 1988 034f 02       		.uleb128 0x2
 1989 0350 91       		.byte	0x91
 1990 0351 76       		.sleb128 -10
 1991 0352 00       		.byte	0
 1992 0353 0F       		.uleb128 0xf
 1993 0354 D8040000 		.4byte	.LASF42
 1994 0358 01       		.byte	0x1
 1995 0359 F602     		.2byte	0x2f6
 1996 035b 00000000 		.4byte	.LFB9
 1997 035f 68000000 		.4byte	.LFE9-.LFB9
 1998 0363 01       		.uleb128 0x1
 1999 0364 9C       		.byte	0x9c
 2000 0365 B5030000 		.4byte	0x3b5
 2001 0369 0C       		.uleb128 0xc
 2002 036a 40040000 		.4byte	.LASF22
 2003 036e 01       		.byte	0x1
 2004 036f F602     		.2byte	0x2f6
 2005 0371 6B000000 		.4byte	0x6b
 2006 0375 02       		.uleb128 0x2
 2007 0376 91       		.byte	0x91
 2008 0377 6F       		.sleb128 -17
 2009 0378 0A       		.uleb128 0xa
 2010 0379 706F7300 		.ascii	"pos\000"
 2011 037d 01       		.byte	0x1
 2012 037e F902     		.2byte	0x2f9
 2013 0380 6B000000 		.4byte	0x6b
 2014 0384 02       		.uleb128 0x2
 2015 0385 91       		.byte	0x91
 2016 0386 75       		.sleb128 -11
 2017 0387 0B       		.uleb128 0xb
 2018 0388 E5020000 		.4byte	.LASF24
 2019 038c 01       		.byte	0x1
 2020 038d FA02     		.2byte	0x2fa
 2021 038f 6B000000 		.4byte	0x6b
 2022 0393 02       		.uleb128 0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 61


 2023 0394 91       		.byte	0x91
 2024 0395 74       		.sleb128 -12
 2025 0396 0B       		.uleb128 0xb
 2026 0397 A8000000 		.4byte	.LASF38
 2027 039b 01       		.byte	0x1
 2028 039c FB02     		.2byte	0x2fb
 2029 039e 6B000000 		.4byte	0x6b
 2030 03a2 02       		.uleb128 0x2
 2031 03a3 91       		.byte	0x91
 2032 03a4 77       		.sleb128 -9
 2033 03a5 0B       		.uleb128 0xb
 2034 03a6 B1000000 		.4byte	.LASF39
 2035 03aa 01       		.byte	0x1
 2036 03ab FC02     		.2byte	0x2fc
 2037 03ad 6B000000 		.4byte	0x6b
 2038 03b1 02       		.uleb128 0x2
 2039 03b2 91       		.byte	0x91
 2040 03b3 76       		.sleb128 -10
 2041 03b4 00       		.byte	0
 2042 03b5 0F       		.uleb128 0xf
 2043 03b6 19060000 		.4byte	.LASF43
 2044 03ba 01       		.byte	0x1
 2045 03bb 2803     		.2byte	0x328
 2046 03bd 00000000 		.4byte	.LFB10
 2047 03c1 6C000000 		.4byte	.LFE10-.LFB10
 2048 03c5 01       		.uleb128 0x1
 2049 03c6 9C       		.byte	0x9c
 2050 03c7 17040000 		.4byte	0x417
 2051 03cb 0C       		.uleb128 0xc
 2052 03cc 40040000 		.4byte	.LASF22
 2053 03d0 01       		.byte	0x1
 2054 03d1 2803     		.2byte	0x328
 2055 03d3 6B000000 		.4byte	0x6b
 2056 03d7 02       		.uleb128 0x2
 2057 03d8 91       		.byte	0x91
 2058 03d9 6F       		.sleb128 -17
 2059 03da 0A       		.uleb128 0xa
 2060 03db 706F7300 		.ascii	"pos\000"
 2061 03df 01       		.byte	0x1
 2062 03e0 2B03     		.2byte	0x32b
 2063 03e2 6B000000 		.4byte	0x6b
 2064 03e6 02       		.uleb128 0x2
 2065 03e7 91       		.byte	0x91
 2066 03e8 75       		.sleb128 -11
 2067 03e9 0B       		.uleb128 0xb
 2068 03ea E5020000 		.4byte	.LASF24
 2069 03ee 01       		.byte	0x1
 2070 03ef 2C03     		.2byte	0x32c
 2071 03f1 6B000000 		.4byte	0x6b
 2072 03f5 02       		.uleb128 0x2
 2073 03f6 91       		.byte	0x91
 2074 03f7 74       		.sleb128 -12
 2075 03f8 0B       		.uleb128 0xb
 2076 03f9 A8000000 		.4byte	.LASF38
 2077 03fd 01       		.byte	0x1
 2078 03fe 2D03     		.2byte	0x32d
 2079 0400 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 62


 2080 0404 02       		.uleb128 0x2
 2081 0405 91       		.byte	0x91
 2082 0406 77       		.sleb128 -9
 2083 0407 0B       		.uleb128 0xb
 2084 0408 B1000000 		.4byte	.LASF39
 2085 040c 01       		.byte	0x1
 2086 040d 2E03     		.2byte	0x32e
 2087 040f 6B000000 		.4byte	0x6b
 2088 0413 02       		.uleb128 0x2
 2089 0414 91       		.byte	0x91
 2090 0415 76       		.sleb128 -10
 2091 0416 00       		.byte	0
 2092 0417 0D       		.uleb128 0xd
 2093 0418 98030000 		.4byte	.LASF44
 2094 041c 01       		.byte	0x1
 2095 041d 5A03     		.2byte	0x35a
 2096 041f 6B000000 		.4byte	0x6b
 2097 0423 00000000 		.4byte	.LFB11
 2098 0427 7C000000 		.4byte	.LFE11-.LFB11
 2099 042b 01       		.uleb128 0x1
 2100 042c 9C       		.byte	0x9c
 2101 042d 99040000 		.4byte	0x499
 2102 0431 0C       		.uleb128 0xc
 2103 0432 16050000 		.4byte	.LASF45
 2104 0436 01       		.byte	0x1
 2105 0437 5A03     		.2byte	0x35a
 2106 0439 6B000000 		.4byte	0x6b
 2107 043d 02       		.uleb128 0x2
 2108 043e 91       		.byte	0x91
 2109 043f 6F       		.sleb128 -17
 2110 0440 0C       		.uleb128 0xc
 2111 0441 00000000 		.4byte	.LASF46
 2112 0445 01       		.byte	0x1
 2113 0446 5A03     		.2byte	0x35a
 2114 0448 6B000000 		.4byte	0x6b
 2115 044c 02       		.uleb128 0x2
 2116 044d 91       		.byte	0x91
 2117 044e 6E       		.sleb128 -18
 2118 044f 0C       		.uleb128 0xc
 2119 0450 39000000 		.4byte	.LASF33
 2120 0454 01       		.byte	0x1
 2121 0455 5A03     		.2byte	0x35a
 2122 0457 77000000 		.4byte	0x77
 2123 045b 02       		.uleb128 0x2
 2124 045c 91       		.byte	0x91
 2125 045d 6C       		.sleb128 -20
 2126 045e 0A       		.uleb128 0xa
 2127 045f 6900     		.ascii	"i\000"
 2128 0461 01       		.byte	0x1
 2129 0462 5E03     		.2byte	0x35e
 2130 0464 6B000000 		.4byte	0x6b
 2131 0468 02       		.uleb128 0x2
 2132 0469 91       		.byte	0x91
 2133 046a 77       		.sleb128 -9
 2134 046b 0B       		.uleb128 0xb
 2135 046c 4E040000 		.4byte	.LASF47
 2136 0470 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 63


 2137 0471 6803     		.2byte	0x368
 2138 0473 6B000000 		.4byte	0x6b
 2139 0477 02       		.uleb128 0x2
 2140 0478 91       		.byte	0x91
 2141 0479 76       		.sleb128 -10
 2142 047a 0B       		.uleb128 0xb
 2143 047b 8E010000 		.4byte	.LASF48
 2144 047f 01       		.byte	0x1
 2145 0480 6903     		.2byte	0x369
 2146 0482 77000000 		.4byte	0x77
 2147 0486 02       		.uleb128 0x2
 2148 0487 91       		.byte	0x91
 2149 0488 74       		.sleb128 -12
 2150 0489 0B       		.uleb128 0xb
 2151 048a 80010000 		.4byte	.LASF49
 2152 048e 01       		.byte	0x1
 2153 048f 6A03     		.2byte	0x36a
 2154 0491 99040000 		.4byte	0x499
 2155 0495 02       		.uleb128 0x2
 2156 0496 91       		.byte	0x91
 2157 0497 70       		.sleb128 -16
 2158 0498 00       		.byte	0
 2159 0499 10       		.uleb128 0x10
 2160 049a 04       		.byte	0x4
 2161 049b 77000000 		.4byte	0x77
 2162 049f 0D       		.uleb128 0xd
 2163 04a0 1B020000 		.4byte	.LASF50
 2164 04a4 01       		.byte	0x1
 2165 04a5 F603     		.2byte	0x3f6
 2166 04a7 6B000000 		.4byte	0x6b
 2167 04ab 00000000 		.4byte	.LFB12
 2168 04af 58010000 		.4byte	.LFE12-.LFB12
 2169 04b3 01       		.uleb128 0x1
 2170 04b4 9C       		.byte	0x9c
 2171 04b5 71050000 		.4byte	0x571
 2172 04b9 0C       		.uleb128 0xc
 2173 04ba 4E040000 		.4byte	.LASF47
 2174 04be 01       		.byte	0x1
 2175 04bf F603     		.2byte	0x3f6
 2176 04c1 6B000000 		.4byte	0x6b
 2177 04c5 02       		.uleb128 0x2
 2178 04c6 91       		.byte	0x91
 2179 04c7 5F       		.sleb128 -33
 2180 04c8 0C       		.uleb128 0xc
 2181 04c9 16050000 		.4byte	.LASF45
 2182 04cd 01       		.byte	0x1
 2183 04ce F603     		.2byte	0x3f6
 2184 04d0 6B000000 		.4byte	0x6b
 2185 04d4 02       		.uleb128 0x2
 2186 04d5 91       		.byte	0x91
 2187 04d6 5E       		.sleb128 -34
 2188 04d7 0C       		.uleb128 0xc
 2189 04d8 00000000 		.4byte	.LASF46
 2190 04dc 01       		.byte	0x1
 2191 04dd F703     		.2byte	0x3f7
 2192 04df 6B000000 		.4byte	0x6b
 2193 04e3 02       		.uleb128 0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 64


 2194 04e4 91       		.byte	0x91
 2195 04e5 5D       		.sleb128 -35
 2196 04e6 0C       		.uleb128 0xc
 2197 04e7 8F040000 		.4byte	.LASF51
 2198 04eb 01       		.byte	0x1
 2199 04ec F703     		.2byte	0x3f7
 2200 04ee 77000000 		.4byte	0x77
 2201 04f2 02       		.uleb128 0x2
 2202 04f3 91       		.byte	0x91
 2203 04f4 5A       		.sleb128 -38
 2204 04f5 0C       		.uleb128 0xc
 2205 04f6 27040000 		.4byte	.LASF29
 2206 04fa 01       		.byte	0x1
 2207 04fb F703     		.2byte	0x3f7
 2208 04fd 77000000 		.4byte	0x77
 2209 0501 02       		.uleb128 0x2
 2210 0502 91       		.byte	0x91
 2211 0503 00       		.sleb128 0
 2212 0504 0B       		.uleb128 0xb
 2213 0505 6F000000 		.4byte	.LASF52
 2214 0509 01       		.byte	0x1
 2215 050a FB03     		.2byte	0x3fb
 2216 050c 6B000000 		.4byte	0x6b
 2217 0510 02       		.uleb128 0x2
 2218 0511 91       		.byte	0x91
 2219 0512 77       		.sleb128 -9
 2220 0513 0B       		.uleb128 0xb
 2221 0514 5C010000 		.4byte	.LASF53
 2222 0518 01       		.byte	0x1
 2223 0519 FC03     		.2byte	0x3fc
 2224 051b 6B000000 		.4byte	0x6b
 2225 051f 02       		.uleb128 0x2
 2226 0520 91       		.byte	0x91
 2227 0521 76       		.sleb128 -10
 2228 0522 0B       		.uleb128 0xb
 2229 0523 EB010000 		.4byte	.LASF54
 2230 0527 01       		.byte	0x1
 2231 0528 0404     		.2byte	0x404
 2232 052a 71050000 		.4byte	0x571
 2233 052e 05       		.uleb128 0x5
 2234 052f 03       		.byte	0x3
 2235 0530 04000000 		.4byte	CapSense_CSD_centroid.5126
 2236 0534 0B       		.uleb128 0xb
 2237 0535 B6010000 		.4byte	.LASF55
 2238 0539 01       		.byte	0x1
 2239 053a 0604     		.2byte	0x406
 2240 053c 6B000000 		.4byte	0x6b
 2241 0540 02       		.uleb128 0x2
 2242 0541 91       		.byte	0x91
 2243 0542 67       		.sleb128 -25
 2244 0543 0B       		.uleb128 0xb
 2245 0544 F7000000 		.4byte	.LASF56
 2246 0548 01       		.byte	0x1
 2247 0549 0704     		.2byte	0x407
 2248 054b 83000000 		.4byte	0x83
 2249 054f 02       		.uleb128 0x2
 2250 0550 91       		.byte	0x91
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 65


 2251 0551 6C       		.sleb128 -20
 2252 0552 0B       		.uleb128 0xb
 2253 0553 01010000 		.4byte	.LASF57
 2254 0557 01       		.byte	0x1
 2255 0558 0804     		.2byte	0x408
 2256 055a 9B000000 		.4byte	0x9b
 2257 055e 02       		.uleb128 0x2
 2258 055f 91       		.byte	0x91
 2259 0560 68       		.sleb128 -24
 2260 0561 0B       		.uleb128 0xb
 2261 0562 80010000 		.4byte	.LASF49
 2262 0566 01       		.byte	0x1
 2263 0567 0904     		.2byte	0x409
 2264 0569 99040000 		.4byte	0x499
 2265 056d 02       		.uleb128 0x2
 2266 056e 91       		.byte	0x91
 2267 056f 70       		.sleb128 -16
 2268 0570 00       		.byte	0
 2269 0571 11       		.uleb128 0x11
 2270 0572 77000000 		.4byte	0x77
 2271 0576 81050000 		.4byte	0x581
 2272 057a 12       		.uleb128 0x12
 2273 057b BC000000 		.4byte	0xbc
 2274 057f 02       		.byte	0x2
 2275 0580 00       		.byte	0
 2276 0581 0E       		.uleb128 0xe
 2277 0582 06000000 		.4byte	.LASF58
 2278 0586 01       		.byte	0x1
 2279 0587 C304     		.2byte	0x4c3
 2280 0589 77000000 		.4byte	0x77
 2281 058d 00000000 		.4byte	.LFB13
 2282 0591 7C000000 		.4byte	.LFE13-.LFB13
 2283 0595 01       		.uleb128 0x1
 2284 0596 9C       		.byte	0x9c
 2285 0597 E7050000 		.4byte	0x5e7
 2286 059b 0C       		.uleb128 0xc
 2287 059c 40040000 		.4byte	.LASF22
 2288 05a0 01       		.byte	0x1
 2289 05a1 C304     		.2byte	0x4c3
 2290 05a3 6B000000 		.4byte	0x6b
 2291 05a7 02       		.uleb128 0x2
 2292 05a8 91       		.byte	0x91
 2293 05a9 67       		.sleb128 -25
 2294 05aa 0B       		.uleb128 0xb
 2295 05ab 4E040000 		.4byte	.LASF47
 2296 05af 01       		.byte	0x1
 2297 05b0 D604     		.2byte	0x4d6
 2298 05b2 6B000000 		.4byte	0x6b
 2299 05b6 02       		.uleb128 0x2
 2300 05b7 91       		.byte	0x91
 2301 05b8 6B       		.sleb128 -21
 2302 05b9 0B       		.uleb128 0xb
 2303 05ba B6010000 		.4byte	.LASF55
 2304 05be 01       		.byte	0x1
 2305 05bf D704     		.2byte	0x4d7
 2306 05c1 77000000 		.4byte	0x77
 2307 05c5 02       		.uleb128 0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 66


 2308 05c6 91       		.byte	0x91
 2309 05c7 6E       		.sleb128 -18
 2310 05c8 0B       		.uleb128 0xb
 2311 05c9 16050000 		.4byte	.LASF45
 2312 05cd 01       		.byte	0x1
 2313 05ce D804     		.2byte	0x4d8
 2314 05d0 6B000000 		.4byte	0x6b
 2315 05d4 02       		.uleb128 0x2
 2316 05d5 91       		.byte	0x91
 2317 05d6 6D       		.sleb128 -19
 2318 05d7 0B       		.uleb128 0xb
 2319 05d8 00000000 		.4byte	.LASF46
 2320 05dc 01       		.byte	0x1
 2321 05dd D904     		.2byte	0x4d9
 2322 05df 6B000000 		.4byte	0x6b
 2323 05e3 02       		.uleb128 0x2
 2324 05e4 91       		.byte	0x91
 2325 05e5 6C       		.sleb128 -20
 2326 05e6 00       		.byte	0
 2327 05e7 11       		.uleb128 0x11
 2328 05e8 77000000 		.4byte	0x77
 2329 05ec F7050000 		.4byte	0x5f7
 2330 05f0 12       		.uleb128 0x12
 2331 05f1 BC000000 		.4byte	0xbc
 2332 05f5 06       		.byte	0x6
 2333 05f6 00       		.byte	0
 2334 05f7 13       		.uleb128 0x13
 2335 05f8 56040000 		.4byte	.LASF59
 2336 05fc 03       		.byte	0x3
 2337 05fd BF02     		.2byte	0x2bf
 2338 05ff E7050000 		.4byte	0x5e7
 2339 0603 11       		.uleb128 0x11
 2340 0604 6B000000 		.4byte	0x6b
 2341 0608 13060000 		.4byte	0x613
 2342 060c 12       		.uleb128 0x12
 2343 060d BC000000 		.4byte	0xbc
 2344 0611 00       		.byte	0
 2345 0612 00       		.byte	0
 2346 0613 13       		.uleb128 0x13
 2347 0614 EC020000 		.4byte	.LASF60
 2348 0618 04       		.byte	0x4
 2349 0619 0501     		.2byte	0x105
 2350 061b 03060000 		.4byte	0x603
 2351 061f 11       		.uleb128 0x11
 2352 0620 6B000000 		.4byte	0x6b
 2353 0624 2F060000 		.4byte	0x62f
 2354 0628 12       		.uleb128 0x12
 2355 0629 BC000000 		.4byte	0xbc
 2356 062d 06       		.byte	0x6
 2357 062e 00       		.byte	0
 2358 062f 13       		.uleb128 0x13
 2359 0630 0D010000 		.4byte	.LASF61
 2360 0634 04       		.byte	0x4
 2361 0635 0601     		.2byte	0x106
 2362 0637 3B060000 		.4byte	0x63b
 2363 063b 14       		.uleb128 0x14
 2364 063c 1F060000 		.4byte	0x61f
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 67


 2365 0640 15       		.uleb128 0x15
 2366 0641 64010000 		.4byte	.LASF62
 2367 0645 01       		.byte	0x1
 2368 0646 29       		.byte	0x29
 2369 0647 E7050000 		.4byte	0x5e7
 2370 064b 05       		.uleb128 0x5
 2371 064c 03       		.byte	0x3
 2372 064d 00000000 		.4byte	CapSense_CSD_sensorBaseline
 2373 0651 15       		.uleb128 0x15
 2374 0652 F2050000 		.4byte	.LASF63
 2375 0656 01       		.byte	0x1
 2376 0657 2A       		.byte	0x2a
 2377 0658 1F060000 		.4byte	0x61f
 2378 065c 05       		.uleb128 0x5
 2379 065d 03       		.byte	0x3
 2380 065e 00000000 		.4byte	CapSense_CSD_sensorBaselineLow
 2381 0662 15       		.uleb128 0x15
 2382 0663 D1010000 		.4byte	.LASF64
 2383 0667 01       		.byte	0x1
 2384 0668 2B       		.byte	0x2b
 2385 0669 E7050000 		.4byte	0x5e7
 2386 066d 05       		.uleb128 0x5
 2387 066e 03       		.byte	0x3
 2388 066f 00000000 		.4byte	CapSense_CSD_sensorSignal
 2389 0673 15       		.uleb128 0x15
 2390 0674 34060000 		.4byte	.LASF65
 2391 0678 01       		.byte	0x1
 2392 0679 2C       		.byte	0x2c
 2393 067a 03060000 		.4byte	0x603
 2394 067e 05       		.uleb128 0x5
 2395 067f 03       		.byte	0x3
 2396 0680 00000000 		.4byte	CapSense_CSD_sensorOnMask
 2397 0684 15       		.uleb128 0x15
 2398 0685 B7030000 		.4byte	.LASF66
 2399 0689 01       		.byte	0x1
 2400 068a 2E       		.byte	0x2e
 2401 068b 1F060000 		.4byte	0x61f
 2402 068f 05       		.uleb128 0x5
 2403 0690 03       		.byte	0x3
 2404 0691 00000000 		.4byte	CapSense_CSD_lowBaselineResetCnt
 2405 0695 15       		.uleb128 0x15
 2406 0696 FC030000 		.4byte	.LASF67
 2407 069a 01       		.byte	0x1
 2408 069b 30       		.byte	0x30
 2409 069c 71050000 		.4byte	0x571
 2410 06a0 05       		.uleb128 0x5
 2411 06a1 03       		.byte	0x3
 2412 06a2 00000000 		.4byte	CapSense_CSD_fingerThreshold
 2413 06a6 15       		.uleb128 0x15
 2414 06a7 B7040000 		.4byte	.LASF68
 2415 06ab 01       		.byte	0x1
 2416 06ac 34       		.byte	0x34
 2417 06ad 71050000 		.4byte	0x571
 2418 06b1 05       		.uleb128 0x5
 2419 06b2 03       		.byte	0x3
 2420 06b3 00000000 		.4byte	CapSense_CSD_noiseThreshold
 2421 06b7 15       		.uleb128 0x15
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 68


 2422 06b8 37050000 		.4byte	.LASF69
 2423 06bc 01       		.byte	0x1
 2424 06bd 38       		.byte	0x38
 2425 06be 71050000 		.4byte	0x571
 2426 06c2 05       		.uleb128 0x5
 2427 06c3 03       		.byte	0x3
 2428 06c4 00000000 		.4byte	CapSense_CSD_hysteresis
 2429 06c8 11       		.uleb128 0x11
 2430 06c9 6B000000 		.4byte	0x6b
 2431 06cd D8060000 		.4byte	0x6d8
 2432 06d1 12       		.uleb128 0x12
 2433 06d2 BC000000 		.4byte	0xbc
 2434 06d6 02       		.byte	0x2
 2435 06d7 00       		.byte	0
 2436 06d8 15       		.uleb128 0x15
 2437 06d9 93010000 		.4byte	.LASF70
 2438 06dd 01       		.byte	0x1
 2439 06de 3C       		.byte	0x3c
 2440 06df C8060000 		.4byte	0x6c8
 2441 06e3 05       		.uleb128 0x5
 2442 06e4 03       		.byte	0x3
 2443 06e5 00000000 		.4byte	CapSense_CSD_debounce
 2444 06e9 15       		.uleb128 0x15
 2445 06ea D5050000 		.4byte	.LASF71
 2446 06ee 01       		.byte	0x1
 2447 06ef 40       		.byte	0x40
 2448 06f0 C8060000 		.4byte	0x6c8
 2449 06f4 05       		.uleb128 0x5
 2450 06f5 03       		.byte	0x3
 2451 06f6 00000000 		.4byte	CapSense_CSD_debounceCounter
 2452 06fa 15       		.uleb128 0x15
 2453 06fb CB020000 		.4byte	.LASF72
 2454 06ff 01       		.byte	0x1
 2455 0700 44       		.byte	0x44
 2456 0701 0B070000 		.4byte	0x70b
 2457 0705 05       		.uleb128 0x5
 2458 0706 03       		.byte	0x3
 2459 0707 00000000 		.4byte	CapSense_CSD_rawDataIndex
 2460 070b 14       		.uleb128 0x14
 2461 070c C8060000 		.4byte	0x6c8
 2462 0710 15       		.uleb128 0x15
 2463 0711 9A040000 		.4byte	.LASF73
 2464 0715 01       		.byte	0x1
 2465 0716 4B       		.byte	0x4b
 2466 0717 21070000 		.4byte	0x721
 2467 071b 05       		.uleb128 0x5
 2468 071c 03       		.byte	0x3
 2469 071d 00000000 		.4byte	CapSense_CSD_numberOfSensors
 2470 0721 14       		.uleb128 0x14
 2471 0722 C8060000 		.4byte	0x6c8
 2472 0726 11       		.uleb128 0x11
 2473 0727 77000000 		.4byte	0x77
 2474 072b 36070000 		.4byte	0x736
 2475 072f 12       		.uleb128 0x12
 2476 0730 BC000000 		.4byte	0xbc
 2477 0734 00       		.byte	0
 2478 0735 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 69


 2479 0736 15       		.uleb128 0x15
 2480 0737 1D050000 		.4byte	.LASF74
 2481 073b 01       		.byte	0x1
 2482 073c 52       		.byte	0x52
 2483 073d 47070000 		.4byte	0x747
 2484 0741 05       		.uleb128 0x5
 2485 0742 03       		.byte	0x3
 2486 0743 00000000 		.4byte	CapSense_CSD_centroidMult
 2487 0747 14       		.uleb128 0x14
 2488 0748 26070000 		.4byte	0x726
 2489 074c 00       		.byte	0
 2490              		.section	.debug_abbrev,"",%progbits
 2491              	.Ldebug_abbrev0:
 2492 0000 01       		.uleb128 0x1
 2493 0001 11       		.uleb128 0x11
 2494 0002 01       		.byte	0x1
 2495 0003 25       		.uleb128 0x25
 2496 0004 0E       		.uleb128 0xe
 2497 0005 13       		.uleb128 0x13
 2498 0006 0B       		.uleb128 0xb
 2499 0007 03       		.uleb128 0x3
 2500 0008 0E       		.uleb128 0xe
 2501 0009 1B       		.uleb128 0x1b
 2502 000a 0E       		.uleb128 0xe
 2503 000b 55       		.uleb128 0x55
 2504 000c 17       		.uleb128 0x17
 2505 000d 11       		.uleb128 0x11
 2506 000e 01       		.uleb128 0x1
 2507 000f 10       		.uleb128 0x10
 2508 0010 17       		.uleb128 0x17
 2509 0011 00       		.byte	0
 2510 0012 00       		.byte	0
 2511 0013 02       		.uleb128 0x2
 2512 0014 24       		.uleb128 0x24
 2513 0015 00       		.byte	0
 2514 0016 0B       		.uleb128 0xb
 2515 0017 0B       		.uleb128 0xb
 2516 0018 3E       		.uleb128 0x3e
 2517 0019 0B       		.uleb128 0xb
 2518 001a 03       		.uleb128 0x3
 2519 001b 0E       		.uleb128 0xe
 2520 001c 00       		.byte	0
 2521 001d 00       		.byte	0
 2522 001e 03       		.uleb128 0x3
 2523 001f 24       		.uleb128 0x24
 2524 0020 00       		.byte	0
 2525 0021 0B       		.uleb128 0xb
 2526 0022 0B       		.uleb128 0xb
 2527 0023 3E       		.uleb128 0x3e
 2528 0024 0B       		.uleb128 0xb
 2529 0025 03       		.uleb128 0x3
 2530 0026 08       		.uleb128 0x8
 2531 0027 00       		.byte	0
 2532 0028 00       		.byte	0
 2533 0029 04       		.uleb128 0x4
 2534 002a 16       		.uleb128 0x16
 2535 002b 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 70


 2536 002c 03       		.uleb128 0x3
 2537 002d 0E       		.uleb128 0xe
 2538 002e 3A       		.uleb128 0x3a
 2539 002f 0B       		.uleb128 0xb
 2540 0030 3B       		.uleb128 0x3b
 2541 0031 05       		.uleb128 0x5
 2542 0032 49       		.uleb128 0x49
 2543 0033 13       		.uleb128 0x13
 2544 0034 00       		.byte	0
 2545 0035 00       		.byte	0
 2546 0036 05       		.uleb128 0x5
 2547 0037 2E       		.uleb128 0x2e
 2548 0038 01       		.byte	0x1
 2549 0039 3F       		.uleb128 0x3f
 2550 003a 19       		.uleb128 0x19
 2551 003b 03       		.uleb128 0x3
 2552 003c 0E       		.uleb128 0xe
 2553 003d 3A       		.uleb128 0x3a
 2554 003e 0B       		.uleb128 0xb
 2555 003f 3B       		.uleb128 0x3b
 2556 0040 0B       		.uleb128 0xb
 2557 0041 27       		.uleb128 0x27
 2558 0042 19       		.uleb128 0x19
 2559 0043 11       		.uleb128 0x11
 2560 0044 01       		.uleb128 0x1
 2561 0045 12       		.uleb128 0x12
 2562 0046 06       		.uleb128 0x6
 2563 0047 40       		.uleb128 0x40
 2564 0048 18       		.uleb128 0x18
 2565 0049 9742     		.uleb128 0x2117
 2566 004b 19       		.uleb128 0x19
 2567 004c 01       		.uleb128 0x1
 2568 004d 13       		.uleb128 0x13
 2569 004e 00       		.byte	0
 2570 004f 00       		.byte	0
 2571 0050 06       		.uleb128 0x6
 2572 0051 05       		.uleb128 0x5
 2573 0052 00       		.byte	0
 2574 0053 03       		.uleb128 0x3
 2575 0054 0E       		.uleb128 0xe
 2576 0055 3A       		.uleb128 0x3a
 2577 0056 0B       		.uleb128 0xb
 2578 0057 3B       		.uleb128 0x3b
 2579 0058 0B       		.uleb128 0xb
 2580 0059 49       		.uleb128 0x49
 2581 005a 13       		.uleb128 0x13
 2582 005b 02       		.uleb128 0x2
 2583 005c 18       		.uleb128 0x18
 2584 005d 00       		.byte	0
 2585 005e 00       		.byte	0
 2586 005f 07       		.uleb128 0x7
 2587 0060 34       		.uleb128 0x34
 2588 0061 00       		.byte	0
 2589 0062 03       		.uleb128 0x3
 2590 0063 0E       		.uleb128 0xe
 2591 0064 3A       		.uleb128 0x3a
 2592 0065 0B       		.uleb128 0xb
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 71


 2593 0066 3B       		.uleb128 0x3b
 2594 0067 0B       		.uleb128 0xb
 2595 0068 49       		.uleb128 0x49
 2596 0069 13       		.uleb128 0x13
 2597 006a 02       		.uleb128 0x2
 2598 006b 18       		.uleb128 0x18
 2599 006c 00       		.byte	0
 2600 006d 00       		.byte	0
 2601 006e 08       		.uleb128 0x8
 2602 006f 2E       		.uleb128 0x2e
 2603 0070 01       		.byte	0x1
 2604 0071 3F       		.uleb128 0x3f
 2605 0072 19       		.uleb128 0x19
 2606 0073 03       		.uleb128 0x3
 2607 0074 0E       		.uleb128 0xe
 2608 0075 3A       		.uleb128 0x3a
 2609 0076 0B       		.uleb128 0xb
 2610 0077 3B       		.uleb128 0x3b
 2611 0078 0B       		.uleb128 0xb
 2612 0079 27       		.uleb128 0x27
 2613 007a 19       		.uleb128 0x19
 2614 007b 11       		.uleb128 0x11
 2615 007c 01       		.uleb128 0x1
 2616 007d 12       		.uleb128 0x12
 2617 007e 06       		.uleb128 0x6
 2618 007f 40       		.uleb128 0x40
 2619 0080 18       		.uleb128 0x18
 2620 0081 9642     		.uleb128 0x2116
 2621 0083 19       		.uleb128 0x19
 2622 0084 01       		.uleb128 0x1
 2623 0085 13       		.uleb128 0x13
 2624 0086 00       		.byte	0
 2625 0087 00       		.byte	0
 2626 0088 09       		.uleb128 0x9
 2627 0089 2E       		.uleb128 0x2e
 2628 008a 01       		.byte	0x1
 2629 008b 3F       		.uleb128 0x3f
 2630 008c 19       		.uleb128 0x19
 2631 008d 03       		.uleb128 0x3
 2632 008e 0E       		.uleb128 0xe
 2633 008f 3A       		.uleb128 0x3a
 2634 0090 0B       		.uleb128 0xb
 2635 0091 3B       		.uleb128 0x3b
 2636 0092 05       		.uleb128 0x5
 2637 0093 27       		.uleb128 0x27
 2638 0094 19       		.uleb128 0x19
 2639 0095 11       		.uleb128 0x11
 2640 0096 01       		.uleb128 0x1
 2641 0097 12       		.uleb128 0x12
 2642 0098 06       		.uleb128 0x6
 2643 0099 40       		.uleb128 0x40
 2644 009a 18       		.uleb128 0x18
 2645 009b 9642     		.uleb128 0x2116
 2646 009d 19       		.uleb128 0x19
 2647 009e 01       		.uleb128 0x1
 2648 009f 13       		.uleb128 0x13
 2649 00a0 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 72


 2650 00a1 00       		.byte	0
 2651 00a2 0A       		.uleb128 0xa
 2652 00a3 34       		.uleb128 0x34
 2653 00a4 00       		.byte	0
 2654 00a5 03       		.uleb128 0x3
 2655 00a6 08       		.uleb128 0x8
 2656 00a7 3A       		.uleb128 0x3a
 2657 00a8 0B       		.uleb128 0xb
 2658 00a9 3B       		.uleb128 0x3b
 2659 00aa 05       		.uleb128 0x5
 2660 00ab 49       		.uleb128 0x49
 2661 00ac 13       		.uleb128 0x13
 2662 00ad 02       		.uleb128 0x2
 2663 00ae 18       		.uleb128 0x18
 2664 00af 00       		.byte	0
 2665 00b0 00       		.byte	0
 2666 00b1 0B       		.uleb128 0xb
 2667 00b2 34       		.uleb128 0x34
 2668 00b3 00       		.byte	0
 2669 00b4 03       		.uleb128 0x3
 2670 00b5 0E       		.uleb128 0xe
 2671 00b6 3A       		.uleb128 0x3a
 2672 00b7 0B       		.uleb128 0xb
 2673 00b8 3B       		.uleb128 0x3b
 2674 00b9 05       		.uleb128 0x5
 2675 00ba 49       		.uleb128 0x49
 2676 00bb 13       		.uleb128 0x13
 2677 00bc 02       		.uleb128 0x2
 2678 00bd 18       		.uleb128 0x18
 2679 00be 00       		.byte	0
 2680 00bf 00       		.byte	0
 2681 00c0 0C       		.uleb128 0xc
 2682 00c1 05       		.uleb128 0x5
 2683 00c2 00       		.byte	0
 2684 00c3 03       		.uleb128 0x3
 2685 00c4 0E       		.uleb128 0xe
 2686 00c5 3A       		.uleb128 0x3a
 2687 00c6 0B       		.uleb128 0xb
 2688 00c7 3B       		.uleb128 0x3b
 2689 00c8 05       		.uleb128 0x5
 2690 00c9 49       		.uleb128 0x49
 2691 00ca 13       		.uleb128 0x13
 2692 00cb 02       		.uleb128 0x2
 2693 00cc 18       		.uleb128 0x18
 2694 00cd 00       		.byte	0
 2695 00ce 00       		.byte	0
 2696 00cf 0D       		.uleb128 0xd
 2697 00d0 2E       		.uleb128 0x2e
 2698 00d1 01       		.byte	0x1
 2699 00d2 3F       		.uleb128 0x3f
 2700 00d3 19       		.uleb128 0x19
 2701 00d4 03       		.uleb128 0x3
 2702 00d5 0E       		.uleb128 0xe
 2703 00d6 3A       		.uleb128 0x3a
 2704 00d7 0B       		.uleb128 0xb
 2705 00d8 3B       		.uleb128 0x3b
 2706 00d9 05       		.uleb128 0x5
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 73


 2707 00da 27       		.uleb128 0x27
 2708 00db 19       		.uleb128 0x19
 2709 00dc 49       		.uleb128 0x49
 2710 00dd 13       		.uleb128 0x13
 2711 00de 11       		.uleb128 0x11
 2712 00df 01       		.uleb128 0x1
 2713 00e0 12       		.uleb128 0x12
 2714 00e1 06       		.uleb128 0x6
 2715 00e2 40       		.uleb128 0x40
 2716 00e3 18       		.uleb128 0x18
 2717 00e4 9742     		.uleb128 0x2117
 2718 00e6 19       		.uleb128 0x19
 2719 00e7 01       		.uleb128 0x1
 2720 00e8 13       		.uleb128 0x13
 2721 00e9 00       		.byte	0
 2722 00ea 00       		.byte	0
 2723 00eb 0E       		.uleb128 0xe
 2724 00ec 2E       		.uleb128 0x2e
 2725 00ed 01       		.byte	0x1
 2726 00ee 3F       		.uleb128 0x3f
 2727 00ef 19       		.uleb128 0x19
 2728 00f0 03       		.uleb128 0x3
 2729 00f1 0E       		.uleb128 0xe
 2730 00f2 3A       		.uleb128 0x3a
 2731 00f3 0B       		.uleb128 0xb
 2732 00f4 3B       		.uleb128 0x3b
 2733 00f5 05       		.uleb128 0x5
 2734 00f6 27       		.uleb128 0x27
 2735 00f7 19       		.uleb128 0x19
 2736 00f8 49       		.uleb128 0x49
 2737 00f9 13       		.uleb128 0x13
 2738 00fa 11       		.uleb128 0x11
 2739 00fb 01       		.uleb128 0x1
 2740 00fc 12       		.uleb128 0x12
 2741 00fd 06       		.uleb128 0x6
 2742 00fe 40       		.uleb128 0x40
 2743 00ff 18       		.uleb128 0x18
 2744 0100 9642     		.uleb128 0x2116
 2745 0102 19       		.uleb128 0x19
 2746 0103 01       		.uleb128 0x1
 2747 0104 13       		.uleb128 0x13
 2748 0105 00       		.byte	0
 2749 0106 00       		.byte	0
 2750 0107 0F       		.uleb128 0xf
 2751 0108 2E       		.uleb128 0x2e
 2752 0109 01       		.byte	0x1
 2753 010a 3F       		.uleb128 0x3f
 2754 010b 19       		.uleb128 0x19
 2755 010c 03       		.uleb128 0x3
 2756 010d 0E       		.uleb128 0xe
 2757 010e 3A       		.uleb128 0x3a
 2758 010f 0B       		.uleb128 0xb
 2759 0110 3B       		.uleb128 0x3b
 2760 0111 05       		.uleb128 0x5
 2761 0112 27       		.uleb128 0x27
 2762 0113 19       		.uleb128 0x19
 2763 0114 11       		.uleb128 0x11
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 74


 2764 0115 01       		.uleb128 0x1
 2765 0116 12       		.uleb128 0x12
 2766 0117 06       		.uleb128 0x6
 2767 0118 40       		.uleb128 0x40
 2768 0119 18       		.uleb128 0x18
 2769 011a 9742     		.uleb128 0x2117
 2770 011c 19       		.uleb128 0x19
 2771 011d 01       		.uleb128 0x1
 2772 011e 13       		.uleb128 0x13
 2773 011f 00       		.byte	0
 2774 0120 00       		.byte	0
 2775 0121 10       		.uleb128 0x10
 2776 0122 0F       		.uleb128 0xf
 2777 0123 00       		.byte	0
 2778 0124 0B       		.uleb128 0xb
 2779 0125 0B       		.uleb128 0xb
 2780 0126 49       		.uleb128 0x49
 2781 0127 13       		.uleb128 0x13
 2782 0128 00       		.byte	0
 2783 0129 00       		.byte	0
 2784 012a 11       		.uleb128 0x11
 2785 012b 01       		.uleb128 0x1
 2786 012c 01       		.byte	0x1
 2787 012d 49       		.uleb128 0x49
 2788 012e 13       		.uleb128 0x13
 2789 012f 01       		.uleb128 0x1
 2790 0130 13       		.uleb128 0x13
 2791 0131 00       		.byte	0
 2792 0132 00       		.byte	0
 2793 0133 12       		.uleb128 0x12
 2794 0134 21       		.uleb128 0x21
 2795 0135 00       		.byte	0
 2796 0136 49       		.uleb128 0x49
 2797 0137 13       		.uleb128 0x13
 2798 0138 2F       		.uleb128 0x2f
 2799 0139 0B       		.uleb128 0xb
 2800 013a 00       		.byte	0
 2801 013b 00       		.byte	0
 2802 013c 13       		.uleb128 0x13
 2803 013d 34       		.uleb128 0x34
 2804 013e 00       		.byte	0
 2805 013f 03       		.uleb128 0x3
 2806 0140 0E       		.uleb128 0xe
 2807 0141 3A       		.uleb128 0x3a
 2808 0142 0B       		.uleb128 0xb
 2809 0143 3B       		.uleb128 0x3b
 2810 0144 05       		.uleb128 0x5
 2811 0145 49       		.uleb128 0x49
 2812 0146 13       		.uleb128 0x13
 2813 0147 3F       		.uleb128 0x3f
 2814 0148 19       		.uleb128 0x19
 2815 0149 3C       		.uleb128 0x3c
 2816 014a 19       		.uleb128 0x19
 2817 014b 00       		.byte	0
 2818 014c 00       		.byte	0
 2819 014d 14       		.uleb128 0x14
 2820 014e 26       		.uleb128 0x26
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 75


 2821 014f 00       		.byte	0
 2822 0150 49       		.uleb128 0x49
 2823 0151 13       		.uleb128 0x13
 2824 0152 00       		.byte	0
 2825 0153 00       		.byte	0
 2826 0154 15       		.uleb128 0x15
 2827 0155 34       		.uleb128 0x34
 2828 0156 00       		.byte	0
 2829 0157 03       		.uleb128 0x3
 2830 0158 0E       		.uleb128 0xe
 2831 0159 3A       		.uleb128 0x3a
 2832 015a 0B       		.uleb128 0xb
 2833 015b 3B       		.uleb128 0x3b
 2834 015c 0B       		.uleb128 0xb
 2835 015d 49       		.uleb128 0x49
 2836 015e 13       		.uleb128 0x13
 2837 015f 3F       		.uleb128 0x3f
 2838 0160 19       		.uleb128 0x19
 2839 0161 02       		.uleb128 0x2
 2840 0162 18       		.uleb128 0x18
 2841 0163 00       		.byte	0
 2842 0164 00       		.byte	0
 2843 0165 00       		.byte	0
 2844              		.section	.debug_aranges,"",%progbits
 2845 0000 84000000 		.4byte	0x84
 2846 0004 0200     		.2byte	0x2
 2847 0006 00000000 		.4byte	.Ldebug_info0
 2848 000a 04       		.byte	0x4
 2849 000b 00       		.byte	0
 2850 000c 0000     		.2byte	0
 2851 000e 0000     		.2byte	0
 2852 0010 00000000 		.4byte	.LFB0
 2853 0014 70000000 		.4byte	.LFE0-.LFB0
 2854 0018 00000000 		.4byte	.LFB1
 2855 001c 2C000000 		.4byte	.LFE1-.LFB1
 2856 0020 00000000 		.4byte	.LFB2
 2857 0024 26000000 		.4byte	.LFE2-.LFB2
 2858 0028 00000000 		.4byte	.LFB3
 2859 002c 6C000000 		.4byte	.LFE3-.LFB3
 2860 0030 00000000 		.4byte	.LFB4
 2861 0034 40010000 		.4byte	.LFE4-.LFB4
 2862 0038 00000000 		.4byte	.LFB5
 2863 003c 50000000 		.4byte	.LFE5-.LFB5
 2864 0040 00000000 		.4byte	.LFB6
 2865 0044 28010000 		.4byte	.LFE6-.LFB6
 2866 0048 00000000 		.4byte	.LFB7
 2867 004c 54000000 		.4byte	.LFE7-.LFB7
 2868 0050 00000000 		.4byte	.LFB8
 2869 0054 38000000 		.4byte	.LFE8-.LFB8
 2870 0058 00000000 		.4byte	.LFB9
 2871 005c 68000000 		.4byte	.LFE9-.LFB9
 2872 0060 00000000 		.4byte	.LFB10
 2873 0064 6C000000 		.4byte	.LFE10-.LFB10
 2874 0068 00000000 		.4byte	.LFB11
 2875 006c 7C000000 		.4byte	.LFE11-.LFB11
 2876 0070 00000000 		.4byte	.LFB12
 2877 0074 58010000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 76


 2878 0078 00000000 		.4byte	.LFB13
 2879 007c 7C000000 		.4byte	.LFE13-.LFB13
 2880 0080 00000000 		.4byte	0
 2881 0084 00000000 		.4byte	0
 2882              		.section	.debug_ranges,"",%progbits
 2883              	.Ldebug_ranges0:
 2884 0000 00000000 		.4byte	.LFB0
 2885 0004 70000000 		.4byte	.LFE0
 2886 0008 00000000 		.4byte	.LFB1
 2887 000c 2C000000 		.4byte	.LFE1
 2888 0010 00000000 		.4byte	.LFB2
 2889 0014 26000000 		.4byte	.LFE2
 2890 0018 00000000 		.4byte	.LFB3
 2891 001c 6C000000 		.4byte	.LFE3
 2892 0020 00000000 		.4byte	.LFB4
 2893 0024 40010000 		.4byte	.LFE4
 2894 0028 00000000 		.4byte	.LFB5
 2895 002c 50000000 		.4byte	.LFE5
 2896 0030 00000000 		.4byte	.LFB6
 2897 0034 28010000 		.4byte	.LFE6
 2898 0038 00000000 		.4byte	.LFB7
 2899 003c 54000000 		.4byte	.LFE7
 2900 0040 00000000 		.4byte	.LFB8
 2901 0044 38000000 		.4byte	.LFE8
 2902 0048 00000000 		.4byte	.LFB9
 2903 004c 68000000 		.4byte	.LFE9
 2904 0050 00000000 		.4byte	.LFB10
 2905 0054 6C000000 		.4byte	.LFE10
 2906 0058 00000000 		.4byte	.LFB11
 2907 005c 7C000000 		.4byte	.LFE11
 2908 0060 00000000 		.4byte	.LFB12
 2909 0064 58010000 		.4byte	.LFE12
 2910 0068 00000000 		.4byte	.LFB13
 2911 006c 7C000000 		.4byte	.LFE13
 2912 0070 00000000 		.4byte	0
 2913 0074 00000000 		.4byte	0
 2914              		.section	.debug_line,"",%progbits
 2915              	.Ldebug_line0:
 2916 0000 D2020000 		.section	.debug_str,"MS",%progbits,1
 2916      02007900 
 2916      00000201 
 2916      FB0E0D00 
 2916      01010101 
 2917              	.LASF46:
 2918 0000 636F756E 		.ascii	"count\000"
 2918      7400
 2919              	.LASF58:
 2920 0006 43617053 		.ascii	"CapSense_CSD_GetCentroidPos\000"
 2920      656E7365 
 2920      5F435344 
 2920      5F476574 
 2920      43656E74 
 2921              	.LASF10:
 2922 0022 75696E74 		.ascii	"uint16\000"
 2922      313600
 2923              	.LASF28:
 2924 0029 66696C74 		.ascii	"filteredRawData\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 77


 2924      65726564 
 2924      52617744 
 2924      61746100 
 2925              	.LASF33:
 2926 0039 66696E67 		.ascii	"fingerThreshold\000"
 2926      65725468 
 2926      72657368 
 2926      6F6C6400 
 2927              	.LASF19:
 2928 0049 43617053 		.ascii	"CapSense_CSD_InitializeSensorBaseline\000"
 2928      656E7365 
 2928      5F435344 
 2928      5F496E69 
 2928      7469616C 
 2929              	.LASF52:
 2930 006f 706F7350 		.ascii	"posPrev\000"
 2930      72657600 
 2931              	.LASF7:
 2932 0077 6C6F6E67 		.ascii	"long long unsigned int\000"
 2932      206C6F6E 
 2932      6720756E 
 2932      7369676E 
 2932      65642069 
 2933              	.LASF6:
 2934 008e 6C6F6E67 		.ascii	"long long int\000"
 2934      206C6F6E 
 2934      6720696E 
 2934      7400
 2935              	.LASF0:
 2936 009c 7369676E 		.ascii	"signed char\000"
 2936      65642063 
 2936      68617200 
 2937              	.LASF38:
 2938 00a8 72617749 		.ascii	"rawIndex\000"
 2938      6E646578 
 2938      00
 2939              	.LASF39:
 2940 00b1 6E756D62 		.ascii	"numberOfSensors\000"
 2940      65724F66 
 2940      53656E73 
 2940      6F727300 
 2941              	.LASF13:
 2942 00c1 696E7433 		.ascii	"int32\000"
 2942      3200
 2943              	.LASF36:
 2944 00c7 43617053 		.ascii	"CapSense_CSD_CheckIsSensorActive\000"
 2944      656E7365 
 2944      5F435344 
 2944      5F436865 
 2944      636B4973 
 2945              	.LASF40:
 2946 00e8 73746174 		.ascii	"state\000"
 2946      6500
 2947              	.LASF4:
 2948 00ee 6C6F6E67 		.ascii	"long int\000"
 2948      20696E74 
 2948      00
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 78


 2949              	.LASF56:
 2950 00f7 6E756D65 		.ascii	"numerator\000"
 2950      7261746F 
 2950      7200
 2951              	.LASF57:
 2952 0101 64656E6F 		.ascii	"denominator\000"
 2952      6D696E61 
 2952      746F7200 
 2953              	.LASF61:
 2954 010d 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 2954      656E7365 
 2954      5F435344 
 2954      5F776964 
 2954      6765744E 
 2955              	.LASF9:
 2956 0127 75696E74 		.ascii	"uint8\000"
 2956      3800
 2957              	.LASF15:
 2958 012d 646F7562 		.ascii	"double\000"
 2958      6C6500
 2959              	.LASF11:
 2960 0134 75696E74 		.ascii	"uint32\000"
 2960      333200
 2961              	.LASF34:
 2962 013b 68797374 		.ascii	"hysteresis\000"
 2962      65726573 
 2962      697300
 2963              	.LASF18:
 2964 0146 43617053 		.ascii	"CapSense_CSD_BaseInit\000"
 2964      656E7365 
 2964      5F435344 
 2964      5F426173 
 2964      65496E69 
 2965              	.LASF53:
 2966 015c 706F734E 		.ascii	"posNext\000"
 2966      65787400 
 2967              	.LASF62:
 2968 0164 43617053 		.ascii	"CapSense_CSD_sensorBaseline\000"
 2968      656E7365 
 2968      5F435344 
 2968      5F73656E 
 2968      736F7242 
 2969              	.LASF49:
 2970 0180 73746172 		.ascii	"startOfSlider\000"
 2970      744F6653 
 2970      6C696465 
 2970      7200
 2971              	.LASF48:
 2972 018e 74656D70 		.ascii	"temp\000"
 2972      00
 2973              	.LASF70:
 2974 0193 43617053 		.ascii	"CapSense_CSD_debounce\000"
 2974      656E7365 
 2974      5F435344 
 2974      5F646562 
 2974      6F756E63 
 2975              	.LASF8:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 79


 2976 01a9 756E7369 		.ascii	"unsigned int\000"
 2976      676E6564 
 2976      20696E74 
 2976      00
 2977              	.LASF55:
 2978 01b6 706F7369 		.ascii	"position\000"
 2978      74696F6E 
 2978      00
 2979              	.LASF5:
 2980 01bf 6C6F6E67 		.ascii	"long unsigned int\000"
 2980      20756E73 
 2980      69676E65 
 2980      6420696E 
 2980      7400
 2981              	.LASF64:
 2982 01d1 43617053 		.ascii	"CapSense_CSD_sensorSignal\000"
 2982      656E7365 
 2982      5F435344 
 2982      5F73656E 
 2982      736F7253 
 2983              	.LASF54:
 2984 01eb 43617053 		.ascii	"CapSense_CSD_centroid\000"
 2984      656E7365 
 2984      5F435344 
 2984      5F63656E 
 2984      74726F69 
 2985              	.LASF3:
 2986 0201 73686F72 		.ascii	"short unsigned int\000"
 2986      7420756E 
 2986      7369676E 
 2986      65642069 
 2986      6E7400
 2987              	.LASF20:
 2988 0214 73656E73 		.ascii	"sensor\000"
 2988      6F7200
 2989              	.LASF50:
 2990 021b 43617053 		.ascii	"CapSense_CSD_CalcCentroid\000"
 2990      656E7365 
 2990      5F435344 
 2990      5F43616C 
 2990      6343656E 
 2991              	.LASF26:
 2992 0235 63616C63 		.ascii	"calc\000"
 2992      00
 2993              	.LASF35:
 2994 023a 6465626F 		.ascii	"debounce\000"
 2994      756E6365 
 2994      00
 2995              	.LASF17:
 2996 0243 73697A65 		.ascii	"sizetype\000"
 2996      74797065 
 2996      00
 2997              	.LASF23:
 2998 024c 43617053 		.ascii	"CapSense_CSD_InitializeEnabledBaselines\000"
 2998      656E7365 
 2998      5F435344 
 2998      5F496E69 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 80


 2998      7469616C 
 2999              	.LASF77:
 3000 0274 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\GitHub\\fre"
 3000      73657273 
 3000      5C4C756B 
 3000      61732043 
 3000      72657574 
 3001 02a2 65445350 		.ascii	"eDSPPSoC-I2C\\CapSense_CSD_Design02.cydsn\000"
 3001      50536F43 
 3001      2D493243 
 3001      5C436170 
 3001      53656E73 
 3002              	.LASF72:
 3003 02cb 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 3003      656E7365 
 3003      5F435344 
 3003      5F726177 
 3003      44617461 
 3004              	.LASF24:
 3005 02e5 656E4D61 		.ascii	"enMask\000"
 3005      736B00
 3006              	.LASF60:
 3007 02ec 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 3007      656E7365 
 3007      5F435344 
 3007      5F73656E 
 3007      736F7245 
 3008              	.LASF75:
 3009 030a 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3009      4320342E 
 3009      392E3320 
 3009      32303135 
 3009      30333033 
 3010 033d 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3010      20726576 
 3010      6973696F 
 3010      6E203232 
 3010      31323230 
 3011 0370 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3011      66756E63 
 3011      74696F6E 
 3011      2D736563 
 3011      74696F6E 
 3012              	.LASF44:
 3013 0398 43617053 		.ascii	"CapSense_CSD_FindMaximum\000"
 3013      656E7365 
 3013      5F435344 
 3013      5F46696E 
 3013      644D6178 
 3014              	.LASF14:
 3015 03b1 666C6F61 		.ascii	"float\000"
 3015      7400
 3016              	.LASF66:
 3017 03b7 43617053 		.ascii	"CapSense_CSD_lowBaselineResetCnt\000"
 3017      656E7365 
 3017      5F435344 
 3017      5F6C6F77 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 81


 3017      42617365 
 3018              	.LASF21:
 3019 03d8 43617053 		.ascii	"CapSense_CSD_InitializeAllBaselines\000"
 3019      656E7365 
 3019      5F435344 
 3019      5F496E69 
 3019      7469616C 
 3020              	.LASF67:
 3021 03fc 43617053 		.ascii	"CapSense_CSD_fingerThreshold\000"
 3021      656E7365 
 3021      5F435344 
 3021      5F66696E 
 3021      67657254 
 3022              	.LASF1:
 3023 0419 756E7369 		.ascii	"unsigned char\000"
 3023      676E6564 
 3023      20636861 
 3023      7200
 3024              	.LASF29:
 3025 0427 6E6F6973 		.ascii	"noiseThreshold\000"
 3025      65546872 
 3025      6573686F 
 3025      6C6400
 3026              	.LASF2:
 3027 0436 73686F72 		.ascii	"short int\000"
 3027      7420696E 
 3027      7400
 3028              	.LASF22:
 3029 0440 77696467 		.ascii	"widget\000"
 3029      657400
 3030              	.LASF32:
 3031 0447 6F6E4D61 		.ascii	"onMask\000"
 3031      736B00
 3032              	.LASF47:
 3033 044e 6D617869 		.ascii	"maximum\000"
 3033      6D756D00 
 3034              	.LASF59:
 3035 0456 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 3035      656E7365 
 3035      5F435344 
 3035      5F73656E 
 3035      736F7252 
 3036              	.LASF25:
 3037 046d 43617053 		.ascii	"CapSense_CSD_UpdateSensorBaseline\000"
 3037      656E7365 
 3037      5F435344 
 3037      5F557064 
 3037      61746553 
 3038              	.LASF51:
 3039 048f 7265736F 		.ascii	"resolution\000"
 3039      6C757469 
 3039      6F6E00
 3040              	.LASF73:
 3041 049a 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 3041      656E7365 
 3041      5F435344 
 3041      5F6E756D 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 82


 3041      6265724F 
 3042              	.LASF68:
 3043 04b7 43617053 		.ascii	"CapSense_CSD_noiseThreshold\000"
 3043      656E7365 
 3043      5F435344 
 3043      5F6E6F69 
 3043      73655468 
 3044              	.LASF16:
 3045 04d3 63686172 		.ascii	"char\000"
 3045      00
 3046              	.LASF42:
 3047 04d8 43617053 		.ascii	"CapSense_CSD_EnableWidget\000"
 3047      656E7365 
 3047      5F435344 
 3047      5F456E61 
 3047      626C6557 
 3048              	.LASF30:
 3049 04f2 43617053 		.ascii	"CapSense_CSD_UpdateEnabledBaselines\000"
 3049      656E7365 
 3049      5F435344 
 3049      5F557064 
 3049      61746545 
 3050              	.LASF45:
 3051 0516 6F666673 		.ascii	"offset\000"
 3051      657400
 3052              	.LASF74:
 3053 051d 43617053 		.ascii	"CapSense_CSD_centroidMult\000"
 3053      656E7365 
 3053      5F435344 
 3053      5F63656E 
 3053      74726F69 
 3054              	.LASF69:
 3055 0537 43617053 		.ascii	"CapSense_CSD_hysteresis\000"
 3055      656E7365 
 3055      5F435344 
 3055      5F687973 
 3055      74657265 
 3056              	.LASF31:
 3057 054f 6465626F 		.ascii	"debounceIndex\000"
 3057      756E6365 
 3057      496E6465 
 3057      7800
 3058              	.LASF41:
 3059 055d 43617053 		.ascii	"CapSense_CSD_CheckIsAnyWidgetActive\000"
 3059      656E7365 
 3059      5F435344 
 3059      5F436865 
 3059      636B4973 
 3060              	.LASF37:
 3061 0581 43617053 		.ascii	"CapSense_CSD_CheckIsWidgetActive\000"
 3061      656E7365 
 3061      5F435344 
 3061      5F436865 
 3061      636B4973 
 3062              	.LASF12:
 3063 05a2 696E7431 		.ascii	"int16\000"
 3063      3600
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccd155Lz.s 			page 83


 3064              	.LASF76:
 3065 05a8 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense_CSD_CSHL.c\000"
 3065      6E657261 
 3065      7465645F 
 3065      536F7572 
 3065      63655C50 
 3066              	.LASF71:
 3067 05d5 43617053 		.ascii	"CapSense_CSD_debounceCounter\000"
 3067      656E7365 
 3067      5F435344 
 3067      5F646562 
 3067      6F756E63 
 3068              	.LASF63:
 3069 05f2 43617053 		.ascii	"CapSense_CSD_sensorBaselineLow\000"
 3069      656E7365 
 3069      5F435344 
 3069      5F73656E 
 3069      736F7242 
 3070              	.LASF27:
 3071 0611 74656D70 		.ascii	"tempRaw\000"
 3071      52617700 
 3072              	.LASF43:
 3073 0619 43617053 		.ascii	"CapSense_CSD_DisableWidget\000"
 3073      656E7365 
 3073      5F435344 
 3073      5F446973 
 3073      61626C65 
 3074              	.LASF65:
 3075 0634 43617053 		.ascii	"CapSense_CSD_sensorOnMask\000"
 3075      656E7365 
 3075      5F435344 
 3075      5F73656E 
 3075      736F724F 
 3076              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
