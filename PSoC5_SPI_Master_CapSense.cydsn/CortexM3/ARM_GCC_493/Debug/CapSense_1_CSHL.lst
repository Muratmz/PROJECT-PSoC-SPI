ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"CapSense_1_CSHL.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	CapSense_1_rawFilterData1,44,4
  19              		.comm	CapSense_1_sensorBaseline,44,4
  20              		.comm	CapSense_1_sensorBaselineLow,22,4
  21              		.comm	CapSense_1_sensorSignal,22,4
  22              		.comm	CapSense_1_sensorOnMask,3,4
  23              		.comm	CapSense_1_lowBaselineResetCnt,22,4
  24              		.global	CapSense_1_fingerThreshold
  25              		.data
  26              		.align	2
  27              		.type	CapSense_1_fingerThreshold, %object
  28              		.size	CapSense_1_fingerThreshold, 4
  29              	CapSense_1_fingerThreshold:
  30 0000 64       		.byte	100
  31 0001 64       		.byte	100
  32 0002 64       		.byte	100
  33 0003 64       		.byte	100
  34              		.global	CapSense_1_noiseThreshold
  35              		.align	2
  36              		.type	CapSense_1_noiseThreshold, %object
  37              		.size	CapSense_1_noiseThreshold, 4
  38              	CapSense_1_noiseThreshold:
  39 0004 14       		.byte	20
  40 0005 14       		.byte	20
  41 0006 14       		.byte	20
  42 0007 14       		.byte	20
  43              		.global	CapSense_1_hysteresis
  44              		.align	2
  45              		.type	CapSense_1_hysteresis, %object
  46              		.size	CapSense_1_hysteresis, 4
  47              	CapSense_1_hysteresis:
  48 0008 00       		.byte	0
  49 0009 0A       		.byte	10
  50 000a 0A       		.byte	10
  51 000b 0A       		.byte	10
  52              		.global	CapSense_1_debounce
  53              		.align	2
  54              		.type	CapSense_1_debounce, %object
  55              		.size	CapSense_1_debounce, 4
  56              	CapSense_1_debounce:
  57 000c 01       		.byte	1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 2


  58 000d 01       		.byte	1
  59 000e 01       		.byte	1
  60 000f 01       		.byte	1
  61              		.global	CapSense_1_debounceCounter
  62              		.bss
  63              		.align	2
  64              		.type	CapSense_1_debounceCounter, %object
  65              		.size	CapSense_1_debounceCounter, 4
  66              	CapSense_1_debounceCounter:
  67 0000 00000000 		.space	4
  68              		.global	CapSense_1_rawDataIndex
  69              		.section	.rodata
  70              		.align	2
  71              		.type	CapSense_1_rawDataIndex, %object
  72              		.size	CapSense_1_rawDataIndex, 4
  73              	CapSense_1_rawDataIndex:
  74 0000 03       		.byte	3
  75 0001 00       		.byte	0
  76 0002 01       		.byte	1
  77 0003 02       		.byte	2
  78              		.global	CapSense_1_numberOfSensors
  79              		.align	2
  80              		.type	CapSense_1_numberOfSensors, %object
  81              		.size	CapSense_1_numberOfSensors, 4
  82              	CapSense_1_numberOfSensors:
  83 0004 13       		.byte	19
  84 0005 01       		.byte	1
  85 0006 01       		.byte	1
  86 0007 01       		.byte	1
  87              		.global	CapSense_1_centroidMult
  88              		.align	2
  89              		.type	CapSense_1_centroidMult, %object
  90              		.size	CapSense_1_centroidMult, 2
  91              	CapSense_1_centroidMult:
  92 0008 8E05     		.short	1422
  93              		.global	CapSense_1_posFiltersMask
  94 000a 0000     		.align	2
  95              		.type	CapSense_1_posFiltersMask, %object
  96              		.size	CapSense_1_posFiltersMask, 1
  97              	CapSense_1_posFiltersMask:
  98 000c 08       		.byte	8
  99              		.global	CapSense_1_posFiltersData
 100 000d 000000   		.data
 101              		.align	2
 102              		.type	CapSense_1_posFiltersData, %object
 103              		.size	CapSense_1_posFiltersData, 3
 104              	CapSense_1_posFiltersData:
 105 0010 01       		.byte	1
 106 0011 00       		.byte	0
 107 0012 00       		.byte	0
 108 0013 00       		.section	.text.CapSense_1_BaseInit,"ax",%progbits
 109              		.align	2
 110              		.global	CapSense_1_BaseInit
 111              		.thumb
 112              		.thumb_func
 113              		.type	CapSense_1_BaseInit, %function
 114              	CapSense_1_BaseInit:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 3


 115              	.LFB0:
 116              		.file 1 ".\\Generated_Source\\PSoC5\\CapSense_1_CSHL.c"
   1:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * File Name: CapSense_1_CSHL.c
   3:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Version 3.50
   4:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
   5:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
   9:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
  11:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  18:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #include "CapSense_1_CSHL.h"
  19:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  20:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /* Storage of filters data */
  21:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
  22:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) )
  23:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  24:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData1[CapSense_1_TOTAL_SENSOR_COUNT];
  25:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData2[CapSense_1_TOTAL_SENSOR_COUNT];
  26:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  27:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #elif ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)   | \
  28:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)   | \
  29:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER) | \
  30:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER)   | \
  31:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER) )
  32:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
  33:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_rawFilterData1[CapSense_1_TOTAL_SENSOR_COUNT];
  34:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  35:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #else
  36:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* No Raw filters */
  37:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif  /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) || \
  38:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         *    (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) )
  39:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         */
  40:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  41:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint16 CapSense_1_sensorBaseline[CapSense_1_TOTAL_SENSOR_COUNT];
  42:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorBaselineLow[CapSense_1_TOTAL_SENSOR_COUNT];
  43:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorSignal[CapSense_1_TOTAL_SENSOR_COUNT];
  44:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_sensorOnMask[(((CapSense_1_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  46:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_lowBaselineResetCnt[CapSense_1_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  48:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_fingerThreshold[] = {
  49:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     100u, 100u, 100u, 100u, 
  50:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  51:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  52:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_noiseThreshold[] = {
  53:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     20u, 20u, 20u, 20u, 
  54:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  55:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 4


  56:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_hysteresis[] = {
  57:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     0u, 10u, 10u, 10u, 
  58:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  59:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  60:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_debounce[] = {
  61:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, 1u, 1u, 1u, 
  62:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  63:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  64:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_debounceCounter[] = {
  65:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     0u, 0u, 0u, 0u, 
  66:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  67:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  68:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_rawDataIndex[] = {
  69:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     3u, /* LinearSlider0__LS */
  70:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     0u, /* Button0__BTN */
  71:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* Button1__BTN */
  72:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     2u, /* Button2__BTN */
  73:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  74:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  75:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  76:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_numberOfSensors[] = {
  77:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     19u, /* LinearSlider0__LS */
  78:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* Button0__BTN */
  79:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* Button1__BTN */
  80:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, /* Button2__BTN */
  81:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  82:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  83:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  84:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint16 CYCODE CapSense_1_centroidMult[] = {
  85:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1422u, 
  86:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  87:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  88:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** const uint8 CYCODE CapSense_1_posFiltersMask[] = {
  89:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     0x8u, 
  90:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  91:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  92:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_posFiltersData[] = {
  93:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     1u, 0u, 0u, 
  94:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** };
  95:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  96:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  97:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  98:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
  99:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 100:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_BaseInit
 101:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 102:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 103:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 104:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_sensorBaseline[sensor] array element with an 
 105:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value which is equal to raw count value. 
 106:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Resets to zero CapSense_1_sensorBaselineLow[sensor] and 
 107:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[sensor] array element.
 108:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads CapSense_1_debounceCounter[sensor] array element with initial 
 109:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  value equal CapSense_1_debounce[].
 110:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_rawFilterData2[sensor] and 
 111:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[sensor] array element with an 
 112:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 5


 113:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 114:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 115:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 116:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 117:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 118:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 119:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 120:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 121:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[]    - used to store baseline value.
 122:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaselineLow[] - used to store fraction byte of 
 123:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline value.
 124:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 125:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 126:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_debounceCounter[]   - used to store current debounce 
 127:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 128:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 129:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 130:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData1[]    - used to store previous sample of 
 131:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  any enabled raw data filter.
 132:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[]    - used to store before previous sample
 133:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 134:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 135:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 136:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 137:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 138:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 139:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_BaseInit(uint8 sensor) 
 140:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 117              		.loc 1 140 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 16
 120              		@ frame_needed = 1, uses_anonymous_args = 0
 121              		@ link register save eliminated.
 122 0000 80B4     		push	{r7}
 123              		.cfi_def_cfa_offset 4
 124              		.cfi_offset 7, -4
 125 0002 85B0     		sub	sp, sp, #20
 126              		.cfi_def_cfa_offset 24
 127 0004 00AF     		add	r7, sp, #0
 128              		.cfi_def_cfa_register 7
 129 0006 0346     		mov	r3, r0
 130 0008 FB71     		strb	r3, [r7, #7]
 141:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if ((CapSense_1_TOTAL_BUTTONS_COUNT) || (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) || \
 142:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****          (CapSense_1_TOTAL_GENERICS_COUNT))
 143:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 widget = CapSense_1_widgetNumber[sensor];
 131              		.loc 1 143 0
 132 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 133 000c 144A     		ldr	r2, .L3
 134 000e D35C     		ldrb	r3, [r2, r3]
 135 0010 FB73     		strb	r3, [r7, #15]
 144:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* ((CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)) 
 145:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 146:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT)
 147:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 debounceIndex;
 148:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_TOTAL_MATRIX_BUTTONS_COUNT) */
 149:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 150:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 6


 151:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 152:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 153:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 154:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 155:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 156:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Initialize Baseline */
 157:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorBaseline[sensor] = CapSense_1_sensorRaw[sensor];
 136              		.loc 1 157 0
 137 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 138 0014 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 139 0016 1349     		ldr	r1, .L3+4
 140 0018 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 141 001c 124A     		ldr	r2, .L3+8
 142 001e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 158:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorBaselineLow[sensor] = 0u;
 143              		.loc 1 158 0
 144 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 145 0024 114A     		ldr	r2, .L3+12
 146 0026 0021     		movs	r1, #0
 147 0028 D154     		strb	r1, [r2, r3]
 159:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_sensorSignal[sensor] = 0u;
 148              		.loc 1 159 0
 149 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 150 002c 104A     		ldr	r2, .L3+16
 151 002e 0021     		movs	r1, #0
 152 0030 D154     		strb	r1, [r2, r3]
 160:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 161:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if(widget > CapSense_1_END_OF_TOUCH_PAD_INDEX)
 153              		.loc 1 161 0
 154 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 155 0034 002B     		cmp	r3, #0
 156 0036 06D0     		beq	.L2
 162:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 163:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_debounceCounter[widget - (CapSense_1_END_OF_TOUCH_PAD_INDEX + 1)] =  CapSense_1_
 157              		.loc 1 163 0
 158 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 159 003a 013B     		subs	r3, r3, #1
 160 003c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 161 003e 0D49     		ldr	r1, .L3+20
 162 0040 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 163 0042 0D4A     		ldr	r2, .L3+24
 164 0044 D154     		strb	r1, [r2, r3]
 165              	.L2:
 164:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 165:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 166:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 167:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if ((CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) |\
 168:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****          (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER))
 169:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 170:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = CapSense_1_sensorRaw[sensor];
 171:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_sensorRaw[sensor];
 172:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 173:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif ((CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) |\
 174:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER) |\
 175:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER) |\
 176:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER) |\
 177:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****            (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER))
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 7


 178:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             
 179:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = CapSense_1_sensorRaw[sensor];
 166              		.loc 1 179 0
 167 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 168 0048 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 169 004a 0649     		ldr	r1, .L3+4
 170 004c 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 171 0050 0A4A     		ldr	r2, .L3+28
 172 0052 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 180:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 181:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 182:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* No Raw filters */
 183:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* ((CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
 184:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             *   (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER))
 185:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             */
 186:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 187:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 188:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 189:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 190:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 191:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 173              		.loc 1 191 0
 174 0056 1437     		adds	r7, r7, #20
 175              		.cfi_def_cfa_offset 4
 176 0058 BD46     		mov	sp, r7
 177              		.cfi_def_cfa_register 13
 178              		@ sp needed
 179 005a 5DF8047B 		ldr	r7, [sp], #4
 180              		.cfi_restore 7
 181              		.cfi_def_cfa_offset 0
 182 005e 7047     		bx	lr
 183              	.L4:
 184              		.align	2
 185              	.L3:
 186 0060 00000000 		.word	CapSense_1_widgetNumber
 187 0064 00000000 		.word	CapSense_1_sensorRaw
 188 0068 00000000 		.word	CapSense_1_sensorBaseline
 189 006c 00000000 		.word	CapSense_1_sensorBaselineLow
 190 0070 00000000 		.word	CapSense_1_sensorSignal
 191 0074 00000000 		.word	CapSense_1_debounce
 192 0078 00000000 		.word	CapSense_1_debounceCounter
 193 007c 00000000 		.word	CapSense_1_rawFilterData1
 194              		.cfi_endproc
 195              	.LFE0:
 196              		.size	CapSense_1_BaseInit, .-CapSense_1_BaseInit
 197              		.section	.text.CapSense_1_InitializeSensorBaseline,"ax",%progbits
 198              		.align	2
 199              		.global	CapSense_1_InitializeSensorBaseline
 200              		.thumb
 201              		.thumb_func
 202              		.type	CapSense_1_InitializeSensorBaseline, %function
 203              	CapSense_1_InitializeSensorBaseline:
 204              	.LFB1:
 192:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 193:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 194:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 195:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeSensorBaseline
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 8


 196:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 197:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 198:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 199:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Loads the CapSense_1_sensorBaseline[sensor] array element with an 
 200:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 201:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 202:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 203:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  enabled.
 204:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 205:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 206:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 207:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 208:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 209:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 210:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 211:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 212:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 213:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 214:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 215:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeSensorBaseline(uint8 sensor)
 216:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                           
 217:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 205              		.loc 1 217 0
 206              		.cfi_startproc
 207              		@ args = 0, pretend = 0, frame = 8
 208              		@ frame_needed = 1, uses_anonymous_args = 0
 209 0000 80B5     		push	{r7, lr}
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 82B0     		sub	sp, sp, #8
 214              		.cfi_def_cfa_offset 16
 215 0004 00AF     		add	r7, sp, #0
 216              		.cfi_def_cfa_register 7
 217 0006 0346     		mov	r3, r0
 218 0008 FB71     		strb	r3, [r7, #7]
 218:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Scan sensor */
 219:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_ScanSensor(sensor);
 219              		.loc 1 219 0
 220 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 221 000c 1846     		mov	r0, r3
 222 000e FFF7FEFF 		bl	CapSense_1_ScanSensor
 220:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(CapSense_1_IsBusy() != 0u)
 223              		.loc 1 220 0
 224 0012 00BF     		nop
 225              	.L6:
 226              		.loc 1 220 0 is_stmt 0 discriminator 1
 227 0014 FFF7FEFF 		bl	CapSense_1_IsBusy
 228 0018 0346     		mov	r3, r0
 229 001a 002B     		cmp	r3, #0
 230 001c FAD1     		bne	.L6
 221:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 222:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Wait while busy */
 223:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 224:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 225:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_DESIGN_TYPE == CapSense_1_ONE_CHANNEL_DESIGN)
 226:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 9


 227:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_BaseInit(sensor);
 231              		.loc 1 227 0 is_stmt 1
 232 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 233 0020 1846     		mov	r0, r3
 234 0022 FFF7FEFF 		bl	CapSense_1_BaseInit
 228:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 229:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 230:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 231:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(sensor < CapSense_1_TOTAL_SENSOR_COUNT__CH0)
 232:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 233:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 234:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor);
 235:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 236:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 237:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(sensor < CapSense_1_TOTAL_SENSOR_COUNT__CH1)
 238:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 239:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 240:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor + CapSense_1_TOTAL_SENSOR_COUNT__CH0);
 241:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 242:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 243:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_DESIGN_TYPE == CapSense_1_ONE_CHANNEL_DESIGN) */
 244:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 235              		.loc 1 244 0
 236 0026 0837     		adds	r7, r7, #8
 237              		.cfi_def_cfa_offset 8
 238 0028 BD46     		mov	sp, r7
 239              		.cfi_def_cfa_register 13
 240              		@ sp needed
 241 002a 80BD     		pop	{r7, pc}
 242              		.cfi_endproc
 243              	.LFE1:
 244              		.size	CapSense_1_InitializeSensorBaseline, .-CapSense_1_InitializeSensorBaseline
 245              		.section	.text.CapSense_1_InitializeAllBaselines,"ax",%progbits
 246              		.align	2
 247              		.global	CapSense_1_InitializeAllBaselines
 248              		.thumb
 249              		.thumb_func
 250              		.type	CapSense_1_InitializeAllBaselines, %function
 251              	CapSense_1_InitializeAllBaselines:
 252              	.LFB2:
 245:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 246:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 247:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 248:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeAllBaselines
 249:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 250:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 251:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 252:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Uses the CapSense_1_InitializeSensorBaseline function to loads the 
 253:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[] array with an initial values by scanning 
 254:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 255:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 256:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 257:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 258:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 259:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 260:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 261:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 10


 262:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 263:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 264:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 265:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 266:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 267:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeAllBaselines(void)
 268:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                           
 269:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 253              		.loc 1 269 0
 254              		.cfi_startproc
 255              		@ args = 0, pretend = 0, frame = 8
 256              		@ frame_needed = 1, uses_anonymous_args = 0
 257 0000 80B5     		push	{r7, lr}
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 82B0     		sub	sp, sp, #8
 262              		.cfi_def_cfa_offset 16
 263 0004 00AF     		add	r7, sp, #0
 264              		.cfi_def_cfa_register 7
 270:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 271:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 272:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 273:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SCANSLOT_COUNT; i++)
 265              		.loc 1 273 0
 266 0006 0023     		movs	r3, #0
 267 0008 FB71     		strb	r3, [r7, #7]
 268 000a 06E0     		b	.L8
 269              	.L9:
 274:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 275:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_InitializeSensorBaseline(i);
 270              		.loc 1 275 0 discriminator 3
 271 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 272 000e 1846     		mov	r0, r3
 273 0010 FFF7FEFF 		bl	CapSense_1_InitializeSensorBaseline
 273:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 274              		.loc 1 273 0 discriminator 3
 275 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 276 0016 0133     		adds	r3, r3, #1
 277 0018 FB71     		strb	r3, [r7, #7]
 278              	.L8:
 273:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 279              		.loc 1 273 0 is_stmt 0 discriminator 1
 280 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 281 001c 152B     		cmp	r3, #21
 282 001e F5D9     		bls	.L9
 276:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 277:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 283              		.loc 1 277 0 is_stmt 1
 284 0020 0837     		adds	r7, r7, #8
 285              		.cfi_def_cfa_offset 8
 286 0022 BD46     		mov	sp, r7
 287              		.cfi_def_cfa_register 13
 288              		@ sp needed
 289 0024 80BD     		pop	{r7, pc}
 290              		.cfi_endproc
 291              	.LFE2:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 11


 292              		.size	CapSense_1_InitializeAllBaselines, .-CapSense_1_InitializeAllBaselines
 293 0026 00BF     		.section	.text.CapSense_1_InitializeEnabledBaselines,"ax",%progbits
 294              		.align	2
 295              		.global	CapSense_1_InitializeEnabledBaselines
 296              		.thumb
 297              		.thumb_func
 298              		.type	CapSense_1_InitializeEnabledBaselines, %function
 299              	CapSense_1_InitializeEnabledBaselines:
 300              	.LFB3:
 278:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 279:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 280:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 281:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_InitializeEnabledBaselines
 282:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 283:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 284:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 285:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 286:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 287:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 288:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The raw data filters are initialized if enabled.
 289:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 290:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 291:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 292:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 293:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 294:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 295:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 296:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 297:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 298:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 299:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 300:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_InitializeEnabledBaselines(void)
 301:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              
 302:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 301              		.loc 1 302 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 8
 304              		@ frame_needed = 1, uses_anonymous_args = 0
 305 0000 80B5     		push	{r7, lr}
 306              		.cfi_def_cfa_offset 8
 307              		.cfi_offset 7, -8
 308              		.cfi_offset 14, -4
 309 0002 82B0     		sub	sp, sp, #8
 310              		.cfi_def_cfa_offset 16
 311 0004 00AF     		add	r7, sp, #0
 312              		.cfi_def_cfa_register 7
 303:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 304:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 305:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 306:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 307:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     CapSense_1_ScanEnabledWidgets();
 313              		.loc 1 307 0
 314 0006 FFF7FEFF 		bl	CapSense_1_ScanEnabledWidgets
 308:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(CapSense_1_IsBusy() != 0u)
 315              		.loc 1 308 0
 316 000a 00BF     		nop
 317              	.L11:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 12


 318              		.loc 1 308 0 is_stmt 0 discriminator 1
 319 000c FFF7FEFF 		bl	CapSense_1_IsBusy
 320 0010 0346     		mov	r3, r0
 321 0012 002B     		cmp	r3, #0
 322 0014 FAD1     		bne	.L11
 309:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 310:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Wait while busy */
 311:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 312:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 313:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
 323              		.loc 1 313 0 is_stmt 1
 324 0016 0023     		movs	r3, #0
 325 0018 FB71     		strb	r3, [r7, #7]
 326 001a 1DE0     		b	.L12
 327              	.L14:
 314:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 315:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (i >> 3u);
 328              		.loc 1 315 0
 329 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 330 001e DB08     		lsrs	r3, r3, #3
 331 0020 BB71     		strb	r3, [r7, #6]
 316:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 332              		.loc 1 316 0
 333 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 334 0024 03F00703 		and	r3, r3, #7
 335 0028 0122     		movs	r2, #1
 336 002a 02FA03F3 		lsl	r3, r2, r3
 337 002e 7B71     		strb	r3, [r7, #5]
 317:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 318:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 319:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) == 0u)
 338              		.loc 1 319 0
 339 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 340 0032 0C4A     		ldr	r2, .L15
 341 0034 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 342 0036 7B79     		ldrb	r3, [r7, #5]
 343 0038 1340     		ands	r3, r3, r2
 344 003a DBB2     		uxtb	r3, r3
 345 003c 002B     		cmp	r3, #0
 346 003e 04D1     		bne	.L13
 320:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 321:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorRaw[i] = 0u;
 347              		.loc 1 321 0
 348 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 349 0042 094A     		ldr	r2, .L15+4
 350 0044 0021     		movs	r1, #0
 351 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 352              	.L13:
 322:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 323:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 324:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Initialize baselines */
 325:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_BaseInit(i);
 353              		.loc 1 325 0 discriminator 2
 354 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 355 004c 1846     		mov	r0, r3
 356 004e FFF7FEFF 		bl	CapSense_1_BaseInit
 313:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 13


 357              		.loc 1 313 0 discriminator 2
 358 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 359 0054 0133     		adds	r3, r3, #1
 360 0056 FB71     		strb	r3, [r7, #7]
 361              	.L12:
 313:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 362              		.loc 1 313 0 is_stmt 0 discriminator 1
 363 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 364 005a 152B     		cmp	r3, #21
 365 005c DED9     		bls	.L14
 326:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 327:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }  
 366              		.loc 1 327 0 is_stmt 1
 367 005e 0837     		adds	r7, r7, #8
 368              		.cfi_def_cfa_offset 8
 369 0060 BD46     		mov	sp, r7
 370              		.cfi_def_cfa_register 13
 371              		@ sp needed
 372 0062 80BD     		pop	{r7, pc}
 373              	.L16:
 374              		.align	2
 375              	.L15:
 376 0064 00000000 		.word	CapSense_1_sensorEnableMask
 377 0068 00000000 		.word	CapSense_1_sensorRaw
 378              		.cfi_endproc
 379              	.LFE3:
 380              		.size	CapSense_1_InitializeEnabledBaselines, .-CapSense_1_InitializeEnabledBaselines
 381              		.section	.text.CapSense_1_UpdateSensorBaseline,"ax",%progbits
 382              		.align	2
 383              		.global	CapSense_1_UpdateSensorBaseline
 384              		.thumb
 385              		.thumb_func
 386              		.type	CapSense_1_UpdateSensorBaseline, %function
 387              	CapSense_1_UpdateSensorBaseline:
 388              	.LFB4:
 328:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 329:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 330:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 331:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateSensorBaseline
 332:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 333:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 334:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 335:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Updates the CapSense_1_sensorBaseline[sensor] array element using the 
 336:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 337:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 338:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  it in CapSense_1_SensorSignal[sensor]. 
 339:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 340:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 341:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 342:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  that noise threshold.
 343:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 344:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  calculation.
 345:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 346:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 347:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 348:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 349:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 14


 350:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 351:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 352:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 353:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaseline[]    - used to store baseline value.
 354:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorBaselineLow[] - used to store fraction byte of 
 355:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  baseline value.
 356:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 357:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 358:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData1[]    - used to store previous sample of 
 359:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  any enabled raw data filter.
 360:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_rawFilterData2[]    - used to store before previous sample
 361:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 362:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 363:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 364:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 365:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 366:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 367:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****  void CapSense_1_UpdateSensorBaseline(uint8 sensor)
 368:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 369:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 389              		.loc 1 369 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 24
 392              		@ frame_needed = 1, uses_anonymous_args = 0
 393 0000 80B5     		push	{r7, lr}
 394              		.cfi_def_cfa_offset 8
 395              		.cfi_offset 7, -8
 396              		.cfi_offset 14, -4
 397 0002 86B0     		sub	sp, sp, #24
 398              		.cfi_def_cfa_offset 32
 399 0004 00AF     		add	r7, sp, #0
 400              		.cfi_def_cfa_register 7
 401 0006 0346     		mov	r3, r0
 402 0008 FB71     		strb	r3, [r7, #7]
 370:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint32 calc;
 371:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 tempRaw;
 372:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 filteredRawData;
 373:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 widget = CapSense_1_widgetNumber[sensor];
 403              		.loc 1 373 0
 404 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 405 000c 534A     		ldr	r2, .L29
 406 000e D35C     		ldrb	r3, [r2, r3]
 407 0010 7B75     		strb	r3, [r7, #21]
 374:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 noiseThreshold = CapSense_1_noiseThreshold[widget];
 408              		.loc 1 374 0
 409 0012 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 410 0014 524A     		ldr	r2, .L29+4
 411 0016 D35C     		ldrb	r3, [r2, r3]
 412 0018 3B75     		strb	r3, [r7, #20]
 375:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 376:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 377:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 378:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(widget < CapSense_1_END_OF_WIDGETS_INDEX)
 379:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 380:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 381:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 382:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     filteredRawData = CapSense_1_sensorRaw[sensor];
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 15


 413              		.loc 1 382 0
 414 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 415 001c 514A     		ldr	r2, .L29+8
 416 001e 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 417 0022 7B82     		strh	r3, [r7, #18]	@ movhi
 383:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 384:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER)
 385:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData;
 386:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_MedianFilter(filteredRawData, CapSense_1_rawFilterData1[sensor
 387:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                         CapSense_1_rawFilterData2[sensor]);
 388:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_rawFilterData1[sensor];
 389:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = tempRaw;
 390:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 391:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER)
 392:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData;
 393:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_AveragingFilter(filteredRawData, CapSense_1_rawFilterData1[sen
 394:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                            CapSense_1_rawFilterData2[sensor]);
 395:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData2[sensor] = CapSense_1_rawFilterData1[sensor];
 396:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = tempRaw;
 397:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 398:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER)
 399:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR2Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 400:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 401:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 402:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER)
 403:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR4Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 418              		.loc 1 403 0
 419 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 420 0026 504A     		ldr	r2, .L29+12
 421 0028 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 422 002c 7A8A     		ldrh	r2, [r7, #18]
 423 002e 1046     		mov	r0, r2
 424 0030 1946     		mov	r1, r3
 425 0032 FFF7FEFF 		bl	CapSense_1_IIR4Filter
 426 0036 0346     		mov	r3, r0
 427 0038 7B82     		strh	r3, [r7, #18]	@ movhi
 404:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 428              		.loc 1 404 0
 429 003a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 430 003c 4A49     		ldr	r1, .L29+12
 431 003e 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 432 0040 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 405:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             
 406:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_JITTER_FILTER)
 407:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_JitterFilter(filteredRawData, CapSense_1_rawFilterData1[sensor
 408:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 409:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 410:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR8_FILTER)
 411:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR8Filter(filteredRawData, CapSense_1_rawFilterData1[sensor])
 412:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 413:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 414:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #elif (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR16_FILTER)
 415:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         filteredRawData = CapSense_1_IIR16Filter(filteredRawData, CapSense_1_rawFilterData1[sensor]
 416:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_rawFilterData1[sensor] = filteredRawData;
 417:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 418:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else
 419:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* No Raw filters */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 16


 420:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) */
 421:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 422:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TUNING_METHOD == CapSense_1_AUTO_TUNING)
 423:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_CalculateThresholds(sensor);
 433              		.loc 1 423 0
 434 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 435 0046 1846     		mov	r0, r3
 436 0048 FFF7FEFF 		bl	CapSense_1_CalculateThresholds
 424:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_TUNING_METHOD == CapSense_1_AUTO_TUNING) */
 425:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 426:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 427:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Baseline calculation */
 428:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 429:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if(filteredRawData >= CapSense_1_sensorBaseline[sensor])
 437              		.loc 1 429 0
 438 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 439 004e 474A     		ldr	r2, .L29+16
 440 0050 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 441 0054 7A8A     		ldrh	r2, [r7, #18]
 442 0056 9A42     		cmp	r2, r3
 443 0058 09D3     		bcc	.L18
 430:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 431:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = filteredRawData - CapSense_1_sensorBaseline[sensor];
 444              		.loc 1 431 0
 445 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 446 005c 434A     		ldr	r2, .L29+16
 447 005e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 448 0062 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 449 0064 D31A     		subs	r3, r2, r3
 450 0066 FB82     		strh	r3, [r7, #22]	@ movhi
 432:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 451              		.loc 1 432 0
 452 0068 0123     		movs	r3, #1
 453 006a 7B75     		strb	r3, [r7, #21]
 454 006c 08E0     		b	.L19
 455              	.L18:
 433:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 434:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 435:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 436:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tempRaw = CapSense_1_sensorBaseline[sensor] - filteredRawData;
 456              		.loc 1 436 0
 457 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 458 0070 3E4A     		ldr	r2, .L29+16
 459 0072 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 460 0076 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 461 0078 D31A     		subs	r3, r2, r3
 462 007a FB82     		strh	r3, [r7, #22]	@ movhi
 437:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 463              		.loc 1 437 0
 464 007c 0023     		movs	r3, #0
 465 007e 7B75     		strb	r3, [r7, #21]
 466              	.L19:
 438:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 439:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 440:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD))
 467              		.loc 1 440 0
 468 0080 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 17


 469 0082 002B     		cmp	r3, #0
 470 0084 18D1     		bne	.L20
 471              		.loc 1 440 0 is_stmt 0 discriminator 1
 472 0086 FB8A     		ldrh	r3, [r7, #22]
 473 0088 142B     		cmp	r3, #20
 474 008a 15D9     		bls	.L20
 441:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 442:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_lowBaselineResetCnt[sensor] >= CapSense_1_LOW_BASELINE_RESET)
 475              		.loc 1 442 0 is_stmt 1
 476 008c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 477 008e 384A     		ldr	r2, .L29+20
 478 0090 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 479 0092 042B     		cmp	r3, #4
 480 0094 08D9     		bls	.L21
 443:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 444:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_BaseInit(sensor);
 481              		.loc 1 444 0
 482 0096 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 483 0098 1846     		mov	r0, r3
 484 009a FFF7FEFF 		bl	CapSense_1_BaseInit
 445:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 485              		.loc 1 445 0
 486 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 487 00a0 334A     		ldr	r2, .L29+20
 488 00a2 0021     		movs	r1, #0
 489 00a4 D154     		strb	r1, [r2, r3]
 442:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 490              		.loc 1 442 0
 491 00a6 3BE0     		b	.L23
 492              	.L21:
 446:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 447:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
 448:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 449:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_lowBaselineResetCnt[sensor]++;
 493              		.loc 1 449 0
 494 00a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 495 00aa 314A     		ldr	r2, .L29+20
 496 00ac D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 497 00ae 0132     		adds	r2, r2, #1
 498 00b0 D1B2     		uxtb	r1, r2
 499 00b2 2F4A     		ldr	r2, .L29+20
 500 00b4 D154     		strb	r1, [r2, r3]
 442:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 501              		.loc 1 442 0
 502 00b6 33E0     		b	.L23
 503              	.L20:
 450:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 451:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 452:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 453:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 454:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 455:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 456:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 504              		.loc 1 456 0
 505 00b8 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 506 00ba 9BB2     		uxth	r3, r3
 507 00bc FA8A     		ldrh	r2, [r7, #22]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 18


 508 00be 9A42     		cmp	r2, r3
 509 00c0 05D9     		bls	.L24
 510              		.loc 1 456 0 is_stmt 0 discriminator 1
 511 00c2 FB8A     		ldrh	r3, [r7, #22]
 512 00c4 132B     		cmp	r3, #19
 513 00c6 2BD8     		bhi	.L23
 457:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                  ((tempRaw < (uint16) CapSense_1_NEGATIVE_NOISE_THRESHOLD)
 458:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                    && (widget == 0u)))
 514              		.loc 1 458 0 is_stmt 1
 515 00c8 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 516 00ca 002B     		cmp	r3, #0
 517 00cc 28D1     		bne	.L23
 518              	.L24:
 459:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 460:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE) */
 461:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Make full Baseline 23 bits */
 462:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc = (uint32) CapSense_1_sensorBaseline[sensor] << 8u;
 519              		.loc 1 462 0
 520 00ce FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 521 00d0 264A     		ldr	r2, .L29+16
 522 00d2 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 523 00d6 1B02     		lsls	r3, r3, #8
 524 00d8 FB60     		str	r3, [r7, #12]
 463:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc |= (uint32) CapSense_1_sensorBaselineLow[sensor];
 525              		.loc 1 463 0
 526 00da FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 527 00dc 254A     		ldr	r2, .L29+24
 528 00de D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 529 00e0 1A46     		mov	r2, r3
 530 00e2 FB68     		ldr	r3, [r7, #12]
 531 00e4 1343     		orrs	r3, r3, r2
 532 00e6 FB60     		str	r3, [r7, #12]
 464:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 465:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Add Raw Data to Baseline */
 466:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc += filteredRawData;
 533              		.loc 1 466 0
 534 00e8 7B8A     		ldrh	r3, [r7, #18]
 535 00ea FA68     		ldr	r2, [r7, #12]
 536 00ec 1344     		add	r3, r3, r2
 537 00ee FB60     		str	r3, [r7, #12]
 467:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 468:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Sub the high Baseline */
 469:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 calc -= CapSense_1_sensorBaseline[sensor];
 538              		.loc 1 469 0
 539 00f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 540 00f2 1E4A     		ldr	r2, .L29+16
 541 00f4 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 542 00f8 1A46     		mov	r2, r3
 543 00fa FB68     		ldr	r3, [r7, #12]
 544 00fc 9B1A     		subs	r3, r3, r2
 545 00fe FB60     		str	r3, [r7, #12]
 470:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 471:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Put Baseline and BaselineLow */
 472:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 546              		.loc 1 472 0
 547 0100 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 548 0102 FA68     		ldr	r2, [r7, #12]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 19


 549 0104 120A     		lsrs	r2, r2, #8
 550 0106 91B2     		uxth	r1, r2
 551 0108 184A     		ldr	r2, .L29+16
 552 010a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 473:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorBaselineLow[sensor] = ((uint8) calc);
 553              		.loc 1 473 0
 554 010e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 555 0110 FA68     		ldr	r2, [r7, #12]
 556 0112 D1B2     		uxtb	r1, r2
 557 0114 174A     		ldr	r2, .L29+24
 558 0116 D154     		strb	r1, [r2, r3]
 474:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 475:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_lowBaselineResetCnt[sensor] = 0u;
 559              		.loc 1 475 0
 560 0118 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 561 011a 154A     		ldr	r2, .L29+20
 562 011c 0021     		movs	r1, #0
 563 011e D154     		strb	r1, [r2, r3]
 564              	.L23:
 476:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE)
 477:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 478:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_AUTO_RESET == CapSense_1_AUTO_RESET_DISABLE) */
 479:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 480:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 481:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 482:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 565              		.loc 1 482 0
 566 0120 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 567 0122 9BB2     		uxth	r3, r3
 568 0124 FA8A     		ldrh	r2, [r7, #22]
 569 0126 9A42     		cmp	r2, r3
 570 0128 10D9     		bls	.L25
 571              		.loc 1 482 0 is_stmt 0 discriminator 1
 572 012a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 573 012c 002B     		cmp	r3, #0
 574 012e 0DD0     		beq	.L25
 483:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 484:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8)
 485:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Over flow defence for uint8 */
 486:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (tempRaw > 0xFFu)
 575              		.loc 1 486 0 is_stmt 1
 576 0130 FB8A     		ldrh	r3, [r7, #22]
 577 0132 FF2B     		cmp	r3, #255
 578 0134 04D9     		bls	.L26
 487:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 488:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = 0xFFu;
 579              		.loc 1 488 0
 580 0136 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 581 0138 0F4A     		ldr	r2, .L29+28
 582 013a FF21     		movs	r1, #255
 583 013c D154     		strb	r1, [r2, r3]
 486:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 584              		.loc 1 486 0
 585 013e 09E0     		b	.L17
 586              	.L26:
 489:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }    
 490:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 20


 491:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 492:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorSignal[sensor] = ((uint8) tempRaw);
 587              		.loc 1 492 0
 588 0140 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 589 0142 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 590 0144 D1B2     		uxtb	r1, r2
 591 0146 0C4A     		ldr	r2, .L29+28
 592 0148 D154     		strb	r1, [r2, r3]
 486:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 593              		.loc 1 486 0
 594 014a 03E0     		b	.L17
 595              	.L25:
 493:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 494:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
 495:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorSignal[sensor] = ((uint16) tempRaw);
 496:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif  /* (CapSense_1_SIGNAL_SIZE == CapSense_1_SIGNAL_SIZE_UINT8) */
 497:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 498:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 499:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 500:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Signal is zero */
 501:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorSignal[sensor] = 0u;
 596              		.loc 1 501 0
 597 014c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 598 014e 0A4A     		ldr	r2, .L29+28
 599 0150 0021     		movs	r1, #0
 600 0152 D154     		strb	r1, [r2, r3]
 601              	.L17:
 502:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 503:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 504:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_TOTAL_GENERICS_COUNT)
 505:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Exclude generic widget */
 506:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 507:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif  /* CapSense_1_TOTAL_GENERICS_COUNT */
 508:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 602              		.loc 1 508 0
 603 0154 1837     		adds	r7, r7, #24
 604              		.cfi_def_cfa_offset 8
 605 0156 BD46     		mov	sp, r7
 606              		.cfi_def_cfa_register 13
 607              		@ sp needed
 608 0158 80BD     		pop	{r7, pc}
 609              	.L30:
 610 015a 00BF     		.align	2
 611              	.L29:
 612 015c 00000000 		.word	CapSense_1_widgetNumber
 613 0160 00000000 		.word	CapSense_1_noiseThreshold
 614 0164 00000000 		.word	CapSense_1_sensorRaw
 615 0168 00000000 		.word	CapSense_1_rawFilterData1
 616 016c 00000000 		.word	CapSense_1_sensorBaseline
 617 0170 00000000 		.word	CapSense_1_lowBaselineResetCnt
 618 0174 00000000 		.word	CapSense_1_sensorBaselineLow
 619 0178 00000000 		.word	CapSense_1_sensorSignal
 620              		.cfi_endproc
 621              	.LFE4:
 622              		.size	CapSense_1_UpdateSensorBaseline, .-CapSense_1_UpdateSensorBaseline
 623              		.section	.text.CapSense_1_UpdateEnabledBaselines,"ax",%progbits
 624              		.align	2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 21


 625              		.global	CapSense_1_UpdateEnabledBaselines
 626              		.thumb
 627              		.thumb_func
 628              		.type	CapSense_1_UpdateEnabledBaselines, %function
 629              	CapSense_1_UpdateEnabledBaselines:
 630              	.LFB5:
 509:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 510:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 511:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 512:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_UpdateEnabledBaselines
 513:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 514:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 515:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 516:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Checks CapSense_1_sensorEnableMask[] array and calls the 
 517:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_UpdateSensorBaseline function to update the baselines 
 518:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  for enabled sensors.
 519:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 520:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 521:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 522:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 523:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 524:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 525:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 527:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 528:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 529:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 530:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 531:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 532:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 533:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 534:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 535:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 536:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 537:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 538:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 539:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 540:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****  void CapSense_1_UpdateEnabledBaselines(void)
 541:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 542:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 631              		.loc 1 542 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 8
 634              		@ frame_needed = 1, uses_anonymous_args = 0
 635 0000 80B5     		push	{r7, lr}
 636              		.cfi_def_cfa_offset 8
 637              		.cfi_offset 7, -8
 638              		.cfi_offset 14, -4
 639 0002 82B0     		sub	sp, sp, #8
 640              		.cfi_def_cfa_offset 16
 641 0004 00AF     		add	r7, sp, #0
 642              		.cfi_def_cfa_register 7
 543:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 544:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 545:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 546:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 547:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_SENSOR_COUNT; i++)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 22


 643              		.loc 1 547 0
 644 0006 0023     		movs	r3, #0
 645 0008 FB71     		strb	r3, [r7, #7]
 646 000a 18E0     		b	.L32
 647              	.L34:
 548:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 549:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (i >> 3u);
 648              		.loc 1 549 0
 649 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 650 000e DB08     		lsrs	r3, r3, #3
 651 0010 BB71     		strb	r3, [r7, #6]
 550:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 652              		.loc 1 550 0
 653 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 654 0014 03F00703 		and	r3, r3, #7
 655 0018 0122     		movs	r2, #1
 656 001a 02FA03F3 		lsl	r3, r2, r3
 657 001e 7B71     		strb	r3, [r7, #5]
 551:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if((CapSense_1_sensorEnableMask[pos] & enMask) != 0u)
 658              		.loc 1 551 0
 659 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 660 0022 0A4A     		ldr	r2, .L35
 661 0024 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 662 0026 7B79     		ldrb	r3, [r7, #5]
 663 0028 1340     		ands	r3, r3, r2
 664 002a DBB2     		uxtb	r3, r3
 665 002c 002B     		cmp	r3, #0
 666 002e 03D0     		beq	.L33
 552:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 553:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_UpdateSensorBaseline(i);
 667              		.loc 1 553 0
 668 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 669 0032 1846     		mov	r0, r3
 670 0034 FFF7FEFF 		bl	CapSense_1_UpdateSensorBaseline
 671              	.L33:
 547:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 672              		.loc 1 547 0 discriminator 2
 673 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 674 003a 0133     		adds	r3, r3, #1
 675 003c FB71     		strb	r3, [r7, #7]
 676              	.L32:
 547:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 677              		.loc 1 547 0 is_stmt 0 discriminator 1
 678 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 679 0040 152B     		cmp	r3, #21
 680 0042 E3D9     		bls	.L34
 554:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 555:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 556:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 681              		.loc 1 556 0 is_stmt 1
 682 0044 0837     		adds	r7, r7, #8
 683              		.cfi_def_cfa_offset 8
 684 0046 BD46     		mov	sp, r7
 685              		.cfi_def_cfa_register 13
 686              		@ sp needed
 687 0048 80BD     		pop	{r7, pc}
 688              	.L36:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 23


 689 004a 00BF     		.align	2
 690              	.L35:
 691 004c 00000000 		.word	CapSense_1_sensorEnableMask
 692              		.cfi_endproc
 693              	.LFE5:
 694              		.size	CapSense_1_UpdateEnabledBaselines, .-CapSense_1_UpdateEnabledBaselines
 695              		.section	.text.CapSense_1_CheckIsSensorActive,"ax",%progbits
 696              		.align	2
 697              		.global	CapSense_1_CheckIsSensorActive
 698              		.thumb
 699              		.thumb_func
 700              		.type	CapSense_1_CheckIsSensorActive, %function
 701              	CapSense_1_CheckIsSensorActive:
 702              	.LFB6:
 557:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 558:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 559:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 560:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsSensorActive
 561:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 562:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 563:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 564:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Compares the CapSense_1_SensorSignal[sensor] array element to finger
 565:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 566:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 567:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  based on whether the sensor is currently active. 
 568:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 569:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 570:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The debounce counter added to the sensor active transition.
 571:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  This function updates CapSense_1_SensorOnMask[] array element.
 572:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 573:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 574:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensor:  Sensor number.
 575:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 576:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 577:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 578:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 579:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 580:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorSignal[]      - used to store diffence between 
 581:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  current value of raw data and previous value of baseline.
 582:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_debounceCounter[]   - used to store current debounce 
 583:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 584:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 585:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 586:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[] - used to store sensors on/off state.
 587:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[0] contains the masked bits for sensors 
 588:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 589:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 590:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 591:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor is inactive.
 592:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor is active.
 593:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 594:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 595:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 596:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 597:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 598:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsSensorActive(uint8 sensor)
 599:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                   
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 24


 600:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 703              		.loc 1 600 0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 16
 706              		@ frame_needed = 1, uses_anonymous_args = 0
 707              		@ link register save eliminated.
 708 0000 80B4     		push	{r7}
 709              		.cfi_def_cfa_offset 4
 710              		.cfi_offset 7, -4
 711 0002 85B0     		sub	sp, sp, #20
 712              		.cfi_def_cfa_offset 24
 713 0004 00AF     		add	r7, sp, #0
 714              		.cfi_def_cfa_register 7
 715 0006 0346     		mov	r3, r0
 716 0008 FB71     		strb	r3, [r7, #7]
 601:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 debounceIndex;
 602:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Get On/Off mask */
 603:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos = (sensor >> 3u);
 717              		.loc 1 603 0
 718 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 719 000c DB08     		lsrs	r3, r3, #3
 720 000e BB73     		strb	r3, [r7, #14]
 604:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 721              		.loc 1 604 0
 722 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 723 0012 03F00703 		and	r3, r3, #7
 724 0016 0122     		movs	r2, #1
 725 0018 02FA03F3 		lsl	r3, r2, r3
 726 001c 7B73     		strb	r3, [r7, #13]
 605:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Prepare to find debounce counter index */
 606:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 widget = CapSense_1_widgetNumber[sensor];
 727              		.loc 1 606 0
 728 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 729 0020 384A     		ldr	r2, .L48
 730 0022 D35C     		ldrb	r3, [r2, r3]
 731 0024 3B73     		strb	r3, [r7, #12]
 607:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 fingerThreshold = CapSense_1_fingerThreshold[widget];
 732              		.loc 1 607 0
 733 0026 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 734 0028 374A     		ldr	r2, .L48+4
 735 002a D35C     		ldrb	r3, [r2, r3]
 736 002c FB72     		strb	r3, [r7, #11]
 608:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 hysteresis = CapSense_1_hysteresis[widget];
 737              		.loc 1 608 0
 738 002e 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 739 0030 364A     		ldr	r2, .L48+8
 740 0032 D35C     		ldrb	r3, [r2, r3]
 741 0034 BB72     		strb	r3, [r7, #10]
 609:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 debounce = CapSense_1_debounce[widget];
 742              		.loc 1 609 0
 743 0036 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 744 0038 354A     		ldr	r2, .L48+12
 745 003a D35C     		ldrb	r3, [r2, r3]
 746 003c 7B72     		strb	r3, [r7, #9]
 610:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 611:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if (widget < CapSense_1_TOTAL_CENTROIDS_COUNT)
 747              		.loc 1 611 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 25


 748 003e 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 749 0040 002B     		cmp	r3, #0
 750 0042 06D1     		bne	.L38
 612:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 613:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         debounceIndex = CapSense_1_UNUSED_DEBOUNCE_COUNTER_INDEX;
 751              		.loc 1 613 0
 752 0044 0323     		movs	r3, #3
 753 0046 FB73     		strb	r3, [r7, #15]
 614:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_debounceCounter[debounceIndex] = 1u;
 754              		.loc 1 614 0
 755 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 756 004a 324A     		ldr	r2, .L48+16
 757 004c 0121     		movs	r1, #1
 758 004e D154     		strb	r1, [r2, r3]
 759 0050 02E0     		b	.L39
 760              	.L38:
 615:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 616:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else
 617:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 618:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         debounceIndex = widget - (CapSense_1_END_OF_TOUCH_PAD_INDEX + 1);
 761              		.loc 1 618 0
 762 0052 3B7B     		ldrb	r3, [r7, #12]
 763 0054 013B     		subs	r3, r3, #1
 764 0056 FB73     		strb	r3, [r7, #15]
 765              	.L39:
 619:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 620:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 621:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 622:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Was on */
 623:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     if (0u != (CapSense_1_sensorOnMask[pos] & onMask))
 766              		.loc 1 623 0
 767 0058 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 768 005a 2F4A     		ldr	r2, .L48+20
 769 005c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 770 005e 7B7B     		ldrb	r3, [r7, #13]
 771 0060 1340     		ands	r3, r3, r2
 772 0062 DBB2     		uxtb	r3, r3
 773 0064 002B     		cmp	r3, #0
 774 0066 18D0     		beq	.L40
 624:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 625:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Hysteresis minus */
 626:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 775              		.loc 1 626 0
 776 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 777 006a 2C4A     		ldr	r2, .L48+24
 778 006c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 779 006e 1946     		mov	r1, r3
 780 0070 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 781 0072 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 782 0074 D31A     		subs	r3, r2, r3
 783 0076 9942     		cmp	r1, r3
 784 0078 32DA     		bge	.L42
 627:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 628:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_sensorOnMask[pos] &= (uint8)~onMask;
 785              		.loc 1 628 0
 786 007a BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 787 007c BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 26


 788 007e 2649     		ldr	r1, .L48+20
 789 0080 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 790 0082 7A7B     		ldrb	r2, [r7, #13]
 791 0084 D243     		mvns	r2, r2
 792 0086 D2B2     		uxtb	r2, r2
 793 0088 0A40     		ands	r2, r2, r1
 794 008a D1B2     		uxtb	r1, r2
 795 008c 224A     		ldr	r2, .L48+20
 796 008e D154     		strb	r1, [r2, r3]
 629:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex] = debounce; 
 797              		.loc 1 629 0
 798 0090 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 799 0092 2049     		ldr	r1, .L48+16
 800 0094 7A7A     		ldrb	r2, [r7, #9]
 801 0096 CA54     		strb	r2, [r1, r3]
 802 0098 22E0     		b	.L42
 803              	.L40:
 630:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 631:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 632:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     else    /* Was off */
 633:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 634:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Hysteresis plus */
 635:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 804              		.loc 1 635 0
 805 009a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 806 009c 1F4A     		ldr	r2, .L48+24
 807 009e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 808 00a0 1946     		mov	r1, r3
 809 00a2 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 810 00a4 BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 811 00a6 1344     		add	r3, r3, r2
 812 00a8 9942     		cmp	r1, r3
 813 00aa 15DD     		ble	.L43
 636:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 637:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Sensor active, decrement debounce counter */
 638:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (CapSense_1_debounceCounter[debounceIndex] <= 1u)
 814              		.loc 1 638 0
 815 00ac FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 816 00ae 194A     		ldr	r2, .L48+16
 817 00b0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 818 00b2 012B     		cmp	r3, #1
 819 00b4 08D8     		bhi	.L44
 639:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 640:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_sensorOnMask[pos] |= onMask; 
 820              		.loc 1 640 0
 821 00b6 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 822 00b8 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 823 00ba 1749     		ldr	r1, .L48+20
 824 00bc 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 825 00be 7A7B     		ldrb	r2, [r7, #13]
 826 00c0 0A43     		orrs	r2, r2, r1
 827 00c2 D1B2     		uxtb	r1, r2
 828 00c4 144A     		ldr	r2, .L48+20
 829 00c6 D154     		strb	r1, [r2, r3]
 830              	.L44:
 641:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 642:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex]--;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 27


 831              		.loc 1 642 0
 832 00c8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 833 00ca 124A     		ldr	r2, .L48+16
 834 00cc D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 835 00ce 013A     		subs	r2, r2, #1
 836 00d0 D1B2     		uxtb	r1, r2
 837 00d2 104A     		ldr	r2, .L48+16
 838 00d4 D154     		strb	r1, [r2, r3]
 839 00d6 03E0     		b	.L42
 840              	.L43:
 643:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 644:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
 645:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 646:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 647:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_debounceCounter[debounceIndex] = debounce;
 841              		.loc 1 647 0
 842 00d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 843 00da 0E49     		ldr	r1, .L48+16
 844 00dc 7A7A     		ldrb	r2, [r7, #9]
 845 00de CA54     		strb	r2, [r1, r3]
 846              	.L42:
 648:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 649:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 650:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 651:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (((CapSense_1_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 847              		.loc 1 651 0
 848 00e0 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 849 00e2 0D4A     		ldr	r2, .L48+20
 850 00e4 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 851 00e6 7B7B     		ldrb	r3, [r7, #13]
 852 00e8 1340     		ands	r3, r3, r2
 853 00ea DBB2     		uxtb	r3, r3
 854 00ec 002B     		cmp	r3, #0
 855 00ee 01D0     		beq	.L45
 856              		.loc 1 651 0 is_stmt 0 discriminator 1
 857 00f0 0123     		movs	r3, #1
 858 00f2 00E0     		b	.L46
 859              	.L45:
 860              		.loc 1 651 0 discriminator 2
 861 00f4 0023     		movs	r3, #0
 862              	.L46:
 652:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 863              		.loc 1 652 0 is_stmt 1 discriminator 4
 864 00f6 1846     		mov	r0, r3
 865 00f8 1437     		adds	r7, r7, #20
 866              		.cfi_def_cfa_offset 4
 867 00fa BD46     		mov	sp, r7
 868              		.cfi_def_cfa_register 13
 869              		@ sp needed
 870 00fc 5DF8047B 		ldr	r7, [sp], #4
 871              		.cfi_restore 7
 872              		.cfi_def_cfa_offset 0
 873 0100 7047     		bx	lr
 874              	.L49:
 875 0102 00BF     		.align	2
 876              	.L48:
 877 0104 00000000 		.word	CapSense_1_widgetNumber
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 28


 878 0108 00000000 		.word	CapSense_1_fingerThreshold
 879 010c 00000000 		.word	CapSense_1_hysteresis
 880 0110 00000000 		.word	CapSense_1_debounce
 881 0114 00000000 		.word	CapSense_1_debounceCounter
 882 0118 00000000 		.word	CapSense_1_sensorOnMask
 883 011c 00000000 		.word	CapSense_1_sensorSignal
 884              		.cfi_endproc
 885              	.LFE6:
 886              		.size	CapSense_1_CheckIsSensorActive, .-CapSense_1_CheckIsSensorActive
 887              		.section	.text.CapSense_1_CheckIsWidgetActive,"ax",%progbits
 888              		.align	2
 889              		.global	CapSense_1_CheckIsWidgetActive
 890              		.thumb
 891              		.thumb_func
 892              		.type	CapSense_1_CheckIsWidgetActive, %function
 893              	CapSense_1_CheckIsWidgetActive:
 894              	.LFB7:
 653:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 654:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 655:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 656:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsWidgetActive
 657:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 658:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 659:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 660:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Use function CapSense_1_CheckIsSensorActive() to update 
 661:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorOnMask[] for all sensors within the widget.
 662:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 663:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  active.
 664:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 665:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  col and row to return widget active status.
 666:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 667:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 668:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 669:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 670:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 671:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 672:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 673:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 674:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 675:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 676:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 677:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 678:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsWidgetActive(uint8 widget)
 679:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 680:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 895              		.loc 1 680 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 16
 898              		@ frame_needed = 1, uses_anonymous_args = 0
 899 0000 80B5     		push	{r7, lr}
 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 7, -8
 902              		.cfi_offset 14, -4
 903 0002 84B0     		sub	sp, sp, #16
 904              		.cfi_def_cfa_offset 24
 905 0004 00AF     		add	r7, sp, #0
 906              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 29


 907 0006 0346     		mov	r3, r0
 908 0008 FB71     		strb	r3, [r7, #7]
 681:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 909              		.loc 1 681 0
 910 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 911 000c 0F4A     		ldr	r2, .L54
 912 000e D35C     		ldrb	r3, [r2, r3]
 913 0010 FB73     		strb	r3, [r7, #15]
 682:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 914              		.loc 1 682 0
 915 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 916 0014 0E4A     		ldr	r2, .L54+4
 917 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 918 0018 FB7B     		ldrb	r3, [r7, #15]
 919 001a 1344     		add	r3, r3, r2
 920 001c 7B73     		strb	r3, [r7, #13]
 683:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 state = 0u;
 921              		.loc 1 683 0
 922 001e 0023     		movs	r3, #0
 923 0020 BB73     		strb	r3, [r7, #14]
 924              	.L52:
 684:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 685:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Check all sensors of the widget */
 686:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 687:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 688:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_CheckIsSensorActive(rawIndex) != 0u)
 925              		.loc 1 688 0
 926 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 927 0024 1846     		mov	r0, r3
 928 0026 FFF7FEFF 		bl	CapSense_1_CheckIsSensorActive
 929 002a 0346     		mov	r3, r0
 930 002c 002B     		cmp	r3, #0
 931 002e 01D0     		beq	.L51
 689:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 690:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             state = CapSense_1_SENSOR_1_IS_ACTIVE;
 932              		.loc 1 690 0
 933 0030 0123     		movs	r3, #1
 934 0032 BB73     		strb	r3, [r7, #14]
 935              	.L51:
 691:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 692:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 936              		.loc 1 692 0
 937 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 938 0036 0133     		adds	r3, r3, #1
 939 0038 FB73     		strb	r3, [r7, #15]
 693:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 694:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 940              		.loc 1 694 0
 941 003a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 942 003c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 943 003e 9A42     		cmp	r2, r3
 944 0040 EFD3     		bcc	.L52
 695:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 696:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 697:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 698:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (state);
 945              		.loc 1 698 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 30


 946 0042 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 699:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 947              		.loc 1 699 0
 948 0044 1846     		mov	r0, r3
 949 0046 1037     		adds	r7, r7, #16
 950              		.cfi_def_cfa_offset 8
 951 0048 BD46     		mov	sp, r7
 952              		.cfi_def_cfa_register 13
 953              		@ sp needed
 954 004a 80BD     		pop	{r7, pc}
 955              	.L55:
 956              		.align	2
 957              	.L54:
 958 004c 00000000 		.word	CapSense_1_rawDataIndex
 959 0050 00000000 		.word	CapSense_1_numberOfSensors
 960              		.cfi_endproc
 961              	.LFE7:
 962              		.size	CapSense_1_CheckIsWidgetActive, .-CapSense_1_CheckIsWidgetActive
 963              		.section	.text.CapSense_1_CheckIsAnyWidgetActive,"ax",%progbits
 964              		.align	2
 965              		.global	CapSense_1_CheckIsAnyWidgetActive
 966              		.thumb
 967              		.thumb_func
 968              		.type	CapSense_1_CheckIsAnyWidgetActive, %function
 969              	CapSense_1_CheckIsAnyWidgetActive:
 970              	.LFB8:
 700:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 701:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 702:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 703:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_CheckIsAnyWidgetActive
 704:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 705:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 706:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 707:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Compares all sensors of the CapSense_1_signal[] array to their finger 
 708:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  threshold. Calls CapSense_1_CheckIsWidgetActive() for each widget so 
 709:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  the CapSense_1_SensorOnMask[] array is up to date after calling this 
 710:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  function.
 711:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 712:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 713:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 714:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 715:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 716:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 717:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 718:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 719:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 720:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 721:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** uint8 CapSense_1_CheckIsAnyWidgetActive(void)
 723:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  
 724:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 971              		.loc 1 724 0
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 8
 974              		@ frame_needed = 1, uses_anonymous_args = 0
 975 0000 80B5     		push	{r7, lr}
 976              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 31


 977              		.cfi_offset 7, -8
 978              		.cfi_offset 14, -4
 979 0002 82B0     		sub	sp, sp, #8
 980              		.cfi_def_cfa_offset 16
 981 0004 00AF     		add	r7, sp, #0
 982              		.cfi_def_cfa_register 7
 725:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 i;
 726:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 state = 0u;
 983              		.loc 1 726 0
 984 0006 0023     		movs	r3, #0
 985 0008 BB71     		strb	r3, [r7, #6]
 727:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 728:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     for(i = 0u; i < CapSense_1_TOTAL_WIDGET_COUNT; i++)
 986              		.loc 1 728 0
 987 000a 0023     		movs	r3, #0
 988 000c FB71     		strb	r3, [r7, #7]
 989 000e 0BE0     		b	.L57
 990              	.L59:
 729:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 730:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (CapSense_1_CheckIsWidgetActive(i) != 0u)
 991              		.loc 1 730 0
 992 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 993 0012 1846     		mov	r0, r3
 994 0014 FFF7FEFF 		bl	CapSense_1_CheckIsWidgetActive
 995 0018 0346     		mov	r3, r0
 996 001a 002B     		cmp	r3, #0
 997 001c 01D0     		beq	.L58
 731:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
 732:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             state = CapSense_1_WIDGET_IS_ACTIVE;
 998              		.loc 1 732 0
 999 001e 0123     		movs	r3, #1
 1000 0020 BB71     		strb	r3, [r7, #6]
 1001              	.L58:
 728:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 1002              		.loc 1 728 0 discriminator 2
 1003 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1004 0024 0133     		adds	r3, r3, #1
 1005 0026 FB71     		strb	r3, [r7, #7]
 1006              	.L57:
 728:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 1007              		.loc 1 728 0 is_stmt 0 discriminator 1
 1008 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1009 002a 032B     		cmp	r3, #3
 1010 002c F0D9     		bls	.L59
 733:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
 734:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 735:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 736:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 737:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     return (state);
 1011              		.loc 1 737 0 is_stmt 1
 1012 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 738:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 1013              		.loc 1 738 0
 1014 0030 1846     		mov	r0, r3
 1015 0032 0837     		adds	r7, r7, #8
 1016              		.cfi_def_cfa_offset 8
 1017 0034 BD46     		mov	sp, r7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 32


 1018              		.cfi_def_cfa_register 13
 1019              		@ sp needed
 1020 0036 80BD     		pop	{r7, pc}
 1021              		.cfi_endproc
 1022              	.LFE8:
 1023              		.size	CapSense_1_CheckIsAnyWidgetActive, .-CapSense_1_CheckIsAnyWidgetActive
 1024              		.section	.text.CapSense_1_EnableWidget,"ax",%progbits
 1025              		.align	2
 1026              		.global	CapSense_1_EnableWidget
 1027              		.thumb
 1028              		.thumb_func
 1029              		.type	CapSense_1_EnableWidget, %function
 1030              	CapSense_1_EnableWidget:
 1031              	.LFB9:
 739:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 740:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 741:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 742:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_EnableWidget
 743:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 744:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 745:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 746:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 747:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 748:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 749:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 750:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 751:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 752:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 753:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 754:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 755:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 756:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 757:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 758:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 759:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 760:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 761:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 762:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
 763:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 764:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 765:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 766:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 767:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 768:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_EnableWidget(uint8 widget)
 769:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    
 770:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 1032              		.loc 1 770 0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 16
 1035              		@ frame_needed = 1, uses_anonymous_args = 0
 1036              		@ link register save eliminated.
 1037 0000 80B4     		push	{r7}
 1038              		.cfi_def_cfa_offset 4
 1039              		.cfi_offset 7, -4
 1040 0002 85B0     		sub	sp, sp, #20
 1041              		.cfi_def_cfa_offset 24
 1042 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 33


 1043              		.cfi_def_cfa_register 7
 1044 0006 0346     		mov	r3, r0
 1045 0008 FB71     		strb	r3, [r7, #7]
 771:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 772:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 773:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 1046              		.loc 1 773 0
 1047 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1048 000c 134A     		ldr	r2, .L63
 1049 000e D35C     		ldrb	r3, [r2, r3]
 1050 0010 FB73     		strb	r3, [r7, #15]
 774:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 1051              		.loc 1 774 0
 1052 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1053 0014 124A     		ldr	r2, .L63+4
 1054 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1055 0018 FB7B     		ldrb	r3, [r7, #15]
 1056 001a 1344     		add	r3, r3, r2
 1057 001c BB73     		strb	r3, [r7, #14]
 1058              	.L62:
 775:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 776:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Enable all sensors of the widget */
 777:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 778:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 779:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (rawIndex >> 3u);
 1059              		.loc 1 779 0 discriminator 1
 1060 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1061 0020 DB08     		lsrs	r3, r3, #3
 1062 0022 7B73     		strb	r3, [r7, #13]
 780:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1063              		.loc 1 780 0 discriminator 1
 1064 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1065 0026 03F00703 		and	r3, r3, #7
 1066 002a 0122     		movs	r2, #1
 1067 002c 02FA03F3 		lsl	r3, r2, r3
 1068 0030 3B73     		strb	r3, [r7, #12]
 781:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 782:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorEnableMask[pos] |= enMask;
 1069              		.loc 1 782 0 discriminator 1
 1070 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1071 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1072 0036 0B49     		ldr	r1, .L63+8
 1073 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1074 003a 3A7B     		ldrb	r2, [r7, #12]
 1075 003c 0A43     		orrs	r2, r2, r1
 1076 003e D1B2     		uxtb	r1, r2
 1077 0040 084A     		ldr	r2, .L63+8
 1078 0042 D154     		strb	r1, [r2, r3]
 783:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 1079              		.loc 1 783 0 discriminator 1
 1080 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1081 0046 0133     		adds	r3, r3, #1
 1082 0048 FB73     		strb	r3, [r7, #15]
 784:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 785:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 1083              		.loc 1 785 0 discriminator 1
 1084 004a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 34


 1085 004c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1086 004e 9A42     		cmp	r2, r3
 1087 0050 E5D3     		bcc	.L62
 786:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 787:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 788:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 1088              		.loc 1 788 0
 1089 0052 1437     		adds	r7, r7, #20
 1090              		.cfi_def_cfa_offset 4
 1091 0054 BD46     		mov	sp, r7
 1092              		.cfi_def_cfa_register 13
 1093              		@ sp needed
 1094 0056 5DF8047B 		ldr	r7, [sp], #4
 1095              		.cfi_restore 7
 1096              		.cfi_def_cfa_offset 0
 1097 005a 7047     		bx	lr
 1098              	.L64:
 1099              		.align	2
 1100              	.L63:
 1101 005c 00000000 		.word	CapSense_1_rawDataIndex
 1102 0060 00000000 		.word	CapSense_1_numberOfSensors
 1103 0064 00000000 		.word	CapSense_1_sensorEnableMask
 1104              		.cfi_endproc
 1105              	.LFE9:
 1106              		.size	CapSense_1_EnableWidget, .-CapSense_1_EnableWidget
 1107              		.section	.text.CapSense_1_DisableWidget,"ax",%progbits
 1108              		.align	2
 1109              		.global	CapSense_1_DisableWidget
 1110              		.thumb
 1111              		.thumb_func
 1112              		.type	CapSense_1_DisableWidget, %function
 1113              	CapSense_1_DisableWidget:
 1114              	.LFB10:
 789:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 790:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 791:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** /*******************************************************************************
 792:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Function Name: CapSense_1_DisableWidget
 793:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** ********************************************************************************
 794:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 795:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Summary:
 796:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 797:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 798:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Parameters:
 799:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  widget:  widget number.
 800:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 801:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Return:
 802:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  None
 803:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 804:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Global Variables:
 805:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[] - used to store the sensor scanning 
 806:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  state.
 807:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[0] contains the masked bits for sensors 
 808:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 809:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  CapSense_1_sensorEnableMask[1] contains the masked bits for 
 810:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 811:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  0 - sensor doesn't scan by CapSense_1_ScanEnabledWidgets().
 812:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  1 - sensor scans by CapSense_1_ScanEnabledWidgets().
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 35


 813:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 814:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** * Reentrant:
 815:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *  No
 816:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *
 817:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** *******************************************************************************/
 818:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** void CapSense_1_DisableWidget(uint8 widget)
 819:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
 820:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** {
 1115              		.loc 1 820 0
 1116              		.cfi_startproc
 1117              		@ args = 0, pretend = 0, frame = 16
 1118              		@ frame_needed = 1, uses_anonymous_args = 0
 1119              		@ link register save eliminated.
 1120 0000 80B4     		push	{r7}
 1121              		.cfi_def_cfa_offset 4
 1122              		.cfi_offset 7, -4
 1123 0002 85B0     		sub	sp, sp, #20
 1124              		.cfi_def_cfa_offset 24
 1125 0004 00AF     		add	r7, sp, #0
 1126              		.cfi_def_cfa_register 7
 1127 0006 0346     		mov	r3, r0
 1128 0008 FB71     		strb	r3, [r7, #7]
 821:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 pos;
 822:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 enMask;
 823:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 rawIndex = CapSense_1_rawDataIndex[widget];
 1129              		.loc 1 823 0
 1130 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1131 000c 144A     		ldr	r2, .L67
 1132 000e D35C     		ldrb	r3, [r2, r3]
 1133 0010 FB73     		strb	r3, [r7, #15]
 824:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 numberOfSensors = CapSense_1_numberOfSensors[widget] + rawIndex;
 1134              		.loc 1 824 0
 1135 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1136 0014 134A     		ldr	r2, .L67+4
 1137 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1138 0018 FB7B     		ldrb	r3, [r7, #15]
 1139 001a 1344     		add	r3, r3, r2
 1140 001c BB73     		strb	r3, [r7, #14]
 1141              	.L66:
 825:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****    
 826:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /* Disable all sensors of the widget */
 827:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     do
 828:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 829:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         pos = (rawIndex >> 3u);
 1142              		.loc 1 829 0 discriminator 1
 1143 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1144 0020 DB08     		lsrs	r3, r3, #3
 1145 0022 7B73     		strb	r3, [r7, #13]
 830:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1146              		.loc 1 830 0 discriminator 1
 1147 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1148 0026 03F00703 		and	r3, r3, #7
 1149 002a 0122     		movs	r2, #1
 1150 002c 02FA03F3 		lsl	r3, r2, r3
 1151 0030 3B73     		strb	r3, [r7, #12]
 831:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
 832:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_sensorEnableMask[pos] &= (uint8)~enMask;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 36


 1152              		.loc 1 832 0 discriminator 1
 1153 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1154 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1155 0036 0C49     		ldr	r1, .L67+8
 1156 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1157 003a 3A7B     		ldrb	r2, [r7, #12]
 1158 003c D243     		mvns	r2, r2
 1159 003e D2B2     		uxtb	r2, r2
 1160 0040 0A40     		ands	r2, r2, r1
 1161 0042 D1B2     		uxtb	r1, r2
 1162 0044 084A     		ldr	r2, .L67+8
 1163 0046 D154     		strb	r1, [r2, r3]
 833:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         rawIndex++;
 1164              		.loc 1 833 0 discriminator 1
 1165 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1166 004a 0133     		adds	r3, r3, #1
 1167 004c FB73     		strb	r3, [r7, #15]
 834:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 835:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     while(rawIndex < numberOfSensors);
 1168              		.loc 1 835 0 discriminator 1
 1169 004e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1170 0050 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1171 0052 9A42     		cmp	r2, r3
 1172 0054 E3D3     		bcc	.L66
 836:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 837:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 838:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** }
 1173              		.loc 1 838 0
 1174 0056 1437     		adds	r7, r7, #20
 1175              		.cfi_def_cfa_offset 4
 1176 0058 BD46     		mov	sp, r7
 1177              		.cfi_def_cfa_register 13
 1178              		@ sp needed
 1179 005a 5DF8047B 		ldr	r7, [sp], #4
 1180              		.cfi_restore 7
 1181              		.cfi_def_cfa_offset 0
 1182 005e 7047     		bx	lr
 1183              	.L68:
 1184              		.align	2
 1185              	.L67:
 1186 0060 00000000 		.word	CapSense_1_rawDataIndex
 1187 0064 00000000 		.word	CapSense_1_numberOfSensors
 1188 0068 00000000 		.word	CapSense_1_sensorEnableMask
 1189              		.cfi_endproc
 1190              	.LFE10:
 1191              		.size	CapSense_1_DisableWidget, .-CapSense_1_DisableWidget
 1192              		.section	.text.CapSense_1_FindMaximum,"ax",%progbits
 1193              		.align	2
 1194              		.global	CapSense_1_FindMaximum
 1195              		.thumb
 1196              		.thumb_func
 1197              		.type	CapSense_1_FindMaximum, %function
 1198              	CapSense_1_FindMaximum:
 1199              	.LFB11:
 839:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_CENTROIDS_COUNT)
 840:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
 841:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_FindMaximum
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 37


 842:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
 843:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
 844:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
 845:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Finds index of maximum element within defined centroid. Checks 
 846:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  CapSense_1_SensorSignal[] within defined cenrtoid and 
 847:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  returns index of maximum element. The values below finger threshold are 
 848:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  ignored.
 849:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The centrod defines by offset of first element and number of elements - count.
 850:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The diplexed centroid requires at least consecutive two elements above
 851:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  FingerThreshold to find index of maximum element.
 852:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 853:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
 854:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  offset:  Start index of cetroid in CapSense_1_sensorSignal[] array.
 855:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  count:   number of elements within centroid.
 856:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  fingerThreshold:  Finger threshould.
 857:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  diplex:   pointer to diplex table.
 858:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 859:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
 860:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns index of maximum element within defined centroid.
 861:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If index of maximum element doesn't find the 0xFF returns.
 862:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
 863:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
 864:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #if (CapSense_1_IS_DIPLEX_SLIDER)
 865:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 CapSense_1_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint8 
 866:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
 867:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #else 
 868:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 CapSense_1_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
 869:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
 870:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 871:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 1200              		.loc 1 871 0
 1201              		.cfi_startproc
 1202              		@ args = 0, pretend = 0, frame = 16
 1203              		@ frame_needed = 1, uses_anonymous_args = 0
 1204              		@ link register save eliminated.
 1205 0000 80B4     		push	{r7}
 1206              		.cfi_def_cfa_offset 4
 1207              		.cfi_offset 7, -4
 1208 0002 85B0     		sub	sp, sp, #20
 1209              		.cfi_def_cfa_offset 24
 1210 0004 00AF     		add	r7, sp, #0
 1211              		.cfi_def_cfa_register 7
 1212 0006 0346     		mov	r3, r0
 1213 0008 FB71     		strb	r3, [r7, #7]
 1214 000a 0B46     		mov	r3, r1
 1215 000c BB71     		strb	r3, [r7, #6]
 1216 000e 1346     		mov	r3, r2
 1217 0010 7B71     		strb	r3, [r7, #5]
 872:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 i;
 873:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
 874:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curPos = 0u;
 875:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* No centroid at the Start */
 876:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curCntrdSize = 0u;
 877:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 curCtrdStartPos = 0xFFu;
 878:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The biggset centroid is zero */
 879:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 biggestCtrdSize = 0u;
 880:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 38


 881:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 882:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum = 0xFFu;
 1218              		.loc 1 882 0
 1219 0012 FF23     		movs	r3, #255
 1220 0014 BB73     		strb	r3, [r7, #14]
 883:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 temp = 0u;
 1221              		.loc 1 883 0
 1222 0016 0023     		movs	r3, #0
 1223 0018 7B73     		strb	r3, [r7, #13]
 884:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 *startOfSlider = &CapSense_1_sensorSignal[offset]; 
 1224              		.loc 1 884 0
 1225 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1226 001c 144A     		ldr	r2, .L74
 1227 001e 1344     		add	r3, r3, r2
 1228 0020 BB60     		str	r3, [r7, #8]
 885:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 886:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
 887:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(diplex != 0u)
 888:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 889:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Initialize */
 890:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 i = 0u;
 891:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
 892:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Make slider x2 as Diplexed */
 893:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 count <<= 1u;
 894:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 while(1u)
 895:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
 896:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
 897:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 898:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if (curCtrdStartPos == 0xFFu)
 899:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 900:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Start of centroid */
 901:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCtrdStartPos = i;
 902:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize++;
 903:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 904:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         else
 905:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 906:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize++;
 907:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 908:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 909:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else   /* Select the bigest and indicate zero start */
 910:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {          
 911:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if(curCntrdSize > 0u)
 912:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 913:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* We are in the end of current */
 914:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
 915:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 916:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
 917:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
 918:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 919:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             
 920:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCntrdSize = 0u;
 921:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curCtrdStartPos = 0xFFu;
 922:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 923:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 924:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
 925:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     i++; 
 926:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     curPos = diplex[i];
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 39


 927:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(i == count)
 928:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 929:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         break;
 930:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }            
 931:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 932:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
 933:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Find the biggest centroid if two are the same size, last one wins
 934:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                        We are in the end of current */
 935:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize) 
 936:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 937:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
 938:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
 939:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 940:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 941:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
 942:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
 943:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Without diplexing */ 
 944:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 biggestCtrdSize = count;
 945:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
 946:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
 947:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
 948:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Check centroid size */
 949:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_IS_NON_DIPLEX_SLIDER)
 950:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
 951:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #else                    
 952:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(biggestCtrdSize >= 2u)
 953:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_IS_NON_DIPLEX_SLIDER) */
 954:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 955:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
 956:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 957:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER)
 958:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (diplex == 0u)
 959:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 960:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 curPos = i;
 961:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 962:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             else
 963:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 964:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 curPos = diplex[i];
 965:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }                    
 966:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #elif (CapSense_1_IS_DIPLEX_SLIDER)                    
 967:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             curPos = diplex[i];                    
 968:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER) 
 969:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Looking for the grater element within centroid */
 970:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
 971:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
 972:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if(startOfSlider[curPos] > temp)
 973:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
 974:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 maximum = i;
 975:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 temp = startOfSlider[curPos];
 976:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
 977:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
 978:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 979:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 } 
 980:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
 981:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             for (i = 0u; i < count; i++)
 1229              		.loc 1 981 0
 1230 0022 0023     		movs	r3, #0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 40


 1231 0024 FB73     		strb	r3, [r7, #15]
 1232 0026 17E0     		b	.L70
 1233              	.L72:
 982:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {                      
 983:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Looking for the grater element within centroid */
 984:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1234              		.loc 1 984 0
 1235 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1236 002a BA68     		ldr	r2, [r7, #8]
 1237 002c 1344     		add	r3, r3, r2
 1238 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1239 0030 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 1240 0032 9A42     		cmp	r2, r3
 1241 0034 0DD2     		bcs	.L71
 985:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
 986:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(startOfSlider[i] > temp)
 1242              		.loc 1 986 0
 1243 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1244 0038 BA68     		ldr	r2, [r7, #8]
 1245 003a 1344     		add	r3, r3, r2
 1246 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1247 003e 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1248 0040 9A42     		cmp	r2, r3
 1249 0042 06D2     		bcs	.L71
 987:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
 988:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         maximum = i;
 1250              		.loc 1 988 0
 1251 0044 FB7B     		ldrb	r3, [r7, #15]
 1252 0046 BB73     		strb	r3, [r7, #14]
 989:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         temp = startOfSlider[i];
 1253              		.loc 1 989 0
 1254 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1255 004a BA68     		ldr	r2, [r7, #8]
 1256 004c 1344     		add	r3, r3, r2
 1257 004e 1B78     		ldrb	r3, [r3]
 1258 0050 7B73     		strb	r3, [r7, #13]
 1259              	.L71:
 981:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {                      
 1260              		.loc 1 981 0 discriminator 2
 1261 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1262 0054 0133     		adds	r3, r3, #1
 1263 0056 FB73     		strb	r3, [r7, #15]
 1264              	.L70:
 981:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {                      
 1265              		.loc 1 981 0 is_stmt 0 discriminator 1
 1266 0058 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1267 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1268 005c 9A42     		cmp	r2, r3
 1269 005e E3D3     		bcc	.L72
 990:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
 991:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
 992:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }    
 993:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
 994:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (maximum);
 1270              		.loc 1 994 0 is_stmt 1
 1271 0060 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 995:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 41


 1272              		.loc 1 995 0
 1273 0062 1846     		mov	r0, r3
 1274 0064 1437     		adds	r7, r7, #20
 1275              		.cfi_def_cfa_offset 4
 1276 0066 BD46     		mov	sp, r7
 1277              		.cfi_def_cfa_register 13
 1278              		@ sp needed
 1279 0068 5DF8047B 		ldr	r7, [sp], #4
 1280              		.cfi_restore 7
 1281              		.cfi_def_cfa_offset 0
 1282 006c 7047     		bx	lr
 1283              	.L75:
 1284 006e 00BF     		.align	2
 1285              	.L74:
 1286 0070 00000000 		.word	CapSense_1_sensorSignal
 1287              		.cfi_endproc
 1288              	.LFE11:
 1289              		.size	CapSense_1_FindMaximum, .-CapSense_1_FindMaximum
 1290              		.section	.text.CapSense_1_CalcCentroid,"ax",%progbits
 1291              		.align	2
 1292              		.global	CapSense_1_CalcCentroid
 1293              		.thumb
 1294              		.thumb_func
 1295              		.type	CapSense_1_CalcCentroid, %function
 1296              	CapSense_1_CalcCentroid:
 1297              	.LFB12:
 996:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 997:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
 998:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
 999:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_CalcCentroid
1000:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1001:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1002:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1003:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value calculated accoring index of maximum element and API
1004:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  resolution.
1005:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1006:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1007:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  type:  widget type.
1008:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  diplex:  pointer to diplex table.
1009:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1010:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  offset:   Start index of cetroid in CapSense_1_SensorSignal[] array.
1011:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  count:    Number of elements within centroid.
1012:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1013:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  API resolution.
1014:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  noiseThreshold:  Noise threshould.
1015:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1016:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1017:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the slider.
1018:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1019:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1020:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1021:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1022:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1023:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1024:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 CapSense_1_CalcCentroid(uint8 maximum, uint8 offset, 
1025:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1026:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                    
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 42


1027:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 1298              		.loc 1 1027 0
 1299              		.cfi_startproc
 1300              		@ args = 4, pretend = 0, frame = 32
 1301              		@ frame_needed = 1, uses_anonymous_args = 0
 1302              		@ link register save eliminated.
 1303 0000 90B4     		push	{r4, r7}
 1304              		.cfi_def_cfa_offset 8
 1305              		.cfi_offset 4, -8
 1306              		.cfi_offset 7, -4
 1307 0002 88B0     		sub	sp, sp, #32
 1308              		.cfi_def_cfa_offset 40
 1309 0004 00AF     		add	r7, sp, #0
 1310              		.cfi_def_cfa_register 7
 1311 0006 0446     		mov	r4, r0
 1312 0008 0846     		mov	r0, r1
 1313 000a 1146     		mov	r1, r2
 1314 000c 1A46     		mov	r2, r3
 1315 000e 2346     		mov	r3, r4
 1316 0010 FB71     		strb	r3, [r7, #7]
 1317 0012 0346     		mov	r3, r0
 1318 0014 BB71     		strb	r3, [r7, #6]
 1319 0016 0B46     		mov	r3, r1
 1320 0018 7B71     		strb	r3, [r7, #5]
 1321 001a 1346     		mov	r3, r2	@ movhi
 1322 001c 7B80     		strh	r3, [r7, #2]	@ movhi
1028:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0
1029:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posPrev = 0u;
 1323              		.loc 1 1029 0
 1324 001e 0023     		movs	r3, #0
 1325 0020 FB77     		strb	r3, [r7, #31]
1030:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posNext = 0u;
 1326              		.loc 1 1030 0
 1327 0022 0023     		movs	r3, #0
 1328 0024 BB77     		strb	r3, [r7, #30]
1031:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT
1032:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                
1033:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)                
1034:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 pos;
1035:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1036:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1037:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Helps while centroid calulation */
1038:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         static uint8 CapSense_1_centroid[3u];
1039:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1040:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 position;
1041:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 numerator;
1042:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         int32 denominator;
1043:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 *startOfSlider = &CapSense_1_sensorSignal[offset];
 1329              		.loc 1 1043 0
 1330 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1331 0028 484A     		ldr	r2, .L86
 1332 002a 1344     		add	r3, r3, r2
 1333 002c BB61     		str	r3, [r7, #24]
1044:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1045:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1046:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(type == CapSense_1_TYPE_RADIAL_SLIDER)
1047:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 43


1048:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1049:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1050:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)                
1051:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Copy Signal for found centriod */
1052:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 CapSense_1_centroid[CapSense_1_POS] = startOfSlider[maximum];
1053:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                  
1054:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check borders for ROTARY Slider */
1055:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1056:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
1057:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[count - 1u];
1058:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[1u];
1059:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1060:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1061:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1062:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[maximum - 1u];
1063:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[0u];
1064:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1065:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else                                /* Not first Not last */
1066:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1067:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[maximum - 1u];
1068:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[maximum + 1u];
1069:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1070:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1071:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1072:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1073:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1074:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
1075:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1076:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1077:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1078:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_1_TOTAL_TOUCH_PADS_COUNT
1079:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER)               
1080:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1081:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if(diplex == 0u)
1082:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1083:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         pos     = maximum;
1084:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = maximum - 1u;
1085:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posNext = maximum + 1u; 
1086:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1087:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1088:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1089:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         pos     = diplex[maximum];
1090:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1091:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posNext = diplex[maximum + 1u];
1092:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         count <<= 1u;
1093:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }                    
1094:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #elif (CapSense_1_IS_DIPLEX_SLIDER)
1095:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1096:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     pos     = diplex[maximum];
1097:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1098:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posNext = diplex[maximum + 1u];
1099:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     count <<= 1u;                    
1100:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #else                    
1101:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Calculate next and previous near to maximum */
1102:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (maximum >= 1u)
 1334              		.loc 1 1102 0
 1335 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 44


 1336 0030 002B     		cmp	r3, #0
 1337 0032 02D0     		beq	.L77
1103:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1104:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posPrev = maximum - 1u;
 1338              		.loc 1 1104 0
 1339 0034 FB79     		ldrb	r3, [r7, #7]
 1340 0036 013B     		subs	r3, r3, #1
 1341 0038 FB77     		strb	r3, [r7, #31]
 1342              	.L77:
1105:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1106:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posNext = maximum + 1u; 
 1343              		.loc 1 1106 0
 1344 003a FB79     		ldrb	r3, [r7, #7]
 1345 003c 0133     		adds	r3, r3, #1
 1346 003e BB77     		strb	r3, [r7, #30]
1107:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (CapSense_1_IS_DIPLEX_SLIDER && CapSense_1_IS_NON_DIPLEX_SLIDER) */
1108:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1109:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Copy Signal for found centriod */
1110:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (CapSense_1_IS_DIPLEX_SLIDER)
1111:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS] = startOfSlider[pos];
1112:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #else
1113:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS] = startOfSlider[maximum];
 1347              		.loc 1 1113 0
 1348 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1349 0042 BA69     		ldr	r2, [r7, #24]
 1350 0044 1344     		add	r3, r3, r2
 1351 0046 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1352 0048 414B     		ldr	r3, .L86+4
 1353 004a 5A70     		strb	r2, [r3, #1]
1114:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1115:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1116:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check borders for LINEAR Slider */
1117:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 1354              		.loc 1 1117 0
 1355 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1356 004e 002B     		cmp	r3, #0
 1357 0050 09D1     		bne	.L78
1118:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 { 
1119:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = 0u;
 1358              		.loc 1 1119 0
 1359 0052 3F4B     		ldr	r3, .L86+4
 1360 0054 0022     		movs	r2, #0
 1361 0056 1A70     		strb	r2, [r3]
1120:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[posNext];
 1362              		.loc 1 1120 0
 1363 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1364 005a BA69     		ldr	r2, [r7, #24]
 1365 005c 1344     		add	r3, r3, r2
 1366 005e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1367 0060 3B4B     		ldr	r3, .L86+4
 1368 0062 9A70     		strb	r2, [r3, #2]
 1369 0064 1AE0     		b	.L79
 1370              	.L78:
1121:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1122:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 1371              		.loc 1 1122 0
 1372 0066 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 45


 1373 0068 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1374 006a 013B     		subs	r3, r3, #1
 1375 006c 9A42     		cmp	r2, r3
 1376 006e 09D1     		bne	.L80
1123:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1124:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[posPrev];
 1377              		.loc 1 1124 0
 1378 0070 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1379 0072 BA69     		ldr	r2, [r7, #24]
 1380 0074 1344     		add	r3, r3, r2
 1381 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1382 0078 354B     		ldr	r3, .L86+4
 1383 007a 1A70     		strb	r2, [r3]
1125:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = 0u;
 1384              		.loc 1 1125 0
 1385 007c 344B     		ldr	r3, .L86+4
 1386 007e 0022     		movs	r2, #0
 1387 0080 9A70     		strb	r2, [r3, #2]
 1388 0082 0BE0     		b	.L79
 1389              	.L80:
1126:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1127:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 else                                /* Not first Not last */
1128:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1129:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_PREV] = startOfSlider[posPrev];
 1390              		.loc 1 1129 0
 1391 0084 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1392 0086 BA69     		ldr	r2, [r7, #24]
 1393 0088 1344     		add	r3, r3, r2
 1394 008a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1395 008c 304B     		ldr	r3, .L86+4
 1396 008e 1A70     		strb	r2, [r3]
1130:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_centroid[CapSense_1_POS_NEXT] = startOfSlider[posNext];
 1397              		.loc 1 1130 0
 1398 0090 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 1399 0092 BA69     		ldr	r2, [r7, #24]
 1400 0094 1344     		add	r3, r3, r2
 1401 0096 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1402 0098 2D4B     		ldr	r3, .L86+4
 1403 009a 9A70     		strb	r2, [r3, #2]
 1404              	.L79:
1131:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1132:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* ((CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_1_TOTAL_TOUCH_PADS_COU
1133:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1134:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_ADD_SLIDER_TYPE)
1135:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1136:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_ADD_SLIDER_TYPE) */
1137:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1138:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Subtract noiseThreshold */
1139:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_centroid[CapSense_1_POS_PREV] > noiseThreshold)
 1405              		.loc 1 1139 0
 1406 009c 2C4B     		ldr	r3, .L86+4
 1407 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1408 00a0 97F82820 		ldrb	r2, [r7, #40]	@ zero_extendqisi2
 1409 00a4 9A42     		cmp	r2, r3
 1410 00a6 08D2     		bcs	.L81
1140:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1141:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_PREV] -= noiseThreshold;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 46


 1411              		.loc 1 1141 0
 1412 00a8 294B     		ldr	r3, .L86+4
 1413 00aa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1414 00ac 97F82830 		ldrb	r3, [r7, #40]
 1415 00b0 D31A     		subs	r3, r2, r3
 1416 00b2 DAB2     		uxtb	r2, r3
 1417 00b4 264B     		ldr	r3, .L86+4
 1418 00b6 1A70     		strb	r2, [r3]
 1419 00b8 02E0     		b	.L82
 1420              	.L81:
1142:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1143:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1144:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1145:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_PREV] = 0u;
 1421              		.loc 1 1145 0
 1422 00ba 254B     		ldr	r3, .L86+4
 1423 00bc 0022     		movs	r2, #0
 1424 00be 1A70     		strb	r2, [r3]
 1425              	.L82:
1146:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1147:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1148:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Maximum always grater than fingerThreshold, so grate than noiseThreshold */
1149:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         CapSense_1_centroid[CapSense_1_POS] -= noiseThreshold;
 1426              		.loc 1 1149 0
 1427 00c0 234B     		ldr	r3, .L86+4
 1428 00c2 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1429 00c4 97F82830 		ldrb	r3, [r7, #40]
 1430 00c8 D31A     		subs	r3, r2, r3
 1431 00ca DAB2     		uxtb	r2, r3
 1432 00cc 204B     		ldr	r3, .L86+4
 1433 00ce 5A70     		strb	r2, [r3, #1]
1150:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1151:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Subtract noiseThreshold */
1152:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if(CapSense_1_centroid[CapSense_1_POS_NEXT] > noiseThreshold)
 1434              		.loc 1 1152 0
 1435 00d0 1F4B     		ldr	r3, .L86+4
 1436 00d2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1437 00d4 97F82820 		ldrb	r2, [r7, #40]	@ zero_extendqisi2
 1438 00d8 9A42     		cmp	r2, r3
 1439 00da 08D2     		bcs	.L83
1153:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1154:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_NEXT] -= noiseThreshold;
 1440              		.loc 1 1154 0
 1441 00dc 1C4B     		ldr	r3, .L86+4
 1442 00de 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1443 00e0 97F82830 		ldrb	r3, [r7, #40]
 1444 00e4 D31A     		subs	r3, r2, r3
 1445 00e6 DAB2     		uxtb	r2, r3
 1446 00e8 194B     		ldr	r3, .L86+4
 1447 00ea 9A70     		strb	r2, [r3, #2]
 1448 00ec 02E0     		b	.L84
 1449              	.L83:
1155:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1156:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1157:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1158:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             CapSense_1_centroid[CapSense_1_POS_NEXT] = 0u;
 1450              		.loc 1 1158 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 47


 1451 00ee 184B     		ldr	r3, .L86+4
 1452 00f0 0022     		movs	r2, #0
 1453 00f2 9A70     		strb	r2, [r3, #2]
 1454              	.L84:
1159:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1160:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1161:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1162:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Si+1 - Si-1 */
1163:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         numerator = (uint32) CapSense_1_centroid[CapSense_1_POS_NEXT] -
 1455              		.loc 1 1163 0
 1456 00f4 164B     		ldr	r3, .L86+4
 1457 00f6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1458 00f8 1A46     		mov	r2, r3
1164:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     (uint32) CapSense_1_centroid[CapSense_1_POS_PREV];
 1459              		.loc 1 1164 0
 1460 00fa 154B     		ldr	r3, .L86+4
 1461 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1163:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     (uint32) CapSense_1_centroid[CapSense_1_POS_PREV];
 1462              		.loc 1 1163 0
 1463 00fe D31A     		subs	r3, r2, r3
 1464 0100 7B61     		str	r3, [r7, #20]
1165:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1166:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Si+1 + Si + Si-1 */
1167:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator = (int32) CapSense_1_centroid[CapSense_1_POS_PREV] + 
 1465              		.loc 1 1167 0
 1466 0102 134B     		ldr	r3, .L86+4
 1467 0104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1468 0106 1A46     		mov	r2, r3
1168:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS] + 
 1469              		.loc 1 1168 0
 1470 0108 114B     		ldr	r3, .L86+4
 1471 010a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
1167:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS] + 
 1472              		.loc 1 1167 0
 1473 010c 1344     		add	r3, r3, r2
1169:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS_NEXT];
 1474              		.loc 1 1169 0
 1475 010e 104A     		ldr	r2, .L86+4
 1476 0110 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
1167:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                       (int32) CapSense_1_centroid[CapSense_1_POS] + 
 1477              		.loc 1 1167 0
 1478 0112 1344     		add	r3, r3, r2
 1479 0114 3B61     		str	r3, [r7, #16]
1170:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1171:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* (numerator/denominator) + maximum */
1172:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 1480              		.loc 1 1172 0
 1481 0116 7B69     		ldr	r3, [r7, #20]
 1482 0118 1B02     		lsls	r3, r3, #8
 1483 011a 1A46     		mov	r2, r3
 1484 011c 3B69     		ldr	r3, [r7, #16]
 1485 011e 92FBF3F3 		sdiv	r3, r2, r3
 1486 0122 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1487 0124 1202     		lsls	r2, r2, #8
 1488 0126 1344     		add	r3, r3, r2
 1489 0128 3B61     		str	r3, [r7, #16]
1173:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 48


1174:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if(CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1175:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Only required for RADIAL Slider */
1176:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(denominator < 0)
1177:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1178:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1179:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1180:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1181:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1182:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         denominator *= (int16)resolution;
 1490              		.loc 1 1182 0
 1491 012a 7B88     		ldrh	r3, [r7, #2]
 1492 012c 1AB2     		sxth	r2, r3
 1493 012e 3B69     		ldr	r3, [r7, #16]
 1494 0130 02FB03F3 		mul	r3, r2, r3
 1495 0134 3B61     		str	r3, [r7, #16]
1183:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1184:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Round the relust and put it to uint8 */
1185:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_1_CENTROID_ROUND_VALUE));
 1496              		.loc 1 1185 0
 1497 0136 3B69     		ldr	r3, [r7, #16]
 1498 0138 03F5FE43 		add	r3, r3, #32512
 1499 013c 1B0C     		lsrs	r3, r3, #16
 1500 013e FB73     		strb	r3, [r7, #15]
1186:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1187:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
 1501              		.loc 1 1187 0
 1502 0140 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1188:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }    
 1503              		.loc 1 1188 0
 1504 0142 1846     		mov	r0, r3
 1505 0144 2037     		adds	r7, r7, #32
 1506              		.cfi_def_cfa_offset 8
 1507 0146 BD46     		mov	sp, r7
 1508              		.cfi_def_cfa_register 13
 1509              		@ sp needed
 1510 0148 90BC     		pop	{r4, r7}
 1511              		.cfi_restore 7
 1512              		.cfi_restore 4
 1513              		.cfi_def_cfa_offset 0
 1514 014a 7047     		bx	lr
 1515              	.L87:
 1516              		.align	2
 1517              	.L86:
 1518 014c 00000000 		.word	CapSense_1_sensorSignal
 1519 0150 04000000 		.word	CapSense_1_centroid.5138
 1520              		.cfi_endproc
 1521              	.LFE12:
 1522              		.size	CapSense_1_CalcCentroid, .-CapSense_1_CalcCentroid
 1523              		.section	.text.CapSense_1_GetCentroidPos,"ax",%progbits
 1524              		.align	2
 1525              		.global	CapSense_1_GetCentroidPos
 1526              		.thumb
 1527              		.thumb_func
 1528              		.type	CapSense_1_GetCentroidPos, %function
 1529              	CapSense_1_GetCentroidPos:
 1530              	.LFB13:
1189:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_CENTROIDS_COUNT) */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 49


1190:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1191:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1192:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u)
1193:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1194:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetCentroidPos
1195:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1196:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1197:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1198:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Checks the CapSense_1_Signal[ ] array for a centroid within
1199:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1200:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1201:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result if enabled.
1202:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1203:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1204:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number.
1205:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1206:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_LS__"widget_name"            5
1207:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1208:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1209:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the linear slider.
1210:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1211:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1212:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1213:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1214:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1215:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1216:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1217:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1218:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1219:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Note:
1220:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1221:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1222:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1223:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  that noise will not generate a false centroid.
1224:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1225:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1226:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1227:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1228:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1229:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_GetCentroidPos(uint8 widget) 
1230:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 1531              		.loc 1 1230 0
 1532              		.cfi_startproc
 1533              		@ args = 0, pretend = 0, frame = 16
 1534              		@ frame_needed = 1, uses_anonymous_args = 0
 1535 0000 90B5     		push	{r4, r7, lr}
 1536              		.cfi_def_cfa_offset 12
 1537              		.cfi_offset 4, -12
 1538              		.cfi_offset 7, -8
 1539              		.cfi_offset 14, -4
 1540 0002 87B0     		sub	sp, sp, #28
 1541              		.cfi_def_cfa_offset 40
 1542 0004 02AF     		add	r7, sp, #8
 1543              		.cfi_def_cfa 7, 32
 1544 0006 0346     		mov	r3, r0
 1545 0008 FB71     		strb	r3, [r7, #7]
1231:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 50


1232:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             const uint8 CYCODE *diplex;
1233:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1234:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1235:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1236:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posIndex;
1237:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
 1546              		.loc 1 1237 0
 1547 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1548 000c 334A     		ldr	r2, .L94
 1549 000e D35C     		ldrb	r3, [r2, r3]
 1550 0010 7B73     		strb	r3, [r7, #13]
1238:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];  
 1551              		.loc 1 1238 0
 1552 0012 0823     		movs	r3, #8
 1553 0014 3B73     		strb	r3, [r7, #12]
1239:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1240:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1241:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1242:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1243:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 tempPos;
1244:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) 
1245:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK
1246:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1247:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1248:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum;
1249:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 position;
1250:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
 1554              		.loc 1 1250 0
 1555 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1556 0018 314A     		ldr	r2, .L94+4
 1557 001a D35C     		ldrb	r3, [r2, r3]
 1558 001c FB72     		strb	r3, [r7, #11]
1251:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
 1559              		.loc 1 1251 0
 1560 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1561 0020 304A     		ldr	r2, .L94+8
 1562 0022 D35C     		ldrb	r3, [r2, r3]
 1563 0024 BB72     		strb	r3, [r7, #10]
1252:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1253:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1254:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(widget < CapSense_1_TOTAL_DIPLEXED_SLIDERS_COUNT)
1255:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1256:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maximum = CapSense_1_diplexTable[widget];
1257:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 diplex = &CapSense_1_diplexTable[maximum];
1258:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1259:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             else
1260:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1261:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 diplex = 0u;
1262:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1263:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1264:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1265:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within centroid */      
1266:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)        
1267:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], dip
1268:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1269:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
 1564              		.loc 1 1269 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 51


 1565 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1566 0028 2F4A     		ldr	r2, .L94+12
 1567 002a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1568 002c F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 1569 002e BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 1570 0030 0846     		mov	r0, r1
 1571 0032 1146     		mov	r1, r2
 1572 0034 1A46     		mov	r2, r3
 1573 0036 FFF7FEFF 		bl	CapSense_1_FindMaximum
 1574 003a 0346     		mov	r3, r0
 1575 003c 7B72     		strb	r3, [r7, #9]
1270:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1271:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1272:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maximum != 0xFFu)
 1576              		.loc 1 1272 0
 1577 003e 7B7A     		ldrb	r3, [r7, #9]	@ zero_extendqisi2
 1578 0040 FF2B     		cmp	r3, #255
 1579 0042 3AD0     		beq	.L89
1273:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1274:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Calculate centroid */
1275:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = (uint16) CapSense_1_CalcCentroid(maximum, 
 1580              		.loc 1 1275 0
 1581 0044 40F28E54 		movw	r4, #1422
 1582 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1583 004a 284A     		ldr	r2, .L94+16
 1584 004c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1585 004e 787A     		ldrb	r0, [r7, #9]	@ zero_extendqisi2
 1586 0050 F97A     		ldrb	r1, [r7, #11]	@ zero_extendqisi2
 1587 0052 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 1588 0054 0093     		str	r3, [sp]
 1589 0056 2346     		mov	r3, r4
 1590 0058 FFF7FEFF 		bl	CapSense_1_CalcCentroid
 1591 005c 0346     		mov	r3, r0
 1592 005e FB81     		strh	r3, [r7, #14]	@ movhi
1276:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
1277:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1278:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1279:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1280:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
 1593              		.loc 1 1280 0
 1594 0060 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1595 0062 03F01F03 		and	r3, r3, #31
 1596 0066 002B     		cmp	r3, #0
 1597 0068 33D0     		beq	.L92
1281:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1282:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Caluclate position to store filters data */
1283:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 1598              		.loc 1 1283 0
 1599 006a 7B7B     		ldrb	r3, [r7, #13]
 1600 006c 0133     		adds	r3, r3, #1
 1601 006e 3B72     		strb	r3, [r7, #8]
1284:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1285:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u == CapSense_1_posFiltersData[firstTimeIndex])
 1602              		.loc 1 1285 0
 1603 0070 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1604 0072 1A4A     		ldr	r2, .L94
 1605 0074 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 52


 1606 0076 002B     		cmp	r3, #0
 1607 0078 09D1     		bne	.L91
1286:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1287:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Init filters */
1288:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[posIndex] = (uint8) position;
 1608              		.loc 1 1288 0
 1609 007a 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 1610 007c FA89     		ldrh	r2, [r7, #14]	@ movhi
 1611 007e D1B2     		uxtb	r1, r2
 1612 0080 164A     		ldr	r2, .L94
 1613 0082 D154     		strb	r1, [r2, r3]
1289:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
1290:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1291:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              (0u != (CapSense_1_AVERAGING_FILTER & \
1292:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1293:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1294:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER)) || 
1295:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1296:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1297:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = (uint8) position;
1298:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1299:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1300:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1301:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *   (0u != (CapSense_1_AVERAGING_FILTER & \
1302:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1303:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1304:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1305:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[firstTimeIndex] = 1u;
 1614              		.loc 1 1305 0
 1615 0084 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1616 0086 154A     		ldr	r2, .L94
 1617 0088 0121     		movs	r1, #1
 1618 008a D154     		strb	r1, [r2, r3]
 1619 008c 21E0     		b	.L92
 1620              	.L91:
1306:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1307:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1308:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1309:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Do filtering */
1310:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1311:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1312:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1313:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1314:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_MedianFilter(position,
1315:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1316:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1317:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] =
1318:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1319:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1320:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1321:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /*(0u != (CapSense_1_MEDIAN_FILTER &
1322:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *         CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1323:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1324:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1325:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if(0u!=(CapSense_1_AVERAGING_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1326:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) 
1327:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 53


1328:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1329:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_AveragingFilter(position,
1330:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1331:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                 (uint16)CapSense_1_posFiltersData[p
1332:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex+1u]=CapSense_1_posFiltersData[po
1333:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1334:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1335:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1336:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1337:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1338:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1339:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_
1340:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER)) 
1341:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1342:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR2Filter(position,
1343:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1344:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1345:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1346:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR2_FILTER & \
1347:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1348:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1349:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1350:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTERS_
1351:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
 1621              		.loc 1 1351 0
 1622 008e 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1623 0090 03F00803 		and	r3, r3, #8
 1624 0094 002B     		cmp	r3, #0
 1625 0096 1CD0     		beq	.L92
1352:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1353:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
1354:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
 1626              		.loc 1 1354 0
 1627 0098 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 1628 009a 104A     		ldr	r2, .L94
 1629 009c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1353:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
 1630              		.loc 1 1353 0
 1631 009e 9BB2     		uxth	r3, r3
 1632 00a0 FA89     		ldrh	r2, [r7, #14]
 1633 00a2 1046     		mov	r0, r2
 1634 00a4 1946     		mov	r1, r3
 1635 00a6 FFF7FEFF 		bl	CapSense_1_IIR4Filter
 1636 00aa 0346     		mov	r3, r0
 1637 00ac FB81     		strh	r3, [r7, #14]	@ movhi
1355:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
 1638              		.loc 1 1355 0
 1639 00ae 3B7A     		ldrb	r3, [r7, #8]	@ zero_extendqisi2
 1640 00b0 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1641 00b2 D1B2     		uxtb	r1, r2
 1642 00b4 094A     		ldr	r2, .L94
 1643 00b6 D154     		strb	r1, [r2, r3]
 1644 00b8 0BE0     		b	.L92
 1645              	.L89:
1356:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }                                
1357:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR4_FILTER & \
1358:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 54


1359:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1360:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1361:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_LINEAR_SLIDERS_POS_FILTER
1362:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1363:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1364:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_JitterFilter(position,
1365:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1366:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1367:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1368:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_JITTER_FILTER & \
1369:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK))
1370:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1371:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1372:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1373:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1374:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1375:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1376:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1377:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1378:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The maximum wasn't found */
1379:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = 0xFFFFu;
 1646              		.loc 1 1379 0
 1647 00ba 4FF6FF73 		movw	r3, #65535
 1648 00be FB81     		strh	r3, [r7, #14]	@ movhi
1380:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1381:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if(0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK)
1382:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1383:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
 1649              		.loc 1 1383 0
 1650 00c0 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 1651 00c2 03F01F03 		and	r3, r3, #31
 1652 00c6 002B     		cmp	r3, #0
 1653 00c8 03D0     		beq	.L92
1384:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1385:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
 1654              		.loc 1 1385 0
 1655 00ca 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1656 00cc 034A     		ldr	r2, .L94
 1657 00ce 0021     		movs	r1, #0
 1658 00d0 D154     		strb	r1, [r2, r3]
 1659              	.L92:
1386:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1387:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1388:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1389:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1390:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1391:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
 1660              		.loc 1 1391 0
 1661 00d2 FB89     		ldrh	r3, [r7, #14]
1392:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 1662              		.loc 1 1392 0
 1663 00d4 1846     		mov	r0, r3
 1664 00d6 1437     		adds	r7, r7, #20
 1665              		.cfi_def_cfa_offset 12
 1666 00d8 BD46     		mov	sp, r7
 1667              		.cfi_def_cfa_register 13
 1668              		@ sp needed
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 55


 1669 00da 90BD     		pop	{r4, r7, pc}
 1670              	.L95:
 1671              		.align	2
 1672              	.L94:
 1673 00dc 00000000 		.word	CapSense_1_posFiltersData
 1674 00e0 00000000 		.word	CapSense_1_rawDataIndex
 1675 00e4 00000000 		.word	CapSense_1_numberOfSensors
 1676 00e8 00000000 		.word	CapSense_1_fingerThreshold
 1677 00ec 00000000 		.word	CapSense_1_noiseThreshold
 1678              		.cfi_endproc
 1679              	.LFE13:
 1680              		.size	CapSense_1_GetCentroidPos, .-CapSense_1_GetCentroidPos
 1681              		.section	.text.CapSense_1_IIR4Filter,"ax",%progbits
 1682              		.align	2
 1683              		.global	CapSense_1_IIR4Filter
 1684              		.thumb
 1685              		.thumb_func
 1686              		.type	CapSense_1_IIR4Filter, %function
 1687              	CapSense_1_IIR4Filter:
 1688              	.LFB14:
1393:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_LINEAR_SLIDERS_COUNT > 0u) */
1394:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1395:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1396:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1397:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1398:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetRadialCentroidPos
1399:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1400:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1401:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1402:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Checks the CapSense_1_Signal[ ] array for a centroid within
1403:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  slider specified range. The centroid position is calculated to the resolution
1404:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1405:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result if enabled.
1406:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1407:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1408:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number.
1409:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1410:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_RS_"widget_name"            5
1411:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * 
1412:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1413:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns position value of the radial slider.
1414:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1415:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1416:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1417:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1418:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1419:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  There are no checks of widget type argument provided to this function.
1420:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1421:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1422:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Note:
1423:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1424:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1425:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so 
1426:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  that noise will not generate a false centroid.
1427:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1428:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1429:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 56


1430:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1431:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1432:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1433:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****      uint16 CapSense_1_GetRadialCentroidPos(uint8 widget)
1434:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                       
1435:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1436:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1437:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posIndex;
1438:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1439:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget]; 
1440:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1441:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1442:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1443:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1444:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 tempPos;
1445:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) 
1446:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK
1447:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1448:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1449:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maximum;
1450:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 position;
1451:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1452:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1453:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1454:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within centroid */        
1455:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1456:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], 0u)
1457:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1458:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maximum = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1459:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1460:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1461:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maximum != 0xFFu)
1462:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1463:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Calculate centroid */
1464:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = (uint16) CapSense_1_CalcCentroid(maximum, 
1465:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                          offset, count, CapSense_1_centroidMult[widget], CapSense_1_noiseThreshold[
1466:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1467:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1468:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1469:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1470:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1471:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Caluclate position to store filters data */
1472:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1473:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     
1474:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1475:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1476:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Init filters */
1477:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[posIndex] = (uint8) position;
1478:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if ((0u != (CapSense_1_MEDIAN_FILTER & \
1479:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1480:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                              (0u != (CapSense_1_AVERAGING_FILTER & \
1481:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1482:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1483:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))  || 
1484:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1485:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1486:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = (uint8) position;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 57


1487:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1488:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1489:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1490:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *   (0u != (CapSense_1_AVERAGING_FILTER & \
1491:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1492:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1493:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1494:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1495:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1496:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     else
1497:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1498:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Do filtering */
1499:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTER
1500:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1501:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1502:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1503:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_MedianFilter(position,
1504:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                         CapSense_1_posFiltersData[p
1505:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                         CapSense_1_posFiltersData[p
1506:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex + 1u] = 
1507:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                               CapSense_1_posFilters
1508:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1509:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1510:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_MEDIAN_FILTER & 
1511:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1512:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1513:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1514:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_AVERAGING_FILTER & \
1515:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1516:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
1517:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1518:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 tempPos = (uint8) position;
1519:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_AveragingFilter(position, 
1520:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1521:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1522:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex+1u]= CapSense_1_posFiltersData[p
1523:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = tempPos;
1524:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1525:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1526:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1527:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1528:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1529:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_
1530:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
1531:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1532:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR2Filter(position,
1533:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1534:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1535:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1536:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR2_FILTER & 
1537:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1538:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1539:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1540:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTERS_
1541:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1542:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1543:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_IIR4Filter(position,
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 58


1544:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1545:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1546:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1547:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_IIR4_FILTER & 
1548:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *          CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1549:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1550:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1551:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_RADIAL_SLIDERS_POS_FILTER
1552:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1553:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             {
1554:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 position = CapSense_1_JitterFilter(position, 
1555:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                          CapSense_1_posFiltersData[
1556:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 CapSense_1_posFiltersData[posIndex] = (uint8) position;
1557:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             }
1558:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         #endif /* (0u != (CapSense_1_JITTER_FILTER &
1559:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                *           CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK))
1560:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                */
1561:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1562:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1563:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1564:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1565:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1566:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         else
1567:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1568:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* The maximum didn't find */
1569:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             position = 0xFFFFu;
1570:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1571:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK)
1572:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1573:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if((posFiltersMask & CapSense_1_ANY_POS_FILTER) != 0u)
1574:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1575:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1576:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
1577:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (0u != CapSense_1_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1578:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1579:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1580:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (position);
1581:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1582:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif
1583:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1584:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1585:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if(CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0u)
1586:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1587:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_GetTouchCentroidPos
1588:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1589:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1590:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1591:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  If a finger is present on touch pad, this function calculates the X and Y
1592:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  position of the finger by calculating the centroids within touch pad specified
1593:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  range. The X and Y positions are calculated to the API resolutions set in the
1594:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  CapSense customizer. Returns a 1 if a finger is on the touchpad.
1595:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The position filter is applied to the result if enabled.
1596:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
1597:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  customizer.
1598:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1599:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1600:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  widget:  Widget number. 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 59


1601:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  For every touchpad widget there are defines in this format:
1602:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  #define CapSense_1_TP_"widget_name"            5
1603:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1604:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
1605:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  result of calculation of X and Y position are stored.
1606:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos[0u]  - position of X
1607:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  pos[1u]  - position of Y
1608:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1609:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1610:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
1611:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1612:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Side Effects:
1613:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   There are no checks of widget type argument provided to this function.
1614:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
1615:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *   calculations.
1616:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1617:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Reentrant:
1618:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  No.
1619:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1620:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1621:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint8 CapSense_1_GetTouchCentroidPos(uint8 widget, uint16* pos)
1622:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 	                                    
1623:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1624:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1625:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posXIndex;
1626:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posYIndex;
1627:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 firstTimeIndex = CapSense_1_posFiltersData[widget];
1628:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint8 posFiltersMask = CapSense_1_posFiltersMask[widget];
1629:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1630:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1631:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1632:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****              (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1633:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             uint16 tempPos;
1634:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1635:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                *   (0u != (CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1636:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                */
1637:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1638:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maxX;
1639:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 maxY;
1640:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 posX;
1641:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 posY;
1642:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 touch = 0u;
1643:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 offset = CapSense_1_rawDataIndex[widget];
1644:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint8 count = CapSense_1_numberOfSensors[widget];
1645:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1646:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* Find Maximum within X centroid */
1647:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (CapSense_1_IS_DIPLEX_SLIDER)
1648:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maxX = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget], 0u);
1649:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #else
1650:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             maxX = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget]);
1651:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1652:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1653:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (maxX != 0xFFu)
1654:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1655:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             offset = CapSense_1_rawDataIndex[widget + 1u];
1656:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             count = CapSense_1_numberOfSensors[widget + 1u];
1657:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 60


1658:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             /* Find Maximum within Y centroid */
1659:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #if (CapSense_1_IS_DIPLEX_SLIDER)
1660:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maxY = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget + 1u
1661:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #else
1662:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 maxY = CapSense_1_FindMaximum(offset, count, CapSense_1_fingerThreshold[widget + 1u
1663:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             #endif /* (CapSense_1_IS_DIPLEX_SLIDER) */
1664:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1665:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if (maxY != 0xFFu)
1666:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1667:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* X and Y maximums are found = true touch */
1668:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 touch = 1u;
1669:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1670:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Calculate Y centroid */
1671:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 posY = CapSense_1_CalcCentroid(maxY, offset, count, 
1672:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_centroidMult[widget + 1u], CapSense_1_noiseThreshold[widget 
1673:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1674:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Calculate X centroid */
1675:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 offset = CapSense_1_rawDataIndex[widget];
1676:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 count = CapSense_1_numberOfSensors[widget];
1677:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 
1678:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 posX = CapSense_1_CalcCentroid(maxX, offset, count, 
1679:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_centroidMult[widget],CapSense_1_noiseThreshold[widget]);
1680:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1681:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1682:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     /* Check if this TP has enabled filters */
1683:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_1_ANY_POS_FILTER))
1684:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     {
1685:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         /* Caluclate position to store filters data */
1686:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
1687:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         posYIndex  = CapSense_1_posFiltersData[widget + 1u];
1688:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         
1689:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         if (0u == CapSense_1_posFiltersData[firstTimeIndex])
1690:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
1691:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Init filters */
1692:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[posXIndex] = posX;
1693:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[posYIndex] = posY;
1694:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1695:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if((0u != (CapSense_1_MEDIAN_FILTER & \
1696:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))|| \
1697:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 (0u != (CapSense_1_AVERAGING_FILTER & \
1698:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1699:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1700:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER)) || 
1701:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER)) )
1702:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1703:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = posX;
1704:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = posY;
1705:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1706:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* ((0u != (CapSense_1_MEDIAN_FILTER & \
1707:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)) || \
1708:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *    (0u != (CapSense_1_AVERAGING_FILTER & \
1709:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *            CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)))
1710:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1711:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             
1712:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             CapSense_1_posFiltersData[firstTimeIndex] = 1u;
1713:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
1714:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         else
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 61


1715:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         {
1716:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             /* Do filtering */
1717:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_MEDIAN_FILTER & CapSense_1_TOUCH_PADS_POS_FILTER
1718:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_MEDIAN_FILTER))
1719:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1720:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posX;
1721:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_MedianFilter(posX,
1722:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1723:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1724:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = 
1725:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1726:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = tempPos;
1727:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1728:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posY;
1729:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_MedianFilter(posY,
1730:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1731:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1732:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = 
1733:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1734:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = tempPos;
1735:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1736:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1737:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_MEDIAN_FILTER & \
1738:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *          CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1739:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1740:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1741:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if(0u !=(CapSense_1_AVERAGING_FILTER & CapSense_1_TOUCH_PADS_POS_FILTE
1742:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_AVERAGING_FILTER))
1743:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1744:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posX;
1745:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_AveragingFilter(posX,
1746:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1747:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                        CapSense_1_posFiltersData[po
1748:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex + 1u] = 
1749:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                              CapSense_1_posFiltersD
1750:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = tempPos;
1751:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
1752:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     tempPos = posY;
1753:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_AveragingFilter(posY, 
1754:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1755:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                       CapSense_1_posFiltersData[pos
1756:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex + 1u] = 
1757:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1758:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = tempPos;
1759:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1760:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1761:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_AVERAGING_FILTER & \
1762:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1763:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1764:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1765:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_IIR2_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_
1766:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_IIR2_FILTER))
1767:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1768:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_IIR2Filter(posX, 
1769:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                            CapSense_1_posFiltersDat
1770:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = posX;
1771:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 62


1772:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_IIR2Filter(posY, 
1773:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1774:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = posY;
1775:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1776:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1777:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_IIR2_FILTER & \
1778:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *          CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1779:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1780:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1781:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_IIR4_FILTER & CapSense_1_TOUCH_PADS_POS_FILTERS_
1782:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_IIR4_FILTER))
1783:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 {
1784:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posX = (uint8) CapSense_1_IIR4Filter((uint16)posX,
1785:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1786:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posXIndex] = posX;
1787:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1788:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     posY = (uint8) CapSense_1_IIR4Filter((uint16)posY,
1789:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                     (uint16)CapSense_1_posFiltersDa
1790:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     CapSense_1_posFiltersData[posYIndex] = posY;
1791:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 }
1792:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 
1793:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_IIR4_FILTER & \
1794:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1795:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1796:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1797:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #if (0u != (CapSense_1_JITTER_FILTER & CapSense_1_TOUCH_PADS_POS_FILTER
1798:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_1_JITTER_FILTER))
1799:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     {
1800:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         posX = (uint8) CapSense_1_JitterFilter(posX, 
1801:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1802:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_posFiltersData[posXIndex] = posX;
1803:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         
1804:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         posY = (uint8) CapSense_1_JitterFilter(posY, 
1805:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                                                             CapSense_1_posFiltersDa
1806:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                         CapSense_1_posFiltersData[posYIndex] = posY;
1807:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                     }
1808:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                             #endif /* (0u != (CapSense_1_JITTER_FILTER & \
1809:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    *           CapSense_1_TOUCH_PADS_POS_FILTERS_MASK))
1810:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                    */
1811:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                         }
1812:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     }
1813:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1814:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1815:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Save positions */
1816:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 pos[0u] = posX;
1817:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 pos[1u] = posY;
1818:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1819:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1820:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1821:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #if (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK)
1822:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             if(touch == 0u)
1823:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             {
1824:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 /* Reset the filters */
1825:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 if ((posFiltersMask & CapSense_1_ANY_POS_FILTER) != 0u)
1826:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 {
1827:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                     CapSense_1_posFiltersData[firstTimeIndex] = 0u;
1828:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                 }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 63


1829:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             }
1830:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         #endif /* (0u != CapSense_1_TOUCH_PADS_POS_FILTERS_MASK) */
1831:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1832:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return (touch);
1833:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1834:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* (CapSense_1_TOTAL_TOUCH_PADS_COUNT > 0u) */
1835:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1836:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1837:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
1838:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_MEDIAN_FILTER) )
1839:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1840:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_MedianFilter
1841:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1842:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1843:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1844:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Median filter function. 
1845:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the 
1846:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  median value.
1847:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1848:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1849:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1850:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1851:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x3:  Before previous value.
1852:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1853:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1854:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1855:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1856:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1857:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
1858:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                          
1859:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1860:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint16 tmp;
1861:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1862:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (x1 > x2)
1863:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1864:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             tmp = x2;
1865:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x2 = x1;
1866:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x1 = tmp;
1867:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1868:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1869:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         if (x2 > x3)
1870:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         {
1871:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****             x2 = x3;
1872:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         }
1873:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1874:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
1875:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1876:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_MEDIAN_FILTER) | \
1877:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_MEDIAN_FILTER) )
1878:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1879:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1880:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1881:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) | \
1882:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_AVERAGING_FILTER) )
1883:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1884:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_AveragingFilter
1885:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 64


1886:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1887:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1888:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Averaging filter function.
1889:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  The averaging filter looks at the three most recent samples of position and
1890:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  reports the averaging value.
1891:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1892:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1893:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1894:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1895:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x3:  Before previous value.
1896:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1897:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1898:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1899:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1900:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1901:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
1902:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                             
1903:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1904:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
1905:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1906:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
1907:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1908:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_AVERAGING_FILTER) | \
1909:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_AVERAGING_FILTER) )
1910:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1911:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1912:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1913:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) | \
1914:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR2_FILTER) )
1915:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1916:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR2Filter
1917:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1918:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1919:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1920:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
1921:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1922:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1923:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1924:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1925:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1926:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1927:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1928:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1929:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1930:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR2Filter(uint16 x1, uint16 x2)
1931:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                        
1932:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
1933:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp;
1934:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1935:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
1936:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
1937:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp >>= 1u;
1938:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     
1939:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
1940:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
1941:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #endif /* ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR2_FILTER) | \
1942:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        *    (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR2_FILTER) )
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 65


1943:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****        */
1944:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1945:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** 
1946:.\Generated_Source\PSoC5/CapSense_1_CSHL.c **** #if ( (CapSense_1_RAW_FILTER_MASK & CapSense_1_IIR4_FILTER) | \
1947:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****       (CapSense_1_POS_FILTERS_MASK & CapSense_1_IIR4_FILTER) )
1948:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     /*******************************************************************************
1949:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Function Name: CapSense_1_IIR4Filter
1950:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     ********************************************************************************
1951:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1952:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Summary:
1953:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
1954:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1955:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Parameters:
1956:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x1:  Current value.
1957:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  x2:  Previous value.
1958:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1959:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     * Return:
1960:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *  Returns filtered value.
1961:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *
1962:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     *******************************************************************************/
1963:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     uint16 CapSense_1_IIR4Filter(uint16 x1, uint16 x2)
1964:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****                                        
1965:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     {
 1689              		.loc 1 1965 0
 1690              		.cfi_startproc
 1691              		@ args = 0, pretend = 0, frame = 16
 1692              		@ frame_needed = 1, uses_anonymous_args = 0
 1693              		@ link register save eliminated.
 1694 0000 80B4     		push	{r7}
 1695              		.cfi_def_cfa_offset 4
 1696              		.cfi_offset 7, -4
 1697 0002 85B0     		sub	sp, sp, #20
 1698              		.cfi_def_cfa_offset 24
 1699 0004 00AF     		add	r7, sp, #0
 1700              		.cfi_def_cfa_register 7
 1701 0006 0346     		mov	r3, r0
 1702 0008 0A46     		mov	r2, r1
 1703 000a FB80     		strh	r3, [r7, #6]	@ movhi
 1704 000c 1346     		mov	r3, r2	@ movhi
 1705 000e BB80     		strh	r3, [r7, #4]	@ movhi
1966:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         uint32 tmp;
1967:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1968:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
1969:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 1706              		.loc 1 1969 0
 1707 0010 FA88     		ldrh	r2, [r7, #6]
 1708 0012 BB88     		ldrh	r3, [r7, #4]
 1709 0014 1344     		add	r3, r3, r2
 1710 0016 FB60     		str	r3, [r7, #12]
1970:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 1711              		.loc 1 1970 0
 1712 0018 BB88     		ldrh	r3, [r7, #4]
 1713 001a 5B00     		lsls	r3, r3, #1
 1714 001c FA68     		ldr	r2, [r7, #12]
 1715 001e 1344     		add	r3, r3, r2
 1716 0020 FB60     		str	r3, [r7, #12]
1971:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         tmp >>= 2u;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 66


 1717              		.loc 1 1971 0
 1718 0022 FB68     		ldr	r3, [r7, #12]
 1719 0024 9B08     		lsrs	r3, r3, #2
 1720 0026 FB60     		str	r3, [r7, #12]
1972:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         
1973:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****         return ((uint16) tmp);
 1721              		.loc 1 1973 0
 1722 0028 FB68     		ldr	r3, [r7, #12]
 1723 002a 9BB2     		uxth	r3, r3
1974:.\Generated_Source\PSoC5/CapSense_1_CSHL.c ****     }
 1724              		.loc 1 1974 0
 1725 002c 1846     		mov	r0, r3
 1726 002e 1437     		adds	r7, r7, #20
 1727              		.cfi_def_cfa_offset 4
 1728 0030 BD46     		mov	sp, r7
 1729              		.cfi_def_cfa_register 13
 1730              		@ sp needed
 1731 0032 5DF8047B 		ldr	r7, [sp], #4
 1732              		.cfi_restore 7
 1733              		.cfi_def_cfa_offset 0
 1734 0036 7047     		bx	lr
 1735              		.cfi_endproc
 1736              	.LFE14:
 1737              		.size	CapSense_1_IIR4Filter, .-CapSense_1_IIR4Filter
 1738              		.bss
 1739              		.align	2
 1740              	CapSense_1_centroid.5138:
 1741 0004 000000   		.space	3
 1742 0007 00       		.text
 1743              	.Letext0:
 1744              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1745              		.file 3 ".\\Generated_Source\\PSoC5\\CapSense_1.h"
 1746              		.file 4 ".\\Generated_Source\\PSoC5\\CapSense_1_CSHL.h"
 1747              		.section	.debug_info,"",%progbits
 1748              	.Ldebug_info0:
 1749 0000 F4070000 		.4byte	0x7f4
 1750 0004 0400     		.2byte	0x4
 1751 0006 00000000 		.4byte	.Ldebug_abbrev0
 1752 000a 04       		.byte	0x4
 1753 000b 01       		.uleb128 0x1
 1754 000c D7030000 		.4byte	.LASF82
 1755 0010 01       		.byte	0x1
 1756 0011 B2010000 		.4byte	.LASF83
 1757 0015 60020000 		.4byte	.LASF84
 1758 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1759 001d 00000000 		.4byte	0
 1760 0021 00000000 		.4byte	.Ldebug_line0
 1761 0025 02       		.uleb128 0x2
 1762 0026 01       		.byte	0x1
 1763 0027 06       		.byte	0x6
 1764 0028 11010000 		.4byte	.LASF0
 1765 002c 02       		.uleb128 0x2
 1766 002d 01       		.byte	0x1
 1767 002e 08       		.byte	0x8
 1768 002f 00050000 		.4byte	.LASF1
 1769 0033 02       		.uleb128 0x2
 1770 0034 02       		.byte	0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 67


 1771 0035 05       		.byte	0x5
 1772 0036 43050000 		.4byte	.LASF2
 1773 003a 02       		.uleb128 0x2
 1774 003b 02       		.byte	0x2
 1775 003c 07       		.byte	0x7
 1776 003d BB020000 		.4byte	.LASF3
 1777 0041 02       		.uleb128 0x2
 1778 0042 04       		.byte	0x4
 1779 0043 05       		.byte	0x5
 1780 0044 6D010000 		.4byte	.LASF4
 1781 0048 02       		.uleb128 0x2
 1782 0049 04       		.byte	0x4
 1783 004a 07       		.byte	0x7
 1784 004b 4E020000 		.4byte	.LASF5
 1785 004f 02       		.uleb128 0x2
 1786 0050 08       		.byte	0x8
 1787 0051 05       		.byte	0x5
 1788 0052 03010000 		.4byte	.LASF6
 1789 0056 02       		.uleb128 0x2
 1790 0057 08       		.byte	0x8
 1791 0058 07       		.byte	0x7
 1792 0059 63000000 		.4byte	.LASF7
 1793 005d 03       		.uleb128 0x3
 1794 005e 04       		.byte	0x4
 1795 005f 05       		.byte	0x5
 1796 0060 696E7400 		.ascii	"int\000"
 1797 0064 02       		.uleb128 0x2
 1798 0065 04       		.byte	0x4
 1799 0066 07       		.byte	0x7
 1800 0067 38020000 		.4byte	.LASF8
 1801 006b 04       		.uleb128 0x4
 1802 006c A5010000 		.4byte	.LASF9
 1803 0070 02       		.byte	0x2
 1804 0071 3801     		.2byte	0x138
 1805 0073 2C000000 		.4byte	0x2c
 1806 0077 04       		.uleb128 0x4
 1807 0078 06000000 		.4byte	.LASF10
 1808 007c 02       		.byte	0x2
 1809 007d 3901     		.2byte	0x139
 1810 007f 3A000000 		.4byte	0x3a
 1811 0083 04       		.uleb128 0x4
 1812 0084 DD010000 		.4byte	.LASF11
 1813 0088 02       		.byte	0x2
 1814 0089 3A01     		.2byte	0x13a
 1815 008b 48000000 		.4byte	0x48
 1816 008f 04       		.uleb128 0x4
 1817 0090 45060000 		.4byte	.LASF12
 1818 0094 02       		.byte	0x2
 1819 0095 3C01     		.2byte	0x13c
 1820 0097 33000000 		.4byte	0x33
 1821 009b 04       		.uleb128 0x4
 1822 009c 4A010000 		.4byte	.LASF13
 1823 00a0 02       		.byte	0x2
 1824 00a1 3D01     		.2byte	0x13d
 1825 00a3 41000000 		.4byte	0x41
 1826 00a7 02       		.uleb128 0x2
 1827 00a8 04       		.byte	0x4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 68


 1828 00a9 04       		.byte	0x4
 1829 00aa 87040000 		.4byte	.LASF14
 1830 00ae 02       		.uleb128 0x2
 1831 00af 08       		.byte	0x8
 1832 00b0 04       		.byte	0x4
 1833 00b1 AB010000 		.4byte	.LASF15
 1834 00b5 02       		.uleb128 0x2
 1835 00b6 01       		.byte	0x1
 1836 00b7 08       		.byte	0x8
 1837 00b8 F4050000 		.4byte	.LASF16
 1838 00bc 02       		.uleb128 0x2
 1839 00bd 04       		.byte	0x4
 1840 00be 07       		.byte	0x7
 1841 00bf 32030000 		.4byte	.LASF17
 1842 00c3 05       		.uleb128 0x5
 1843 00c4 4F000000 		.4byte	.LASF18
 1844 00c8 01       		.byte	0x1
 1845 00c9 8B       		.byte	0x8b
 1846 00ca 00000000 		.4byte	.LFB0
 1847 00ce 80000000 		.4byte	.LFE0-.LFB0
 1848 00d2 01       		.uleb128 0x1
 1849 00d3 9C       		.byte	0x9c
 1850 00d4 F5000000 		.4byte	0xf5
 1851 00d8 06       		.uleb128 0x6
 1852 00d9 CE020000 		.4byte	.LASF20
 1853 00dd 01       		.byte	0x1
 1854 00de 8B       		.byte	0x8b
 1855 00df 6B000000 		.4byte	0x6b
 1856 00e3 02       		.uleb128 0x2
 1857 00e4 91       		.byte	0x91
 1858 00e5 6F       		.sleb128 -17
 1859 00e6 07       		.uleb128 0x7
 1860 00e7 4D050000 		.4byte	.LASF22
 1861 00eb 01       		.byte	0x1
 1862 00ec 8F       		.byte	0x8f
 1863 00ed 6B000000 		.4byte	0x6b
 1864 00f1 02       		.uleb128 0x2
 1865 00f2 91       		.byte	0x91
 1866 00f3 77       		.sleb128 -9
 1867 00f4 00       		.byte	0
 1868 00f5 08       		.uleb128 0x8
 1869 00f6 B3030000 		.4byte	.LASF19
 1870 00fa 01       		.byte	0x1
 1871 00fb D7       		.byte	0xd7
 1872 00fc 00000000 		.4byte	.LFB1
 1873 0100 2C000000 		.4byte	.LFE1-.LFB1
 1874 0104 01       		.uleb128 0x1
 1875 0105 9C       		.byte	0x9c
 1876 0106 19010000 		.4byte	0x119
 1877 010a 06       		.uleb128 0x6
 1878 010b CE020000 		.4byte	.LASF20
 1879 010f 01       		.byte	0x1
 1880 0110 D7       		.byte	0xd7
 1881 0111 6B000000 		.4byte	0x6b
 1882 0115 02       		.uleb128 0x2
 1883 0116 91       		.byte	0x91
 1884 0117 77       		.sleb128 -9
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 69


 1885 0118 00       		.byte	0
 1886 0119 09       		.uleb128 0x9
 1887 011a 2D000000 		.4byte	.LASF21
 1888 011e 01       		.byte	0x1
 1889 011f 0B01     		.2byte	0x10b
 1890 0121 00000000 		.4byte	.LFB2
 1891 0125 26000000 		.4byte	.LFE2-.LFB2
 1892 0129 01       		.uleb128 0x1
 1893 012a 9C       		.byte	0x9c
 1894 012b 3D010000 		.4byte	0x13d
 1895 012f 0A       		.uleb128 0xa
 1896 0130 6900     		.ascii	"i\000"
 1897 0132 01       		.byte	0x1
 1898 0133 0E01     		.2byte	0x10e
 1899 0135 6B000000 		.4byte	0x6b
 1900 0139 02       		.uleb128 0x2
 1901 013a 91       		.byte	0x91
 1902 013b 77       		.sleb128 -9
 1903 013c 00       		.byte	0
 1904 013d 09       		.uleb128 0x9
 1905 013e 0E050000 		.4byte	.LASF23
 1906 0142 01       		.byte	0x1
 1907 0143 2C01     		.2byte	0x12c
 1908 0145 00000000 		.4byte	.LFB3
 1909 0149 6C000000 		.4byte	.LFE3-.LFB3
 1910 014d 01       		.uleb128 0x1
 1911 014e 9C       		.byte	0x9c
 1912 014f 7F010000 		.4byte	0x17f
 1913 0153 0A       		.uleb128 0xa
 1914 0154 6900     		.ascii	"i\000"
 1915 0156 01       		.byte	0x1
 1916 0157 2F01     		.2byte	0x12f
 1917 0159 6B000000 		.4byte	0x6b
 1918 015d 02       		.uleb128 0x2
 1919 015e 91       		.byte	0x91
 1920 015f 77       		.sleb128 -9
 1921 0160 0A       		.uleb128 0xa
 1922 0161 706F7300 		.ascii	"pos\000"
 1923 0165 01       		.byte	0x1
 1924 0166 3001     		.2byte	0x130
 1925 0168 6B000000 		.4byte	0x6b
 1926 016c 02       		.uleb128 0x2
 1927 016d 91       		.byte	0x91
 1928 016e 76       		.sleb128 -10
 1929 016f 0B       		.uleb128 0xb
 1930 0170 2B030000 		.4byte	.LASF24
 1931 0174 01       		.byte	0x1
 1932 0175 3101     		.2byte	0x131
 1933 0177 6B000000 		.4byte	0x6b
 1934 017b 02       		.uleb128 0x2
 1935 017c 91       		.byte	0x91
 1936 017d 75       		.sleb128 -11
 1937 017e 00       		.byte	0
 1938 017f 09       		.uleb128 0x9
 1939 0180 5B050000 		.4byte	.LASF25
 1940 0184 01       		.byte	0x1
 1941 0185 6F01     		.2byte	0x16f
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 70


 1942 0187 00000000 		.4byte	.LFB4
 1943 018b 7C010000 		.4byte	.LFE4-.LFB4
 1944 018f 01       		.uleb128 0x1
 1945 0190 9C       		.byte	0x9c
 1946 0191 F0010000 		.4byte	0x1f0
 1947 0195 0C       		.uleb128 0xc
 1948 0196 CE020000 		.4byte	.LASF20
 1949 019a 01       		.byte	0x1
 1950 019b 6F01     		.2byte	0x16f
 1951 019d 6B000000 		.4byte	0x6b
 1952 01a1 02       		.uleb128 0x2
 1953 01a2 91       		.byte	0x91
 1954 01a3 67       		.sleb128 -25
 1955 01a4 0B       		.uleb128 0xb
 1956 01a5 F8020000 		.4byte	.LASF26
 1957 01a9 01       		.byte	0x1
 1958 01aa 7201     		.2byte	0x172
 1959 01ac 83000000 		.4byte	0x83
 1960 01b0 02       		.uleb128 0x2
 1961 01b1 91       		.byte	0x91
 1962 01b2 6C       		.sleb128 -20
 1963 01b3 0B       		.uleb128 0xb
 1964 01b4 7B060000 		.4byte	.LASF27
 1965 01b8 01       		.byte	0x1
 1966 01b9 7301     		.2byte	0x173
 1967 01bb 77000000 		.4byte	0x77
 1968 01bf 02       		.uleb128 0x2
 1969 01c0 91       		.byte	0x91
 1970 01c1 76       		.sleb128 -10
 1971 01c2 0B       		.uleb128 0xb
 1972 01c3 0D000000 		.4byte	.LASF28
 1973 01c7 01       		.byte	0x1
 1974 01c8 7401     		.2byte	0x174
 1975 01ca 77000000 		.4byte	0x77
 1976 01ce 02       		.uleb128 0x2
 1977 01cf 91       		.byte	0x91
 1978 01d0 72       		.sleb128 -14
 1979 01d1 0B       		.uleb128 0xb
 1980 01d2 4D050000 		.4byte	.LASF22
 1981 01d6 01       		.byte	0x1
 1982 01d7 7501     		.2byte	0x175
 1983 01d9 6B000000 		.4byte	0x6b
 1984 01dd 02       		.uleb128 0x2
 1985 01de 91       		.byte	0x91
 1986 01df 75       		.sleb128 -11
 1987 01e0 0B       		.uleb128 0xb
 1988 01e1 34050000 		.4byte	.LASF29
 1989 01e5 01       		.byte	0x1
 1990 01e6 7601     		.2byte	0x176
 1991 01e8 6B000000 		.4byte	0x6b
 1992 01ec 02       		.uleb128 0x2
 1993 01ed 91       		.byte	0x91
 1994 01ee 74       		.sleb128 -12
 1995 01ef 00       		.byte	0
 1996 01f0 09       		.uleb128 0x9
 1997 01f1 65040000 		.4byte	.LASF30
 1998 01f5 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 71


 1999 01f6 1C02     		.2byte	0x21c
 2000 01f8 00000000 		.4byte	.LFB5
 2001 01fc 50000000 		.4byte	.LFE5-.LFB5
 2002 0200 01       		.uleb128 0x1
 2003 0201 9C       		.byte	0x9c
 2004 0202 32020000 		.4byte	0x232
 2005 0206 0A       		.uleb128 0xa
 2006 0207 6900     		.ascii	"i\000"
 2007 0209 01       		.byte	0x1
 2008 020a 1F02     		.2byte	0x21f
 2009 020c 6B000000 		.4byte	0x6b
 2010 0210 02       		.uleb128 0x2
 2011 0211 91       		.byte	0x91
 2012 0212 77       		.sleb128 -9
 2013 0213 0A       		.uleb128 0xa
 2014 0214 706F7300 		.ascii	"pos\000"
 2015 0218 01       		.byte	0x1
 2016 0219 2002     		.2byte	0x220
 2017 021b 6B000000 		.4byte	0x6b
 2018 021f 02       		.uleb128 0x2
 2019 0220 91       		.byte	0x91
 2020 0221 76       		.sleb128 -10
 2021 0222 0B       		.uleb128 0xb
 2022 0223 2B030000 		.4byte	.LASF24
 2023 0227 01       		.byte	0x1
 2024 0228 2102     		.2byte	0x221
 2025 022a 6B000000 		.4byte	0x6b
 2026 022e 02       		.uleb128 0x2
 2027 022f 91       		.byte	0x91
 2028 0230 75       		.sleb128 -11
 2029 0231 00       		.byte	0
 2030 0232 0D       		.uleb128 0xd
 2031 0233 BF040000 		.4byte	.LASF36
 2032 0237 01       		.byte	0x1
 2033 0238 5602     		.2byte	0x256
 2034 023a 6B000000 		.4byte	0x6b
 2035 023e 00000000 		.4byte	.LFB6
 2036 0242 20010000 		.4byte	.LFE6-.LFB6
 2037 0246 01       		.uleb128 0x1
 2038 0247 9C       		.byte	0x9c
 2039 0248 C5020000 		.4byte	0x2c5
 2040 024c 0C       		.uleb128 0xc
 2041 024d CE020000 		.4byte	.LASF20
 2042 0251 01       		.byte	0x1
 2043 0252 5602     		.2byte	0x256
 2044 0254 6B000000 		.4byte	0x6b
 2045 0258 02       		.uleb128 0x2
 2046 0259 91       		.byte	0x91
 2047 025a 6F       		.sleb128 -17
 2048 025b 0B       		.uleb128 0xb
 2049 025c 37060000 		.4byte	.LASF31
 2050 0260 01       		.byte	0x1
 2051 0261 5902     		.2byte	0x259
 2052 0263 6B000000 		.4byte	0x6b
 2053 0267 02       		.uleb128 0x2
 2054 0268 91       		.byte	0x91
 2055 0269 77       		.sleb128 -9
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 72


 2056 026a 0A       		.uleb128 0xa
 2057 026b 706F7300 		.ascii	"pos\000"
 2058 026f 01       		.byte	0x1
 2059 0270 5B02     		.2byte	0x25b
 2060 0272 6B000000 		.4byte	0x6b
 2061 0276 02       		.uleb128 0x2
 2062 0277 91       		.byte	0x91
 2063 0278 76       		.sleb128 -10
 2064 0279 0B       		.uleb128 0xb
 2065 027a 54050000 		.4byte	.LASF32
 2066 027e 01       		.byte	0x1
 2067 027f 5C02     		.2byte	0x25c
 2068 0281 6B000000 		.4byte	0x6b
 2069 0285 02       		.uleb128 0x2
 2070 0286 91       		.byte	0x91
 2071 0287 75       		.sleb128 -11
 2072 0288 0B       		.uleb128 0xb
 2073 0289 4D050000 		.4byte	.LASF22
 2074 028d 01       		.byte	0x1
 2075 028e 5E02     		.2byte	0x25e
 2076 0290 6B000000 		.4byte	0x6b
 2077 0294 02       		.uleb128 0x2
 2078 0295 91       		.byte	0x91
 2079 0296 74       		.sleb128 -12
 2080 0297 0B       		.uleb128 0xb
 2081 0298 1D000000 		.4byte	.LASF33
 2082 029c 01       		.byte	0x1
 2083 029d 5F02     		.2byte	0x25f
 2084 029f 6B000000 		.4byte	0x6b
 2085 02a3 02       		.uleb128 0x2
 2086 02a4 91       		.byte	0x91
 2087 02a5 73       		.sleb128 -13
 2088 02a6 0B       		.uleb128 0xb
 2089 02a7 E4010000 		.4byte	.LASF34
 2090 02ab 01       		.byte	0x1
 2091 02ac 6002     		.2byte	0x260
 2092 02ae 6B000000 		.4byte	0x6b
 2093 02b2 02       		.uleb128 0x2
 2094 02b3 91       		.byte	0x91
 2095 02b4 72       		.sleb128 -14
 2096 02b5 0B       		.uleb128 0xb
 2097 02b6 22030000 		.4byte	.LASF35
 2098 02ba 01       		.byte	0x1
 2099 02bb 6102     		.2byte	0x261
 2100 02bd 6B000000 		.4byte	0x6b
 2101 02c1 02       		.uleb128 0x2
 2102 02c2 91       		.byte	0x91
 2103 02c3 71       		.sleb128 -15
 2104 02c4 00       		.byte	0
 2105 02c5 0E       		.uleb128 0xe
 2106 02c6 A1000000 		.4byte	.LASF37
 2107 02ca 01       		.byte	0x1
 2108 02cb A602     		.2byte	0x2a6
 2109 02cd 6B000000 		.4byte	0x6b
 2110 02d1 00000000 		.4byte	.LFB7
 2111 02d5 54000000 		.4byte	.LFE7-.LFB7
 2112 02d9 01       		.uleb128 0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 73


 2113 02da 9C       		.byte	0x9c
 2114 02db 1C030000 		.4byte	0x31c
 2115 02df 0C       		.uleb128 0xc
 2116 02e0 4D050000 		.4byte	.LASF22
 2117 02e4 01       		.byte	0x1
 2118 02e5 A602     		.2byte	0x2a6
 2119 02e7 6B000000 		.4byte	0x6b
 2120 02eb 02       		.uleb128 0x2
 2121 02ec 91       		.byte	0x91
 2122 02ed 6F       		.sleb128 -17
 2123 02ee 0B       		.uleb128 0xb
 2124 02ef 1D010000 		.4byte	.LASF38
 2125 02f3 01       		.byte	0x1
 2126 02f4 A902     		.2byte	0x2a9
 2127 02f6 6B000000 		.4byte	0x6b
 2128 02fa 02       		.uleb128 0x2
 2129 02fb 91       		.byte	0x91
 2130 02fc 77       		.sleb128 -9
 2131 02fd 0B       		.uleb128 0xb
 2132 02fe 26010000 		.4byte	.LASF39
 2133 0302 01       		.byte	0x1
 2134 0303 AA02     		.2byte	0x2aa
 2135 0305 6B000000 		.4byte	0x6b
 2136 0309 02       		.uleb128 0x2
 2137 030a 91       		.byte	0x91
 2138 030b 75       		.sleb128 -11
 2139 030c 0B       		.uleb128 0xb
 2140 030d 50010000 		.4byte	.LASF40
 2141 0311 01       		.byte	0x1
 2142 0312 AB02     		.2byte	0x2ab
 2143 0314 6B000000 		.4byte	0x6b
 2144 0318 02       		.uleb128 0x2
 2145 0319 91       		.byte	0x91
 2146 031a 76       		.sleb128 -10
 2147 031b 00       		.byte	0
 2148 031c 0E       		.uleb128 0xe
 2149 031d DE040000 		.4byte	.LASF41
 2150 0321 01       		.byte	0x1
 2151 0322 D202     		.2byte	0x2d2
 2152 0324 6B000000 		.4byte	0x6b
 2153 0328 00000000 		.4byte	.LFB8
 2154 032c 38000000 		.4byte	.LFE8-.LFB8
 2155 0330 01       		.uleb128 0x1
 2156 0331 9C       		.byte	0x9c
 2157 0332 53030000 		.4byte	0x353
 2158 0336 0A       		.uleb128 0xa
 2159 0337 6900     		.ascii	"i\000"
 2160 0339 01       		.byte	0x1
 2161 033a D502     		.2byte	0x2d5
 2162 033c 6B000000 		.4byte	0x6b
 2163 0340 02       		.uleb128 0x2
 2164 0341 91       		.byte	0x91
 2165 0342 77       		.sleb128 -9
 2166 0343 0B       		.uleb128 0xb
 2167 0344 50010000 		.4byte	.LASF40
 2168 0348 01       		.byte	0x1
 2169 0349 D602     		.2byte	0x2d6
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 74


 2170 034b 6B000000 		.4byte	0x6b
 2171 034f 02       		.uleb128 0x2
 2172 0350 91       		.byte	0x91
 2173 0351 76       		.sleb128 -10
 2174 0352 00       		.byte	0
 2175 0353 0F       		.uleb128 0xf
 2176 0354 7A000000 		.4byte	.LASF42
 2177 0358 01       		.byte	0x1
 2178 0359 0003     		.2byte	0x300
 2179 035b 00000000 		.4byte	.LFB9
 2180 035f 68000000 		.4byte	.LFE9-.LFB9
 2181 0363 01       		.uleb128 0x1
 2182 0364 9C       		.byte	0x9c
 2183 0365 B5030000 		.4byte	0x3b5
 2184 0369 0C       		.uleb128 0xc
 2185 036a 4D050000 		.4byte	.LASF22
 2186 036e 01       		.byte	0x1
 2187 036f 0003     		.2byte	0x300
 2188 0371 6B000000 		.4byte	0x6b
 2189 0375 02       		.uleb128 0x2
 2190 0376 91       		.byte	0x91
 2191 0377 6F       		.sleb128 -17
 2192 0378 0A       		.uleb128 0xa
 2193 0379 706F7300 		.ascii	"pos\000"
 2194 037d 01       		.byte	0x1
 2195 037e 0303     		.2byte	0x303
 2196 0380 6B000000 		.4byte	0x6b
 2197 0384 02       		.uleb128 0x2
 2198 0385 91       		.byte	0x91
 2199 0386 75       		.sleb128 -11
 2200 0387 0B       		.uleb128 0xb
 2201 0388 2B030000 		.4byte	.LASF24
 2202 038c 01       		.byte	0x1
 2203 038d 0403     		.2byte	0x304
 2204 038f 6B000000 		.4byte	0x6b
 2205 0393 02       		.uleb128 0x2
 2206 0394 91       		.byte	0x91
 2207 0395 74       		.sleb128 -12
 2208 0396 0B       		.uleb128 0xb
 2209 0397 1D010000 		.4byte	.LASF38
 2210 039b 01       		.byte	0x1
 2211 039c 0503     		.2byte	0x305
 2212 039e 6B000000 		.4byte	0x6b
 2213 03a2 02       		.uleb128 0x2
 2214 03a3 91       		.byte	0x91
 2215 03a4 77       		.sleb128 -9
 2216 03a5 0B       		.uleb128 0xb
 2217 03a6 26010000 		.4byte	.LASF39
 2218 03aa 01       		.byte	0x1
 2219 03ab 0603     		.2byte	0x306
 2220 03ad 6B000000 		.4byte	0x6b
 2221 03b1 02       		.uleb128 0x2
 2222 03b2 91       		.byte	0x91
 2223 03b3 76       		.sleb128 -10
 2224 03b4 00       		.byte	0
 2225 03b5 0F       		.uleb128 0xf
 2226 03b6 80010000 		.4byte	.LASF43
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 75


 2227 03ba 01       		.byte	0x1
 2228 03bb 3203     		.2byte	0x332
 2229 03bd 00000000 		.4byte	.LFB10
 2230 03c1 6C000000 		.4byte	.LFE10-.LFB10
 2231 03c5 01       		.uleb128 0x1
 2232 03c6 9C       		.byte	0x9c
 2233 03c7 17040000 		.4byte	0x417
 2234 03cb 0C       		.uleb128 0xc
 2235 03cc 4D050000 		.4byte	.LASF22
 2236 03d0 01       		.byte	0x1
 2237 03d1 3203     		.2byte	0x332
 2238 03d3 6B000000 		.4byte	0x6b
 2239 03d7 02       		.uleb128 0x2
 2240 03d8 91       		.byte	0x91
 2241 03d9 6F       		.sleb128 -17
 2242 03da 0A       		.uleb128 0xa
 2243 03db 706F7300 		.ascii	"pos\000"
 2244 03df 01       		.byte	0x1
 2245 03e0 3503     		.2byte	0x335
 2246 03e2 6B000000 		.4byte	0x6b
 2247 03e6 02       		.uleb128 0x2
 2248 03e7 91       		.byte	0x91
 2249 03e8 75       		.sleb128 -11
 2250 03e9 0B       		.uleb128 0xb
 2251 03ea 2B030000 		.4byte	.LASF24
 2252 03ee 01       		.byte	0x1
 2253 03ef 3603     		.2byte	0x336
 2254 03f1 6B000000 		.4byte	0x6b
 2255 03f5 02       		.uleb128 0x2
 2256 03f6 91       		.byte	0x91
 2257 03f7 74       		.sleb128 -12
 2258 03f8 0B       		.uleb128 0xb
 2259 03f9 1D010000 		.4byte	.LASF38
 2260 03fd 01       		.byte	0x1
 2261 03fe 3703     		.2byte	0x337
 2262 0400 6B000000 		.4byte	0x6b
 2263 0404 02       		.uleb128 0x2
 2264 0405 91       		.byte	0x91
 2265 0406 77       		.sleb128 -9
 2266 0407 0B       		.uleb128 0xb
 2267 0408 26010000 		.4byte	.LASF39
 2268 040c 01       		.byte	0x1
 2269 040d 3803     		.2byte	0x338
 2270 040f 6B000000 		.4byte	0x6b
 2271 0413 02       		.uleb128 0x2
 2272 0414 91       		.byte	0x91
 2273 0415 76       		.sleb128 -10
 2274 0416 00       		.byte	0
 2275 0417 0D       		.uleb128 0xd
 2276 0418 56010000 		.4byte	.LASF44
 2277 041c 01       		.byte	0x1
 2278 041d 6403     		.2byte	0x364
 2279 041f 6B000000 		.4byte	0x6b
 2280 0423 00000000 		.4byte	.LFB11
 2281 0427 74000000 		.4byte	.LFE11-.LFB11
 2282 042b 01       		.uleb128 0x1
 2283 042c 9C       		.byte	0x9c
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 76


 2284 042d 99040000 		.4byte	0x499
 2285 0431 0C       		.uleb128 0xc
 2286 0432 13060000 		.4byte	.LASF45
 2287 0436 01       		.byte	0x1
 2288 0437 6403     		.2byte	0x364
 2289 0439 6B000000 		.4byte	0x6b
 2290 043d 02       		.uleb128 0x2
 2291 043e 91       		.byte	0x91
 2292 043f 6F       		.sleb128 -17
 2293 0440 0C       		.uleb128 0xc
 2294 0441 00000000 		.4byte	.LASF46
 2295 0445 01       		.byte	0x1
 2296 0446 6403     		.2byte	0x364
 2297 0448 6B000000 		.4byte	0x6b
 2298 044c 02       		.uleb128 0x2
 2299 044d 91       		.byte	0x91
 2300 044e 6E       		.sleb128 -18
 2301 044f 0C       		.uleb128 0xc
 2302 0450 1D000000 		.4byte	.LASF33
 2303 0454 01       		.byte	0x1
 2304 0455 6403     		.2byte	0x364
 2305 0457 6B000000 		.4byte	0x6b
 2306 045b 02       		.uleb128 0x2
 2307 045c 91       		.byte	0x91
 2308 045d 6D       		.sleb128 -19
 2309 045e 0A       		.uleb128 0xa
 2310 045f 6900     		.ascii	"i\000"
 2311 0461 01       		.byte	0x1
 2312 0462 6803     		.2byte	0x368
 2313 0464 6B000000 		.4byte	0x6b
 2314 0468 02       		.uleb128 0x2
 2315 0469 91       		.byte	0x91
 2316 046a 77       		.sleb128 -9
 2317 046b 0B       		.uleb128 0xb
 2318 046c C6050000 		.4byte	.LASF47
 2319 0470 01       		.byte	0x1
 2320 0471 7203     		.2byte	0x372
 2321 0473 6B000000 		.4byte	0x6b
 2322 0477 02       		.uleb128 0x2
 2323 0478 91       		.byte	0x91
 2324 0479 76       		.sleb128 -10
 2325 047a 0B       		.uleb128 0xb
 2326 047b 33020000 		.4byte	.LASF48
 2327 047f 01       		.byte	0x1
 2328 0480 7303     		.2byte	0x373
 2329 0482 6B000000 		.4byte	0x6b
 2330 0486 02       		.uleb128 0x2
 2331 0487 91       		.byte	0x91
 2332 0488 75       		.sleb128 -11
 2333 0489 0B       		.uleb128 0xb
 2334 048a 25020000 		.4byte	.LASF49
 2335 048e 01       		.byte	0x1
 2336 048f 7403     		.2byte	0x374
 2337 0491 99040000 		.4byte	0x499
 2338 0495 02       		.uleb128 0x2
 2339 0496 91       		.byte	0x91
 2340 0497 70       		.sleb128 -16
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 77


 2341 0498 00       		.byte	0
 2342 0499 10       		.uleb128 0x10
 2343 049a 04       		.byte	0x4
 2344 049b 6B000000 		.4byte	0x6b
 2345 049f 0D       		.uleb128 0xd
 2346 04a0 83030000 		.4byte	.LASF50
 2347 04a4 01       		.byte	0x1
 2348 04a5 0004     		.2byte	0x400
 2349 04a7 6B000000 		.4byte	0x6b
 2350 04ab 00000000 		.4byte	.LFB12
 2351 04af 54010000 		.4byte	.LFE12-.LFB12
 2352 04b3 01       		.uleb128 0x1
 2353 04b4 9C       		.byte	0x9c
 2354 04b5 71050000 		.4byte	0x571
 2355 04b9 0C       		.uleb128 0xc
 2356 04ba C6050000 		.4byte	.LASF47
 2357 04be 01       		.byte	0x1
 2358 04bf 0004     		.2byte	0x400
 2359 04c1 6B000000 		.4byte	0x6b
 2360 04c5 02       		.uleb128 0x2
 2361 04c6 91       		.byte	0x91
 2362 04c7 5F       		.sleb128 -33
 2363 04c8 0C       		.uleb128 0xc
 2364 04c9 13060000 		.4byte	.LASF45
 2365 04cd 01       		.byte	0x1
 2366 04ce 0004     		.2byte	0x400
 2367 04d0 6B000000 		.4byte	0x6b
 2368 04d4 02       		.uleb128 0x2
 2369 04d5 91       		.byte	0x91
 2370 04d6 5E       		.sleb128 -34
 2371 04d7 0C       		.uleb128 0xc
 2372 04d8 00000000 		.4byte	.LASF46
 2373 04dc 01       		.byte	0x1
 2374 04dd 0104     		.2byte	0x401
 2375 04df 6B000000 		.4byte	0x6b
 2376 04e3 02       		.uleb128 0x2
 2377 04e4 91       		.byte	0x91
 2378 04e5 5D       		.sleb128 -35
 2379 04e6 0C       		.uleb128 0xc
 2380 04e7 CE050000 		.4byte	.LASF51
 2381 04eb 01       		.byte	0x1
 2382 04ec 0104     		.2byte	0x401
 2383 04ee 77000000 		.4byte	0x77
 2384 04f2 02       		.uleb128 0x2
 2385 04f3 91       		.byte	0x91
 2386 04f4 5A       		.sleb128 -38
 2387 04f5 0C       		.uleb128 0xc
 2388 04f6 34050000 		.4byte	.LASF29
 2389 04fa 01       		.byte	0x1
 2390 04fb 0104     		.2byte	0x401
 2391 04fd 6B000000 		.4byte	0x6b
 2392 0501 02       		.uleb128 0x2
 2393 0502 91       		.byte	0x91
 2394 0503 00       		.sleb128 0
 2395 0504 0B       		.uleb128 0xb
 2396 0505 D5020000 		.4byte	.LASF52
 2397 0509 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 78


 2398 050a 0504     		.2byte	0x405
 2399 050c 6B000000 		.4byte	0x6b
 2400 0510 02       		.uleb128 0x2
 2401 0511 91       		.byte	0x91
 2402 0512 77       		.sleb128 -9
 2403 0513 0B       		.uleb128 0xb
 2404 0514 1D020000 		.4byte	.LASF53
 2405 0518 01       		.byte	0x1
 2406 0519 0604     		.2byte	0x406
 2407 051b 6B000000 		.4byte	0x6b
 2408 051f 02       		.uleb128 0x2
 2409 0520 91       		.byte	0x91
 2410 0521 76       		.sleb128 -10
 2411 0522 0B       		.uleb128 0xb
 2412 0523 36010000 		.4byte	.LASF54
 2413 0527 01       		.byte	0x1
 2414 0528 0E04     		.2byte	0x40e
 2415 052a 71050000 		.4byte	0x571
 2416 052e 05       		.uleb128 0x5
 2417 052f 03       		.byte	0x3
 2418 0530 04000000 		.4byte	CapSense_1_centroid.5138
 2419 0534 0B       		.uleb128 0xb
 2420 0535 45020000 		.4byte	.LASF55
 2421 0539 01       		.byte	0x1
 2422 053a 1004     		.2byte	0x410
 2423 053c 6B000000 		.4byte	0x6b
 2424 0540 02       		.uleb128 0x2
 2425 0541 91       		.byte	0x91
 2426 0542 67       		.sleb128 -25
 2427 0543 0B       		.uleb128 0xb
 2428 0544 76010000 		.4byte	.LASF56
 2429 0548 01       		.byte	0x1
 2430 0549 1104     		.2byte	0x411
 2431 054b 83000000 		.4byte	0x83
 2432 054f 02       		.uleb128 0x2
 2433 0550 91       		.byte	0x91
 2434 0551 6C       		.sleb128 -20
 2435 0552 0B       		.uleb128 0xb
 2436 0553 99010000 		.4byte	.LASF57
 2437 0557 01       		.byte	0x1
 2438 0558 1204     		.2byte	0x412
 2439 055a 9B000000 		.4byte	0x9b
 2440 055e 02       		.uleb128 0x2
 2441 055f 91       		.byte	0x91
 2442 0560 68       		.sleb128 -24
 2443 0561 0B       		.uleb128 0xb
 2444 0562 25020000 		.4byte	.LASF49
 2445 0566 01       		.byte	0x1
 2446 0567 1304     		.2byte	0x413
 2447 0569 99040000 		.4byte	0x499
 2448 056d 02       		.uleb128 0x2
 2449 056e 91       		.byte	0x91
 2450 056f 70       		.sleb128 -16
 2451 0570 00       		.byte	0
 2452 0571 11       		.uleb128 0x11
 2453 0572 6B000000 		.4byte	0x6b
 2454 0576 81050000 		.4byte	0x581
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 79


 2455 057a 12       		.uleb128 0x12
 2456 057b BC000000 		.4byte	0xbc
 2457 057f 02       		.byte	0x2
 2458 0580 00       		.byte	0
 2459 0581 0E       		.uleb128 0xe
 2460 0582 F9050000 		.4byte	.LASF58
 2461 0586 01       		.byte	0x1
 2462 0587 CD04     		.2byte	0x4cd
 2463 0589 77000000 		.4byte	0x77
 2464 058d 00000000 		.4byte	.LFB13
 2465 0591 F0000000 		.4byte	.LFE13-.LFB13
 2466 0595 01       		.uleb128 0x1
 2467 0596 9C       		.byte	0x9c
 2468 0597 14060000 		.4byte	0x614
 2469 059b 0C       		.uleb128 0xc
 2470 059c 4D050000 		.4byte	.LASF22
 2471 05a0 01       		.byte	0x1
 2472 05a1 CD04     		.2byte	0x4cd
 2473 05a3 6B000000 		.4byte	0x6b
 2474 05a7 02       		.uleb128 0x2
 2475 05a8 91       		.byte	0x91
 2476 05a9 67       		.sleb128 -25
 2477 05aa 0B       		.uleb128 0xb
 2478 05ab 19030000 		.4byte	.LASF59
 2479 05af 01       		.byte	0x1
 2480 05b0 D404     		.2byte	0x4d4
 2481 05b2 6B000000 		.4byte	0x6b
 2482 05b6 02       		.uleb128 0x2
 2483 05b7 91       		.byte	0x91
 2484 05b8 68       		.sleb128 -24
 2485 05b9 0B       		.uleb128 0xb
 2486 05ba 92000000 		.4byte	.LASF60
 2487 05be 01       		.byte	0x1
 2488 05bf D504     		.2byte	0x4d5
 2489 05c1 6B000000 		.4byte	0x6b
 2490 05c5 02       		.uleb128 0x2
 2491 05c6 91       		.byte	0x91
 2492 05c7 6D       		.sleb128 -19
 2493 05c8 0B       		.uleb128 0xb
 2494 05c9 3B030000 		.4byte	.LASF61
 2495 05cd 01       		.byte	0x1
 2496 05ce D604     		.2byte	0x4d6
 2497 05d0 6B000000 		.4byte	0x6b
 2498 05d4 02       		.uleb128 0x2
 2499 05d5 91       		.byte	0x91
 2500 05d6 6C       		.sleb128 -20
 2501 05d7 0B       		.uleb128 0xb
 2502 05d8 C6050000 		.4byte	.LASF47
 2503 05dc 01       		.byte	0x1
 2504 05dd E004     		.2byte	0x4e0
 2505 05df 6B000000 		.4byte	0x6b
 2506 05e3 02       		.uleb128 0x2
 2507 05e4 91       		.byte	0x91
 2508 05e5 69       		.sleb128 -23
 2509 05e6 0B       		.uleb128 0xb
 2510 05e7 45020000 		.4byte	.LASF55
 2511 05eb 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 80


 2512 05ec E104     		.2byte	0x4e1
 2513 05ee 77000000 		.4byte	0x77
 2514 05f2 02       		.uleb128 0x2
 2515 05f3 91       		.byte	0x91
 2516 05f4 6E       		.sleb128 -18
 2517 05f5 0B       		.uleb128 0xb
 2518 05f6 13060000 		.4byte	.LASF45
 2519 05fa 01       		.byte	0x1
 2520 05fb E204     		.2byte	0x4e2
 2521 05fd 6B000000 		.4byte	0x6b
 2522 0601 02       		.uleb128 0x2
 2523 0602 91       		.byte	0x91
 2524 0603 6B       		.sleb128 -21
 2525 0604 0B       		.uleb128 0xb
 2526 0605 00000000 		.4byte	.LASF46
 2527 0609 01       		.byte	0x1
 2528 060a E304     		.2byte	0x4e3
 2529 060c 6B000000 		.4byte	0x6b
 2530 0610 02       		.uleb128 0x2
 2531 0611 91       		.byte	0x91
 2532 0612 6A       		.sleb128 -22
 2533 0613 00       		.byte	0
 2534 0614 0D       		.uleb128 0xd
 2535 0615 65060000 		.4byte	.LASF62
 2536 0619 01       		.byte	0x1
 2537 061a AB07     		.2byte	0x7ab
 2538 061c 77000000 		.4byte	0x77
 2539 0620 00000000 		.4byte	.LFB14
 2540 0624 38000000 		.4byte	.LFE14-.LFB14
 2541 0628 01       		.uleb128 0x1
 2542 0629 9C       		.byte	0x9c
 2543 062a 5A060000 		.4byte	0x65a
 2544 062e 13       		.uleb128 0x13
 2545 062f 783100   		.ascii	"x1\000"
 2546 0632 01       		.byte	0x1
 2547 0633 AB07     		.2byte	0x7ab
 2548 0635 77000000 		.4byte	0x77
 2549 0639 02       		.uleb128 0x2
 2550 063a 91       		.byte	0x91
 2551 063b 6E       		.sleb128 -18
 2552 063c 13       		.uleb128 0x13
 2553 063d 783200   		.ascii	"x2\000"
 2554 0640 01       		.byte	0x1
 2555 0641 AB07     		.2byte	0x7ab
 2556 0643 77000000 		.4byte	0x77
 2557 0647 02       		.uleb128 0x2
 2558 0648 91       		.byte	0x91
 2559 0649 6C       		.sleb128 -20
 2560 064a 0A       		.uleb128 0xa
 2561 064b 746D7000 		.ascii	"tmp\000"
 2562 064f 01       		.byte	0x1
 2563 0650 AE07     		.2byte	0x7ae
 2564 0652 83000000 		.4byte	0x83
 2565 0656 02       		.uleb128 0x2
 2566 0657 91       		.byte	0x91
 2567 0658 74       		.sleb128 -12
 2568 0659 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 81


 2569 065a 11       		.uleb128 0x11
 2570 065b 77000000 		.4byte	0x77
 2571 065f 6A060000 		.4byte	0x66a
 2572 0663 12       		.uleb128 0x12
 2573 0664 BC000000 		.4byte	0xbc
 2574 0668 15       		.byte	0x15
 2575 0669 00       		.byte	0
 2576 066a 14       		.uleb128 0x14
 2577 066b EE000000 		.4byte	.LASF63
 2578 066f 03       		.byte	0x3
 2579 0670 CE02     		.2byte	0x2ce
 2580 0672 5A060000 		.4byte	0x65a
 2581 0676 15       		.uleb128 0x15
 2582 0677 A5040000 		.4byte	.LASF64
 2583 067b 01       		.byte	0x1
 2584 067c 21       		.byte	0x21
 2585 067d 5A060000 		.4byte	0x65a
 2586 0681 05       		.uleb128 0x5
 2587 0682 03       		.byte	0x3
 2588 0683 00000000 		.4byte	CapSense_1_rawFilterData1
 2589 0687 14       		.uleb128 0x14
 2590 0688 FD020000 		.4byte	.LASF65
 2591 068c 04       		.byte	0x4
 2592 068d 0601     		.2byte	0x106
 2593 068f 71050000 		.4byte	0x571
 2594 0693 11       		.uleb128 0x11
 2595 0694 6B000000 		.4byte	0x6b
 2596 0698 A3060000 		.4byte	0x6a3
 2597 069c 12       		.uleb128 0x12
 2598 069d BC000000 		.4byte	0xbc
 2599 06a1 15       		.byte	0x15
 2600 06a2 00       		.byte	0
 2601 06a3 14       		.uleb128 0x14
 2602 06a4 9B030000 		.4byte	.LASF66
 2603 06a8 04       		.byte	0x4
 2604 06a9 0701     		.2byte	0x107
 2605 06ab AF060000 		.4byte	0x6af
 2606 06af 16       		.uleb128 0x16
 2607 06b0 93060000 		.4byte	0x693
 2608 06b4 15       		.uleb128 0x15
 2609 06b5 4B060000 		.4byte	.LASF67
 2610 06b9 01       		.byte	0x1
 2611 06ba 29       		.byte	0x29
 2612 06bb 5A060000 		.4byte	0x65a
 2613 06bf 05       		.uleb128 0x5
 2614 06c0 03       		.byte	0x3
 2615 06c1 00000000 		.4byte	CapSense_1_sensorBaseline
 2616 06c5 15       		.uleb128 0x15
 2617 06c6 1A060000 		.4byte	.LASF68
 2618 06ca 01       		.byte	0x1
 2619 06cb 2A       		.byte	0x2a
 2620 06cc 93060000 		.4byte	0x693
 2621 06d0 05       		.uleb128 0x5
 2622 06d1 03       		.byte	0x3
 2623 06d2 00000000 		.4byte	CapSense_1_sensorBaselineLow
 2624 06d6 15       		.uleb128 0x15
 2625 06d7 7B050000 		.4byte	.LASF69
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 82


 2626 06db 01       		.byte	0x1
 2627 06dc 2B       		.byte	0x2b
 2628 06dd 93060000 		.4byte	0x693
 2629 06e1 05       		.uleb128 0x5
 2630 06e2 03       		.byte	0x3
 2631 06e3 00000000 		.4byte	CapSense_1_sensorSignal
 2632 06e7 15       		.uleb128 0x15
 2633 06e8 8D040000 		.4byte	.LASF70
 2634 06ec 01       		.byte	0x1
 2635 06ed 2C       		.byte	0x2c
 2636 06ee 71050000 		.4byte	0x571
 2637 06f2 05       		.uleb128 0x5
 2638 06f3 03       		.byte	0x3
 2639 06f4 00000000 		.4byte	CapSense_1_sensorOnMask
 2640 06f8 15       		.uleb128 0x15
 2641 06f9 64030000 		.4byte	.LASF71
 2642 06fd 01       		.byte	0x1
 2643 06fe 2E       		.byte	0x2e
 2644 06ff 93060000 		.4byte	0x693
 2645 0703 05       		.uleb128 0x5
 2646 0704 03       		.byte	0x3
 2647 0705 00000000 		.4byte	CapSense_1_lowBaselineResetCnt
 2648 0709 11       		.uleb128 0x11
 2649 070a 6B000000 		.4byte	0x6b
 2650 070e 19070000 		.4byte	0x719
 2651 0712 12       		.uleb128 0x12
 2652 0713 BC000000 		.4byte	0xbc
 2653 0717 03       		.byte	0x3
 2654 0718 00       		.byte	0
 2655 0719 15       		.uleb128 0x15
 2656 071a D9050000 		.4byte	.LASF72
 2657 071e 01       		.byte	0x1
 2658 071f 30       		.byte	0x30
 2659 0720 09070000 		.4byte	0x709
 2660 0724 05       		.uleb128 0x5
 2661 0725 03       		.byte	0x3
 2662 0726 00000000 		.4byte	CapSense_1_fingerThreshold
 2663 072a 15       		.uleb128 0x15
 2664 072b C0000000 		.4byte	.LASF73
 2665 072f 01       		.byte	0x1
 2666 0730 34       		.byte	0x34
 2667 0731 09070000 		.4byte	0x709
 2668 0735 05       		.uleb128 0x5
 2669 0736 03       		.byte	0x3
 2670 0737 00000000 		.4byte	CapSense_1_noiseThreshold
 2671 073b 15       		.uleb128 0x15
 2672 073c EF010000 		.4byte	.LASF74
 2673 0740 01       		.byte	0x1
 2674 0741 38       		.byte	0x38
 2675 0742 09070000 		.4byte	0x709
 2676 0746 05       		.uleb128 0x5
 2677 0747 03       		.byte	0x3
 2678 0748 00000000 		.4byte	CapSense_1_hysteresis
 2679 074c 15       		.uleb128 0x15
 2680 074d DA000000 		.4byte	.LASF75
 2681 0751 01       		.byte	0x1
 2682 0752 3C       		.byte	0x3c
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 83


 2683 0753 09070000 		.4byte	0x709
 2684 0757 05       		.uleb128 0x5
 2685 0758 03       		.byte	0x3
 2686 0759 00000000 		.4byte	CapSense_1_debounce
 2687 075d 15       		.uleb128 0x15
 2688 075e AB050000 		.4byte	.LASF76
 2689 0762 01       		.byte	0x1
 2690 0763 40       		.byte	0x40
 2691 0764 09070000 		.4byte	0x709
 2692 0768 05       		.uleb128 0x5
 2693 0769 03       		.byte	0x3
 2694 076a 00000000 		.4byte	CapSense_1_debounceCounter
 2695 076e 15       		.uleb128 0x15
 2696 076f 05020000 		.4byte	.LASF77
 2697 0773 01       		.byte	0x1
 2698 0774 44       		.byte	0x44
 2699 0775 7F070000 		.4byte	0x77f
 2700 0779 05       		.uleb128 0x5
 2701 077a 03       		.byte	0x3
 2702 077b 00000000 		.4byte	CapSense_1_rawDataIndex
 2703 077f 16       		.uleb128 0x16
 2704 0780 09070000 		.4byte	0x709
 2705 0784 15       		.uleb128 0x15
 2706 0785 DD020000 		.4byte	.LASF78
 2707 0789 01       		.byte	0x1
 2708 078a 4C       		.byte	0x4c
 2709 078b 95070000 		.4byte	0x795
 2710 078f 05       		.uleb128 0x5
 2711 0790 03       		.byte	0x3
 2712 0791 00000000 		.4byte	CapSense_1_numberOfSensors
 2713 0795 16       		.uleb128 0x16
 2714 0796 09070000 		.4byte	0x709
 2715 079a 11       		.uleb128 0x11
 2716 079b 77000000 		.4byte	0x77
 2717 079f AA070000 		.4byte	0x7aa
 2718 07a3 12       		.uleb128 0x12
 2719 07a4 BC000000 		.4byte	0xbc
 2720 07a8 00       		.byte	0
 2721 07a9 00       		.byte	0
 2722 07aa 15       		.uleb128 0x15
 2723 07ab 93050000 		.4byte	.LASF79
 2724 07af 01       		.byte	0x1
 2725 07b0 54       		.byte	0x54
 2726 07b1 BB070000 		.4byte	0x7bb
 2727 07b5 05       		.uleb128 0x5
 2728 07b6 03       		.byte	0x3
 2729 07b7 00000000 		.4byte	CapSense_1_centroidMult
 2730 07bb 16       		.uleb128 0x16
 2731 07bc 9A070000 		.4byte	0x79a
 2732 07c0 11       		.uleb128 0x11
 2733 07c1 6B000000 		.4byte	0x6b
 2734 07c5 D0070000 		.4byte	0x7d0
 2735 07c9 12       		.uleb128 0x12
 2736 07ca BC000000 		.4byte	0xbc
 2737 07ce 00       		.byte	0
 2738 07cf 00       		.byte	0
 2739 07d0 15       		.uleb128 0x15
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 84


 2740 07d1 83060000 		.4byte	.LASF80
 2741 07d5 01       		.byte	0x1
 2742 07d6 58       		.byte	0x58
 2743 07d7 E1070000 		.4byte	0x7e1
 2744 07db 05       		.uleb128 0x5
 2745 07dc 03       		.byte	0x3
 2746 07dd 00000000 		.4byte	CapSense_1_posFiltersMask
 2747 07e1 16       		.uleb128 0x16
 2748 07e2 C0070000 		.4byte	0x7c0
 2749 07e6 15       		.uleb128 0x15
 2750 07e7 4A030000 		.4byte	.LASF81
 2751 07eb 01       		.byte	0x1
 2752 07ec 5C       		.byte	0x5c
 2753 07ed 71050000 		.4byte	0x571
 2754 07f1 05       		.uleb128 0x5
 2755 07f2 03       		.byte	0x3
 2756 07f3 00000000 		.4byte	CapSense_1_posFiltersData
 2757 07f7 00       		.byte	0
 2758              		.section	.debug_abbrev,"",%progbits
 2759              	.Ldebug_abbrev0:
 2760 0000 01       		.uleb128 0x1
 2761 0001 11       		.uleb128 0x11
 2762 0002 01       		.byte	0x1
 2763 0003 25       		.uleb128 0x25
 2764 0004 0E       		.uleb128 0xe
 2765 0005 13       		.uleb128 0x13
 2766 0006 0B       		.uleb128 0xb
 2767 0007 03       		.uleb128 0x3
 2768 0008 0E       		.uleb128 0xe
 2769 0009 1B       		.uleb128 0x1b
 2770 000a 0E       		.uleb128 0xe
 2771 000b 55       		.uleb128 0x55
 2772 000c 17       		.uleb128 0x17
 2773 000d 11       		.uleb128 0x11
 2774 000e 01       		.uleb128 0x1
 2775 000f 10       		.uleb128 0x10
 2776 0010 17       		.uleb128 0x17
 2777 0011 00       		.byte	0
 2778 0012 00       		.byte	0
 2779 0013 02       		.uleb128 0x2
 2780 0014 24       		.uleb128 0x24
 2781 0015 00       		.byte	0
 2782 0016 0B       		.uleb128 0xb
 2783 0017 0B       		.uleb128 0xb
 2784 0018 3E       		.uleb128 0x3e
 2785 0019 0B       		.uleb128 0xb
 2786 001a 03       		.uleb128 0x3
 2787 001b 0E       		.uleb128 0xe
 2788 001c 00       		.byte	0
 2789 001d 00       		.byte	0
 2790 001e 03       		.uleb128 0x3
 2791 001f 24       		.uleb128 0x24
 2792 0020 00       		.byte	0
 2793 0021 0B       		.uleb128 0xb
 2794 0022 0B       		.uleb128 0xb
 2795 0023 3E       		.uleb128 0x3e
 2796 0024 0B       		.uleb128 0xb
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 85


 2797 0025 03       		.uleb128 0x3
 2798 0026 08       		.uleb128 0x8
 2799 0027 00       		.byte	0
 2800 0028 00       		.byte	0
 2801 0029 04       		.uleb128 0x4
 2802 002a 16       		.uleb128 0x16
 2803 002b 00       		.byte	0
 2804 002c 03       		.uleb128 0x3
 2805 002d 0E       		.uleb128 0xe
 2806 002e 3A       		.uleb128 0x3a
 2807 002f 0B       		.uleb128 0xb
 2808 0030 3B       		.uleb128 0x3b
 2809 0031 05       		.uleb128 0x5
 2810 0032 49       		.uleb128 0x49
 2811 0033 13       		.uleb128 0x13
 2812 0034 00       		.byte	0
 2813 0035 00       		.byte	0
 2814 0036 05       		.uleb128 0x5
 2815 0037 2E       		.uleb128 0x2e
 2816 0038 01       		.byte	0x1
 2817 0039 3F       		.uleb128 0x3f
 2818 003a 19       		.uleb128 0x19
 2819 003b 03       		.uleb128 0x3
 2820 003c 0E       		.uleb128 0xe
 2821 003d 3A       		.uleb128 0x3a
 2822 003e 0B       		.uleb128 0xb
 2823 003f 3B       		.uleb128 0x3b
 2824 0040 0B       		.uleb128 0xb
 2825 0041 27       		.uleb128 0x27
 2826 0042 19       		.uleb128 0x19
 2827 0043 11       		.uleb128 0x11
 2828 0044 01       		.uleb128 0x1
 2829 0045 12       		.uleb128 0x12
 2830 0046 06       		.uleb128 0x6
 2831 0047 40       		.uleb128 0x40
 2832 0048 18       		.uleb128 0x18
 2833 0049 9742     		.uleb128 0x2117
 2834 004b 19       		.uleb128 0x19
 2835 004c 01       		.uleb128 0x1
 2836 004d 13       		.uleb128 0x13
 2837 004e 00       		.byte	0
 2838 004f 00       		.byte	0
 2839 0050 06       		.uleb128 0x6
 2840 0051 05       		.uleb128 0x5
 2841 0052 00       		.byte	0
 2842 0053 03       		.uleb128 0x3
 2843 0054 0E       		.uleb128 0xe
 2844 0055 3A       		.uleb128 0x3a
 2845 0056 0B       		.uleb128 0xb
 2846 0057 3B       		.uleb128 0x3b
 2847 0058 0B       		.uleb128 0xb
 2848 0059 49       		.uleb128 0x49
 2849 005a 13       		.uleb128 0x13
 2850 005b 02       		.uleb128 0x2
 2851 005c 18       		.uleb128 0x18
 2852 005d 00       		.byte	0
 2853 005e 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 86


 2854 005f 07       		.uleb128 0x7
 2855 0060 34       		.uleb128 0x34
 2856 0061 00       		.byte	0
 2857 0062 03       		.uleb128 0x3
 2858 0063 0E       		.uleb128 0xe
 2859 0064 3A       		.uleb128 0x3a
 2860 0065 0B       		.uleb128 0xb
 2861 0066 3B       		.uleb128 0x3b
 2862 0067 0B       		.uleb128 0xb
 2863 0068 49       		.uleb128 0x49
 2864 0069 13       		.uleb128 0x13
 2865 006a 02       		.uleb128 0x2
 2866 006b 18       		.uleb128 0x18
 2867 006c 00       		.byte	0
 2868 006d 00       		.byte	0
 2869 006e 08       		.uleb128 0x8
 2870 006f 2E       		.uleb128 0x2e
 2871 0070 01       		.byte	0x1
 2872 0071 3F       		.uleb128 0x3f
 2873 0072 19       		.uleb128 0x19
 2874 0073 03       		.uleb128 0x3
 2875 0074 0E       		.uleb128 0xe
 2876 0075 3A       		.uleb128 0x3a
 2877 0076 0B       		.uleb128 0xb
 2878 0077 3B       		.uleb128 0x3b
 2879 0078 0B       		.uleb128 0xb
 2880 0079 27       		.uleb128 0x27
 2881 007a 19       		.uleb128 0x19
 2882 007b 11       		.uleb128 0x11
 2883 007c 01       		.uleb128 0x1
 2884 007d 12       		.uleb128 0x12
 2885 007e 06       		.uleb128 0x6
 2886 007f 40       		.uleb128 0x40
 2887 0080 18       		.uleb128 0x18
 2888 0081 9642     		.uleb128 0x2116
 2889 0083 19       		.uleb128 0x19
 2890 0084 01       		.uleb128 0x1
 2891 0085 13       		.uleb128 0x13
 2892 0086 00       		.byte	0
 2893 0087 00       		.byte	0
 2894 0088 09       		.uleb128 0x9
 2895 0089 2E       		.uleb128 0x2e
 2896 008a 01       		.byte	0x1
 2897 008b 3F       		.uleb128 0x3f
 2898 008c 19       		.uleb128 0x19
 2899 008d 03       		.uleb128 0x3
 2900 008e 0E       		.uleb128 0xe
 2901 008f 3A       		.uleb128 0x3a
 2902 0090 0B       		.uleb128 0xb
 2903 0091 3B       		.uleb128 0x3b
 2904 0092 05       		.uleb128 0x5
 2905 0093 27       		.uleb128 0x27
 2906 0094 19       		.uleb128 0x19
 2907 0095 11       		.uleb128 0x11
 2908 0096 01       		.uleb128 0x1
 2909 0097 12       		.uleb128 0x12
 2910 0098 06       		.uleb128 0x6
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 87


 2911 0099 40       		.uleb128 0x40
 2912 009a 18       		.uleb128 0x18
 2913 009b 9642     		.uleb128 0x2116
 2914 009d 19       		.uleb128 0x19
 2915 009e 01       		.uleb128 0x1
 2916 009f 13       		.uleb128 0x13
 2917 00a0 00       		.byte	0
 2918 00a1 00       		.byte	0
 2919 00a2 0A       		.uleb128 0xa
 2920 00a3 34       		.uleb128 0x34
 2921 00a4 00       		.byte	0
 2922 00a5 03       		.uleb128 0x3
 2923 00a6 08       		.uleb128 0x8
 2924 00a7 3A       		.uleb128 0x3a
 2925 00a8 0B       		.uleb128 0xb
 2926 00a9 3B       		.uleb128 0x3b
 2927 00aa 05       		.uleb128 0x5
 2928 00ab 49       		.uleb128 0x49
 2929 00ac 13       		.uleb128 0x13
 2930 00ad 02       		.uleb128 0x2
 2931 00ae 18       		.uleb128 0x18
 2932 00af 00       		.byte	0
 2933 00b0 00       		.byte	0
 2934 00b1 0B       		.uleb128 0xb
 2935 00b2 34       		.uleb128 0x34
 2936 00b3 00       		.byte	0
 2937 00b4 03       		.uleb128 0x3
 2938 00b5 0E       		.uleb128 0xe
 2939 00b6 3A       		.uleb128 0x3a
 2940 00b7 0B       		.uleb128 0xb
 2941 00b8 3B       		.uleb128 0x3b
 2942 00b9 05       		.uleb128 0x5
 2943 00ba 49       		.uleb128 0x49
 2944 00bb 13       		.uleb128 0x13
 2945 00bc 02       		.uleb128 0x2
 2946 00bd 18       		.uleb128 0x18
 2947 00be 00       		.byte	0
 2948 00bf 00       		.byte	0
 2949 00c0 0C       		.uleb128 0xc
 2950 00c1 05       		.uleb128 0x5
 2951 00c2 00       		.byte	0
 2952 00c3 03       		.uleb128 0x3
 2953 00c4 0E       		.uleb128 0xe
 2954 00c5 3A       		.uleb128 0x3a
 2955 00c6 0B       		.uleb128 0xb
 2956 00c7 3B       		.uleb128 0x3b
 2957 00c8 05       		.uleb128 0x5
 2958 00c9 49       		.uleb128 0x49
 2959 00ca 13       		.uleb128 0x13
 2960 00cb 02       		.uleb128 0x2
 2961 00cc 18       		.uleb128 0x18
 2962 00cd 00       		.byte	0
 2963 00ce 00       		.byte	0
 2964 00cf 0D       		.uleb128 0xd
 2965 00d0 2E       		.uleb128 0x2e
 2966 00d1 01       		.byte	0x1
 2967 00d2 3F       		.uleb128 0x3f
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 88


 2968 00d3 19       		.uleb128 0x19
 2969 00d4 03       		.uleb128 0x3
 2970 00d5 0E       		.uleb128 0xe
 2971 00d6 3A       		.uleb128 0x3a
 2972 00d7 0B       		.uleb128 0xb
 2973 00d8 3B       		.uleb128 0x3b
 2974 00d9 05       		.uleb128 0x5
 2975 00da 27       		.uleb128 0x27
 2976 00db 19       		.uleb128 0x19
 2977 00dc 49       		.uleb128 0x49
 2978 00dd 13       		.uleb128 0x13
 2979 00de 11       		.uleb128 0x11
 2980 00df 01       		.uleb128 0x1
 2981 00e0 12       		.uleb128 0x12
 2982 00e1 06       		.uleb128 0x6
 2983 00e2 40       		.uleb128 0x40
 2984 00e3 18       		.uleb128 0x18
 2985 00e4 9742     		.uleb128 0x2117
 2986 00e6 19       		.uleb128 0x19
 2987 00e7 01       		.uleb128 0x1
 2988 00e8 13       		.uleb128 0x13
 2989 00e9 00       		.byte	0
 2990 00ea 00       		.byte	0
 2991 00eb 0E       		.uleb128 0xe
 2992 00ec 2E       		.uleb128 0x2e
 2993 00ed 01       		.byte	0x1
 2994 00ee 3F       		.uleb128 0x3f
 2995 00ef 19       		.uleb128 0x19
 2996 00f0 03       		.uleb128 0x3
 2997 00f1 0E       		.uleb128 0xe
 2998 00f2 3A       		.uleb128 0x3a
 2999 00f3 0B       		.uleb128 0xb
 3000 00f4 3B       		.uleb128 0x3b
 3001 00f5 05       		.uleb128 0x5
 3002 00f6 27       		.uleb128 0x27
 3003 00f7 19       		.uleb128 0x19
 3004 00f8 49       		.uleb128 0x49
 3005 00f9 13       		.uleb128 0x13
 3006 00fa 11       		.uleb128 0x11
 3007 00fb 01       		.uleb128 0x1
 3008 00fc 12       		.uleb128 0x12
 3009 00fd 06       		.uleb128 0x6
 3010 00fe 40       		.uleb128 0x40
 3011 00ff 18       		.uleb128 0x18
 3012 0100 9642     		.uleb128 0x2116
 3013 0102 19       		.uleb128 0x19
 3014 0103 01       		.uleb128 0x1
 3015 0104 13       		.uleb128 0x13
 3016 0105 00       		.byte	0
 3017 0106 00       		.byte	0
 3018 0107 0F       		.uleb128 0xf
 3019 0108 2E       		.uleb128 0x2e
 3020 0109 01       		.byte	0x1
 3021 010a 3F       		.uleb128 0x3f
 3022 010b 19       		.uleb128 0x19
 3023 010c 03       		.uleb128 0x3
 3024 010d 0E       		.uleb128 0xe
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 89


 3025 010e 3A       		.uleb128 0x3a
 3026 010f 0B       		.uleb128 0xb
 3027 0110 3B       		.uleb128 0x3b
 3028 0111 05       		.uleb128 0x5
 3029 0112 27       		.uleb128 0x27
 3030 0113 19       		.uleb128 0x19
 3031 0114 11       		.uleb128 0x11
 3032 0115 01       		.uleb128 0x1
 3033 0116 12       		.uleb128 0x12
 3034 0117 06       		.uleb128 0x6
 3035 0118 40       		.uleb128 0x40
 3036 0119 18       		.uleb128 0x18
 3037 011a 9742     		.uleb128 0x2117
 3038 011c 19       		.uleb128 0x19
 3039 011d 01       		.uleb128 0x1
 3040 011e 13       		.uleb128 0x13
 3041 011f 00       		.byte	0
 3042 0120 00       		.byte	0
 3043 0121 10       		.uleb128 0x10
 3044 0122 0F       		.uleb128 0xf
 3045 0123 00       		.byte	0
 3046 0124 0B       		.uleb128 0xb
 3047 0125 0B       		.uleb128 0xb
 3048 0126 49       		.uleb128 0x49
 3049 0127 13       		.uleb128 0x13
 3050 0128 00       		.byte	0
 3051 0129 00       		.byte	0
 3052 012a 11       		.uleb128 0x11
 3053 012b 01       		.uleb128 0x1
 3054 012c 01       		.byte	0x1
 3055 012d 49       		.uleb128 0x49
 3056 012e 13       		.uleb128 0x13
 3057 012f 01       		.uleb128 0x1
 3058 0130 13       		.uleb128 0x13
 3059 0131 00       		.byte	0
 3060 0132 00       		.byte	0
 3061 0133 12       		.uleb128 0x12
 3062 0134 21       		.uleb128 0x21
 3063 0135 00       		.byte	0
 3064 0136 49       		.uleb128 0x49
 3065 0137 13       		.uleb128 0x13
 3066 0138 2F       		.uleb128 0x2f
 3067 0139 0B       		.uleb128 0xb
 3068 013a 00       		.byte	0
 3069 013b 00       		.byte	0
 3070 013c 13       		.uleb128 0x13
 3071 013d 05       		.uleb128 0x5
 3072 013e 00       		.byte	0
 3073 013f 03       		.uleb128 0x3
 3074 0140 08       		.uleb128 0x8
 3075 0141 3A       		.uleb128 0x3a
 3076 0142 0B       		.uleb128 0xb
 3077 0143 3B       		.uleb128 0x3b
 3078 0144 05       		.uleb128 0x5
 3079 0145 49       		.uleb128 0x49
 3080 0146 13       		.uleb128 0x13
 3081 0147 02       		.uleb128 0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 90


 3082 0148 18       		.uleb128 0x18
 3083 0149 00       		.byte	0
 3084 014a 00       		.byte	0
 3085 014b 14       		.uleb128 0x14
 3086 014c 34       		.uleb128 0x34
 3087 014d 00       		.byte	0
 3088 014e 03       		.uleb128 0x3
 3089 014f 0E       		.uleb128 0xe
 3090 0150 3A       		.uleb128 0x3a
 3091 0151 0B       		.uleb128 0xb
 3092 0152 3B       		.uleb128 0x3b
 3093 0153 05       		.uleb128 0x5
 3094 0154 49       		.uleb128 0x49
 3095 0155 13       		.uleb128 0x13
 3096 0156 3F       		.uleb128 0x3f
 3097 0157 19       		.uleb128 0x19
 3098 0158 3C       		.uleb128 0x3c
 3099 0159 19       		.uleb128 0x19
 3100 015a 00       		.byte	0
 3101 015b 00       		.byte	0
 3102 015c 15       		.uleb128 0x15
 3103 015d 34       		.uleb128 0x34
 3104 015e 00       		.byte	0
 3105 015f 03       		.uleb128 0x3
 3106 0160 0E       		.uleb128 0xe
 3107 0161 3A       		.uleb128 0x3a
 3108 0162 0B       		.uleb128 0xb
 3109 0163 3B       		.uleb128 0x3b
 3110 0164 0B       		.uleb128 0xb
 3111 0165 49       		.uleb128 0x49
 3112 0166 13       		.uleb128 0x13
 3113 0167 3F       		.uleb128 0x3f
 3114 0168 19       		.uleb128 0x19
 3115 0169 02       		.uleb128 0x2
 3116 016a 18       		.uleb128 0x18
 3117 016b 00       		.byte	0
 3118 016c 00       		.byte	0
 3119 016d 16       		.uleb128 0x16
 3120 016e 26       		.uleb128 0x26
 3121 016f 00       		.byte	0
 3122 0170 49       		.uleb128 0x49
 3123 0171 13       		.uleb128 0x13
 3124 0172 00       		.byte	0
 3125 0173 00       		.byte	0
 3126 0174 00       		.byte	0
 3127              		.section	.debug_aranges,"",%progbits
 3128 0000 8C000000 		.4byte	0x8c
 3129 0004 0200     		.2byte	0x2
 3130 0006 00000000 		.4byte	.Ldebug_info0
 3131 000a 04       		.byte	0x4
 3132 000b 00       		.byte	0
 3133 000c 0000     		.2byte	0
 3134 000e 0000     		.2byte	0
 3135 0010 00000000 		.4byte	.LFB0
 3136 0014 80000000 		.4byte	.LFE0-.LFB0
 3137 0018 00000000 		.4byte	.LFB1
 3138 001c 2C000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 91


 3139 0020 00000000 		.4byte	.LFB2
 3140 0024 26000000 		.4byte	.LFE2-.LFB2
 3141 0028 00000000 		.4byte	.LFB3
 3142 002c 6C000000 		.4byte	.LFE3-.LFB3
 3143 0030 00000000 		.4byte	.LFB4
 3144 0034 7C010000 		.4byte	.LFE4-.LFB4
 3145 0038 00000000 		.4byte	.LFB5
 3146 003c 50000000 		.4byte	.LFE5-.LFB5
 3147 0040 00000000 		.4byte	.LFB6
 3148 0044 20010000 		.4byte	.LFE6-.LFB6
 3149 0048 00000000 		.4byte	.LFB7
 3150 004c 54000000 		.4byte	.LFE7-.LFB7
 3151 0050 00000000 		.4byte	.LFB8
 3152 0054 38000000 		.4byte	.LFE8-.LFB8
 3153 0058 00000000 		.4byte	.LFB9
 3154 005c 68000000 		.4byte	.LFE9-.LFB9
 3155 0060 00000000 		.4byte	.LFB10
 3156 0064 6C000000 		.4byte	.LFE10-.LFB10
 3157 0068 00000000 		.4byte	.LFB11
 3158 006c 74000000 		.4byte	.LFE11-.LFB11
 3159 0070 00000000 		.4byte	.LFB12
 3160 0074 54010000 		.4byte	.LFE12-.LFB12
 3161 0078 00000000 		.4byte	.LFB13
 3162 007c F0000000 		.4byte	.LFE13-.LFB13
 3163 0080 00000000 		.4byte	.LFB14
 3164 0084 38000000 		.4byte	.LFE14-.LFB14
 3165 0088 00000000 		.4byte	0
 3166 008c 00000000 		.4byte	0
 3167              		.section	.debug_ranges,"",%progbits
 3168              	.Ldebug_ranges0:
 3169 0000 00000000 		.4byte	.LFB0
 3170 0004 80000000 		.4byte	.LFE0
 3171 0008 00000000 		.4byte	.LFB1
 3172 000c 2C000000 		.4byte	.LFE1
 3173 0010 00000000 		.4byte	.LFB2
 3174 0014 26000000 		.4byte	.LFE2
 3175 0018 00000000 		.4byte	.LFB3
 3176 001c 6C000000 		.4byte	.LFE3
 3177 0020 00000000 		.4byte	.LFB4
 3178 0024 7C010000 		.4byte	.LFE4
 3179 0028 00000000 		.4byte	.LFB5
 3180 002c 50000000 		.4byte	.LFE5
 3181 0030 00000000 		.4byte	.LFB6
 3182 0034 20010000 		.4byte	.LFE6
 3183 0038 00000000 		.4byte	.LFB7
 3184 003c 54000000 		.4byte	.LFE7
 3185 0040 00000000 		.4byte	.LFB8
 3186 0044 38000000 		.4byte	.LFE8
 3187 0048 00000000 		.4byte	.LFB9
 3188 004c 68000000 		.4byte	.LFE9
 3189 0050 00000000 		.4byte	.LFB10
 3190 0054 6C000000 		.4byte	.LFE10
 3191 0058 00000000 		.4byte	.LFB11
 3192 005c 74000000 		.4byte	.LFE11
 3193 0060 00000000 		.4byte	.LFB12
 3194 0064 54010000 		.4byte	.LFE12
 3195 0068 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 92


 3196 006c F0000000 		.4byte	.LFE13
 3197 0070 00000000 		.4byte	.LFB14
 3198 0074 38000000 		.4byte	.LFE14
 3199 0078 00000000 		.4byte	0
 3200 007c 00000000 		.4byte	0
 3201              		.section	.debug_line,"",%progbits
 3202              	.Ldebug_line0:
 3203 0000 FD020000 		.section	.debug_str,"MS",%progbits,1
 3203      02007300 
 3203      00000201 
 3203      FB0E0D00 
 3203      01010101 
 3204              	.LASF46:
 3205 0000 636F756E 		.ascii	"count\000"
 3205      7400
 3206              	.LASF10:
 3207 0006 75696E74 		.ascii	"uint16\000"
 3207      313600
 3208              	.LASF28:
 3209 000d 66696C74 		.ascii	"filteredRawData\000"
 3209      65726564 
 3209      52617744 
 3209      61746100 
 3210              	.LASF33:
 3211 001d 66696E67 		.ascii	"fingerThreshold\000"
 3211      65725468 
 3211      72657368 
 3211      6F6C6400 
 3212              	.LASF21:
 3213 002d 43617053 		.ascii	"CapSense_1_InitializeAllBaselines\000"
 3213      656E7365 
 3213      5F315F49 
 3213      6E697469 
 3213      616C697A 
 3214              	.LASF18:
 3215 004f 43617053 		.ascii	"CapSense_1_BaseInit\000"
 3215      656E7365 
 3215      5F315F42 
 3215      61736549 
 3215      6E697400 
 3216              	.LASF7:
 3217 0063 6C6F6E67 		.ascii	"long long unsigned int\000"
 3217      206C6F6E 
 3217      6720756E 
 3217      7369676E 
 3217      65642069 
 3218              	.LASF42:
 3219 007a 43617053 		.ascii	"CapSense_1_EnableWidget\000"
 3219      656E7365 
 3219      5F315F45 
 3219      6E61626C 
 3219      65576964 
 3220              	.LASF60:
 3221 0092 66697273 		.ascii	"firstTimeIndex\000"
 3221      7454696D 
 3221      65496E64 
 3221      657800
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 93


 3222              	.LASF37:
 3223 00a1 43617053 		.ascii	"CapSense_1_CheckIsWidgetActive\000"
 3223      656E7365 
 3223      5F315F43 
 3223      6865636B 
 3223      49735769 
 3224              	.LASF73:
 3225 00c0 43617053 		.ascii	"CapSense_1_noiseThreshold\000"
 3225      656E7365 
 3225      5F315F6E 
 3225      6F697365 
 3225      54687265 
 3226              	.LASF75:
 3227 00da 43617053 		.ascii	"CapSense_1_debounce\000"
 3227      656E7365 
 3227      5F315F64 
 3227      65626F75 
 3227      6E636500 
 3228              	.LASF63:
 3229 00ee 43617053 		.ascii	"CapSense_1_sensorRaw\000"
 3229      656E7365 
 3229      5F315F73 
 3229      656E736F 
 3229      72526177 
 3230              	.LASF6:
 3231 0103 6C6F6E67 		.ascii	"long long int\000"
 3231      206C6F6E 
 3231      6720696E 
 3231      7400
 3232              	.LASF0:
 3233 0111 7369676E 		.ascii	"signed char\000"
 3233      65642063 
 3233      68617200 
 3234              	.LASF38:
 3235 011d 72617749 		.ascii	"rawIndex\000"
 3235      6E646578 
 3235      00
 3236              	.LASF39:
 3237 0126 6E756D62 		.ascii	"numberOfSensors\000"
 3237      65724F66 
 3237      53656E73 
 3237      6F727300 
 3238              	.LASF54:
 3239 0136 43617053 		.ascii	"CapSense_1_centroid\000"
 3239      656E7365 
 3239      5F315F63 
 3239      656E7472 
 3239      6F696400 
 3240              	.LASF13:
 3241 014a 696E7433 		.ascii	"int32\000"
 3241      3200
 3242              	.LASF40:
 3243 0150 73746174 		.ascii	"state\000"
 3243      6500
 3244              	.LASF44:
 3245 0156 43617053 		.ascii	"CapSense_1_FindMaximum\000"
 3245      656E7365 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 94


 3245      5F315F46 
 3245      696E644D 
 3245      6178696D 
 3246              	.LASF4:
 3247 016d 6C6F6E67 		.ascii	"long int\000"
 3247      20696E74 
 3247      00
 3248              	.LASF56:
 3249 0176 6E756D65 		.ascii	"numerator\000"
 3249      7261746F 
 3249      7200
 3250              	.LASF43:
 3251 0180 43617053 		.ascii	"CapSense_1_DisableWidget\000"
 3251      656E7365 
 3251      5F315F44 
 3251      69736162 
 3251      6C655769 
 3252              	.LASF57:
 3253 0199 64656E6F 		.ascii	"denominator\000"
 3253      6D696E61 
 3253      746F7200 
 3254              	.LASF9:
 3255 01a5 75696E74 		.ascii	"uint8\000"
 3255      3800
 3256              	.LASF15:
 3257 01ab 646F7562 		.ascii	"double\000"
 3257      6C6500
 3258              	.LASF83:
 3259 01b2 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\CapSense_1_CSHL.c\000"
 3259      6E657261 
 3259      7465645F 
 3259      536F7572 
 3259      63655C50 
 3260              	.LASF11:
 3261 01dd 75696E74 		.ascii	"uint32\000"
 3261      333200
 3262              	.LASF34:
 3263 01e4 68797374 		.ascii	"hysteresis\000"
 3263      65726573 
 3263      697300
 3264              	.LASF74:
 3265 01ef 43617053 		.ascii	"CapSense_1_hysteresis\000"
 3265      656E7365 
 3265      5F315F68 
 3265      79737465 
 3265      72657369 
 3266              	.LASF77:
 3267 0205 43617053 		.ascii	"CapSense_1_rawDataIndex\000"
 3267      656E7365 
 3267      5F315F72 
 3267      61774461 
 3267      7461496E 
 3268              	.LASF53:
 3269 021d 706F734E 		.ascii	"posNext\000"
 3269      65787400 
 3270              	.LASF49:
 3271 0225 73746172 		.ascii	"startOfSlider\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 95


 3271      744F6653 
 3271      6C696465 
 3271      7200
 3272              	.LASF48:
 3273 0233 74656D70 		.ascii	"temp\000"
 3273      00
 3274              	.LASF8:
 3275 0238 756E7369 		.ascii	"unsigned int\000"
 3275      676E6564 
 3275      20696E74 
 3275      00
 3276              	.LASF55:
 3277 0245 706F7369 		.ascii	"position\000"
 3277      74696F6E 
 3277      00
 3278              	.LASF5:
 3279 024e 6C6F6E67 		.ascii	"long unsigned int\000"
 3279      20756E73 
 3279      69676E65 
 3279      6420696E 
 3279      7400
 3280              	.LASF84:
 3281 0260 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\GitHub\\fre"
 3281      73657273 
 3281      5C4C756B 
 3281      61732043 
 3281      72657574 
 3282 028e 65445350 		.ascii	"eDSPPSoC-I2C\\PSoC5_SPI_Master_CapSense.cydsn\000"
 3282      50536F43 
 3282      2D493243 
 3282      5C50536F 
 3282      43355F53 
 3283              	.LASF3:
 3284 02bb 73686F72 		.ascii	"short unsigned int\000"
 3284      7420756E 
 3284      7369676E 
 3284      65642069 
 3284      6E7400
 3285              	.LASF20:
 3286 02ce 73656E73 		.ascii	"sensor\000"
 3286      6F7200
 3287              	.LASF52:
 3288 02d5 706F7350 		.ascii	"posPrev\000"
 3288      72657600 
 3289              	.LASF78:
 3290 02dd 43617053 		.ascii	"CapSense_1_numberOfSensors\000"
 3290      656E7365 
 3290      5F315F6E 
 3290      756D6265 
 3290      724F6653 
 3291              	.LASF26:
 3292 02f8 63616C63 		.ascii	"calc\000"
 3292      00
 3293              	.LASF65:
 3294 02fd 43617053 		.ascii	"CapSense_1_sensorEnableMask\000"
 3294      656E7365 
 3294      5F315F73 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 96


 3294      656E736F 
 3294      72456E61 
 3295              	.LASF59:
 3296 0319 706F7349 		.ascii	"posIndex\000"
 3296      6E646578 
 3296      00
 3297              	.LASF35:
 3298 0322 6465626F 		.ascii	"debounce\000"
 3298      756E6365 
 3298      00
 3299              	.LASF24:
 3300 032b 656E4D61 		.ascii	"enMask\000"
 3300      736B00
 3301              	.LASF17:
 3302 0332 73697A65 		.ascii	"sizetype\000"
 3302      74797065 
 3302      00
 3303              	.LASF61:
 3304 033b 706F7346 		.ascii	"posFiltersMask\000"
 3304      696C7465 
 3304      72734D61 
 3304      736B00
 3305              	.LASF81:
 3306 034a 43617053 		.ascii	"CapSense_1_posFiltersData\000"
 3306      656E7365 
 3306      5F315F70 
 3306      6F734669 
 3306      6C746572 
 3307              	.LASF71:
 3308 0364 43617053 		.ascii	"CapSense_1_lowBaselineResetCnt\000"
 3308      656E7365 
 3308      5F315F6C 
 3308      6F774261 
 3308      73656C69 
 3309              	.LASF50:
 3310 0383 43617053 		.ascii	"CapSense_1_CalcCentroid\000"
 3310      656E7365 
 3310      5F315F43 
 3310      616C6343 
 3310      656E7472 
 3311              	.LASF66:
 3312 039b 43617053 		.ascii	"CapSense_1_widgetNumber\000"
 3312      656E7365 
 3312      5F315F77 
 3312      69646765 
 3312      744E756D 
 3313              	.LASF19:
 3314 03b3 43617053 		.ascii	"CapSense_1_InitializeSensorBaseline\000"
 3314      656E7365 
 3314      5F315F49 
 3314      6E697469 
 3314      616C697A 
 3315              	.LASF82:
 3316 03d7 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3316      4320342E 
 3316      392E3320 
 3316      32303135 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 97


 3316      30333033 
 3317 040a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3317      20726576 
 3317      6973696F 
 3317      6E203232 
 3317      31323230 
 3318 043d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3318      66756E63 
 3318      74696F6E 
 3318      2D736563 
 3318      74696F6E 
 3319              	.LASF30:
 3320 0465 43617053 		.ascii	"CapSense_1_UpdateEnabledBaselines\000"
 3320      656E7365 
 3320      5F315F55 
 3320      70646174 
 3320      65456E61 
 3321              	.LASF14:
 3322 0487 666C6F61 		.ascii	"float\000"
 3322      7400
 3323              	.LASF70:
 3324 048d 43617053 		.ascii	"CapSense_1_sensorOnMask\000"
 3324      656E7365 
 3324      5F315F73 
 3324      656E736F 
 3324      724F6E4D 
 3325              	.LASF64:
 3326 04a5 43617053 		.ascii	"CapSense_1_rawFilterData1\000"
 3326      656E7365 
 3326      5F315F72 
 3326      61774669 
 3326      6C746572 
 3327              	.LASF36:
 3328 04bf 43617053 		.ascii	"CapSense_1_CheckIsSensorActive\000"
 3328      656E7365 
 3328      5F315F43 
 3328      6865636B 
 3328      49735365 
 3329              	.LASF41:
 3330 04de 43617053 		.ascii	"CapSense_1_CheckIsAnyWidgetActive\000"
 3330      656E7365 
 3330      5F315F43 
 3330      6865636B 
 3330      4973416E 
 3331              	.LASF1:
 3332 0500 756E7369 		.ascii	"unsigned char\000"
 3332      676E6564 
 3332      20636861 
 3332      7200
 3333              	.LASF23:
 3334 050e 43617053 		.ascii	"CapSense_1_InitializeEnabledBaselines\000"
 3334      656E7365 
 3334      5F315F49 
 3334      6E697469 
 3334      616C697A 
 3335              	.LASF29:
 3336 0534 6E6F6973 		.ascii	"noiseThreshold\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 98


 3336      65546872 
 3336      6573686F 
 3336      6C6400
 3337              	.LASF2:
 3338 0543 73686F72 		.ascii	"short int\000"
 3338      7420696E 
 3338      7400
 3339              	.LASF22:
 3340 054d 77696467 		.ascii	"widget\000"
 3340      657400
 3341              	.LASF32:
 3342 0554 6F6E4D61 		.ascii	"onMask\000"
 3342      736B00
 3343              	.LASF25:
 3344 055b 43617053 		.ascii	"CapSense_1_UpdateSensorBaseline\000"
 3344      656E7365 
 3344      5F315F55 
 3344      70646174 
 3344      6553656E 
 3345              	.LASF69:
 3346 057b 43617053 		.ascii	"CapSense_1_sensorSignal\000"
 3346      656E7365 
 3346      5F315F73 
 3346      656E736F 
 3346      72536967 
 3347              	.LASF79:
 3348 0593 43617053 		.ascii	"CapSense_1_centroidMult\000"
 3348      656E7365 
 3348      5F315F63 
 3348      656E7472 
 3348      6F69644D 
 3349              	.LASF76:
 3350 05ab 43617053 		.ascii	"CapSense_1_debounceCounter\000"
 3350      656E7365 
 3350      5F315F64 
 3350      65626F75 
 3350      6E636543 
 3351              	.LASF47:
 3352 05c6 6D617869 		.ascii	"maximum\000"
 3352      6D756D00 
 3353              	.LASF51:
 3354 05ce 7265736F 		.ascii	"resolution\000"
 3354      6C757469 
 3354      6F6E00
 3355              	.LASF72:
 3356 05d9 43617053 		.ascii	"CapSense_1_fingerThreshold\000"
 3356      656E7365 
 3356      5F315F66 
 3356      696E6765 
 3356      72546872 
 3357              	.LASF16:
 3358 05f4 63686172 		.ascii	"char\000"
 3358      00
 3359              	.LASF58:
 3360 05f9 43617053 		.ascii	"CapSense_1_GetCentroidPos\000"
 3360      656E7365 
 3360      5F315F47 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccTi8KiV.s 			page 99


 3360      65744365 
 3360      6E74726F 
 3361              	.LASF45:
 3362 0613 6F666673 		.ascii	"offset\000"
 3362      657400
 3363              	.LASF68:
 3364 061a 43617053 		.ascii	"CapSense_1_sensorBaselineLow\000"
 3364      656E7365 
 3364      5F315F73 
 3364      656E736F 
 3364      72426173 
 3365              	.LASF31:
 3366 0637 6465626F 		.ascii	"debounceIndex\000"
 3366      756E6365 
 3366      496E6465 
 3366      7800
 3367              	.LASF12:
 3368 0645 696E7431 		.ascii	"int16\000"
 3368      3600
 3369              	.LASF67:
 3370 064b 43617053 		.ascii	"CapSense_1_sensorBaseline\000"
 3370      656E7365 
 3370      5F315F73 
 3370      656E736F 
 3370      72426173 
 3371              	.LASF62:
 3372 0665 43617053 		.ascii	"CapSense_1_IIR4Filter\000"
 3372      656E7365 
 3372      5F315F49 
 3372      49523446 
 3372      696C7465 
 3373              	.LASF27:
 3374 067b 74656D70 		.ascii	"tempRaw\000"
 3374      52617700 
 3375              	.LASF80:
 3376 0683 43617053 		.ascii	"CapSense_1_posFiltersMask\000"
 3376      656E7365 
 3376      5F315F70 
 3376      6F734669 
 3376      6C746572 
 3377              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
