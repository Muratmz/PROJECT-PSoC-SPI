ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"SPIM.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	SPIM_txBuffer,48,4
  19              		.comm	SPIM_txBufferFull,1,1
  20              		.comm	SPIM_txBufferRead,1,1
  21              		.comm	SPIM_txBufferWrite,1,1
  22              		.comm	SPIM_rxBuffer,48,4
  23              		.comm	SPIM_rxBufferFull,1,1
  24              		.comm	SPIM_rxBufferRead,1,1
  25              		.comm	SPIM_rxBufferWrite,1,1
  26              		.global	SPIM_initVar
  27              		.bss
  28              		.type	SPIM_initVar, %object
  29              		.size	SPIM_initVar, 1
  30              	SPIM_initVar:
  31 0000 00       		.space	1
  32              		.comm	SPIM_swStatusTx,1,1
  33              		.comm	SPIM_swStatusRx,1,1
  34              		.section	.text.SPIM_Init,"ax",%progbits
  35              		.align	2
  36              		.global	SPIM_Init
  37              		.thumb
  38              		.thumb_func
  39              		.type	SPIM_Init, %function
  40              	SPIM_Init:
  41              	.LFB0:
  42              		.file 1 ".\\Generated_Source\\PSoC5\\SPIM.c"
   1:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/SPIM.c **** * File Name: SPIM.c
   3:.\Generated_Source\PSoC5/SPIM.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/SPIM.c **** *
   5:.\Generated_Source\PSoC5/SPIM.c **** * Description:
   6:.\Generated_Source\PSoC5/SPIM.c **** *  This file provides all API functionality of the SPI Master component.
   7:.\Generated_Source\PSoC5/SPIM.c **** *
   8:.\Generated_Source\PSoC5/SPIM.c **** * Note:
   9:.\Generated_Source\PSoC5/SPIM.c **** *  None.
  10:.\Generated_Source\PSoC5/SPIM.c **** *
  11:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/SPIM.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/SPIM.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/SPIM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/SPIM.c **** * the software package with which this file was provided.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 2


  16:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/SPIM.c **** 
  18:.\Generated_Source\PSoC5/SPIM.c **** #include "SPIM_PVT.h"
  19:.\Generated_Source\PSoC5/SPIM.c **** 
  20:.\Generated_Source\PSoC5/SPIM.c **** #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  21:.\Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBuffer[SPIM_TX_BUFFER_SIZE];
  22:.\Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBufferFull;
  23:.\Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBufferRead;
  24:.\Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBufferWrite;
  25:.\Generated_Source\PSoC5/SPIM.c **** #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  26:.\Generated_Source\PSoC5/SPIM.c **** 
  27:.\Generated_Source\PSoC5/SPIM.c **** #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  28:.\Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE];
  29:.\Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBufferFull;
  30:.\Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBufferRead;
  31:.\Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBufferWrite;
  32:.\Generated_Source\PSoC5/SPIM.c **** #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  33:.\Generated_Source\PSoC5/SPIM.c **** 
  34:.\Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_initVar = 0u;
  35:.\Generated_Source\PSoC5/SPIM.c **** 
  36:.\Generated_Source\PSoC5/SPIM.c **** volatile uint8 SPIM_swStatusTx;
  37:.\Generated_Source\PSoC5/SPIM.c **** volatile uint8 SPIM_swStatusRx;
  38:.\Generated_Source\PSoC5/SPIM.c **** 
  39:.\Generated_Source\PSoC5/SPIM.c **** 
  40:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
  41:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Init
  42:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
  43:.\Generated_Source\PSoC5/SPIM.c **** *
  44:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
  45:.\Generated_Source\PSoC5/SPIM.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:.\Generated_Source\PSoC5/SPIM.c **** *
  47:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
  48:.\Generated_Source\PSoC5/SPIM.c **** *  None.
  49:.\Generated_Source\PSoC5/SPIM.c **** *
  50:.\Generated_Source\PSoC5/SPIM.c **** * Return:
  51:.\Generated_Source\PSoC5/SPIM.c **** *  None.
  52:.\Generated_Source\PSoC5/SPIM.c **** *
  53:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
  54:.\Generated_Source\PSoC5/SPIM.c **** *  When this function is called it initializes all of the necessary parameters
  55:.\Generated_Source\PSoC5/SPIM.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:.\Generated_Source\PSoC5/SPIM.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:.\Generated_Source\PSoC5/SPIM.c **** *  clearing the FIFO and Status Register.
  58:.\Generated_Source\PSoC5/SPIM.c **** *
  59:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
  60:.\Generated_Source\PSoC5/SPIM.c **** *  No.
  61:.\Generated_Source\PSoC5/SPIM.c **** *
  62:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_Init(void) 
  64:.\Generated_Source\PSoC5/SPIM.c **** {
  43              		.loc 1 64 0
  44              		.cfi_startproc
  45              		@ args = 0, pretend = 0, frame = 0
  46              		@ frame_needed = 1, uses_anonymous_args = 0
  47 0000 80B5     		push	{r7, lr}
  48              		.cfi_def_cfa_offset 8
  49              		.cfi_offset 7, -8
  50              		.cfi_offset 14, -4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 3


  51 0002 00AF     		add	r7, sp, #0
  52              		.cfi_def_cfa_register 7
  65:.\Generated_Source\PSoC5/SPIM.c ****     /* Initialize the Bit counter */
  66:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_COUNTER_PERIOD_REG = SPIM_BITCTR_INIT;
  53              		.loc 1 66 0
  54 0004 1B4B     		ldr	r3, .L2
  55 0006 0F22     		movs	r2, #15
  56 0008 1A70     		strb	r2, [r3]
  67:.\Generated_Source\PSoC5/SPIM.c **** 
  68:.\Generated_Source\PSoC5/SPIM.c ****     /* Init TX ISR  */
  69:.\Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
  70:.\Generated_Source\PSoC5/SPIM.c ****         CyIntDisable         (SPIM_TX_ISR_NUMBER);
  57              		.loc 1 70 0
  58 000a 1B4B     		ldr	r3, .L2+4
  59 000c 0422     		movs	r2, #4
  60 000e 1A60     		str	r2, [r3]
  71:.\Generated_Source\PSoC5/SPIM.c ****         CyIntSetPriority     (SPIM_TX_ISR_NUMBER,  SPIM_TX_ISR_PRIORITY);
  61              		.loc 1 71 0
  62 0010 0220     		movs	r0, #2
  63 0012 0721     		movs	r1, #7
  64 0014 FFF7FEFF 		bl	CyIntSetPriority
  72:.\Generated_Source\PSoC5/SPIM.c ****         (void) CyIntSetVector(SPIM_TX_ISR_NUMBER, &SPIM_TX_ISR);
  65              		.loc 1 72 0
  66 0018 0220     		movs	r0, #2
  67 001a 1849     		ldr	r1, .L2+8
  68 001c FFF7FEFF 		bl	CyIntSetVector
  73:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
  74:.\Generated_Source\PSoC5/SPIM.c **** 
  75:.\Generated_Source\PSoC5/SPIM.c ****     /* Init RX ISR  */
  76:.\Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
  77:.\Generated_Source\PSoC5/SPIM.c ****         CyIntDisable         (SPIM_RX_ISR_NUMBER);
  69              		.loc 1 77 0
  70 0020 154B     		ldr	r3, .L2+4
  71 0022 0222     		movs	r2, #2
  72 0024 1A60     		str	r2, [r3]
  78:.\Generated_Source\PSoC5/SPIM.c ****         CyIntSetPriority     (SPIM_RX_ISR_NUMBER,  SPIM_RX_ISR_PRIORITY);
  73              		.loc 1 78 0
  74 0026 0120     		movs	r0, #1
  75 0028 0721     		movs	r1, #7
  76 002a FFF7FEFF 		bl	CyIntSetPriority
  79:.\Generated_Source\PSoC5/SPIM.c ****         (void) CyIntSetVector(SPIM_RX_ISR_NUMBER, &SPIM_RX_ISR);
  77              		.loc 1 79 0
  78 002e 0120     		movs	r0, #1
  79 0030 1349     		ldr	r1, .L2+12
  80 0032 FFF7FEFF 		bl	CyIntSetVector
  80:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
  81:.\Generated_Source\PSoC5/SPIM.c **** 
  82:.\Generated_Source\PSoC5/SPIM.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_ClearFIFO();
  81              		.loc 1 83 0
  82 0036 FFF7FEFF 		bl	SPIM_ClearFIFO
  84:.\Generated_Source\PSoC5/SPIM.c **** 
  85:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  86:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferFull  = 0u;
  83              		.loc 1 86 0
  84 003a 124B     		ldr	r3, .L2+16
  85 003c 0022     		movs	r2, #0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 4


  86 003e 1A70     		strb	r2, [r3]
  87:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferRead  = 0u;
  87              		.loc 1 87 0
  88 0040 114B     		ldr	r3, .L2+20
  89 0042 0022     		movs	r2, #0
  90 0044 1A70     		strb	r2, [r3]
  88:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferWrite = 0u;
  91              		.loc 1 88 0
  92 0046 114B     		ldr	r3, .L2+24
  93 0048 0022     		movs	r2, #0
  94 004a 1A70     		strb	r2, [r3]
  89:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  90:.\Generated_Source\PSoC5/SPIM.c **** 
  91:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  92:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferFull  = 0u;
  95              		.loc 1 92 0
  96 004c 104B     		ldr	r3, .L2+28
  97 004e 0022     		movs	r2, #0
  98 0050 1A70     		strb	r2, [r3]
  93:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferRead  = 0u;
  99              		.loc 1 93 0
 100 0052 104B     		ldr	r3, .L2+32
 101 0054 0022     		movs	r2, #0
 102 0056 1A70     		strb	r2, [r3]
  94:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferWrite = 0u;
 103              		.loc 1 94 0
 104 0058 0F4B     		ldr	r3, .L2+36
 105 005a 0022     		movs	r2, #0
 106 005c 1A70     		strb	r2, [r3]
  95:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  96:.\Generated_Source\PSoC5/SPIM.c **** 
  97:.\Generated_Source\PSoC5/SPIM.c ****     (void) SPIM_ReadTxStatus(); /* Clear Tx status and swStatusTx */
 107              		.loc 1 97 0
 108 005e FFF7FEFF 		bl	SPIM_ReadTxStatus
  98:.\Generated_Source\PSoC5/SPIM.c ****     (void) SPIM_ReadRxStatus(); /* Clear Rx status and swStatusRx */
 109              		.loc 1 98 0
 110 0062 FFF7FEFF 		bl	SPIM_ReadRxStatus
  99:.\Generated_Source\PSoC5/SPIM.c **** 
 100:.\Generated_Source\PSoC5/SPIM.c ****     /* Configure TX and RX interrupt mask */
 101:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = SPIM_TX_INIT_INTERRUPTS_MASK;
 111              		.loc 1 101 0
 112 0066 0D4B     		ldr	r3, .L2+40
 113 0068 0022     		movs	r2, #0
 114 006a 1A70     		strb	r2, [r3]
 102:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_MASK_REG = SPIM_RX_INIT_INTERRUPTS_MASK;
 115              		.loc 1 102 0
 116 006c 0C4B     		ldr	r3, .L2+44
 117 006e 2022     		movs	r2, #32
 118 0070 1A70     		strb	r2, [r3]
 103:.\Generated_Source\PSoC5/SPIM.c **** }
 119              		.loc 1 103 0
 120 0072 80BD     		pop	{r7, pc}
 121              	.L3:
 122              		.align	2
 123              	.L2:
 124 0074 88640040 		.word	1073767560
 125 0078 80E100E0 		.word	-536813184
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 5


 126 007c 00000000 		.word	SPIM_TX_ISR
 127 0080 00000000 		.word	SPIM_RX_ISR
 128 0084 00000000 		.word	SPIM_rxBufferFull
 129 0088 00000000 		.word	SPIM_rxBufferRead
 130 008c 00000000 		.word	SPIM_rxBufferWrite
 131 0090 00000000 		.word	SPIM_txBufferFull
 132 0094 00000000 		.word	SPIM_txBufferRead
 133 0098 00000000 		.word	SPIM_txBufferWrite
 134 009c 88650040 		.word	1073767816
 135 00a0 89650040 		.word	1073767817
 136              		.cfi_endproc
 137              	.LFE0:
 138              		.size	SPIM_Init, .-SPIM_Init
 139              		.section	.text.SPIM_Enable,"ax",%progbits
 140              		.align	2
 141              		.global	SPIM_Enable
 142              		.thumb
 143              		.thumb_func
 144              		.type	SPIM_Enable, %function
 145              	SPIM_Enable:
 146              	.LFB1:
 104:.\Generated_Source\PSoC5/SPIM.c **** 
 105:.\Generated_Source\PSoC5/SPIM.c **** 
 106:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 107:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Enable
 108:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 109:.\Generated_Source\PSoC5/SPIM.c **** *
 110:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 111:.\Generated_Source\PSoC5/SPIM.c **** *  Enable SPIM component.
 112:.\Generated_Source\PSoC5/SPIM.c **** *
 113:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 114:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 115:.\Generated_Source\PSoC5/SPIM.c **** *
 116:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 117:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 118:.\Generated_Source\PSoC5/SPIM.c **** *
 119:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 120:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_Enable(void) 
 121:.\Generated_Source\PSoC5/SPIM.c **** {
 147              		.loc 1 121 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 8
 150              		@ frame_needed = 1, uses_anonymous_args = 0
 151 0000 80B5     		push	{r7, lr}
 152              		.cfi_def_cfa_offset 8
 153              		.cfi_offset 7, -8
 154              		.cfi_offset 14, -4
 155 0002 82B0     		sub	sp, sp, #8
 156              		.cfi_def_cfa_offset 16
 157 0004 00AF     		add	r7, sp, #0
 158              		.cfi_def_cfa_register 7
 122:.\Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 123:.\Generated_Source\PSoC5/SPIM.c **** 
 124:.\Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 159              		.loc 1 124 0
 160 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 161 000a 0346     		mov	r3, r0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 6


 162 000c FB71     		strb	r3, [r7, #7]
 125:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_COUNTER_CONTROL_REG |= SPIM_CNTR_ENABLE;
 163              		.loc 1 125 0
 164 000e 114A     		ldr	r2, .L5
 165 0010 104B     		ldr	r3, .L5
 166 0012 1B78     		ldrb	r3, [r3]
 167 0014 DBB2     		uxtb	r3, r3
 168 0016 43F02003 		orr	r3, r3, #32
 169 001a DBB2     		uxtb	r3, r3
 170 001c 1370     		strb	r3, [r2]
 126:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
 171              		.loc 1 126 0
 172 001e 0E4A     		ldr	r2, .L5+4
 173 0020 0D4B     		ldr	r3, .L5+4
 174 0022 1B78     		ldrb	r3, [r3]
 175 0024 DBB2     		uxtb	r3, r3
 176 0026 43F01003 		orr	r3, r3, #16
 177 002a DBB2     		uxtb	r3, r3
 178 002c 1370     		strb	r3, [r2]
 127:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
 179              		.loc 1 127 0
 180 002e 0B4A     		ldr	r2, .L5+8
 181 0030 0A4B     		ldr	r3, .L5+8
 182 0032 1B78     		ldrb	r3, [r3]
 183 0034 DBB2     		uxtb	r3, r3
 184 0036 43F01003 		orr	r3, r3, #16
 185 003a DBB2     		uxtb	r3, r3
 186 003c 1370     		strb	r3, [r2]
 128:.\Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 187              		.loc 1 128 0
 188 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 189 0040 1846     		mov	r0, r3
 190 0042 FFF7FEFF 		bl	CyExitCriticalSection
 129:.\Generated_Source\PSoC5/SPIM.c **** 
 130:.\Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 131:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_IntClock_Enable();
 132:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 133:.\Generated_Source\PSoC5/SPIM.c **** 
 134:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableTxInt();
 191              		.loc 1 134 0
 192 0046 FFF7FEFF 		bl	SPIM_EnableTxInt
 135:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableRxInt();
 193              		.loc 1 135 0
 194 004a FFF7FEFF 		bl	SPIM_EnableRxInt
 136:.\Generated_Source\PSoC5/SPIM.c **** }
 195              		.loc 1 136 0
 196 004e 0837     		adds	r7, r7, #8
 197              		.cfi_def_cfa_offset 8
 198 0050 BD46     		mov	sp, r7
 199              		.cfi_def_cfa_register 13
 200              		@ sp needed
 201 0052 80BD     		pop	{r7, pc}
 202              	.L6:
 203              		.align	2
 204              	.L5:
 205 0054 98640040 		.word	1073767576
 206 0058 98650040 		.word	1073767832
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 7


 207 005c 99650040 		.word	1073767833
 208              		.cfi_endproc
 209              	.LFE1:
 210              		.size	SPIM_Enable, .-SPIM_Enable
 211              		.section	.text.SPIM_Start,"ax",%progbits
 212              		.align	2
 213              		.global	SPIM_Start
 214              		.thumb
 215              		.thumb_func
 216              		.type	SPIM_Start, %function
 217              	SPIM_Start:
 218              	.LFB2:
 137:.\Generated_Source\PSoC5/SPIM.c **** 
 138:.\Generated_Source\PSoC5/SPIM.c **** 
 139:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 140:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Start
 141:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 142:.\Generated_Source\PSoC5/SPIM.c **** *
 143:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 144:.\Generated_Source\PSoC5/SPIM.c **** *  Initialize and Enable the SPI Master component.
 145:.\Generated_Source\PSoC5/SPIM.c **** *
 146:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 147:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 148:.\Generated_Source\PSoC5/SPIM.c **** *
 149:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 150:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 151:.\Generated_Source\PSoC5/SPIM.c **** *
 152:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
 153:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_initVar - used to check initial configuration, modified on
 154:.\Generated_Source\PSoC5/SPIM.c **** *  first function call.
 155:.\Generated_Source\PSoC5/SPIM.c **** *
 156:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 157:.\Generated_Source\PSoC5/SPIM.c **** *  Enable the clock input to enable operation.
 158:.\Generated_Source\PSoC5/SPIM.c **** *
 159:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 160:.\Generated_Source\PSoC5/SPIM.c **** *  No.
 161:.\Generated_Source\PSoC5/SPIM.c **** *
 162:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 163:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_Start(void) 
 164:.\Generated_Source\PSoC5/SPIM.c **** {
 219              		.loc 1 164 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 1, uses_anonymous_args = 0
 223 0000 80B5     		push	{r7, lr}
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 7, -8
 226              		.cfi_offset 14, -4
 227 0002 00AF     		add	r7, sp, #0
 228              		.cfi_def_cfa_register 7
 165:.\Generated_Source\PSoC5/SPIM.c ****     if(0u == SPIM_initVar)
 229              		.loc 1 165 0
 230 0004 054B     		ldr	r3, .L9
 231 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 232 0008 002B     		cmp	r3, #0
 233 000a 04D1     		bne	.L8
 166:.\Generated_Source\PSoC5/SPIM.c ****     {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 8


 167:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_Init();
 234              		.loc 1 167 0
 235 000c FFF7FEFF 		bl	SPIM_Init
 168:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_initVar = 1u;
 236              		.loc 1 168 0
 237 0010 024B     		ldr	r3, .L9
 238 0012 0122     		movs	r2, #1
 239 0014 1A70     		strb	r2, [r3]
 240              	.L8:
 169:.\Generated_Source\PSoC5/SPIM.c ****     }
 170:.\Generated_Source\PSoC5/SPIM.c **** 
 171:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_Enable();
 241              		.loc 1 171 0
 242 0016 FFF7FEFF 		bl	SPIM_Enable
 172:.\Generated_Source\PSoC5/SPIM.c **** }
 243              		.loc 1 172 0
 244 001a 80BD     		pop	{r7, pc}
 245              	.L10:
 246              		.align	2
 247              	.L9:
 248 001c 00000000 		.word	SPIM_initVar
 249              		.cfi_endproc
 250              	.LFE2:
 251              		.size	SPIM_Start, .-SPIM_Start
 252              		.section	.text.SPIM_Stop,"ax",%progbits
 253              		.align	2
 254              		.global	SPIM_Stop
 255              		.thumb
 256              		.thumb_func
 257              		.type	SPIM_Stop, %function
 258              	SPIM_Stop:
 259              	.LFB3:
 173:.\Generated_Source\PSoC5/SPIM.c **** 
 174:.\Generated_Source\PSoC5/SPIM.c **** 
 175:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 176:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Stop
 177:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 178:.\Generated_Source\PSoC5/SPIM.c **** *
 179:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 180:.\Generated_Source\PSoC5/SPIM.c **** *  Disable the SPI Master component.
 181:.\Generated_Source\PSoC5/SPIM.c **** *
 182:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 183:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 184:.\Generated_Source\PSoC5/SPIM.c **** *
 185:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 186:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 187:.\Generated_Source\PSoC5/SPIM.c **** *
 188:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 189:.\Generated_Source\PSoC5/SPIM.c **** *  Disable the clock input to enable operation.
 190:.\Generated_Source\PSoC5/SPIM.c **** *
 191:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 192:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_Stop(void) 
 193:.\Generated_Source\PSoC5/SPIM.c **** {
 260              		.loc 1 193 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 8
 263              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 9


 264 0000 80B5     		push	{r7, lr}
 265              		.cfi_def_cfa_offset 8
 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 82B0     		sub	sp, sp, #8
 269              		.cfi_def_cfa_offset 16
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 194:.\Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 195:.\Generated_Source\PSoC5/SPIM.c **** 
 196:.\Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 272              		.loc 1 196 0
 273 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 274 000a 0346     		mov	r3, r0
 275 000c FB71     		strb	r3, [r7, #7]
 197:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 276              		.loc 1 197 0
 277 000e 0D4A     		ldr	r2, .L12
 278 0010 0C4B     		ldr	r3, .L12
 279 0012 1B78     		ldrb	r3, [r3]
 280 0014 DBB2     		uxtb	r3, r3
 281 0016 23F01003 		bic	r3, r3, #16
 282 001a DBB2     		uxtb	r3, r3
 283 001c 1370     		strb	r3, [r2]
 198:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 284              		.loc 1 198 0
 285 001e 0A4A     		ldr	r2, .L12+4
 286 0020 094B     		ldr	r3, .L12+4
 287 0022 1B78     		ldrb	r3, [r3]
 288 0024 DBB2     		uxtb	r3, r3
 289 0026 23F01003 		bic	r3, r3, #16
 290 002a DBB2     		uxtb	r3, r3
 291 002c 1370     		strb	r3, [r2]
 199:.\Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 292              		.loc 1 199 0
 293 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 294 0030 1846     		mov	r0, r3
 295 0032 FFF7FEFF 		bl	CyExitCriticalSection
 200:.\Generated_Source\PSoC5/SPIM.c **** 
 201:.\Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 202:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_IntClock_Disable();
 203:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 204:.\Generated_Source\PSoC5/SPIM.c **** 
 205:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableTxInt();
 296              		.loc 1 205 0
 297 0036 FFF7FEFF 		bl	SPIM_DisableTxInt
 206:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableRxInt();
 298              		.loc 1 206 0
 299 003a FFF7FEFF 		bl	SPIM_DisableRxInt
 207:.\Generated_Source\PSoC5/SPIM.c **** }
 300              		.loc 1 207 0
 301 003e 0837     		adds	r7, r7, #8
 302              		.cfi_def_cfa_offset 8
 303 0040 BD46     		mov	sp, r7
 304              		.cfi_def_cfa_register 13
 305              		@ sp needed
 306 0042 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 10


 307              	.L13:
 308              		.align	2
 309              	.L12:
 310 0044 98650040 		.word	1073767832
 311 0048 99650040 		.word	1073767833
 312              		.cfi_endproc
 313              	.LFE3:
 314              		.size	SPIM_Stop, .-SPIM_Stop
 315              		.section	.text.SPIM_EnableTxInt,"ax",%progbits
 316              		.align	2
 317              		.global	SPIM_EnableTxInt
 318              		.thumb
 319              		.thumb_func
 320              		.type	SPIM_EnableTxInt, %function
 321              	SPIM_EnableTxInt:
 322              	.LFB4:
 208:.\Generated_Source\PSoC5/SPIM.c **** 
 209:.\Generated_Source\PSoC5/SPIM.c **** 
 210:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 211:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_EnableTxInt
 212:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 213:.\Generated_Source\PSoC5/SPIM.c **** *
 214:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 215:.\Generated_Source\PSoC5/SPIM.c **** *  Enable internal Tx interrupt generation.
 216:.\Generated_Source\PSoC5/SPIM.c **** *
 217:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 218:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 219:.\Generated_Source\PSoC5/SPIM.c **** *
 220:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 221:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 222:.\Generated_Source\PSoC5/SPIM.c **** *
 223:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 224:.\Generated_Source\PSoC5/SPIM.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:.\Generated_Source\PSoC5/SPIM.c **** *
 226:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_EnableTxInt(void) 
 228:.\Generated_Source\PSoC5/SPIM.c **** {
 323              		.loc 1 228 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 1, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328 0000 80B4     		push	{r7}
 329              		.cfi_def_cfa_offset 4
 330              		.cfi_offset 7, -4
 331 0002 00AF     		add	r7, sp, #0
 332              		.cfi_def_cfa_register 7
 229:.\Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 230:.\Generated_Source\PSoC5/SPIM.c ****         CyIntEnable(SPIM_TX_ISR_NUMBER);
 333              		.loc 1 230 0
 334 0004 034B     		ldr	r3, .L15
 335 0006 0422     		movs	r2, #4
 336 0008 1A60     		str	r2, [r3]
 231:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 232:.\Generated_Source\PSoC5/SPIM.c **** }
 337              		.loc 1 232 0
 338 000a BD46     		mov	sp, r7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 11


 339              		.cfi_def_cfa_register 13
 340              		@ sp needed
 341 000c 5DF8047B 		ldr	r7, [sp], #4
 342              		.cfi_restore 7
 343              		.cfi_def_cfa_offset 0
 344 0010 7047     		bx	lr
 345              	.L16:
 346 0012 00BF     		.align	2
 347              	.L15:
 348 0014 00E100E0 		.word	-536813312
 349              		.cfi_endproc
 350              	.LFE4:
 351              		.size	SPIM_EnableTxInt, .-SPIM_EnableTxInt
 352              		.section	.text.SPIM_EnableRxInt,"ax",%progbits
 353              		.align	2
 354              		.global	SPIM_EnableRxInt
 355              		.thumb
 356              		.thumb_func
 357              		.type	SPIM_EnableRxInt, %function
 358              	SPIM_EnableRxInt:
 359              	.LFB5:
 233:.\Generated_Source\PSoC5/SPIM.c **** 
 234:.\Generated_Source\PSoC5/SPIM.c **** 
 235:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 236:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_EnableRxInt
 237:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 238:.\Generated_Source\PSoC5/SPIM.c **** *
 239:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 240:.\Generated_Source\PSoC5/SPIM.c **** *  Enable internal Rx interrupt generation.
 241:.\Generated_Source\PSoC5/SPIM.c **** *
 242:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 243:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 244:.\Generated_Source\PSoC5/SPIM.c **** *
 245:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 246:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 247:.\Generated_Source\PSoC5/SPIM.c **** *
 248:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 249:.\Generated_Source\PSoC5/SPIM.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:.\Generated_Source\PSoC5/SPIM.c **** *
 251:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 252:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_EnableRxInt(void) 
 253:.\Generated_Source\PSoC5/SPIM.c **** {
 360              		.loc 1 253 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 1, uses_anonymous_args = 0
 364              		@ link register save eliminated.
 365 0000 80B4     		push	{r7}
 366              		.cfi_def_cfa_offset 4
 367              		.cfi_offset 7, -4
 368 0002 00AF     		add	r7, sp, #0
 369              		.cfi_def_cfa_register 7
 254:.\Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 255:.\Generated_Source\PSoC5/SPIM.c ****         CyIntEnable(SPIM_RX_ISR_NUMBER);
 370              		.loc 1 255 0
 371 0004 034B     		ldr	r3, .L18
 372 0006 0222     		movs	r2, #2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 12


 373 0008 1A60     		str	r2, [r3]
 256:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 257:.\Generated_Source\PSoC5/SPIM.c **** }
 374              		.loc 1 257 0
 375 000a BD46     		mov	sp, r7
 376              		.cfi_def_cfa_register 13
 377              		@ sp needed
 378 000c 5DF8047B 		ldr	r7, [sp], #4
 379              		.cfi_restore 7
 380              		.cfi_def_cfa_offset 0
 381 0010 7047     		bx	lr
 382              	.L19:
 383 0012 00BF     		.align	2
 384              	.L18:
 385 0014 00E100E0 		.word	-536813312
 386              		.cfi_endproc
 387              	.LFE5:
 388              		.size	SPIM_EnableRxInt, .-SPIM_EnableRxInt
 389              		.section	.text.SPIM_DisableTxInt,"ax",%progbits
 390              		.align	2
 391              		.global	SPIM_DisableTxInt
 392              		.thumb
 393              		.thumb_func
 394              		.type	SPIM_DisableTxInt, %function
 395              	SPIM_DisableTxInt:
 396              	.LFB6:
 258:.\Generated_Source\PSoC5/SPIM.c **** 
 259:.\Generated_Source\PSoC5/SPIM.c **** 
 260:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 261:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_DisableTxInt
 262:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 263:.\Generated_Source\PSoC5/SPIM.c **** *
 264:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 265:.\Generated_Source\PSoC5/SPIM.c **** *  Disable internal Tx interrupt generation.
 266:.\Generated_Source\PSoC5/SPIM.c **** *
 267:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 268:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 269:.\Generated_Source\PSoC5/SPIM.c **** *
 270:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 271:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 272:.\Generated_Source\PSoC5/SPIM.c **** *
 273:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 274:.\Generated_Source\PSoC5/SPIM.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:.\Generated_Source\PSoC5/SPIM.c **** *
 276:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 277:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_DisableTxInt(void) 
 278:.\Generated_Source\PSoC5/SPIM.c **** {
 397              		.loc 1 278 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 1, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 402 0000 80B4     		push	{r7}
 403              		.cfi_def_cfa_offset 4
 404              		.cfi_offset 7, -4
 405 0002 00AF     		add	r7, sp, #0
 406              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 13


 279:.\Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 280:.\Generated_Source\PSoC5/SPIM.c ****         CyIntDisable(SPIM_TX_ISR_NUMBER);
 407              		.loc 1 280 0
 408 0004 034B     		ldr	r3, .L21
 409 0006 0422     		movs	r2, #4
 410 0008 1A60     		str	r2, [r3]
 281:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 282:.\Generated_Source\PSoC5/SPIM.c **** }
 411              		.loc 1 282 0
 412 000a BD46     		mov	sp, r7
 413              		.cfi_def_cfa_register 13
 414              		@ sp needed
 415 000c 5DF8047B 		ldr	r7, [sp], #4
 416              		.cfi_restore 7
 417              		.cfi_def_cfa_offset 0
 418 0010 7047     		bx	lr
 419              	.L22:
 420 0012 00BF     		.align	2
 421              	.L21:
 422 0014 80E100E0 		.word	-536813184
 423              		.cfi_endproc
 424              	.LFE6:
 425              		.size	SPIM_DisableTxInt, .-SPIM_DisableTxInt
 426              		.section	.text.SPIM_DisableRxInt,"ax",%progbits
 427              		.align	2
 428              		.global	SPIM_DisableRxInt
 429              		.thumb
 430              		.thumb_func
 431              		.type	SPIM_DisableRxInt, %function
 432              	SPIM_DisableRxInt:
 433              	.LFB7:
 283:.\Generated_Source\PSoC5/SPIM.c **** 
 284:.\Generated_Source\PSoC5/SPIM.c **** 
 285:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_DisableRxInt
 287:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 288:.\Generated_Source\PSoC5/SPIM.c **** *
 289:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 290:.\Generated_Source\PSoC5/SPIM.c **** *  Disable internal Rx interrupt generation.
 291:.\Generated_Source\PSoC5/SPIM.c **** *
 292:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 293:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 294:.\Generated_Source\PSoC5/SPIM.c **** *
 295:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 296:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 297:.\Generated_Source\PSoC5/SPIM.c **** *
 298:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 299:.\Generated_Source\PSoC5/SPIM.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:.\Generated_Source\PSoC5/SPIM.c **** *
 301:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_DisableRxInt(void) 
 303:.\Generated_Source\PSoC5/SPIM.c **** {
 434              		.loc 1 303 0
 435              		.cfi_startproc
 436              		@ args = 0, pretend = 0, frame = 0
 437              		@ frame_needed = 1, uses_anonymous_args = 0
 438              		@ link register save eliminated.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 14


 439 0000 80B4     		push	{r7}
 440              		.cfi_def_cfa_offset 4
 441              		.cfi_offset 7, -4
 442 0002 00AF     		add	r7, sp, #0
 443              		.cfi_def_cfa_register 7
 304:.\Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 305:.\Generated_Source\PSoC5/SPIM.c ****         CyIntDisable(SPIM_RX_ISR_NUMBER);
 444              		.loc 1 305 0
 445 0004 034B     		ldr	r3, .L24
 446 0006 0222     		movs	r2, #2
 447 0008 1A60     		str	r2, [r3]
 306:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 307:.\Generated_Source\PSoC5/SPIM.c **** }
 448              		.loc 1 307 0
 449 000a BD46     		mov	sp, r7
 450              		.cfi_def_cfa_register 13
 451              		@ sp needed
 452 000c 5DF8047B 		ldr	r7, [sp], #4
 453              		.cfi_restore 7
 454              		.cfi_def_cfa_offset 0
 455 0010 7047     		bx	lr
 456              	.L25:
 457 0012 00BF     		.align	2
 458              	.L24:
 459 0014 80E100E0 		.word	-536813184
 460              		.cfi_endproc
 461              	.LFE7:
 462              		.size	SPIM_DisableRxInt, .-SPIM_DisableRxInt
 463              		.section	.text.SPIM_SetTxInterruptMode,"ax",%progbits
 464              		.align	2
 465              		.global	SPIM_SetTxInterruptMode
 466              		.thumb
 467              		.thumb_func
 468              		.type	SPIM_SetTxInterruptMode, %function
 469              	SPIM_SetTxInterruptMode:
 470              	.LFB8:
 308:.\Generated_Source\PSoC5/SPIM.c **** 
 309:.\Generated_Source\PSoC5/SPIM.c **** 
 310:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 311:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_SetTxInterruptMode
 312:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 313:.\Generated_Source\PSoC5/SPIM.c **** *
 314:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 315:.\Generated_Source\PSoC5/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 316:.\Generated_Source\PSoC5/SPIM.c **** *
 317:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 318:.\Generated_Source\PSoC5/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:.\Generated_Source\PSoC5/SPIM.c **** *  header file).
 320:.\Generated_Source\PSoC5/SPIM.c **** *
 321:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 322:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 323:.\Generated_Source\PSoC5/SPIM.c **** *
 324:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 325:.\Generated_Source\PSoC5/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:.\Generated_Source\PSoC5/SPIM.c **** *
 327:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 328:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_SetTxInterruptMode(uint8 intSrc) 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 15


 329:.\Generated_Source\PSoC5/SPIM.c **** {
 471              		.loc 1 329 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 8
 474              		@ frame_needed = 1, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 476 0000 80B4     		push	{r7}
 477              		.cfi_def_cfa_offset 4
 478              		.cfi_offset 7, -4
 479 0002 83B0     		sub	sp, sp, #12
 480              		.cfi_def_cfa_offset 16
 481 0004 00AF     		add	r7, sp, #0
 482              		.cfi_def_cfa_register 7
 483 0006 0346     		mov	r3, r0
 484 0008 FB71     		strb	r3, [r7, #7]
 330:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = intSrc;
 485              		.loc 1 330 0
 486 000a 044A     		ldr	r2, .L27
 487 000c FB79     		ldrb	r3, [r7, #7]
 488 000e 1370     		strb	r3, [r2]
 331:.\Generated_Source\PSoC5/SPIM.c **** }
 489              		.loc 1 331 0
 490 0010 0C37     		adds	r7, r7, #12
 491              		.cfi_def_cfa_offset 4
 492 0012 BD46     		mov	sp, r7
 493              		.cfi_def_cfa_register 13
 494              		@ sp needed
 495 0014 5DF8047B 		ldr	r7, [sp], #4
 496              		.cfi_restore 7
 497              		.cfi_def_cfa_offset 0
 498 0018 7047     		bx	lr
 499              	.L28:
 500 001a 00BF     		.align	2
 501              	.L27:
 502 001c 88650040 		.word	1073767816
 503              		.cfi_endproc
 504              	.LFE8:
 505              		.size	SPIM_SetTxInterruptMode, .-SPIM_SetTxInterruptMode
 506              		.section	.text.SPIM_SetRxInterruptMode,"ax",%progbits
 507              		.align	2
 508              		.global	SPIM_SetRxInterruptMode
 509              		.thumb
 510              		.thumb_func
 511              		.type	SPIM_SetRxInterruptMode, %function
 512              	SPIM_SetRxInterruptMode:
 513              	.LFB9:
 332:.\Generated_Source\PSoC5/SPIM.c **** 
 333:.\Generated_Source\PSoC5/SPIM.c **** 
 334:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 335:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_SetRxInterruptMode
 336:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 337:.\Generated_Source\PSoC5/SPIM.c **** *
 338:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 339:.\Generated_Source\PSoC5/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 340:.\Generated_Source\PSoC5/SPIM.c **** *
 341:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 342:.\Generated_Source\PSoC5/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 16


 343:.\Generated_Source\PSoC5/SPIM.c **** *  header file).
 344:.\Generated_Source\PSoC5/SPIM.c **** *
 345:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 346:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 347:.\Generated_Source\PSoC5/SPIM.c **** *
 348:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 349:.\Generated_Source\PSoC5/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:.\Generated_Source\PSoC5/SPIM.c **** *
 351:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 352:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_SetRxInterruptMode(uint8 intSrc) 
 353:.\Generated_Source\PSoC5/SPIM.c **** {
 514              		.loc 1 353 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 8
 517              		@ frame_needed = 1, uses_anonymous_args = 0
 518              		@ link register save eliminated.
 519 0000 80B4     		push	{r7}
 520              		.cfi_def_cfa_offset 4
 521              		.cfi_offset 7, -4
 522 0002 83B0     		sub	sp, sp, #12
 523              		.cfi_def_cfa_offset 16
 524 0004 00AF     		add	r7, sp, #0
 525              		.cfi_def_cfa_register 7
 526 0006 0346     		mov	r3, r0
 527 0008 FB71     		strb	r3, [r7, #7]
 354:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  = intSrc;
 528              		.loc 1 354 0
 529 000a 044A     		ldr	r2, .L30
 530 000c FB79     		ldrb	r3, [r7, #7]
 531 000e 1370     		strb	r3, [r2]
 355:.\Generated_Source\PSoC5/SPIM.c **** }
 532              		.loc 1 355 0
 533 0010 0C37     		adds	r7, r7, #12
 534              		.cfi_def_cfa_offset 4
 535 0012 BD46     		mov	sp, r7
 536              		.cfi_def_cfa_register 13
 537              		@ sp needed
 538 0014 5DF8047B 		ldr	r7, [sp], #4
 539              		.cfi_restore 7
 540              		.cfi_def_cfa_offset 0
 541 0018 7047     		bx	lr
 542              	.L31:
 543 001a 00BF     		.align	2
 544              	.L30:
 545 001c 89650040 		.word	1073767817
 546              		.cfi_endproc
 547              	.LFE9:
 548              		.size	SPIM_SetRxInterruptMode, .-SPIM_SetRxInterruptMode
 549              		.section	.text.SPIM_ReadTxStatus,"ax",%progbits
 550              		.align	2
 551              		.global	SPIM_ReadTxStatus
 552              		.thumb
 553              		.thumb_func
 554              		.type	SPIM_ReadTxStatus, %function
 555              	SPIM_ReadTxStatus:
 556              	.LFB10:
 356:.\Generated_Source\PSoC5/SPIM.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 17


 357:.\Generated_Source\PSoC5/SPIM.c **** 
 358:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 359:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadTxStatus
 360:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 361:.\Generated_Source\PSoC5/SPIM.c **** *
 362:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 363:.\Generated_Source\PSoC5/SPIM.c **** *  Read the Tx status register for the component.
 364:.\Generated_Source\PSoC5/SPIM.c **** *
 365:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 366:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 367:.\Generated_Source\PSoC5/SPIM.c **** *
 368:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 369:.\Generated_Source\PSoC5/SPIM.c **** *  Contents of the Tx status register.
 370:.\Generated_Source\PSoC5/SPIM.c **** *
 371:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
 372:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_swStatusTx - used to store in software status register,
 373:.\Generated_Source\PSoC5/SPIM.c **** *  modified every function call - resets to zero.
 374:.\Generated_Source\PSoC5/SPIM.c **** *
 375:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 376:.\Generated_Source\PSoC5/SPIM.c **** *  Allows the user and the API to read the Tx status register for error
 377:.\Generated_Source\PSoC5/SPIM.c **** *  detection and flow control.
 378:.\Generated_Source\PSoC5/SPIM.c **** *
 379:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 380:.\Generated_Source\PSoC5/SPIM.c **** *  Clear Tx status register of the component.
 381:.\Generated_Source\PSoC5/SPIM.c **** *
 382:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 383:.\Generated_Source\PSoC5/SPIM.c **** *  No.
 384:.\Generated_Source\PSoC5/SPIM.c **** *
 385:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 386:.\Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadTxStatus(void) 
 387:.\Generated_Source\PSoC5/SPIM.c **** {
 557              		.loc 1 387 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 8
 560              		@ frame_needed = 1, uses_anonymous_args = 0
 561 0000 80B5     		push	{r7, lr}
 562              		.cfi_def_cfa_offset 8
 563              		.cfi_offset 7, -8
 564              		.cfi_offset 14, -4
 565 0002 82B0     		sub	sp, sp, #8
 566              		.cfi_def_cfa_offset 16
 567 0004 00AF     		add	r7, sp, #0
 568              		.cfi_def_cfa_register 7
 388:.\Generated_Source\PSoC5/SPIM.c ****     uint8 tmpStatus;
 389:.\Generated_Source\PSoC5/SPIM.c **** 
 390:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 391:.\Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 392:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 569              		.loc 1 392 0
 570 0006 FFF7FEFF 		bl	SPIM_DisableTxInt
 393:.\Generated_Source\PSoC5/SPIM.c **** 
 394:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 571              		.loc 1 394 0
 572 000a 0A4B     		ldr	r3, .L34
 573 000c 1B78     		ldrb	r3, [r3]
 574 000e DAB2     		uxtb	r2, r3
 575 0010 094B     		ldr	r3, .L34+4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 18


 576 0012 1B78     		ldrb	r3, [r3]
 577 0014 DBB2     		uxtb	r3, r3
 578 0016 03F00903 		and	r3, r3, #9
 579 001a DBB2     		uxtb	r3, r3
 580 001c 1343     		orrs	r3, r3, r2
 581 001e FB71     		strb	r3, [r7, #7]
 395:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusTx = 0u;
 582              		.loc 1 395 0
 583 0020 054B     		ldr	r3, .L34+4
 584 0022 0022     		movs	r2, #0
 585 0024 1A70     		strb	r2, [r3]
 396:.\Generated_Source\PSoC5/SPIM.c **** 
 397:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 586              		.loc 1 397 0
 587 0026 FFF7FEFF 		bl	SPIM_EnableTxInt
 398:.\Generated_Source\PSoC5/SPIM.c **** 
 399:.\Generated_Source\PSoC5/SPIM.c ****     #else
 400:.\Generated_Source\PSoC5/SPIM.c **** 
 401:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_TX_STATUS_REG;
 402:.\Generated_Source\PSoC5/SPIM.c **** 
 403:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 404:.\Generated_Source\PSoC5/SPIM.c **** 
 405:.\Generated_Source\PSoC5/SPIM.c ****     return(tmpStatus);
 588              		.loc 1 405 0
 589 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 406:.\Generated_Source\PSoC5/SPIM.c **** }
 590              		.loc 1 406 0
 591 002c 1846     		mov	r0, r3
 592 002e 0837     		adds	r7, r7, #8
 593              		.cfi_def_cfa_offset 8
 594 0030 BD46     		mov	sp, r7
 595              		.cfi_def_cfa_register 13
 596              		@ sp needed
 597 0032 80BD     		pop	{r7, pc}
 598              	.L35:
 599              		.align	2
 600              	.L34:
 601 0034 68650040 		.word	1073767784
 602 0038 00000000 		.word	SPIM_swStatusTx
 603              		.cfi_endproc
 604              	.LFE10:
 605              		.size	SPIM_ReadTxStatus, .-SPIM_ReadTxStatus
 606              		.section	.text.SPIM_ReadRxStatus,"ax",%progbits
 607              		.align	2
 608              		.global	SPIM_ReadRxStatus
 609              		.thumb
 610              		.thumb_func
 611              		.type	SPIM_ReadRxStatus, %function
 612              	SPIM_ReadRxStatus:
 613              	.LFB11:
 407:.\Generated_Source\PSoC5/SPIM.c **** 
 408:.\Generated_Source\PSoC5/SPIM.c **** 
 409:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 410:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadRxStatus
 411:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 412:.\Generated_Source\PSoC5/SPIM.c **** *
 413:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 19


 414:.\Generated_Source\PSoC5/SPIM.c **** *  Read the Rx status register for the component.
 415:.\Generated_Source\PSoC5/SPIM.c **** *
 416:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 417:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 418:.\Generated_Source\PSoC5/SPIM.c **** *
 419:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 420:.\Generated_Source\PSoC5/SPIM.c **** *  Contents of the Rx status register.
 421:.\Generated_Source\PSoC5/SPIM.c **** *
 422:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
 423:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_swStatusRx - used to store in software Rx status register,
 424:.\Generated_Source\PSoC5/SPIM.c **** *  modified every function call - resets to zero.
 425:.\Generated_Source\PSoC5/SPIM.c **** *
 426:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 427:.\Generated_Source\PSoC5/SPIM.c **** *  Allows the user and the API to read the Rx status register for error
 428:.\Generated_Source\PSoC5/SPIM.c **** *  detection and flow control.
 429:.\Generated_Source\PSoC5/SPIM.c **** *
 430:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 431:.\Generated_Source\PSoC5/SPIM.c **** *  Clear Rx status register of the component.
 432:.\Generated_Source\PSoC5/SPIM.c **** *
 433:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 434:.\Generated_Source\PSoC5/SPIM.c **** *  No.
 435:.\Generated_Source\PSoC5/SPIM.c **** *
 436:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 437:.\Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadRxStatus(void) 
 438:.\Generated_Source\PSoC5/SPIM.c **** {
 614              		.loc 1 438 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 8
 617              		@ frame_needed = 1, uses_anonymous_args = 0
 618 0000 80B5     		push	{r7, lr}
 619              		.cfi_def_cfa_offset 8
 620              		.cfi_offset 7, -8
 621              		.cfi_offset 14, -4
 622 0002 82B0     		sub	sp, sp, #8
 623              		.cfi_def_cfa_offset 16
 624 0004 00AF     		add	r7, sp, #0
 625              		.cfi_def_cfa_register 7
 439:.\Generated_Source\PSoC5/SPIM.c ****     uint8 tmpStatus;
 440:.\Generated_Source\PSoC5/SPIM.c **** 
 441:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 442:.\Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 443:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 626              		.loc 1 443 0
 627 0006 FFF7FEFF 		bl	SPIM_DisableRxInt
 444:.\Generated_Source\PSoC5/SPIM.c **** 
 445:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
 628              		.loc 1 445 0
 629 000a 0A4B     		ldr	r3, .L38
 630 000c 1B78     		ldrb	r3, [r3]
 631 000e DAB2     		uxtb	r2, r3
 632 0010 094B     		ldr	r3, .L38+4
 633 0012 1B78     		ldrb	r3, [r3]
 634 0014 DBB2     		uxtb	r3, r3
 635 0016 03F04003 		and	r3, r3, #64
 636 001a DBB2     		uxtb	r3, r3
 637 001c 1343     		orrs	r3, r3, r2
 638 001e FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 20


 446:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusRx = 0u;
 639              		.loc 1 446 0
 640 0020 054B     		ldr	r3, .L38+4
 641 0022 0022     		movs	r2, #0
 642 0024 1A70     		strb	r2, [r3]
 447:.\Generated_Source\PSoC5/SPIM.c **** 
 448:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 643              		.loc 1 448 0
 644 0026 FFF7FEFF 		bl	SPIM_EnableRxInt
 449:.\Generated_Source\PSoC5/SPIM.c **** 
 450:.\Generated_Source\PSoC5/SPIM.c ****     #else
 451:.\Generated_Source\PSoC5/SPIM.c **** 
 452:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_RX_STATUS_REG;
 453:.\Generated_Source\PSoC5/SPIM.c **** 
 454:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 455:.\Generated_Source\PSoC5/SPIM.c **** 
 456:.\Generated_Source\PSoC5/SPIM.c ****     return(tmpStatus);
 645              		.loc 1 456 0
 646 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 457:.\Generated_Source\PSoC5/SPIM.c **** }
 647              		.loc 1 457 0
 648 002c 1846     		mov	r0, r3
 649 002e 0837     		adds	r7, r7, #8
 650              		.cfi_def_cfa_offset 8
 651 0030 BD46     		mov	sp, r7
 652              		.cfi_def_cfa_register 13
 653              		@ sp needed
 654 0032 80BD     		pop	{r7, pc}
 655              	.L39:
 656              		.align	2
 657              	.L38:
 658 0034 69650040 		.word	1073767785
 659 0038 00000000 		.word	SPIM_swStatusRx
 660              		.cfi_endproc
 661              	.LFE11:
 662              		.size	SPIM_ReadRxStatus, .-SPIM_ReadRxStatus
 663              		.section	.text.SPIM_WriteTxData,"ax",%progbits
 664              		.align	2
 665              		.global	SPIM_WriteTxData
 666              		.thumb
 667              		.thumb_func
 668              		.type	SPIM_WriteTxData, %function
 669              	SPIM_WriteTxData:
 670              	.LFB12:
 458:.\Generated_Source\PSoC5/SPIM.c **** 
 459:.\Generated_Source\PSoC5/SPIM.c **** 
 460:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 461:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_WriteTxData
 462:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 463:.\Generated_Source\PSoC5/SPIM.c **** *
 464:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 465:.\Generated_Source\PSoC5/SPIM.c **** *  Write a byte of data to be sent across the SPI.
 466:.\Generated_Source\PSoC5/SPIM.c **** *
 467:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 468:.\Generated_Source\PSoC5/SPIM.c **** *  txDataByte: The data value to send across the SPI.
 469:.\Generated_Source\PSoC5/SPIM.c **** *
 470:.\Generated_Source\PSoC5/SPIM.c **** * Return:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 21


 471:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 472:.\Generated_Source\PSoC5/SPIM.c **** *
 473:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
 474:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 475:.\Generated_Source\PSoC5/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 476:.\Generated_Source\PSoC5/SPIM.c **** *  call if TX Software Buffer is used.
 477:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 478:.\Generated_Source\PSoC5/SPIM.c **** *  have been read from the TX software buffer.
 479:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBuffer[SPIM_TX_BUFFER_SIZE] - used to store
 480:.\Generated_Source\PSoC5/SPIM.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:.\Generated_Source\PSoC5/SPIM.c **** *
 482:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 483:.\Generated_Source\PSoC5/SPIM.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:.\Generated_Source\PSoC5/SPIM.c **** *
 485:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 486:.\Generated_Source\PSoC5/SPIM.c **** *  If this function is called again before the previous byte is finished then
 487:.\Generated_Source\PSoC5/SPIM.c **** *  the next byte will be appended to the transfer with no time between
 488:.\Generated_Source\PSoC5/SPIM.c **** *  the byte transfers. Clear Tx status register of the component.
 489:.\Generated_Source\PSoC5/SPIM.c **** *
 490:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 491:.\Generated_Source\PSoC5/SPIM.c **** *  No.
 492:.\Generated_Source\PSoC5/SPIM.c **** *
 493:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 494:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_WriteTxData(uint8 txData) 
 495:.\Generated_Source\PSoC5/SPIM.c **** {
 671              		.loc 1 495 0
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 16
 674              		@ frame_needed = 1, uses_anonymous_args = 0
 675 0000 80B5     		push	{r7, lr}
 676              		.cfi_def_cfa_offset 8
 677              		.cfi_offset 7, -8
 678              		.cfi_offset 14, -4
 679 0002 84B0     		sub	sp, sp, #16
 680              		.cfi_def_cfa_offset 24
 681 0004 00AF     		add	r7, sp, #0
 682              		.cfi_def_cfa_register 7
 683 0006 0346     		mov	r3, r0
 684 0008 FB71     		strb	r3, [r7, #7]
 685              	.L43:
 496:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 497:.\Generated_Source\PSoC5/SPIM.c **** 
 498:.\Generated_Source\PSoC5/SPIM.c ****         uint8 tempStatus;
 499:.\Generated_Source\PSoC5/SPIM.c ****         uint8 tmpTxBufferRead;
 500:.\Generated_Source\PSoC5/SPIM.c **** 
 501:.\Generated_Source\PSoC5/SPIM.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:.\Generated_Source\PSoC5/SPIM.c ****         do
 503:.\Generated_Source\PSoC5/SPIM.c ****         {
 504:.\Generated_Source\PSoC5/SPIM.c ****             tmpTxBufferRead = SPIM_txBufferRead;
 686              		.loc 1 504 0
 687 000a 394B     		ldr	r3, .L49
 688 000c 1B78     		ldrb	r3, [r3]
 689 000e FB73     		strb	r3, [r7, #15]
 505:.\Generated_Source\PSoC5/SPIM.c ****             if(0u == tmpTxBufferRead)
 690              		.loc 1 505 0
 691 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 692 0012 002B     		cmp	r3, #0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 22


 693 0014 02D1     		bne	.L41
 506:.\Generated_Source\PSoC5/SPIM.c ****             {
 507:.\Generated_Source\PSoC5/SPIM.c ****                 tmpTxBufferRead = (SPIM_TX_BUFFER_SIZE - 1u);
 694              		.loc 1 507 0
 695 0016 2F23     		movs	r3, #47
 696 0018 FB73     		strb	r3, [r7, #15]
 697 001a 02E0     		b	.L42
 698              	.L41:
 508:.\Generated_Source\PSoC5/SPIM.c ****             }
 509:.\Generated_Source\PSoC5/SPIM.c ****             else
 510:.\Generated_Source\PSoC5/SPIM.c ****             {
 511:.\Generated_Source\PSoC5/SPIM.c ****                 tmpTxBufferRead--;
 699              		.loc 1 511 0
 700 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 701 001e 013B     		subs	r3, r3, #1
 702 0020 FB73     		strb	r3, [r7, #15]
 703              	.L42:
 512:.\Generated_Source\PSoC5/SPIM.c ****             }
 513:.\Generated_Source\PSoC5/SPIM.c **** 
 514:.\Generated_Source\PSoC5/SPIM.c ****         }while(tmpTxBufferRead == SPIM_txBufferWrite);
 704              		.loc 1 514 0
 705 0022 344B     		ldr	r3, .L49+4
 706 0024 1B78     		ldrb	r3, [r3]
 707 0026 DBB2     		uxtb	r3, r3
 708 0028 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 709 002a 9A42     		cmp	r2, r3
 710 002c EDD0     		beq	.L43
 515:.\Generated_Source\PSoC5/SPIM.c **** 
 516:.\Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 517:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 711              		.loc 1 517 0
 712 002e FFF7FEFF 		bl	SPIM_DisableTxInt
 518:.\Generated_Source\PSoC5/SPIM.c **** 
 519:.\Generated_Source\PSoC5/SPIM.c ****         tempStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 713              		.loc 1 519 0
 714 0032 314B     		ldr	r3, .L49+8
 715 0034 1B78     		ldrb	r3, [r3]
 716 0036 DAB2     		uxtb	r2, r3
 717 0038 304B     		ldr	r3, .L49+12
 718 003a 1B78     		ldrb	r3, [r3]
 719 003c DBB2     		uxtb	r3, r3
 720 003e 03F00903 		and	r3, r3, #9
 721 0042 DBB2     		uxtb	r3, r3
 722 0044 1343     		orrs	r3, r3, r2
 723 0046 BB73     		strb	r3, [r7, #14]
 520:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusTx = tempStatus;
 724              		.loc 1 520 0
 725 0048 2C4A     		ldr	r2, .L49+12
 726 004a BB7B     		ldrb	r3, [r7, #14]
 727 004c 1370     		strb	r3, [r2]
 521:.\Generated_Source\PSoC5/SPIM.c **** 
 522:.\Generated_Source\PSoC5/SPIM.c **** 
 523:.\Generated_Source\PSoC5/SPIM.c ****         if((SPIM_txBufferRead == SPIM_txBufferWrite) &&
 728              		.loc 1 523 0
 729 004e 284B     		ldr	r3, .L49
 730 0050 1B78     		ldrb	r3, [r3]
 731 0052 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 23


 732 0054 274B     		ldr	r3, .L49+4
 733 0056 1B78     		ldrb	r3, [r3]
 734 0058 DBB2     		uxtb	r3, r3
 735 005a 9A42     		cmp	r2, r3
 736 005c 0AD1     		bne	.L44
 524:.\Generated_Source\PSoC5/SPIM.c ****            (0u != (SPIM_swStatusTx & SPIM_STS_TX_FIFO_NOT_FULL)))
 737              		.loc 1 524 0 discriminator 1
 738 005e 274B     		ldr	r3, .L49+12
 739 0060 1B78     		ldrb	r3, [r3]
 740 0062 DBB2     		uxtb	r3, r3
 741 0064 03F00403 		and	r3, r3, #4
 523:.\Generated_Source\PSoC5/SPIM.c ****            (0u != (SPIM_swStatusTx & SPIM_STS_TX_FIFO_NOT_FULL)))
 742              		.loc 1 523 0 discriminator 1
 743 0068 002B     		cmp	r3, #0
 744 006a 03D0     		beq	.L44
 525:.\Generated_Source\PSoC5/SPIM.c ****         {
 526:.\Generated_Source\PSoC5/SPIM.c ****             /* Put data element into the TX FIFO */
 527:.\Generated_Source\PSoC5/SPIM.c ****             CY_SET_REG8(SPIM_TXDATA_PTR, txData);
 745              		.loc 1 527 0
 746 006c 244A     		ldr	r2, .L49+16
 747 006e FB79     		ldrb	r3, [r7, #7]
 748 0070 1370     		strb	r3, [r2]
 749 0072 37E0     		b	.L45
 750              	.L44:
 528:.\Generated_Source\PSoC5/SPIM.c ****         }
 529:.\Generated_Source\PSoC5/SPIM.c ****         else
 530:.\Generated_Source\PSoC5/SPIM.c ****         {
 531:.\Generated_Source\PSoC5/SPIM.c ****             /* Add to the TX software buffer */
 532:.\Generated_Source\PSoC5/SPIM.c ****             SPIM_txBufferWrite++;
 751              		.loc 1 532 0
 752 0074 1F4B     		ldr	r3, .L49+4
 753 0076 1B78     		ldrb	r3, [r3]
 754 0078 DBB2     		uxtb	r3, r3
 755 007a 0133     		adds	r3, r3, #1
 756 007c DAB2     		uxtb	r2, r3
 757 007e 1D4B     		ldr	r3, .L49+4
 758 0080 1A70     		strb	r2, [r3]
 533:.\Generated_Source\PSoC5/SPIM.c ****             if(SPIM_txBufferWrite >= SPIM_TX_BUFFER_SIZE)
 759              		.loc 1 533 0
 760 0082 1C4B     		ldr	r3, .L49+4
 761 0084 1B78     		ldrb	r3, [r3]
 762 0086 DBB2     		uxtb	r3, r3
 763 0088 2F2B     		cmp	r3, #47
 764 008a 02D9     		bls	.L46
 534:.\Generated_Source\PSoC5/SPIM.c ****             {
 535:.\Generated_Source\PSoC5/SPIM.c ****                 SPIM_txBufferWrite = 0u;
 765              		.loc 1 535 0
 766 008c 194B     		ldr	r3, .L49+4
 767 008e 0022     		movs	r2, #0
 768 0090 1A70     		strb	r2, [r3]
 769              	.L46:
 536:.\Generated_Source\PSoC5/SPIM.c ****             }
 537:.\Generated_Source\PSoC5/SPIM.c **** 
 538:.\Generated_Source\PSoC5/SPIM.c ****             if(SPIM_txBufferWrite == SPIM_txBufferRead)
 770              		.loc 1 538 0
 771 0092 184B     		ldr	r3, .L49+4
 772 0094 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 24


 773 0096 DAB2     		uxtb	r2, r3
 774 0098 154B     		ldr	r3, .L49
 775 009a 1B78     		ldrb	r3, [r3]
 776 009c DBB2     		uxtb	r3, r3
 777 009e 9A42     		cmp	r2, r3
 778 00a0 11D1     		bne	.L47
 539:.\Generated_Source\PSoC5/SPIM.c ****             {
 540:.\Generated_Source\PSoC5/SPIM.c ****                 SPIM_txBufferRead++;
 779              		.loc 1 540 0
 780 00a2 134B     		ldr	r3, .L49
 781 00a4 1B78     		ldrb	r3, [r3]
 782 00a6 DBB2     		uxtb	r3, r3
 783 00a8 0133     		adds	r3, r3, #1
 784 00aa DAB2     		uxtb	r2, r3
 785 00ac 104B     		ldr	r3, .L49
 786 00ae 1A70     		strb	r2, [r3]
 541:.\Generated_Source\PSoC5/SPIM.c ****                 if(SPIM_txBufferRead >= SPIM_TX_BUFFER_SIZE)
 787              		.loc 1 541 0
 788 00b0 0F4B     		ldr	r3, .L49
 789 00b2 1B78     		ldrb	r3, [r3]
 790 00b4 DBB2     		uxtb	r3, r3
 791 00b6 2F2B     		cmp	r3, #47
 792 00b8 02D9     		bls	.L48
 542:.\Generated_Source\PSoC5/SPIM.c ****                 {
 543:.\Generated_Source\PSoC5/SPIM.c ****                     SPIM_txBufferRead = 0u;
 793              		.loc 1 543 0
 794 00ba 0D4B     		ldr	r3, .L49
 795 00bc 0022     		movs	r2, #0
 796 00be 1A70     		strb	r2, [r3]
 797              	.L48:
 544:.\Generated_Source\PSoC5/SPIM.c ****                 }
 545:.\Generated_Source\PSoC5/SPIM.c ****                 SPIM_txBufferFull = 1u;
 798              		.loc 1 545 0
 799 00c0 104B     		ldr	r3, .L49+20
 800 00c2 0122     		movs	r2, #1
 801 00c4 1A70     		strb	r2, [r3]
 802              	.L47:
 546:.\Generated_Source\PSoC5/SPIM.c ****             }
 547:.\Generated_Source\PSoC5/SPIM.c **** 
 548:.\Generated_Source\PSoC5/SPIM.c ****             SPIM_txBuffer[SPIM_txBufferWrite] = txData;
 803              		.loc 1 548 0
 804 00c6 0B4B     		ldr	r3, .L49+4
 805 00c8 1B78     		ldrb	r3, [r3]
 806 00ca DBB2     		uxtb	r3, r3
 807 00cc 1946     		mov	r1, r3
 808 00ce 0E4A     		ldr	r2, .L49+24
 809 00d0 FB79     		ldrb	r3, [r7, #7]
 810 00d2 5354     		strb	r3, [r2, r1]
 549:.\Generated_Source\PSoC5/SPIM.c **** 
 550:.\Generated_Source\PSoC5/SPIM.c ****             SPIM_TX_STATUS_MASK_REG |= SPIM_STS_TX_FIFO_NOT_FULL;
 811              		.loc 1 550 0
 812 00d4 0D4A     		ldr	r2, .L49+28
 813 00d6 0D4B     		ldr	r3, .L49+28
 814 00d8 1B78     		ldrb	r3, [r3]
 815 00da DBB2     		uxtb	r3, r3
 816 00dc 43F00403 		orr	r3, r3, #4
 817 00e0 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 25


 818 00e2 1370     		strb	r3, [r2]
 819              	.L45:
 551:.\Generated_Source\PSoC5/SPIM.c ****         }
 552:.\Generated_Source\PSoC5/SPIM.c **** 
 553:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 820              		.loc 1 553 0
 821 00e4 FFF7FEFF 		bl	SPIM_EnableTxInt
 554:.\Generated_Source\PSoC5/SPIM.c **** 
 555:.\Generated_Source\PSoC5/SPIM.c ****     #else
 556:.\Generated_Source\PSoC5/SPIM.c ****         /* Wait until TX FIFO has a place */
 557:.\Generated_Source\PSoC5/SPIM.c ****         while(0u == (SPIM_TX_STATUS_REG & SPIM_STS_TX_FIFO_NOT_FULL))
 558:.\Generated_Source\PSoC5/SPIM.c ****         {
 559:.\Generated_Source\PSoC5/SPIM.c ****         }
 560:.\Generated_Source\PSoC5/SPIM.c **** 
 561:.\Generated_Source\PSoC5/SPIM.c ****         /* Put data element into the TX FIFO */
 562:.\Generated_Source\PSoC5/SPIM.c ****         CY_SET_REG8(SPIM_TXDATA_PTR, txData);
 563:.\Generated_Source\PSoC5/SPIM.c **** 
 564:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 565:.\Generated_Source\PSoC5/SPIM.c **** }
 822              		.loc 1 565 0
 823 00e8 1037     		adds	r7, r7, #16
 824              		.cfi_def_cfa_offset 8
 825 00ea BD46     		mov	sp, r7
 826              		.cfi_def_cfa_register 13
 827              		@ sp needed
 828 00ec 80BD     		pop	{r7, pc}
 829              	.L50:
 830 00ee 00BF     		.align	2
 831              	.L49:
 832 00f0 00000000 		.word	SPIM_txBufferRead
 833 00f4 00000000 		.word	SPIM_txBufferWrite
 834 00f8 68650040 		.word	1073767784
 835 00fc 00000000 		.word	SPIM_swStatusTx
 836 0100 49640040 		.word	1073767497
 837 0104 00000000 		.word	SPIM_txBufferFull
 838 0108 00000000 		.word	SPIM_txBuffer
 839 010c 88650040 		.word	1073767816
 840              		.cfi_endproc
 841              	.LFE12:
 842              		.size	SPIM_WriteTxData, .-SPIM_WriteTxData
 843              		.section	.text.SPIM_ReadRxData,"ax",%progbits
 844              		.align	2
 845              		.global	SPIM_ReadRxData
 846              		.thumb
 847              		.thumb_func
 848              		.type	SPIM_ReadRxData, %function
 849              	SPIM_ReadRxData:
 850              	.LFB13:
 566:.\Generated_Source\PSoC5/SPIM.c **** 
 567:.\Generated_Source\PSoC5/SPIM.c **** 
 568:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 569:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadRxData
 570:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 571:.\Generated_Source\PSoC5/SPIM.c **** *
 572:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 573:.\Generated_Source\PSoC5/SPIM.c **** *  Read the next byte of data received across the SPI.
 574:.\Generated_Source\PSoC5/SPIM.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 26


 575:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 576:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 577:.\Generated_Source\PSoC5/SPIM.c **** *
 578:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 579:.\Generated_Source\PSoC5/SPIM.c **** *  The next byte of data read from the FIFO.
 580:.\Generated_Source\PSoC5/SPIM.c **** *
 581:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
 582:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 583:.\Generated_Source\PSoC5/SPIM.c **** *  have been written down in the RX software buffer.
 584:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 585:.\Generated_Source\PSoC5/SPIM.c **** *  have been read from the RX software buffer, modified every function
 586:.\Generated_Source\PSoC5/SPIM.c **** *  call if RX Software Buffer is used.
 587:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE] - used to store
 588:.\Generated_Source\PSoC5/SPIM.c **** *  received data.
 589:.\Generated_Source\PSoC5/SPIM.c **** *
 590:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 591:.\Generated_Source\PSoC5/SPIM.c **** *  Allows the user to read a byte of data received.
 592:.\Generated_Source\PSoC5/SPIM.c **** *
 593:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 594:.\Generated_Source\PSoC5/SPIM.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:.\Generated_Source\PSoC5/SPIM.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:.\Generated_Source\PSoC5/SPIM.c **** *  ReadByte() function.
 597:.\Generated_Source\PSoC5/SPIM.c **** *
 598:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 599:.\Generated_Source\PSoC5/SPIM.c **** *  No.
 600:.\Generated_Source\PSoC5/SPIM.c **** *
 601:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 602:.\Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadRxData(void) 
 603:.\Generated_Source\PSoC5/SPIM.c **** {
 851              		.loc 1 603 0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 8
 854              		@ frame_needed = 1, uses_anonymous_args = 0
 855 0000 80B5     		push	{r7, lr}
 856              		.cfi_def_cfa_offset 8
 857              		.cfi_offset 7, -8
 858              		.cfi_offset 14, -4
 859 0002 82B0     		sub	sp, sp, #8
 860              		.cfi_def_cfa_offset 16
 861 0004 00AF     		add	r7, sp, #0
 862              		.cfi_def_cfa_register 7
 604:.\Generated_Source\PSoC5/SPIM.c ****     uint8 rxData;
 605:.\Generated_Source\PSoC5/SPIM.c **** 
 606:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 607:.\Generated_Source\PSoC5/SPIM.c **** 
 608:.\Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 609:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 863              		.loc 1 609 0
 864 0006 FFF7FEFF 		bl	SPIM_DisableRxInt
 610:.\Generated_Source\PSoC5/SPIM.c **** 
 611:.\Generated_Source\PSoC5/SPIM.c ****         if(SPIM_rxBufferRead != SPIM_rxBufferWrite)
 865              		.loc 1 611 0
 866 000a 174B     		ldr	r3, .L56
 867 000c 1B78     		ldrb	r3, [r3]
 868 000e DAB2     		uxtb	r2, r3
 869 0010 164B     		ldr	r3, .L56+4
 870 0012 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 27


 871 0014 DBB2     		uxtb	r3, r3
 872 0016 9A42     		cmp	r2, r3
 873 0018 17D0     		beq	.L52
 612:.\Generated_Source\PSoC5/SPIM.c ****         {
 613:.\Generated_Source\PSoC5/SPIM.c ****             if(0u == SPIM_rxBufferFull)
 874              		.loc 1 613 0
 875 001a 154B     		ldr	r3, .L56+8
 876 001c 1B78     		ldrb	r3, [r3]
 877 001e DBB2     		uxtb	r3, r3
 878 0020 002B     		cmp	r3, #0
 879 0022 0FD1     		bne	.L53
 614:.\Generated_Source\PSoC5/SPIM.c ****             {
 615:.\Generated_Source\PSoC5/SPIM.c ****                 SPIM_rxBufferRead++;
 880              		.loc 1 615 0
 881 0024 104B     		ldr	r3, .L56
 882 0026 1B78     		ldrb	r3, [r3]
 883 0028 DBB2     		uxtb	r3, r3
 884 002a 0133     		adds	r3, r3, #1
 885 002c DAB2     		uxtb	r2, r3
 886 002e 0E4B     		ldr	r3, .L56
 887 0030 1A70     		strb	r2, [r3]
 616:.\Generated_Source\PSoC5/SPIM.c ****                 if(SPIM_rxBufferRead >= SPIM_RX_BUFFER_SIZE)
 888              		.loc 1 616 0
 889 0032 0D4B     		ldr	r3, .L56
 890 0034 1B78     		ldrb	r3, [r3]
 891 0036 DBB2     		uxtb	r3, r3
 892 0038 2F2B     		cmp	r3, #47
 893 003a 06D9     		bls	.L52
 617:.\Generated_Source\PSoC5/SPIM.c ****                 {
 618:.\Generated_Source\PSoC5/SPIM.c ****                     SPIM_rxBufferRead = 0u;
 894              		.loc 1 618 0
 895 003c 0A4B     		ldr	r3, .L56
 896 003e 0022     		movs	r2, #0
 897 0040 1A70     		strb	r2, [r3]
 898 0042 02E0     		b	.L52
 899              	.L53:
 619:.\Generated_Source\PSoC5/SPIM.c ****                 }
 620:.\Generated_Source\PSoC5/SPIM.c ****             }
 621:.\Generated_Source\PSoC5/SPIM.c ****             else
 622:.\Generated_Source\PSoC5/SPIM.c ****             {
 623:.\Generated_Source\PSoC5/SPIM.c ****                 SPIM_rxBufferFull = 0u;
 900              		.loc 1 623 0
 901 0044 0A4B     		ldr	r3, .L56+8
 902 0046 0022     		movs	r2, #0
 903 0048 1A70     		strb	r2, [r3]
 904              	.L52:
 624:.\Generated_Source\PSoC5/SPIM.c ****             }
 625:.\Generated_Source\PSoC5/SPIM.c ****         }
 626:.\Generated_Source\PSoC5/SPIM.c **** 
 627:.\Generated_Source\PSoC5/SPIM.c ****         rxData = SPIM_rxBuffer[SPIM_rxBufferRead];
 905              		.loc 1 627 0
 906 004a 074B     		ldr	r3, .L56
 907 004c 1B78     		ldrb	r3, [r3]
 908 004e DBB2     		uxtb	r3, r3
 909 0050 1A46     		mov	r2, r3
 910 0052 084B     		ldr	r3, .L56+12
 911 0054 9B5C     		ldrb	r3, [r3, r2]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 28


 912 0056 FB71     		strb	r3, [r7, #7]
 628:.\Generated_Source\PSoC5/SPIM.c **** 
 629:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 913              		.loc 1 629 0
 914 0058 FFF7FEFF 		bl	SPIM_EnableRxInt
 630:.\Generated_Source\PSoC5/SPIM.c **** 
 631:.\Generated_Source\PSoC5/SPIM.c ****     #else
 632:.\Generated_Source\PSoC5/SPIM.c **** 
 633:.\Generated_Source\PSoC5/SPIM.c ****         rxData = CY_GET_REG8(SPIM_RXDATA_PTR);
 634:.\Generated_Source\PSoC5/SPIM.c **** 
 635:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 636:.\Generated_Source\PSoC5/SPIM.c **** 
 637:.\Generated_Source\PSoC5/SPIM.c ****     return(rxData);
 915              		.loc 1 637 0
 916 005c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 638:.\Generated_Source\PSoC5/SPIM.c **** }
 917              		.loc 1 638 0
 918 005e 1846     		mov	r0, r3
 919 0060 0837     		adds	r7, r7, #8
 920              		.cfi_def_cfa_offset 8
 921 0062 BD46     		mov	sp, r7
 922              		.cfi_def_cfa_register 13
 923              		@ sp needed
 924 0064 80BD     		pop	{r7, pc}
 925              	.L57:
 926 0066 00BF     		.align	2
 927              	.L56:
 928 0068 00000000 		.word	SPIM_rxBufferRead
 929 006c 00000000 		.word	SPIM_rxBufferWrite
 930 0070 00000000 		.word	SPIM_rxBufferFull
 931 0074 00000000 		.word	SPIM_rxBuffer
 932              		.cfi_endproc
 933              	.LFE13:
 934              		.size	SPIM_ReadRxData, .-SPIM_ReadRxData
 935              		.section	.text.SPIM_GetRxBufferSize,"ax",%progbits
 936              		.align	2
 937              		.global	SPIM_GetRxBufferSize
 938              		.thumb
 939              		.thumb_func
 940              		.type	SPIM_GetRxBufferSize, %function
 941              	SPIM_GetRxBufferSize:
 942              	.LFB14:
 639:.\Generated_Source\PSoC5/SPIM.c **** 
 640:.\Generated_Source\PSoC5/SPIM.c **** 
 641:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 642:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_GetRxBufferSize
 643:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 644:.\Generated_Source\PSoC5/SPIM.c **** *
 645:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 646:.\Generated_Source\PSoC5/SPIM.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:.\Generated_Source\PSoC5/SPIM.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:.\Generated_Source\PSoC5/SPIM.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:.\Generated_Source\PSoC5/SPIM.c **** *
 650:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 651:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 652:.\Generated_Source\PSoC5/SPIM.c **** *
 653:.\Generated_Source\PSoC5/SPIM.c **** * Return:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 29


 654:.\Generated_Source\PSoC5/SPIM.c **** *  Integer count of the number of bytes/words in the RX buffer.
 655:.\Generated_Source\PSoC5/SPIM.c **** *
 656:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
 657:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 658:.\Generated_Source\PSoC5/SPIM.c **** *  have been written down in the RX software buffer.
 659:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 660:.\Generated_Source\PSoC5/SPIM.c **** *  have been read from the RX software buffer.
 661:.\Generated_Source\PSoC5/SPIM.c **** *
 662:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 663:.\Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
 664:.\Generated_Source\PSoC5/SPIM.c **** *
 665:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 666:.\Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_GetRxBufferSize(void) 
 667:.\Generated_Source\PSoC5/SPIM.c **** {
 943              		.loc 1 667 0
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 8
 946              		@ frame_needed = 1, uses_anonymous_args = 0
 947 0000 80B5     		push	{r7, lr}
 948              		.cfi_def_cfa_offset 8
 949              		.cfi_offset 7, -8
 950              		.cfi_offset 14, -4
 951 0002 82B0     		sub	sp, sp, #8
 952              		.cfi_def_cfa_offset 16
 953 0004 00AF     		add	r7, sp, #0
 954              		.cfi_def_cfa_register 7
 668:.\Generated_Source\PSoC5/SPIM.c ****     uint8 size;
 669:.\Generated_Source\PSoC5/SPIM.c **** 
 670:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 671:.\Generated_Source\PSoC5/SPIM.c **** 
 672:.\Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 673:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 955              		.loc 1 673 0
 956 0006 FFF7FEFF 		bl	SPIM_DisableRxInt
 674:.\Generated_Source\PSoC5/SPIM.c **** 
 675:.\Generated_Source\PSoC5/SPIM.c ****         if(SPIM_rxBufferRead == SPIM_rxBufferWrite)
 957              		.loc 1 675 0
 958 000a 164B     		ldr	r3, .L63
 959 000c 1B78     		ldrb	r3, [r3]
 960 000e DAB2     		uxtb	r2, r3
 961 0010 154B     		ldr	r3, .L63+4
 962 0012 1B78     		ldrb	r3, [r3]
 963 0014 DBB2     		uxtb	r3, r3
 964 0016 9A42     		cmp	r2, r3
 965 0018 02D1     		bne	.L59
 676:.\Generated_Source\PSoC5/SPIM.c ****         {
 677:.\Generated_Source\PSoC5/SPIM.c ****             size = 0u;
 966              		.loc 1 677 0
 967 001a 0023     		movs	r3, #0
 968 001c FB71     		strb	r3, [r7, #7]
 969 001e 1AE0     		b	.L60
 970              	.L59:
 678:.\Generated_Source\PSoC5/SPIM.c ****         }
 679:.\Generated_Source\PSoC5/SPIM.c ****         else if(SPIM_rxBufferRead < SPIM_rxBufferWrite)
 971              		.loc 1 679 0
 972 0020 104B     		ldr	r3, .L63
 973 0022 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 30


 974 0024 DAB2     		uxtb	r2, r3
 975 0026 104B     		ldr	r3, .L63+4
 976 0028 1B78     		ldrb	r3, [r3]
 977 002a DBB2     		uxtb	r3, r3
 978 002c 9A42     		cmp	r2, r3
 979 002e 08D2     		bcs	.L61
 680:.\Generated_Source\PSoC5/SPIM.c ****         {
 681:.\Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_rxBufferWrite - SPIM_rxBufferRead);
 980              		.loc 1 681 0
 981 0030 0D4B     		ldr	r3, .L63+4
 982 0032 1B78     		ldrb	r3, [r3]
 983 0034 DAB2     		uxtb	r2, r3
 984 0036 0B4B     		ldr	r3, .L63
 985 0038 1B78     		ldrb	r3, [r3]
 986 003a DBB2     		uxtb	r3, r3
 987 003c D31A     		subs	r3, r2, r3
 988 003e FB71     		strb	r3, [r7, #7]
 989 0040 09E0     		b	.L60
 990              	.L61:
 682:.\Generated_Source\PSoC5/SPIM.c ****         }
 683:.\Generated_Source\PSoC5/SPIM.c ****         else
 684:.\Generated_Source\PSoC5/SPIM.c ****         {
 685:.\Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_RX_BUFFER_SIZE - SPIM_rxBufferRead) + SPIM_rxBufferWrite;
 991              		.loc 1 685 0
 992 0042 094B     		ldr	r3, .L63+4
 993 0044 1B78     		ldrb	r3, [r3]
 994 0046 DAB2     		uxtb	r2, r3
 995 0048 064B     		ldr	r3, .L63
 996 004a 1B78     		ldrb	r3, [r3]
 997 004c DBB2     		uxtb	r3, r3
 998 004e D31A     		subs	r3, r2, r3
 999 0050 DBB2     		uxtb	r3, r3
 1000 0052 3033     		adds	r3, r3, #48
 1001 0054 FB71     		strb	r3, [r7, #7]
 1002              	.L60:
 686:.\Generated_Source\PSoC5/SPIM.c ****         }
 687:.\Generated_Source\PSoC5/SPIM.c **** 
 688:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 1003              		.loc 1 688 0
 1004 0056 FFF7FEFF 		bl	SPIM_EnableRxInt
 689:.\Generated_Source\PSoC5/SPIM.c **** 
 690:.\Generated_Source\PSoC5/SPIM.c ****     #else
 691:.\Generated_Source\PSoC5/SPIM.c **** 
 692:.\Generated_Source\PSoC5/SPIM.c ****         /* We can only know if there is data in the RX FIFO */
 693:.\Generated_Source\PSoC5/SPIM.c ****         size = (0u != (SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 694:.\Generated_Source\PSoC5/SPIM.c **** 
 695:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 696:.\Generated_Source\PSoC5/SPIM.c **** 
 697:.\Generated_Source\PSoC5/SPIM.c ****     return(size);
 1005              		.loc 1 697 0
 1006 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 698:.\Generated_Source\PSoC5/SPIM.c **** }
 1007              		.loc 1 698 0
 1008 005c 1846     		mov	r0, r3
 1009 005e 0837     		adds	r7, r7, #8
 1010              		.cfi_def_cfa_offset 8
 1011 0060 BD46     		mov	sp, r7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 31


 1012              		.cfi_def_cfa_register 13
 1013              		@ sp needed
 1014 0062 80BD     		pop	{r7, pc}
 1015              	.L64:
 1016              		.align	2
 1017              	.L63:
 1018 0064 00000000 		.word	SPIM_rxBufferRead
 1019 0068 00000000 		.word	SPIM_rxBufferWrite
 1020              		.cfi_endproc
 1021              	.LFE14:
 1022              		.size	SPIM_GetRxBufferSize, .-SPIM_GetRxBufferSize
 1023              		.section	.text.SPIM_GetTxBufferSize,"ax",%progbits
 1024              		.align	2
 1025              		.global	SPIM_GetTxBufferSize
 1026              		.thumb
 1027              		.thumb_func
 1028              		.type	SPIM_GetTxBufferSize, %function
 1029              	SPIM_GetTxBufferSize:
 1030              	.LFB15:
 699:.\Generated_Source\PSoC5/SPIM.c **** 
 700:.\Generated_Source\PSoC5/SPIM.c **** 
 701:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 702:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_GetTxBufferSize
 703:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 704:.\Generated_Source\PSoC5/SPIM.c **** *
 705:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 706:.\Generated_Source\PSoC5/SPIM.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:.\Generated_Source\PSoC5/SPIM.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:.\Generated_Source\PSoC5/SPIM.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 709:.\Generated_Source\PSoC5/SPIM.c **** *  Software Buffer.
 710:.\Generated_Source\PSoC5/SPIM.c **** *
 711:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 712:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 713:.\Generated_Source\PSoC5/SPIM.c **** *
 714:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 715:.\Generated_Source\PSoC5/SPIM.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:.\Generated_Source\PSoC5/SPIM.c **** *
 717:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
 718:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 719:.\Generated_Source\PSoC5/SPIM.c **** *  have been written down in the TX software buffer.
 720:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 721:.\Generated_Source\PSoC5/SPIM.c **** *  have been read from the TX software buffer.
 722:.\Generated_Source\PSoC5/SPIM.c **** *
 723:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 724:.\Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
 725:.\Generated_Source\PSoC5/SPIM.c **** *
 726:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 727:.\Generated_Source\PSoC5/SPIM.c **** uint8  SPIM_GetTxBufferSize(void) 
 728:.\Generated_Source\PSoC5/SPIM.c **** {
 1031              		.loc 1 728 0
 1032              		.cfi_startproc
 1033              		@ args = 0, pretend = 0, frame = 8
 1034              		@ frame_needed = 1, uses_anonymous_args = 0
 1035 0000 80B5     		push	{r7, lr}
 1036              		.cfi_def_cfa_offset 8
 1037              		.cfi_offset 7, -8
 1038              		.cfi_offset 14, -4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 32


 1039 0002 82B0     		sub	sp, sp, #8
 1040              		.cfi_def_cfa_offset 16
 1041 0004 00AF     		add	r7, sp, #0
 1042              		.cfi_def_cfa_register 7
 729:.\Generated_Source\PSoC5/SPIM.c ****     uint8 size;
 730:.\Generated_Source\PSoC5/SPIM.c **** 
 731:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 732:.\Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 733:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 1043              		.loc 1 733 0
 1044 0006 FFF7FEFF 		bl	SPIM_DisableTxInt
 734:.\Generated_Source\PSoC5/SPIM.c **** 
 735:.\Generated_Source\PSoC5/SPIM.c ****         if(SPIM_txBufferRead == SPIM_txBufferWrite)
 1045              		.loc 1 735 0
 1046 000a 164B     		ldr	r3, .L70
 1047 000c 1B78     		ldrb	r3, [r3]
 1048 000e DAB2     		uxtb	r2, r3
 1049 0010 154B     		ldr	r3, .L70+4
 1050 0012 1B78     		ldrb	r3, [r3]
 1051 0014 DBB2     		uxtb	r3, r3
 1052 0016 9A42     		cmp	r2, r3
 1053 0018 02D1     		bne	.L66
 736:.\Generated_Source\PSoC5/SPIM.c ****         {
 737:.\Generated_Source\PSoC5/SPIM.c ****             size = 0u;
 1054              		.loc 1 737 0
 1055 001a 0023     		movs	r3, #0
 1056 001c FB71     		strb	r3, [r7, #7]
 1057 001e 1AE0     		b	.L67
 1058              	.L66:
 738:.\Generated_Source\PSoC5/SPIM.c ****         }
 739:.\Generated_Source\PSoC5/SPIM.c ****         else if(SPIM_txBufferRead < SPIM_txBufferWrite)
 1059              		.loc 1 739 0
 1060 0020 104B     		ldr	r3, .L70
 1061 0022 1B78     		ldrb	r3, [r3]
 1062 0024 DAB2     		uxtb	r2, r3
 1063 0026 104B     		ldr	r3, .L70+4
 1064 0028 1B78     		ldrb	r3, [r3]
 1065 002a DBB2     		uxtb	r3, r3
 1066 002c 9A42     		cmp	r2, r3
 1067 002e 08D2     		bcs	.L68
 740:.\Generated_Source\PSoC5/SPIM.c ****         {
 741:.\Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_txBufferWrite - SPIM_txBufferRead);
 1068              		.loc 1 741 0
 1069 0030 0D4B     		ldr	r3, .L70+4
 1070 0032 1B78     		ldrb	r3, [r3]
 1071 0034 DAB2     		uxtb	r2, r3
 1072 0036 0B4B     		ldr	r3, .L70
 1073 0038 1B78     		ldrb	r3, [r3]
 1074 003a DBB2     		uxtb	r3, r3
 1075 003c D31A     		subs	r3, r2, r3
 1076 003e FB71     		strb	r3, [r7, #7]
 1077 0040 09E0     		b	.L67
 1078              	.L68:
 742:.\Generated_Source\PSoC5/SPIM.c ****         }
 743:.\Generated_Source\PSoC5/SPIM.c ****         else
 744:.\Generated_Source\PSoC5/SPIM.c ****         {
 745:.\Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_TX_BUFFER_SIZE - SPIM_txBufferRead) + SPIM_txBufferWrite;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 33


 1079              		.loc 1 745 0
 1080 0042 094B     		ldr	r3, .L70+4
 1081 0044 1B78     		ldrb	r3, [r3]
 1082 0046 DAB2     		uxtb	r2, r3
 1083 0048 064B     		ldr	r3, .L70
 1084 004a 1B78     		ldrb	r3, [r3]
 1085 004c DBB2     		uxtb	r3, r3
 1086 004e D31A     		subs	r3, r2, r3
 1087 0050 DBB2     		uxtb	r3, r3
 1088 0052 3033     		adds	r3, r3, #48
 1089 0054 FB71     		strb	r3, [r7, #7]
 1090              	.L67:
 746:.\Generated_Source\PSoC5/SPIM.c ****         }
 747:.\Generated_Source\PSoC5/SPIM.c **** 
 748:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 1091              		.loc 1 748 0
 1092 0056 FFF7FEFF 		bl	SPIM_EnableTxInt
 749:.\Generated_Source\PSoC5/SPIM.c **** 
 750:.\Generated_Source\PSoC5/SPIM.c ****     #else
 751:.\Generated_Source\PSoC5/SPIM.c **** 
 752:.\Generated_Source\PSoC5/SPIM.c ****         size = SPIM_TX_STATUS_REG;
 753:.\Generated_Source\PSoC5/SPIM.c **** 
 754:.\Generated_Source\PSoC5/SPIM.c ****         if(0u != (size & SPIM_STS_TX_FIFO_EMPTY))
 755:.\Generated_Source\PSoC5/SPIM.c ****         {
 756:.\Generated_Source\PSoC5/SPIM.c ****             size = 0u;
 757:.\Generated_Source\PSoC5/SPIM.c ****         }
 758:.\Generated_Source\PSoC5/SPIM.c ****         else if(0u != (size & SPIM_STS_TX_FIFO_NOT_FULL))
 759:.\Generated_Source\PSoC5/SPIM.c ****         {
 760:.\Generated_Source\PSoC5/SPIM.c ****             size = 1u;
 761:.\Generated_Source\PSoC5/SPIM.c ****         }
 762:.\Generated_Source\PSoC5/SPIM.c ****         else
 763:.\Generated_Source\PSoC5/SPIM.c ****         {
 764:.\Generated_Source\PSoC5/SPIM.c ****             size = SPIM_FIFO_SIZE;
 765:.\Generated_Source\PSoC5/SPIM.c ****         }
 766:.\Generated_Source\PSoC5/SPIM.c **** 
 767:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 768:.\Generated_Source\PSoC5/SPIM.c **** 
 769:.\Generated_Source\PSoC5/SPIM.c ****     return(size);
 1093              		.loc 1 769 0
 1094 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 770:.\Generated_Source\PSoC5/SPIM.c **** }
 1095              		.loc 1 770 0
 1096 005c 1846     		mov	r0, r3
 1097 005e 0837     		adds	r7, r7, #8
 1098              		.cfi_def_cfa_offset 8
 1099 0060 BD46     		mov	sp, r7
 1100              		.cfi_def_cfa_register 13
 1101              		@ sp needed
 1102 0062 80BD     		pop	{r7, pc}
 1103              	.L71:
 1104              		.align	2
 1105              	.L70:
 1106 0064 00000000 		.word	SPIM_txBufferRead
 1107 0068 00000000 		.word	SPIM_txBufferWrite
 1108              		.cfi_endproc
 1109              	.LFE15:
 1110              		.size	SPIM_GetTxBufferSize, .-SPIM_GetTxBufferSize
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 34


 1111              		.section	.text.SPIM_ClearRxBuffer,"ax",%progbits
 1112              		.align	2
 1113              		.global	SPIM_ClearRxBuffer
 1114              		.thumb
 1115              		.thumb_func
 1116              		.type	SPIM_ClearRxBuffer, %function
 1117              	SPIM_ClearRxBuffer:
 1118              	.LFB16:
 771:.\Generated_Source\PSoC5/SPIM.c **** 
 772:.\Generated_Source\PSoC5/SPIM.c **** 
 773:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 774:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ClearRxBuffer
 775:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 776:.\Generated_Source\PSoC5/SPIM.c **** *
 777:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 778:.\Generated_Source\PSoC5/SPIM.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:.\Generated_Source\PSoC5/SPIM.c **** *
 780:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 781:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 782:.\Generated_Source\PSoC5/SPIM.c **** *
 783:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 784:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 785:.\Generated_Source\PSoC5/SPIM.c **** *
 786:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
 787:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 788:.\Generated_Source\PSoC5/SPIM.c **** *  have been written down in the RX software buffer, modified every function
 789:.\Generated_Source\PSoC5/SPIM.c **** *  call - resets to zero.
 790:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 791:.\Generated_Source\PSoC5/SPIM.c **** *  have been read from the RX software buffer, modified every function call -
 792:.\Generated_Source\PSoC5/SPIM.c **** *  resets to zero.
 793:.\Generated_Source\PSoC5/SPIM.c **** *
 794:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 795:.\Generated_Source\PSoC5/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:.\Generated_Source\PSoC5/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:.\Generated_Source\PSoC5/SPIM.c **** *  remained in the RAM.
 798:.\Generated_Source\PSoC5/SPIM.c **** *
 799:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 800:.\Generated_Source\PSoC5/SPIM.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:.\Generated_Source\PSoC5/SPIM.c **** *
 802:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 803:.\Generated_Source\PSoC5/SPIM.c **** *  No.
 804:.\Generated_Source\PSoC5/SPIM.c **** *
 805:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_ClearRxBuffer(void) 
 807:.\Generated_Source\PSoC5/SPIM.c **** {
 1119              		.loc 1 807 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 0
 1122              		@ frame_needed = 1, uses_anonymous_args = 0
 1123 0000 80B5     		push	{r7, lr}
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 7, -8
 1126              		.cfi_offset 14, -4
 1127 0002 00AF     		add	r7, sp, #0
 1128              		.cfi_def_cfa_register 7
 808:.\Generated_Source\PSoC5/SPIM.c ****     /* Clear Hardware RX FIFO */
 809:.\Generated_Source\PSoC5/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 35


 1129              		.loc 1 809 0
 1130 0004 01E0     		b	.L73
 1131              	.L74:
 810:.\Generated_Source\PSoC5/SPIM.c ****     {
 811:.\Generated_Source\PSoC5/SPIM.c ****         (void) CY_GET_REG8(SPIM_RXDATA_PTR);
 1132              		.loc 1 811 0
 1133 0006 0B4B     		ldr	r3, .L75
 1134 0008 1B78     		ldrb	r3, [r3]
 1135              	.L73:
 809:.\Generated_Source\PSoC5/SPIM.c ****     {
 1136              		.loc 1 809 0
 1137 000a 0B4B     		ldr	r3, .L75+4
 1138 000c 1B78     		ldrb	r3, [r3]
 1139 000e DBB2     		uxtb	r3, r3
 1140 0010 03F02003 		and	r3, r3, #32
 1141 0014 002B     		cmp	r3, #0
 1142 0016 F6D1     		bne	.L74
 812:.\Generated_Source\PSoC5/SPIM.c ****     }
 813:.\Generated_Source\PSoC5/SPIM.c **** 
 814:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 815:.\Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 816:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 1143              		.loc 1 816 0
 1144 0018 FFF7FEFF 		bl	SPIM_DisableRxInt
 817:.\Generated_Source\PSoC5/SPIM.c **** 
 818:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferFull  = 0u;
 1145              		.loc 1 818 0
 1146 001c 074B     		ldr	r3, .L75+8
 1147 001e 0022     		movs	r2, #0
 1148 0020 1A70     		strb	r2, [r3]
 819:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferRead  = 0u;
 1149              		.loc 1 819 0
 1150 0022 074B     		ldr	r3, .L75+12
 1151 0024 0022     		movs	r2, #0
 1152 0026 1A70     		strb	r2, [r3]
 820:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferWrite = 0u;
 1153              		.loc 1 820 0
 1154 0028 064B     		ldr	r3, .L75+16
 1155 002a 0022     		movs	r2, #0
 1156 002c 1A70     		strb	r2, [r3]
 821:.\Generated_Source\PSoC5/SPIM.c **** 
 822:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 1157              		.loc 1 822 0
 1158 002e FFF7FEFF 		bl	SPIM_EnableRxInt
 823:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 824:.\Generated_Source\PSoC5/SPIM.c **** }
 1159              		.loc 1 824 0
 1160 0032 80BD     		pop	{r7, pc}
 1161              	.L76:
 1162              		.align	2
 1163              	.L75:
 1164 0034 59640040 		.word	1073767513
 1165 0038 69650040 		.word	1073767785
 1166 003c 00000000 		.word	SPIM_rxBufferFull
 1167 0040 00000000 		.word	SPIM_rxBufferRead
 1168 0044 00000000 		.word	SPIM_rxBufferWrite
 1169              		.cfi_endproc
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 36


 1170              	.LFE16:
 1171              		.size	SPIM_ClearRxBuffer, .-SPIM_ClearRxBuffer
 1172              		.section	.text.SPIM_ClearTxBuffer,"ax",%progbits
 1173              		.align	2
 1174              		.global	SPIM_ClearTxBuffer
 1175              		.thumb
 1176              		.thumb_func
 1177              		.type	SPIM_ClearTxBuffer, %function
 1178              	SPIM_ClearTxBuffer:
 1179              	.LFB17:
 825:.\Generated_Source\PSoC5/SPIM.c **** 
 826:.\Generated_Source\PSoC5/SPIM.c **** 
 827:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 828:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ClearTxBuffer
 829:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 830:.\Generated_Source\PSoC5/SPIM.c **** *
 831:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 832:.\Generated_Source\PSoC5/SPIM.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:.\Generated_Source\PSoC5/SPIM.c **** *
 834:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 835:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 836:.\Generated_Source\PSoC5/SPIM.c **** *
 837:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 838:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 839:.\Generated_Source\PSoC5/SPIM.c **** *
 840:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
 841:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 842:.\Generated_Source\PSoC5/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 843:.\Generated_Source\PSoC5/SPIM.c **** *  call - resets to zero.
 844:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 845:.\Generated_Source\PSoC5/SPIM.c **** *  have been read from the TX software buffer, modified every function call -
 846:.\Generated_Source\PSoC5/SPIM.c **** *  resets to zero.
 847:.\Generated_Source\PSoC5/SPIM.c **** *
 848:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 849:.\Generated_Source\PSoC5/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:.\Generated_Source\PSoC5/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:.\Generated_Source\PSoC5/SPIM.c **** *  remained in the RAM.
 852:.\Generated_Source\PSoC5/SPIM.c **** *
 853:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 854:.\Generated_Source\PSoC5/SPIM.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:.\Generated_Source\PSoC5/SPIM.c **** *  overwritten.
 856:.\Generated_Source\PSoC5/SPIM.c **** *
 857:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 858:.\Generated_Source\PSoC5/SPIM.c **** *  No.
 859:.\Generated_Source\PSoC5/SPIM.c **** *
 860:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 861:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_ClearTxBuffer(void) 
 862:.\Generated_Source\PSoC5/SPIM.c **** {
 1180              		.loc 1 862 0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 8
 1183              		@ frame_needed = 1, uses_anonymous_args = 0
 1184 0000 80B5     		push	{r7, lr}
 1185              		.cfi_def_cfa_offset 8
 1186              		.cfi_offset 7, -8
 1187              		.cfi_offset 14, -4
 1188 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 37


 1189              		.cfi_def_cfa_offset 16
 1190 0004 00AF     		add	r7, sp, #0
 1191              		.cfi_def_cfa_register 7
 863:.\Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 864:.\Generated_Source\PSoC5/SPIM.c **** 
 865:.\Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 1192              		.loc 1 865 0
 1193 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1194 000a 0346     		mov	r3, r0
 1195 000c FB71     		strb	r3, [r7, #7]
 866:.\Generated_Source\PSoC5/SPIM.c ****     /* Clear TX FIFO */
 867:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 1196              		.loc 1 867 0
 1197 000e 164A     		ldr	r2, .L78
 1198 0010 154B     		ldr	r3, .L78
 1199 0012 1B78     		ldrb	r3, [r3]
 1200 0014 DBB2     		uxtb	r3, r3
 1201 0016 43F00103 		orr	r3, r3, #1
 1202 001a DBB2     		uxtb	r3, r3
 1203 001c 1370     		strb	r3, [r2]
 868:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 1204              		.loc 1 868 0
 1205 001e 124A     		ldr	r2, .L78
 1206 0020 114B     		ldr	r3, .L78
 1207 0022 1B78     		ldrb	r3, [r3]
 1208 0024 DBB2     		uxtb	r3, r3
 1209 0026 23F00103 		bic	r3, r3, #1
 1210 002a DBB2     		uxtb	r3, r3
 1211 002c 1370     		strb	r3, [r2]
 869:.\Generated_Source\PSoC5/SPIM.c **** 
 870:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
 871:.\Generated_Source\PSoC5/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 873:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 874:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
 875:.\Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 1212              		.loc 1 875 0
 1213 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1214 0030 1846     		mov	r0, r3
 1215 0032 FFF7FEFF 		bl	CyExitCriticalSection
 876:.\Generated_Source\PSoC5/SPIM.c **** 
 877:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 878:.\Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 879:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 1216              		.loc 1 879 0
 1217 0036 FFF7FEFF 		bl	SPIM_DisableTxInt
 880:.\Generated_Source\PSoC5/SPIM.c **** 
 881:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferFull  = 0u;
 1218              		.loc 1 881 0
 1219 003a 0C4B     		ldr	r3, .L78+4
 1220 003c 0022     		movs	r2, #0
 1221 003e 1A70     		strb	r2, [r3]
 882:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferRead  = 0u;
 1222              		.loc 1 882 0
 1223 0040 0B4B     		ldr	r3, .L78+8
 1224 0042 0022     		movs	r2, #0
 1225 0044 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 38


 883:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferWrite = 0u;
 1226              		.loc 1 883 0
 1227 0046 0B4B     		ldr	r3, .L78+12
 1228 0048 0022     		movs	r2, #0
 1229 004a 1A70     		strb	r2, [r3]
 884:.\Generated_Source\PSoC5/SPIM.c **** 
 885:.\Generated_Source\PSoC5/SPIM.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_TX_STATUS_MASK_REG &= ((uint8) ~SPIM_STS_TX_FIFO_NOT_FULL);
 1230              		.loc 1 886 0
 1231 004c 0A4A     		ldr	r2, .L78+16
 1232 004e 0A4B     		ldr	r3, .L78+16
 1233 0050 1B78     		ldrb	r3, [r3]
 1234 0052 DBB2     		uxtb	r3, r3
 1235 0054 23F00403 		bic	r3, r3, #4
 1236 0058 DBB2     		uxtb	r3, r3
 1237 005a 1370     		strb	r3, [r2]
 887:.\Generated_Source\PSoC5/SPIM.c **** 
 888:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 1238              		.loc 1 888 0
 1239 005c FFF7FEFF 		bl	SPIM_EnableTxInt
 889:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 890:.\Generated_Source\PSoC5/SPIM.c **** }
 1240              		.loc 1 890 0
 1241 0060 0837     		adds	r7, r7, #8
 1242              		.cfi_def_cfa_offset 8
 1243 0062 BD46     		mov	sp, r7
 1244              		.cfi_def_cfa_register 13
 1245              		@ sp needed
 1246 0064 80BD     		pop	{r7, pc}
 1247              	.L79:
 1248 0066 00BF     		.align	2
 1249              	.L78:
 1250 0068 99640040 		.word	1073767577
 1251 006c 00000000 		.word	SPIM_txBufferFull
 1252 0070 00000000 		.word	SPIM_txBufferRead
 1253 0074 00000000 		.word	SPIM_txBufferWrite
 1254 0078 88650040 		.word	1073767816
 1255              		.cfi_endproc
 1256              	.LFE17:
 1257              		.size	SPIM_ClearTxBuffer, .-SPIM_ClearTxBuffer
 1258              		.section	.text.SPIM_PutArray,"ax",%progbits
 1259              		.align	2
 1260              		.global	SPIM_PutArray
 1261              		.thumb
 1262              		.thumb_func
 1263              		.type	SPIM_PutArray, %function
 1264              	SPIM_PutArray:
 1265              	.LFB18:
 891:.\Generated_Source\PSoC5/SPIM.c **** 
 892:.\Generated_Source\PSoC5/SPIM.c **** 
 893:.\Generated_Source\PSoC5/SPIM.c **** #if(0u != SPIM_BIDIRECTIONAL_MODE)
 894:.\Generated_Source\PSoC5/SPIM.c ****     /*******************************************************************************
 895:.\Generated_Source\PSoC5/SPIM.c ****     * Function Name: SPIM_TxEnable
 896:.\Generated_Source\PSoC5/SPIM.c ****     ********************************************************************************
 897:.\Generated_Source\PSoC5/SPIM.c ****     *
 898:.\Generated_Source\PSoC5/SPIM.c ****     * Summary:
 899:.\Generated_Source\PSoC5/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 39


 900:.\Generated_Source\PSoC5/SPIM.c ****     *  will set the bi-directional pin to transmit.
 901:.\Generated_Source\PSoC5/SPIM.c ****     *
 902:.\Generated_Source\PSoC5/SPIM.c ****     * Parameters:
 903:.\Generated_Source\PSoC5/SPIM.c ****     *  None.
 904:.\Generated_Source\PSoC5/SPIM.c ****     *
 905:.\Generated_Source\PSoC5/SPIM.c ****     * Return:
 906:.\Generated_Source\PSoC5/SPIM.c ****     *  None.
 907:.\Generated_Source\PSoC5/SPIM.c ****     *
 908:.\Generated_Source\PSoC5/SPIM.c ****     *******************************************************************************/
 909:.\Generated_Source\PSoC5/SPIM.c ****     void SPIM_TxEnable(void) 
 910:.\Generated_Source\PSoC5/SPIM.c ****     {
 911:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_CONTROL_REG |= SPIM_CTRL_TX_SIGNAL_EN;
 912:.\Generated_Source\PSoC5/SPIM.c ****     }
 913:.\Generated_Source\PSoC5/SPIM.c **** 
 914:.\Generated_Source\PSoC5/SPIM.c **** 
 915:.\Generated_Source\PSoC5/SPIM.c ****     /*******************************************************************************
 916:.\Generated_Source\PSoC5/SPIM.c ****     * Function Name: SPIM_TxDisable
 917:.\Generated_Source\PSoC5/SPIM.c ****     ********************************************************************************
 918:.\Generated_Source\PSoC5/SPIM.c ****     *
 919:.\Generated_Source\PSoC5/SPIM.c ****     * Summary:
 920:.\Generated_Source\PSoC5/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:.\Generated_Source\PSoC5/SPIM.c ****     *  will set the bi-directional pin to receive.
 922:.\Generated_Source\PSoC5/SPIM.c ****     *
 923:.\Generated_Source\PSoC5/SPIM.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/SPIM.c ****     *  None.
 925:.\Generated_Source\PSoC5/SPIM.c ****     *
 926:.\Generated_Source\PSoC5/SPIM.c ****     * Return:
 927:.\Generated_Source\PSoC5/SPIM.c ****     *  None.
 928:.\Generated_Source\PSoC5/SPIM.c ****     *
 929:.\Generated_Source\PSoC5/SPIM.c ****     *******************************************************************************/
 930:.\Generated_Source\PSoC5/SPIM.c ****     void SPIM_TxDisable(void) 
 931:.\Generated_Source\PSoC5/SPIM.c ****     {
 932:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_CONTROL_REG &= ((uint8) ~SPIM_CTRL_TX_SIGNAL_EN);
 933:.\Generated_Source\PSoC5/SPIM.c ****     }
 934:.\Generated_Source\PSoC5/SPIM.c **** 
 935:.\Generated_Source\PSoC5/SPIM.c **** #endif /* (0u != SPIM_BIDIRECTIONAL_MODE) */
 936:.\Generated_Source\PSoC5/SPIM.c **** 
 937:.\Generated_Source\PSoC5/SPIM.c **** 
 938:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 939:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_PutArray
 940:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 941:.\Generated_Source\PSoC5/SPIM.c **** *
 942:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 943:.\Generated_Source\PSoC5/SPIM.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:.\Generated_Source\PSoC5/SPIM.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:.\Generated_Source\PSoC5/SPIM.c **** *
 946:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 947:.\Generated_Source\PSoC5/SPIM.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:.\Generated_Source\PSoC5/SPIM.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:.\Generated_Source\PSoC5/SPIM.c **** *
 950:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 951:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 952:.\Generated_Source\PSoC5/SPIM.c **** *
 953:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 954:.\Generated_Source\PSoC5/SPIM.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:.\Generated_Source\PSoC5/SPIM.c **** *  this loop if data is not being initiated by the master if there is not
 956:.\Generated_Source\PSoC5/SPIM.c **** *  enough room in the TX FIFO.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 40


 957:.\Generated_Source\PSoC5/SPIM.c **** *
 958:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 959:.\Generated_Source\PSoC5/SPIM.c **** *  No.
 960:.\Generated_Source\PSoC5/SPIM.c **** *
 961:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 962:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_PutArray(const uint8 buffer[], uint8 byteCount)
 963:.\Generated_Source\PSoC5/SPIM.c ****                                                                           
 964:.\Generated_Source\PSoC5/SPIM.c **** {
 1266              		.loc 1 964 0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 16
 1269              		@ frame_needed = 1, uses_anonymous_args = 0
 1270 0000 80B5     		push	{r7, lr}
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 7, -8
 1273              		.cfi_offset 14, -4
 1274 0002 84B0     		sub	sp, sp, #16
 1275              		.cfi_def_cfa_offset 24
 1276 0004 00AF     		add	r7, sp, #0
 1277              		.cfi_def_cfa_register 7
 1278 0006 7860     		str	r0, [r7, #4]
 1279 0008 0B46     		mov	r3, r1
 1280 000a FB70     		strb	r3, [r7, #3]
 965:.\Generated_Source\PSoC5/SPIM.c ****     uint8 bufIndex;
 966:.\Generated_Source\PSoC5/SPIM.c **** 
 967:.\Generated_Source\PSoC5/SPIM.c ****     bufIndex = 0u;
 1281              		.loc 1 967 0
 1282 000c 0023     		movs	r3, #0
 1283 000e FB73     		strb	r3, [r7, #15]
 968:.\Generated_Source\PSoC5/SPIM.c **** 
 969:.\Generated_Source\PSoC5/SPIM.c ****     while(byteCount > 0u)
 1284              		.loc 1 969 0
 1285 0010 0CE0     		b	.L81
 1286              	.L82:
 970:.\Generated_Source\PSoC5/SPIM.c ****     {
 971:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_WriteTxData(buffer[bufIndex]);
 1287              		.loc 1 971 0
 1288 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1289 0014 7A68     		ldr	r2, [r7, #4]
 1290 0016 1344     		add	r3, r3, r2
 1291 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1292 001a 1846     		mov	r0, r3
 1293 001c FFF7FEFF 		bl	SPIM_WriteTxData
 972:.\Generated_Source\PSoC5/SPIM.c ****         bufIndex++;
 1294              		.loc 1 972 0
 1295 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1296 0022 0133     		adds	r3, r3, #1
 1297 0024 FB73     		strb	r3, [r7, #15]
 973:.\Generated_Source\PSoC5/SPIM.c ****         byteCount--;
 1298              		.loc 1 973 0
 1299 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1300 0028 013B     		subs	r3, r3, #1
 1301 002a FB70     		strb	r3, [r7, #3]
 1302              	.L81:
 969:.\Generated_Source\PSoC5/SPIM.c ****     {
 1303              		.loc 1 969 0
 1304 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 41


 1305 002e 002B     		cmp	r3, #0
 1306 0030 EFD1     		bne	.L82
 974:.\Generated_Source\PSoC5/SPIM.c ****     }
 975:.\Generated_Source\PSoC5/SPIM.c **** }
 1307              		.loc 1 975 0
 1308 0032 1037     		adds	r7, r7, #16
 1309              		.cfi_def_cfa_offset 8
 1310 0034 BD46     		mov	sp, r7
 1311              		.cfi_def_cfa_register 13
 1312              		@ sp needed
 1313 0036 80BD     		pop	{r7, pc}
 1314              		.cfi_endproc
 1315              	.LFE18:
 1316              		.size	SPIM_PutArray, .-SPIM_PutArray
 1317              		.section	.text.SPIM_ClearFIFO,"ax",%progbits
 1318              		.align	2
 1319              		.global	SPIM_ClearFIFO
 1320              		.thumb
 1321              		.thumb_func
 1322              		.type	SPIM_ClearFIFO, %function
 1323              	SPIM_ClearFIFO:
 1324              	.LFB19:
 976:.\Generated_Source\PSoC5/SPIM.c **** 
 977:.\Generated_Source\PSoC5/SPIM.c **** 
 978:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 979:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ClearFIFO
 980:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 981:.\Generated_Source\PSoC5/SPIM.c **** *
 982:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 983:.\Generated_Source\PSoC5/SPIM.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 984:.\Generated_Source\PSoC5/SPIM.c **** *
 985:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 986:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 987:.\Generated_Source\PSoC5/SPIM.c **** *
 988:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 989:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 990:.\Generated_Source\PSoC5/SPIM.c **** *
 991:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 992:.\Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
 993:.\Generated_Source\PSoC5/SPIM.c **** *
 994:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 995:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_ClearFIFO(void) 
 996:.\Generated_Source\PSoC5/SPIM.c **** {
 1325              		.loc 1 996 0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 8
 1328              		@ frame_needed = 1, uses_anonymous_args = 0
 1329 0000 80B5     		push	{r7, lr}
 1330              		.cfi_def_cfa_offset 8
 1331              		.cfi_offset 7, -8
 1332              		.cfi_offset 14, -4
 1333 0002 82B0     		sub	sp, sp, #8
 1334              		.cfi_def_cfa_offset 16
 1335 0004 00AF     		add	r7, sp, #0
 1336              		.cfi_def_cfa_register 7
 997:.\Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 998:.\Generated_Source\PSoC5/SPIM.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 42


 999:.\Generated_Source\PSoC5/SPIM.c ****     /* Clear Hardware RX FIFO */
1000:.\Generated_Source\PSoC5/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 1337              		.loc 1 1000 0
 1338 0006 01E0     		b	.L84
 1339              	.L85:
1001:.\Generated_Source\PSoC5/SPIM.c ****     {
1002:.\Generated_Source\PSoC5/SPIM.c ****         (void) CY_GET_REG8(SPIM_RXDATA_PTR);
 1340              		.loc 1 1002 0
 1341 0008 114B     		ldr	r3, .L86
 1342 000a 1B78     		ldrb	r3, [r3]
 1343              	.L84:
1000:.\Generated_Source\PSoC5/SPIM.c ****     {
 1344              		.loc 1 1000 0
 1345 000c 114B     		ldr	r3, .L86+4
 1346 000e 1B78     		ldrb	r3, [r3]
 1347 0010 DBB2     		uxtb	r3, r3
 1348 0012 03F02003 		and	r3, r3, #32
 1349 0016 002B     		cmp	r3, #0
 1350 0018 F6D1     		bne	.L85
1003:.\Generated_Source\PSoC5/SPIM.c ****     }
1004:.\Generated_Source\PSoC5/SPIM.c **** 
1005:.\Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 1351              		.loc 1 1005 0
 1352 001a FFF7FEFF 		bl	CyEnterCriticalSection
 1353 001e 0346     		mov	r3, r0
 1354 0020 FB71     		strb	r3, [r7, #7]
1006:.\Generated_Source\PSoC5/SPIM.c ****     /* Clear TX FIFO */
1007:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 1355              		.loc 1 1007 0
 1356 0022 0D4A     		ldr	r2, .L86+8
 1357 0024 0C4B     		ldr	r3, .L86+8
 1358 0026 1B78     		ldrb	r3, [r3]
 1359 0028 DBB2     		uxtb	r3, r3
 1360 002a 43F00103 		orr	r3, r3, #1
 1361 002e DBB2     		uxtb	r3, r3
 1362 0030 1370     		strb	r3, [r2]
1008:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 1363              		.loc 1 1008 0
 1364 0032 094A     		ldr	r2, .L86+8
 1365 0034 084B     		ldr	r3, .L86+8
 1366 0036 1B78     		ldrb	r3, [r3]
 1367 0038 DBB2     		uxtb	r3, r3
 1368 003a 23F00103 		bic	r3, r3, #1
 1369 003e DBB2     		uxtb	r3, r3
 1370 0040 1370     		strb	r3, [r2]
1009:.\Generated_Source\PSoC5/SPIM.c **** 
1010:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
1011:.\Generated_Source\PSoC5/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
1013:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
1014:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
1015:.\Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 1371              		.loc 1 1015 0
 1372 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1373 0044 1846     		mov	r0, r3
 1374 0046 FFF7FEFF 		bl	CyExitCriticalSection
1016:.\Generated_Source\PSoC5/SPIM.c **** }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 43


 1375              		.loc 1 1016 0
 1376 004a 0837     		adds	r7, r7, #8
 1377              		.cfi_def_cfa_offset 8
 1378 004c BD46     		mov	sp, r7
 1379              		.cfi_def_cfa_register 13
 1380              		@ sp needed
 1381 004e 80BD     		pop	{r7, pc}
 1382              	.L87:
 1383              		.align	2
 1384              	.L86:
 1385 0050 59640040 		.word	1073767513
 1386 0054 69650040 		.word	1073767785
 1387 0058 99640040 		.word	1073767577
 1388              		.cfi_endproc
 1389              	.LFE19:
 1390              		.size	SPIM_ClearFIFO, .-SPIM_ClearFIFO
 1391              		.section	.text.SPIM_EnableInt,"ax",%progbits
 1392              		.align	2
 1393              		.global	SPIM_EnableInt
 1394              		.thumb
 1395              		.thumb_func
 1396              		.type	SPIM_EnableInt, %function
 1397              	SPIM_EnableInt:
 1398              	.LFB20:
1017:.\Generated_Source\PSoC5/SPIM.c **** 
1018:.\Generated_Source\PSoC5/SPIM.c **** 
1019:.\Generated_Source\PSoC5/SPIM.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:.\Generated_Source\PSoC5/SPIM.c **** *  Please do not use it in new projects.
1021:.\Generated_Source\PSoC5/SPIM.c **** */
1022:.\Generated_Source\PSoC5/SPIM.c **** 
1023:.\Generated_Source\PSoC5/SPIM.c **** 
1024:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1025:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_EnableInt
1026:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1027:.\Generated_Source\PSoC5/SPIM.c **** *
1028:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
1029:.\Generated_Source\PSoC5/SPIM.c **** *  Enable internal interrupt generation.
1030:.\Generated_Source\PSoC5/SPIM.c **** *
1031:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
1032:.\Generated_Source\PSoC5/SPIM.c **** *  None.
1033:.\Generated_Source\PSoC5/SPIM.c **** *
1034:.\Generated_Source\PSoC5/SPIM.c **** * Return:
1035:.\Generated_Source\PSoC5/SPIM.c **** *  None.
1036:.\Generated_Source\PSoC5/SPIM.c **** *
1037:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
1038:.\Generated_Source\PSoC5/SPIM.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:.\Generated_Source\PSoC5/SPIM.c **** *
1040:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1041:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_EnableInt(void) 
1042:.\Generated_Source\PSoC5/SPIM.c **** {
 1399              		.loc 1 1042 0
 1400              		.cfi_startproc
 1401              		@ args = 0, pretend = 0, frame = 0
 1402              		@ frame_needed = 1, uses_anonymous_args = 0
 1403 0000 80B5     		push	{r7, lr}
 1404              		.cfi_def_cfa_offset 8
 1405              		.cfi_offset 7, -8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 44


 1406              		.cfi_offset 14, -4
 1407 0002 00AF     		add	r7, sp, #0
 1408              		.cfi_def_cfa_register 7
1043:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableRxInt();
 1409              		.loc 1 1043 0
 1410 0004 FFF7FEFF 		bl	SPIM_EnableRxInt
1044:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableTxInt();
 1411              		.loc 1 1044 0
 1412 0008 FFF7FEFF 		bl	SPIM_EnableTxInt
1045:.\Generated_Source\PSoC5/SPIM.c **** }
 1413              		.loc 1 1045 0
 1414 000c 80BD     		pop	{r7, pc}
 1415              		.cfi_endproc
 1416              	.LFE20:
 1417              		.size	SPIM_EnableInt, .-SPIM_EnableInt
 1418 000e 00BF     		.section	.text.SPIM_DisableInt,"ax",%progbits
 1419              		.align	2
 1420              		.global	SPIM_DisableInt
 1421              		.thumb
 1422              		.thumb_func
 1423              		.type	SPIM_DisableInt, %function
 1424              	SPIM_DisableInt:
 1425              	.LFB21:
1046:.\Generated_Source\PSoC5/SPIM.c **** 
1047:.\Generated_Source\PSoC5/SPIM.c **** 
1048:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1049:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_DisableInt
1050:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1051:.\Generated_Source\PSoC5/SPIM.c **** *
1052:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
1053:.\Generated_Source\PSoC5/SPIM.c **** *  Disable internal interrupt generation.
1054:.\Generated_Source\PSoC5/SPIM.c **** *
1055:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
1056:.\Generated_Source\PSoC5/SPIM.c **** *  None.
1057:.\Generated_Source\PSoC5/SPIM.c **** *
1058:.\Generated_Source\PSoC5/SPIM.c **** * Return:
1059:.\Generated_Source\PSoC5/SPIM.c **** *  None.
1060:.\Generated_Source\PSoC5/SPIM.c **** *
1061:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
1062:.\Generated_Source\PSoC5/SPIM.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:.\Generated_Source\PSoC5/SPIM.c **** *
1064:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1065:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_DisableInt(void) 
1066:.\Generated_Source\PSoC5/SPIM.c **** {
 1426              		.loc 1 1066 0
 1427              		.cfi_startproc
 1428              		@ args = 0, pretend = 0, frame = 0
 1429              		@ frame_needed = 1, uses_anonymous_args = 0
 1430 0000 80B5     		push	{r7, lr}
 1431              		.cfi_def_cfa_offset 8
 1432              		.cfi_offset 7, -8
 1433              		.cfi_offset 14, -4
 1434 0002 00AF     		add	r7, sp, #0
 1435              		.cfi_def_cfa_register 7
1067:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableTxInt();
 1436              		.loc 1 1067 0
 1437 0004 FFF7FEFF 		bl	SPIM_DisableTxInt
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 45


1068:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableRxInt();
 1438              		.loc 1 1068 0
 1439 0008 FFF7FEFF 		bl	SPIM_DisableRxInt
1069:.\Generated_Source\PSoC5/SPIM.c **** }
 1440              		.loc 1 1069 0
 1441 000c 80BD     		pop	{r7, pc}
 1442              		.cfi_endproc
 1443              	.LFE21:
 1444              		.size	SPIM_DisableInt, .-SPIM_DisableInt
 1445 000e 00BF     		.section	.text.SPIM_SetInterruptMode,"ax",%progbits
 1446              		.align	2
 1447              		.global	SPIM_SetInterruptMode
 1448              		.thumb
 1449              		.thumb_func
 1450              		.type	SPIM_SetInterruptMode, %function
 1451              	SPIM_SetInterruptMode:
 1452              	.LFB22:
1070:.\Generated_Source\PSoC5/SPIM.c **** 
1071:.\Generated_Source\PSoC5/SPIM.c **** 
1072:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1073:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_SetInterruptMode
1074:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1075:.\Generated_Source\PSoC5/SPIM.c **** *
1076:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
1077:.\Generated_Source\PSoC5/SPIM.c **** *  Configure which status bits trigger an interrupt event.
1078:.\Generated_Source\PSoC5/SPIM.c **** *
1079:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
1080:.\Generated_Source\PSoC5/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:.\Generated_Source\PSoC5/SPIM.c **** *  header file).
1082:.\Generated_Source\PSoC5/SPIM.c **** *
1083:.\Generated_Source\PSoC5/SPIM.c **** * Return:
1084:.\Generated_Source\PSoC5/SPIM.c **** *  None.
1085:.\Generated_Source\PSoC5/SPIM.c **** *
1086:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
1087:.\Generated_Source\PSoC5/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:.\Generated_Source\PSoC5/SPIM.c **** *
1089:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1090:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_SetInterruptMode(uint8 intSrc) 
1091:.\Generated_Source\PSoC5/SPIM.c **** {
 1453              		.loc 1 1091 0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 8
 1456              		@ frame_needed = 1, uses_anonymous_args = 0
 1457              		@ link register save eliminated.
 1458 0000 80B4     		push	{r7}
 1459              		.cfi_def_cfa_offset 4
 1460              		.cfi_offset 7, -4
 1461 0002 83B0     		sub	sp, sp, #12
 1462              		.cfi_def_cfa_offset 16
 1463 0004 00AF     		add	r7, sp, #0
 1464              		.cfi_def_cfa_register 7
 1465 0006 0346     		mov	r3, r0
 1466 0008 FB71     		strb	r3, [r7, #7]
1092:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPIM_STS_SPI_IDLE));
 1467              		.loc 1 1092 0
 1468 000a 074A     		ldr	r2, .L91
 1469 000c FB79     		ldrb	r3, [r7, #7]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 46


 1470 000e 23F01003 		bic	r3, r3, #16
 1471 0012 DBB2     		uxtb	r3, r3
 1472 0014 1370     		strb	r3, [r2]
1093:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  =  intSrc;
 1473              		.loc 1 1093 0
 1474 0016 054A     		ldr	r2, .L91+4
 1475 0018 FB79     		ldrb	r3, [r7, #7]
 1476 001a 1370     		strb	r3, [r2]
1094:.\Generated_Source\PSoC5/SPIM.c **** }
 1477              		.loc 1 1094 0
 1478 001c 0C37     		adds	r7, r7, #12
 1479              		.cfi_def_cfa_offset 4
 1480 001e BD46     		mov	sp, r7
 1481              		.cfi_def_cfa_register 13
 1482              		@ sp needed
 1483 0020 5DF8047B 		ldr	r7, [sp], #4
 1484              		.cfi_restore 7
 1485              		.cfi_def_cfa_offset 0
 1486 0024 7047     		bx	lr
 1487              	.L92:
 1488 0026 00BF     		.align	2
 1489              	.L91:
 1490 0028 88650040 		.word	1073767816
 1491 002c 89650040 		.word	1073767817
 1492              		.cfi_endproc
 1493              	.LFE22:
 1494              		.size	SPIM_SetInterruptMode, .-SPIM_SetInterruptMode
 1495              		.section	.text.SPIM_ReadStatus,"ax",%progbits
 1496              		.align	2
 1497              		.global	SPIM_ReadStatus
 1498              		.thumb
 1499              		.thumb_func
 1500              		.type	SPIM_ReadStatus, %function
 1501              	SPIM_ReadStatus:
 1502              	.LFB23:
1095:.\Generated_Source\PSoC5/SPIM.c **** 
1096:.\Generated_Source\PSoC5/SPIM.c **** 
1097:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1098:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadStatus
1099:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1100:.\Generated_Source\PSoC5/SPIM.c **** *
1101:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
1102:.\Generated_Source\PSoC5/SPIM.c **** *  Read the status register for the component.
1103:.\Generated_Source\PSoC5/SPIM.c **** *
1104:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
1105:.\Generated_Source\PSoC5/SPIM.c **** *  None.
1106:.\Generated_Source\PSoC5/SPIM.c **** *
1107:.\Generated_Source\PSoC5/SPIM.c **** * Return:
1108:.\Generated_Source\PSoC5/SPIM.c **** *  Contents of the status register.
1109:.\Generated_Source\PSoC5/SPIM.c **** *
1110:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
1111:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_swStatus - used to store in software status register,
1112:.\Generated_Source\PSoC5/SPIM.c **** *  modified every function call - resets to zero.
1113:.\Generated_Source\PSoC5/SPIM.c **** *
1114:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
1115:.\Generated_Source\PSoC5/SPIM.c **** *  Allows the user and the API to read the status register for error detection
1116:.\Generated_Source\PSoC5/SPIM.c **** *  and flow control.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 47


1117:.\Generated_Source\PSoC5/SPIM.c **** *
1118:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
1119:.\Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
1120:.\Generated_Source\PSoC5/SPIM.c **** *
1121:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
1122:.\Generated_Source\PSoC5/SPIM.c **** *  No.
1123:.\Generated_Source\PSoC5/SPIM.c **** *
1124:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadStatus(void) 
1126:.\Generated_Source\PSoC5/SPIM.c **** {
 1503              		.loc 1 1126 0
 1504              		.cfi_startproc
 1505              		@ args = 0, pretend = 0, frame = 8
 1506              		@ frame_needed = 1, uses_anonymous_args = 0
 1507 0000 80B5     		push	{r7, lr}
 1508              		.cfi_def_cfa_offset 8
 1509              		.cfi_offset 7, -8
 1510              		.cfi_offset 14, -4
 1511 0002 82B0     		sub	sp, sp, #8
 1512              		.cfi_def_cfa_offset 16
 1513 0004 00AF     		add	r7, sp, #0
 1514              		.cfi_def_cfa_register 7
1127:.\Generated_Source\PSoC5/SPIM.c ****     uint8 tmpStatus;
1128:.\Generated_Source\PSoC5/SPIM.c **** 
1129:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED)
1130:.\Generated_Source\PSoC5/SPIM.c **** 
1131:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableInt();
 1515              		.loc 1 1131 0
 1516 0006 FFF7FEFF 		bl	SPIM_DisableInt
1132:.\Generated_Source\PSoC5/SPIM.c **** 
1133:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus  = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
 1517              		.loc 1 1133 0
 1518 000a 154B     		ldr	r3, .L95
 1519 000c 1B78     		ldrb	r3, [r3]
 1520 000e DAB2     		uxtb	r2, r3
 1521 0010 144B     		ldr	r3, .L95+4
 1522 0012 1B78     		ldrb	r3, [r3]
 1523 0014 DBB2     		uxtb	r3, r3
 1524 0016 03F04003 		and	r3, r3, #64
 1525 001a DBB2     		uxtb	r3, r3
 1526 001c 1343     		orrs	r3, r3, r2
 1527 001e FB71     		strb	r3, [r7, #7]
1134:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus |= SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 1528              		.loc 1 1134 0
 1529 0020 114B     		ldr	r3, .L95+8
 1530 0022 1B78     		ldrb	r3, [r3]
 1531 0024 DAB2     		uxtb	r2, r3
 1532 0026 114B     		ldr	r3, .L95+12
 1533 0028 1B78     		ldrb	r3, [r3]
 1534 002a DBB2     		uxtb	r3, r3
 1535 002c 03F00903 		and	r3, r3, #9
 1536 0030 DBB2     		uxtb	r3, r3
 1537 0032 1343     		orrs	r3, r3, r2
 1538 0034 DAB2     		uxtb	r2, r3
 1539 0036 FB79     		ldrb	r3, [r7, #7]
 1540 0038 1343     		orrs	r3, r3, r2
 1541 003a FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 48


1135:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
 1542              		.loc 1 1135 0
 1543 003c FB79     		ldrb	r3, [r7, #7]
 1544 003e 23F01003 		bic	r3, r3, #16
 1545 0042 FB71     		strb	r3, [r7, #7]
1136:.\Generated_Source\PSoC5/SPIM.c **** 
1137:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusTx = 0u;
 1546              		.loc 1 1137 0
 1547 0044 094B     		ldr	r3, .L95+12
 1548 0046 0022     		movs	r2, #0
 1549 0048 1A70     		strb	r2, [r3]
1138:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusRx = 0u;
 1550              		.loc 1 1138 0
 1551 004a 064B     		ldr	r3, .L95+4
 1552 004c 0022     		movs	r2, #0
 1553 004e 1A70     		strb	r2, [r3]
1139:.\Generated_Source\PSoC5/SPIM.c **** 
1140:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableInt();
 1554              		.loc 1 1140 0
 1555 0050 FFF7FEFF 		bl	SPIM_EnableInt
1141:.\Generated_Source\PSoC5/SPIM.c **** 
1142:.\Generated_Source\PSoC5/SPIM.c ****     #else
1143:.\Generated_Source\PSoC5/SPIM.c **** 
1144:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus  = SPIM_RX_STATUS_REG;
1145:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus |= SPIM_TX_STATUS_REG;
1146:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
1147:.\Generated_Source\PSoC5/SPIM.c **** 
1148:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED) */
1149:.\Generated_Source\PSoC5/SPIM.c **** 
1150:.\Generated_Source\PSoC5/SPIM.c ****     return(tmpStatus);
 1556              		.loc 1 1150 0
 1557 0054 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1151:.\Generated_Source\PSoC5/SPIM.c **** }
 1558              		.loc 1 1151 0
 1559 0056 1846     		mov	r0, r3
 1560 0058 0837     		adds	r7, r7, #8
 1561              		.cfi_def_cfa_offset 8
 1562 005a BD46     		mov	sp, r7
 1563              		.cfi_def_cfa_register 13
 1564              		@ sp needed
 1565 005c 80BD     		pop	{r7, pc}
 1566              	.L96:
 1567 005e 00BF     		.align	2
 1568              	.L95:
 1569 0060 69650040 		.word	1073767785
 1570 0064 00000000 		.word	SPIM_swStatusRx
 1571 0068 68650040 		.word	1073767784
 1572 006c 00000000 		.word	SPIM_swStatusTx
 1573              		.cfi_endproc
 1574              	.LFE23:
 1575              		.size	SPIM_ReadStatus, .-SPIM_ReadStatus
 1576              		.text
 1577              	.Letext0:
 1578              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1579              		.section	.debug_info,"",%progbits
 1580              	.Ldebug_info0:
 1581 0000 C6040000 		.4byte	0x4c6
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 49


 1582 0004 0400     		.2byte	0x4
 1583 0006 00000000 		.4byte	.Ldebug_abbrev0
 1584 000a 04       		.byte	0x4
 1585 000b 01       		.uleb128 0x1
 1586 000c 39020000 		.4byte	.LASF63
 1587 0010 01       		.byte	0x1
 1588 0011 E7020000 		.4byte	.LASF64
 1589 0015 2D010000 		.4byte	.LASF65
 1590 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1591 001d 00000000 		.4byte	0
 1592 0021 00000000 		.4byte	.Ldebug_line0
 1593 0025 02       		.uleb128 0x2
 1594 0026 01       		.byte	0x1
 1595 0027 06       		.byte	0x6
 1596 0028 47000000 		.4byte	.LASF0
 1597 002c 02       		.uleb128 0x2
 1598 002d 01       		.byte	0x1
 1599 002e 08       		.byte	0x8
 1600 002f 2F030000 		.4byte	.LASF1
 1601 0033 02       		.uleb128 0x2
 1602 0034 02       		.byte	0x2
 1603 0035 05       		.byte	0x5
 1604 0036 5D030000 		.4byte	.LASF2
 1605 003a 02       		.uleb128 0x2
 1606 003b 02       		.byte	0x2
 1607 003c 07       		.byte	0x7
 1608 003d 88010000 		.4byte	.LASF3
 1609 0041 02       		.uleb128 0x2
 1610 0042 04       		.byte	0x4
 1611 0043 05       		.byte	0x5
 1612 0044 6A000000 		.4byte	.LASF4
 1613 0048 02       		.uleb128 0x2
 1614 0049 04       		.byte	0x4
 1615 004a 07       		.byte	0x7
 1616 004b 09010000 		.4byte	.LASF5
 1617 004f 02       		.uleb128 0x2
 1618 0050 08       		.byte	0x8
 1619 0051 05       		.byte	0x5
 1620 0052 39000000 		.4byte	.LASF6
 1621 0056 02       		.uleb128 0x2
 1622 0057 08       		.byte	0x8
 1623 0058 07       		.byte	0x7
 1624 0059 18000000 		.4byte	.LASF7
 1625 005d 03       		.uleb128 0x3
 1626 005e 04       		.byte	0x4
 1627 005f 05       		.byte	0x5
 1628 0060 696E7400 		.ascii	"int\000"
 1629 0064 02       		.uleb128 0x2
 1630 0065 04       		.byte	0x4
 1631 0066 07       		.byte	0x7
 1632 0067 D8000000 		.4byte	.LASF8
 1633 006b 04       		.uleb128 0x4
 1634 006c 96000000 		.4byte	.LASF9
 1635 0070 02       		.byte	0x2
 1636 0071 9201     		.2byte	0x192
 1637 0073 2C000000 		.4byte	0x2c
 1638 0077 04       		.uleb128 0x4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 50


 1639 0078 AD000000 		.4byte	.LASF10
 1640 007c 02       		.byte	0x2
 1641 007d 9401     		.2byte	0x194
 1642 007f 48000000 		.4byte	0x48
 1643 0083 02       		.uleb128 0x2
 1644 0084 04       		.byte	0x4
 1645 0085 04       		.byte	0x4
 1646 0086 14030000 		.4byte	.LASF11
 1647 008a 02       		.uleb128 0x2
 1648 008b 08       		.byte	0x8
 1649 008c 04       		.byte	0x4
 1650 008d 9C000000 		.4byte	.LASF12
 1651 0091 02       		.uleb128 0x2
 1652 0092 01       		.byte	0x1
 1653 0093 08       		.byte	0x8
 1654 0094 D3030000 		.4byte	.LASF13
 1655 0098 04       		.uleb128 0x4
 1656 0099 2A030000 		.4byte	.LASF14
 1657 009d 02       		.byte	0x2
 1658 009e 3C02     		.2byte	0x23c
 1659 00a0 A4000000 		.4byte	0xa4
 1660 00a4 05       		.uleb128 0x5
 1661 00a5 6B000000 		.4byte	0x6b
 1662 00a9 04       		.uleb128 0x4
 1663 00aa EA010000 		.4byte	.LASF15
 1664 00ae 02       		.byte	0x2
 1665 00af 3E02     		.2byte	0x23e
 1666 00b1 B5000000 		.4byte	0xb5
 1667 00b5 05       		.uleb128 0x5
 1668 00b6 77000000 		.4byte	0x77
 1669 00ba 02       		.uleb128 0x2
 1670 00bb 04       		.byte	0x4
 1671 00bc 07       		.byte	0x7
 1672 00bd 0C020000 		.4byte	.LASF16
 1673 00c1 06       		.uleb128 0x6
 1674 00c2 53030000 		.4byte	.LASF17
 1675 00c6 01       		.byte	0x1
 1676 00c7 3F       		.byte	0x3f
 1677 00c8 00000000 		.4byte	.LFB0
 1678 00cc A4000000 		.4byte	.LFE0-.LFB0
 1679 00d0 01       		.uleb128 0x1
 1680 00d1 9C       		.byte	0x9c
 1681 00d2 07       		.uleb128 0x7
 1682 00d3 D8030000 		.4byte	.LASF19
 1683 00d7 01       		.byte	0x1
 1684 00d8 78       		.byte	0x78
 1685 00d9 00000000 		.4byte	.LFB1
 1686 00dd 60000000 		.4byte	.LFE1-.LFB1
 1687 00e1 01       		.uleb128 0x1
 1688 00e2 9C       		.byte	0x9c
 1689 00e3 F6000000 		.4byte	0xf6
 1690 00e7 08       		.uleb128 0x8
 1691 00e8 2C040000 		.4byte	.LASF21
 1692 00ec 01       		.byte	0x1
 1693 00ed 7A       		.byte	0x7a
 1694 00ee 6B000000 		.4byte	0x6b
 1695 00f2 02       		.uleb128 0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 51


 1696 00f3 91       		.byte	0x91
 1697 00f4 77       		.sleb128 -9
 1698 00f5 00       		.byte	0
 1699 00f6 06       		.uleb128 0x6
 1700 00f7 21040000 		.4byte	.LASF18
 1701 00fb 01       		.byte	0x1
 1702 00fc A3       		.byte	0xa3
 1703 00fd 00000000 		.4byte	.LFB2
 1704 0101 20000000 		.4byte	.LFE2-.LFB2
 1705 0105 01       		.uleb128 0x1
 1706 0106 9C       		.byte	0x9c
 1707 0107 07       		.uleb128 0x7
 1708 0108 A3000000 		.4byte	.LASF20
 1709 010c 01       		.byte	0x1
 1710 010d C0       		.byte	0xc0
 1711 010e 00000000 		.4byte	.LFB3
 1712 0112 4C000000 		.4byte	.LFE3-.LFB3
 1713 0116 01       		.uleb128 0x1
 1714 0117 9C       		.byte	0x9c
 1715 0118 2B010000 		.4byte	0x12b
 1716 011c 08       		.uleb128 0x8
 1717 011d 2C040000 		.4byte	.LASF21
 1718 0121 01       		.byte	0x1
 1719 0122 C2       		.byte	0xc2
 1720 0123 6B000000 		.4byte	0x6b
 1721 0127 02       		.uleb128 0x2
 1722 0128 91       		.byte	0x91
 1723 0129 77       		.sleb128 -9
 1724 012a 00       		.byte	0
 1725 012b 09       		.uleb128 0x9
 1726 012c FB030000 		.4byte	.LASF22
 1727 0130 01       		.byte	0x1
 1728 0131 E3       		.byte	0xe3
 1729 0132 00000000 		.4byte	.LFB4
 1730 0136 18000000 		.4byte	.LFE4-.LFB4
 1731 013a 01       		.uleb128 0x1
 1732 013b 9C       		.byte	0x9c
 1733 013c 09       		.uleb128 0x9
 1734 013d 28020000 		.4byte	.LASF23
 1735 0141 01       		.byte	0x1
 1736 0142 FC       		.byte	0xfc
 1737 0143 00000000 		.4byte	.LFB5
 1738 0147 18000000 		.4byte	.LFE5-.LFB5
 1739 014b 01       		.uleb128 0x1
 1740 014c 9C       		.byte	0x9c
 1741 014d 0A       		.uleb128 0xa
 1742 014e 88030000 		.4byte	.LASF24
 1743 0152 01       		.byte	0x1
 1744 0153 1501     		.2byte	0x115
 1745 0155 00000000 		.4byte	.LFB6
 1746 0159 18000000 		.4byte	.LFE6-.LFB6
 1747 015d 01       		.uleb128 0x1
 1748 015e 9C       		.byte	0x9c
 1749 015f 0A       		.uleb128 0xa
 1750 0160 C8010000 		.4byte	.LASF25
 1751 0164 01       		.byte	0x1
 1752 0165 2E01     		.2byte	0x12e
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 52


 1753 0167 00000000 		.4byte	.LFB7
 1754 016b 18000000 		.4byte	.LFE7-.LFB7
 1755 016f 01       		.uleb128 0x1
 1756 0170 9C       		.byte	0x9c
 1757 0171 0B       		.uleb128 0xb
 1758 0172 00000000 		.4byte	.LASF26
 1759 0176 01       		.byte	0x1
 1760 0177 4801     		.2byte	0x148
 1761 0179 00000000 		.4byte	.LFB8
 1762 017d 20000000 		.4byte	.LFE8-.LFB8
 1763 0181 01       		.uleb128 0x1
 1764 0182 9C       		.byte	0x9c
 1765 0183 97010000 		.4byte	0x197
 1766 0187 0C       		.uleb128 0xc
 1767 0188 C1010000 		.4byte	.LASF28
 1768 018c 01       		.byte	0x1
 1769 018d 4801     		.2byte	0x148
 1770 018f 6B000000 		.4byte	0x6b
 1771 0193 02       		.uleb128 0x2
 1772 0194 91       		.byte	0x91
 1773 0195 77       		.sleb128 -9
 1774 0196 00       		.byte	0
 1775 0197 0B       		.uleb128 0xb
 1776 0198 A4030000 		.4byte	.LASF27
 1777 019c 01       		.byte	0x1
 1778 019d 6001     		.2byte	0x160
 1779 019f 00000000 		.4byte	.LFB9
 1780 01a3 20000000 		.4byte	.LFE9-.LFB9
 1781 01a7 01       		.uleb128 0x1
 1782 01a8 9C       		.byte	0x9c
 1783 01a9 BD010000 		.4byte	0x1bd
 1784 01ad 0C       		.uleb128 0xc
 1785 01ae C1010000 		.4byte	.LASF28
 1786 01b2 01       		.byte	0x1
 1787 01b3 6001     		.2byte	0x160
 1788 01b5 6B000000 		.4byte	0x6b
 1789 01b9 02       		.uleb128 0x2
 1790 01ba 91       		.byte	0x91
 1791 01bb 77       		.sleb128 -9
 1792 01bc 00       		.byte	0
 1793 01bd 0D       		.uleb128 0xd
 1794 01be 76030000 		.4byte	.LASF30
 1795 01c2 01       		.byte	0x1
 1796 01c3 8201     		.2byte	0x182
 1797 01c5 6B000000 		.4byte	0x6b
 1798 01c9 00000000 		.4byte	.LFB10
 1799 01cd 3C000000 		.4byte	.LFE10-.LFB10
 1800 01d1 01       		.uleb128 0x1
 1801 01d2 9C       		.byte	0x9c
 1802 01d3 E7010000 		.4byte	0x1e7
 1803 01d7 0E       		.uleb128 0xe
 1804 01d8 2F000000 		.4byte	.LASF29
 1805 01dc 01       		.byte	0x1
 1806 01dd 8401     		.2byte	0x184
 1807 01df 6B000000 		.4byte	0x6b
 1808 01e3 02       		.uleb128 0x2
 1809 01e4 91       		.byte	0x91
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 53


 1810 01e5 77       		.sleb128 -9
 1811 01e6 00       		.byte	0
 1812 01e7 0D       		.uleb128 0xd
 1813 01e8 C6000000 		.4byte	.LASF31
 1814 01ec 01       		.byte	0x1
 1815 01ed B501     		.2byte	0x1b5
 1816 01ef 6B000000 		.4byte	0x6b
 1817 01f3 00000000 		.4byte	.LFB11
 1818 01f7 3C000000 		.4byte	.LFE11-.LFB11
 1819 01fb 01       		.uleb128 0x1
 1820 01fc 9C       		.byte	0x9c
 1821 01fd 11020000 		.4byte	0x211
 1822 0201 0E       		.uleb128 0xe
 1823 0202 2F000000 		.4byte	.LASF29
 1824 0206 01       		.byte	0x1
 1825 0207 B701     		.2byte	0x1b7
 1826 0209 6B000000 		.4byte	0x6b
 1827 020d 02       		.uleb128 0x2
 1828 020e 91       		.byte	0x91
 1829 020f 77       		.sleb128 -9
 1830 0210 00       		.byte	0
 1831 0211 0F       		.uleb128 0xf
 1832 0212 E5000000 		.4byte	.LASF32
 1833 0216 01       		.byte	0x1
 1834 0217 EE01     		.2byte	0x1ee
 1835 0219 00000000 		.4byte	.LFB12
 1836 021d 10010000 		.4byte	.LFE12-.LFB12
 1837 0221 01       		.uleb128 0x1
 1838 0222 9C       		.byte	0x9c
 1839 0223 55020000 		.4byte	0x255
 1840 0227 0C       		.uleb128 0xc
 1841 0228 72040000 		.4byte	.LASF33
 1842 022c 01       		.byte	0x1
 1843 022d EE01     		.2byte	0x1ee
 1844 022f 6B000000 		.4byte	0x6b
 1845 0233 02       		.uleb128 0x2
 1846 0234 91       		.byte	0x91
 1847 0235 6F       		.sleb128 -17
 1848 0236 0E       		.uleb128 0xe
 1849 0237 C7020000 		.4byte	.LASF34
 1850 023b 01       		.byte	0x1
 1851 023c F201     		.2byte	0x1f2
 1852 023e 6B000000 		.4byte	0x6b
 1853 0242 02       		.uleb128 0x2
 1854 0243 91       		.byte	0x91
 1855 0244 76       		.sleb128 -10
 1856 0245 0E       		.uleb128 0xe
 1857 0246 73000000 		.4byte	.LASF35
 1858 024a 01       		.byte	0x1
 1859 024b F301     		.2byte	0x1f3
 1860 024d 6B000000 		.4byte	0x6b
 1861 0251 02       		.uleb128 0x2
 1862 0252 91       		.byte	0x91
 1863 0253 77       		.sleb128 -9
 1864 0254 00       		.byte	0
 1865 0255 0D       		.uleb128 0xd
 1866 0256 1A030000 		.4byte	.LASF36
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 54


 1867 025a 01       		.byte	0x1
 1868 025b 5A02     		.2byte	0x25a
 1869 025d 6B000000 		.4byte	0x6b
 1870 0261 00000000 		.4byte	.LFB13
 1871 0265 78000000 		.4byte	.LFE13-.LFB13
 1872 0269 01       		.uleb128 0x1
 1873 026a 9C       		.byte	0x9c
 1874 026b 7F020000 		.4byte	0x27f
 1875 026f 0E       		.uleb128 0xe
 1876 0270 CC030000 		.4byte	.LASF37
 1877 0274 01       		.byte	0x1
 1878 0275 5C02     		.2byte	0x25c
 1879 0277 6B000000 		.4byte	0x6b
 1880 027b 02       		.uleb128 0x2
 1881 027c 91       		.byte	0x91
 1882 027d 77       		.sleb128 -9
 1883 027e 00       		.byte	0
 1884 027f 0D       		.uleb128 0xd
 1885 0280 0C040000 		.4byte	.LASF38
 1886 0284 01       		.byte	0x1
 1887 0285 9A02     		.2byte	0x29a
 1888 0287 6B000000 		.4byte	0x6b
 1889 028b 00000000 		.4byte	.LFB14
 1890 028f 6C000000 		.4byte	.LFE14-.LFB14
 1891 0293 01       		.uleb128 0x1
 1892 0294 9C       		.byte	0x9c
 1893 0295 A9020000 		.4byte	0x2a9
 1894 0299 0E       		.uleb128 0xe
 1895 029a 53000000 		.4byte	.LASF39
 1896 029e 01       		.byte	0x1
 1897 029f 9C02     		.2byte	0x29c
 1898 02a1 6B000000 		.4byte	0x6b
 1899 02a5 02       		.uleb128 0x2
 1900 02a6 91       		.byte	0x91
 1901 02a7 77       		.sleb128 -9
 1902 02a8 00       		.byte	0
 1903 02a9 0D       		.uleb128 0xd
 1904 02aa D2020000 		.4byte	.LASF40
 1905 02ae 01       		.byte	0x1
 1906 02af D702     		.2byte	0x2d7
 1907 02b1 6B000000 		.4byte	0x6b
 1908 02b5 00000000 		.4byte	.LFB15
 1909 02b9 6C000000 		.4byte	.LFE15-.LFB15
 1910 02bd 01       		.uleb128 0x1
 1911 02be 9C       		.byte	0x9c
 1912 02bf D3020000 		.4byte	0x2d3
 1913 02c3 0E       		.uleb128 0xe
 1914 02c4 53000000 		.4byte	.LASF39
 1915 02c8 01       		.byte	0x1
 1916 02c9 D902     		.2byte	0x2d9
 1917 02cb 6B000000 		.4byte	0x6b
 1918 02cf 02       		.uleb128 0x2
 1919 02d0 91       		.byte	0x91
 1920 02d1 77       		.sleb128 -9
 1921 02d2 00       		.byte	0
 1922 02d3 10       		.uleb128 0x10
 1923 02d4 83000000 		.4byte	.LASF41
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 55


 1924 02d8 01       		.byte	0x1
 1925 02d9 2603     		.2byte	0x326
 1926 02db 00000000 		.4byte	.LFB16
 1927 02df 48000000 		.4byte	.LFE16-.LFB16
 1928 02e3 01       		.uleb128 0x1
 1929 02e4 9C       		.byte	0x9c
 1930 02e5 0F       		.uleb128 0xf
 1931 02e6 3D040000 		.4byte	.LASF42
 1932 02ea 01       		.byte	0x1
 1933 02eb 5D03     		.2byte	0x35d
 1934 02ed 00000000 		.4byte	.LFB17
 1935 02f1 7C000000 		.4byte	.LFE17-.LFB17
 1936 02f5 01       		.uleb128 0x1
 1937 02f6 9C       		.byte	0x9c
 1938 02f7 0B030000 		.4byte	0x30b
 1939 02fb 0E       		.uleb128 0xe
 1940 02fc 2C040000 		.4byte	.LASF21
 1941 0300 01       		.byte	0x1
 1942 0301 5F03     		.2byte	0x35f
 1943 0303 6B000000 		.4byte	0x6b
 1944 0307 02       		.uleb128 0x2
 1945 0308 91       		.byte	0x91
 1946 0309 77       		.sleb128 -9
 1947 030a 00       		.byte	0
 1948 030b 0F       		.uleb128 0xf
 1949 030c F0010000 		.4byte	.LASF43
 1950 0310 01       		.byte	0x1
 1951 0311 C203     		.2byte	0x3c2
 1952 0313 00000000 		.4byte	.LFB18
 1953 0317 38000000 		.4byte	.LFE18-.LFB18
 1954 031b 01       		.uleb128 0x1
 1955 031c 9C       		.byte	0x9c
 1956 031d 4F030000 		.4byte	0x34f
 1957 0321 0C       		.uleb128 0xc
 1958 0322 F4030000 		.4byte	.LASF44
 1959 0326 01       		.byte	0x1
 1960 0327 C203     		.2byte	0x3c2
 1961 0329 4F030000 		.4byte	0x34f
 1962 032d 02       		.uleb128 0x2
 1963 032e 91       		.byte	0x91
 1964 032f 6C       		.sleb128 -20
 1965 0330 0C       		.uleb128 0xc
 1966 0331 9A030000 		.4byte	.LASF45
 1967 0335 01       		.byte	0x1
 1968 0336 C203     		.2byte	0x3c2
 1969 0338 6B000000 		.4byte	0x6b
 1970 033c 02       		.uleb128 0x2
 1971 033d 91       		.byte	0x91
 1972 033e 6B       		.sleb128 -21
 1973 033f 0E       		.uleb128 0xe
 1974 0340 A9010000 		.4byte	.LASF46
 1975 0344 01       		.byte	0x1
 1976 0345 C503     		.2byte	0x3c5
 1977 0347 6B000000 		.4byte	0x6b
 1978 034b 02       		.uleb128 0x2
 1979 034c 91       		.byte	0x91
 1980 034d 77       		.sleb128 -9
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 56


 1981 034e 00       		.byte	0
 1982 034f 11       		.uleb128 0x11
 1983 0350 04       		.byte	0x4
 1984 0351 55030000 		.4byte	0x355
 1985 0355 12       		.uleb128 0x12
 1986 0356 6B000000 		.4byte	0x6b
 1987 035a 0F       		.uleb128 0xf
 1988 035b B2010000 		.4byte	.LASF47
 1989 035f 01       		.byte	0x1
 1990 0360 E303     		.2byte	0x3e3
 1991 0362 00000000 		.4byte	.LFB19
 1992 0366 5C000000 		.4byte	.LFE19-.LFB19
 1993 036a 01       		.uleb128 0x1
 1994 036b 9C       		.byte	0x9c
 1995 036c 80030000 		.4byte	0x380
 1996 0370 0E       		.uleb128 0xe
 1997 0371 2C040000 		.4byte	.LASF21
 1998 0375 01       		.byte	0x1
 1999 0376 E503     		.2byte	0x3e5
 2000 0378 6B000000 		.4byte	0x6b
 2001 037c 02       		.uleb128 0x2
 2002 037d 91       		.byte	0x91
 2003 037e 77       		.sleb128 -9
 2004 037f 00       		.byte	0
 2005 0380 10       		.uleb128 0x10
 2006 0381 67030000 		.4byte	.LASF48
 2007 0385 01       		.byte	0x1
 2008 0386 1104     		.2byte	0x411
 2009 0388 00000000 		.4byte	.LFB20
 2010 038c 0E000000 		.4byte	.LFE20-.LFB20
 2011 0390 01       		.uleb128 0x1
 2012 0391 9C       		.byte	0x9c
 2013 0392 10       		.uleb128 0x10
 2014 0393 62040000 		.4byte	.LASF49
 2015 0397 01       		.byte	0x1
 2016 0398 2904     		.2byte	0x429
 2017 039a 00000000 		.4byte	.LFB21
 2018 039e 0E000000 		.4byte	.LFE21-.LFB21
 2019 03a2 01       		.uleb128 0x1
 2020 03a3 9C       		.byte	0x9c
 2021 03a4 0B       		.uleb128 0xb
 2022 03a5 3D030000 		.4byte	.LASF50
 2023 03a9 01       		.byte	0x1
 2024 03aa 4204     		.2byte	0x442
 2025 03ac 00000000 		.4byte	.LFB22
 2026 03b0 30000000 		.4byte	.LFE22-.LFB22
 2027 03b4 01       		.uleb128 0x1
 2028 03b5 9C       		.byte	0x9c
 2029 03b6 CA030000 		.4byte	0x3ca
 2030 03ba 0C       		.uleb128 0xc
 2031 03bb C1010000 		.4byte	.LASF28
 2032 03bf 01       		.byte	0x1
 2033 03c0 4204     		.2byte	0x442
 2034 03c2 6B000000 		.4byte	0x6b
 2035 03c6 02       		.uleb128 0x2
 2036 03c7 91       		.byte	0x91
 2037 03c8 77       		.sleb128 -9
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 57


 2038 03c9 00       		.byte	0
 2039 03ca 0D       		.uleb128 0xd
 2040 03cb E4030000 		.4byte	.LASF51
 2041 03cf 01       		.byte	0x1
 2042 03d0 6504     		.2byte	0x465
 2043 03d2 6B000000 		.4byte	0x6b
 2044 03d6 00000000 		.4byte	.LFB23
 2045 03da 70000000 		.4byte	.LFE23-.LFB23
 2046 03de 01       		.uleb128 0x1
 2047 03df 9C       		.byte	0x9c
 2048 03e0 F4030000 		.4byte	0x3f4
 2049 03e4 0E       		.uleb128 0xe
 2050 03e5 2F000000 		.4byte	.LASF29
 2051 03e9 01       		.byte	0x1
 2052 03ea 6704     		.2byte	0x467
 2053 03ec 6B000000 		.4byte	0x6b
 2054 03f0 02       		.uleb128 0x2
 2055 03f1 91       		.byte	0x91
 2056 03f2 77       		.sleb128 -9
 2057 03f3 00       		.byte	0
 2058 03f4 13       		.uleb128 0x13
 2059 03f5 07030000 		.4byte	.LASF52
 2060 03f9 01       		.byte	0x1
 2061 03fa 22       		.byte	0x22
 2062 03fb 6B000000 		.4byte	0x6b
 2063 03ff 05       		.uleb128 0x5
 2064 0400 03       		.byte	0x3
 2065 0401 00000000 		.4byte	SPIM_initVar
 2066 0405 13       		.uleb128 0x13
 2067 0406 BC030000 		.4byte	.LASF53
 2068 040a 01       		.byte	0x1
 2069 040b 24       		.byte	0x24
 2070 040c A4000000 		.4byte	0xa4
 2071 0410 05       		.uleb128 0x5
 2072 0411 03       		.byte	0x3
 2073 0412 00000000 		.4byte	SPIM_swStatusTx
 2074 0416 13       		.uleb128 0x13
 2075 0417 DA010000 		.4byte	.LASF54
 2076 041b 01       		.byte	0x1
 2077 041c 25       		.byte	0x25
 2078 041d A4000000 		.4byte	0xa4
 2079 0421 05       		.uleb128 0x5
 2080 0422 03       		.byte	0x3
 2081 0423 00000000 		.4byte	SPIM_swStatusRx
 2082 0427 14       		.uleb128 0x14
 2083 0428 6B000000 		.4byte	0x6b
 2084 042c 37040000 		.4byte	0x437
 2085 0430 15       		.uleb128 0x15
 2086 0431 BA000000 		.4byte	0xba
 2087 0435 2F       		.byte	0x2f
 2088 0436 00       		.byte	0
 2089 0437 13       		.uleb128 0x13
 2090 0438 9B010000 		.4byte	.LASF55
 2091 043c 01       		.byte	0x1
 2092 043d 15       		.byte	0x15
 2093 043e 48040000 		.4byte	0x448
 2094 0442 05       		.uleb128 0x5
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 58


 2095 0443 03       		.byte	0x3
 2096 0444 00000000 		.4byte	SPIM_txBuffer
 2097 0448 05       		.uleb128 0x5
 2098 0449 27040000 		.4byte	0x427
 2099 044d 13       		.uleb128 0x13
 2100 044e 1B010000 		.4byte	.LASF56
 2101 0452 01       		.byte	0x1
 2102 0453 17       		.byte	0x17
 2103 0454 A4000000 		.4byte	0xa4
 2104 0458 05       		.uleb128 0x5
 2105 0459 03       		.byte	0x3
 2106 045a 00000000 		.4byte	SPIM_txBufferRead
 2107 045e 13       		.uleb128 0x13
 2108 045f F6000000 		.4byte	.LASF57
 2109 0463 01       		.byte	0x1
 2110 0464 18       		.byte	0x18
 2111 0465 A4000000 		.4byte	0xa4
 2112 0469 05       		.uleb128 0x5
 2113 046a 03       		.byte	0x3
 2114 046b 00000000 		.4byte	SPIM_txBufferWrite
 2115 046f 13       		.uleb128 0x13
 2116 0470 B4000000 		.4byte	.LASF58
 2117 0474 01       		.byte	0x1
 2118 0475 16       		.byte	0x16
 2119 0476 A4000000 		.4byte	0xa4
 2120 047a 05       		.uleb128 0x5
 2121 047b 03       		.byte	0x3
 2122 047c 00000000 		.4byte	SPIM_txBufferFull
 2123 0480 13       		.uleb128 0x13
 2124 0481 FE010000 		.4byte	.LASF59
 2125 0485 01       		.byte	0x1
 2126 0486 1C       		.byte	0x1c
 2127 0487 91040000 		.4byte	0x491
 2128 048b 05       		.uleb128 0x5
 2129 048c 03       		.byte	0x3
 2130 048d 00000000 		.4byte	SPIM_rxBuffer
 2131 0491 05       		.uleb128 0x5
 2132 0492 27040000 		.4byte	0x427
 2133 0496 13       		.uleb128 0x13
 2134 0497 50040000 		.4byte	.LASF60
 2135 049b 01       		.byte	0x1
 2136 049c 1E       		.byte	0x1e
 2137 049d A4000000 		.4byte	0xa4
 2138 04a1 05       		.uleb128 0x5
 2139 04a2 03       		.byte	0x3
 2140 04a3 00000000 		.4byte	SPIM_rxBufferRead
 2141 04a7 13       		.uleb128 0x13
 2142 04a8 15020000 		.4byte	.LASF61
 2143 04ac 01       		.byte	0x1
 2144 04ad 1F       		.byte	0x1f
 2145 04ae A4000000 		.4byte	0xa4
 2146 04b2 05       		.uleb128 0x5
 2147 04b3 03       		.byte	0x3
 2148 04b4 00000000 		.4byte	SPIM_rxBufferWrite
 2149 04b8 13       		.uleb128 0x13
 2150 04b9 58000000 		.4byte	.LASF62
 2151 04bd 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 59


 2152 04be 1D       		.byte	0x1d
 2153 04bf A4000000 		.4byte	0xa4
 2154 04c3 05       		.uleb128 0x5
 2155 04c4 03       		.byte	0x3
 2156 04c5 00000000 		.4byte	SPIM_rxBufferFull
 2157 04c9 00       		.byte	0
 2158              		.section	.debug_abbrev,"",%progbits
 2159              	.Ldebug_abbrev0:
 2160 0000 01       		.uleb128 0x1
 2161 0001 11       		.uleb128 0x11
 2162 0002 01       		.byte	0x1
 2163 0003 25       		.uleb128 0x25
 2164 0004 0E       		.uleb128 0xe
 2165 0005 13       		.uleb128 0x13
 2166 0006 0B       		.uleb128 0xb
 2167 0007 03       		.uleb128 0x3
 2168 0008 0E       		.uleb128 0xe
 2169 0009 1B       		.uleb128 0x1b
 2170 000a 0E       		.uleb128 0xe
 2171 000b 55       		.uleb128 0x55
 2172 000c 17       		.uleb128 0x17
 2173 000d 11       		.uleb128 0x11
 2174 000e 01       		.uleb128 0x1
 2175 000f 10       		.uleb128 0x10
 2176 0010 17       		.uleb128 0x17
 2177 0011 00       		.byte	0
 2178 0012 00       		.byte	0
 2179 0013 02       		.uleb128 0x2
 2180 0014 24       		.uleb128 0x24
 2181 0015 00       		.byte	0
 2182 0016 0B       		.uleb128 0xb
 2183 0017 0B       		.uleb128 0xb
 2184 0018 3E       		.uleb128 0x3e
 2185 0019 0B       		.uleb128 0xb
 2186 001a 03       		.uleb128 0x3
 2187 001b 0E       		.uleb128 0xe
 2188 001c 00       		.byte	0
 2189 001d 00       		.byte	0
 2190 001e 03       		.uleb128 0x3
 2191 001f 24       		.uleb128 0x24
 2192 0020 00       		.byte	0
 2193 0021 0B       		.uleb128 0xb
 2194 0022 0B       		.uleb128 0xb
 2195 0023 3E       		.uleb128 0x3e
 2196 0024 0B       		.uleb128 0xb
 2197 0025 03       		.uleb128 0x3
 2198 0026 08       		.uleb128 0x8
 2199 0027 00       		.byte	0
 2200 0028 00       		.byte	0
 2201 0029 04       		.uleb128 0x4
 2202 002a 16       		.uleb128 0x16
 2203 002b 00       		.byte	0
 2204 002c 03       		.uleb128 0x3
 2205 002d 0E       		.uleb128 0xe
 2206 002e 3A       		.uleb128 0x3a
 2207 002f 0B       		.uleb128 0xb
 2208 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 60


 2209 0031 05       		.uleb128 0x5
 2210 0032 49       		.uleb128 0x49
 2211 0033 13       		.uleb128 0x13
 2212 0034 00       		.byte	0
 2213 0035 00       		.byte	0
 2214 0036 05       		.uleb128 0x5
 2215 0037 35       		.uleb128 0x35
 2216 0038 00       		.byte	0
 2217 0039 49       		.uleb128 0x49
 2218 003a 13       		.uleb128 0x13
 2219 003b 00       		.byte	0
 2220 003c 00       		.byte	0
 2221 003d 06       		.uleb128 0x6
 2222 003e 2E       		.uleb128 0x2e
 2223 003f 00       		.byte	0
 2224 0040 3F       		.uleb128 0x3f
 2225 0041 19       		.uleb128 0x19
 2226 0042 03       		.uleb128 0x3
 2227 0043 0E       		.uleb128 0xe
 2228 0044 3A       		.uleb128 0x3a
 2229 0045 0B       		.uleb128 0xb
 2230 0046 3B       		.uleb128 0x3b
 2231 0047 0B       		.uleb128 0xb
 2232 0048 27       		.uleb128 0x27
 2233 0049 19       		.uleb128 0x19
 2234 004a 11       		.uleb128 0x11
 2235 004b 01       		.uleb128 0x1
 2236 004c 12       		.uleb128 0x12
 2237 004d 06       		.uleb128 0x6
 2238 004e 40       		.uleb128 0x40
 2239 004f 18       		.uleb128 0x18
 2240 0050 9642     		.uleb128 0x2116
 2241 0052 19       		.uleb128 0x19
 2242 0053 00       		.byte	0
 2243 0054 00       		.byte	0
 2244 0055 07       		.uleb128 0x7
 2245 0056 2E       		.uleb128 0x2e
 2246 0057 01       		.byte	0x1
 2247 0058 3F       		.uleb128 0x3f
 2248 0059 19       		.uleb128 0x19
 2249 005a 03       		.uleb128 0x3
 2250 005b 0E       		.uleb128 0xe
 2251 005c 3A       		.uleb128 0x3a
 2252 005d 0B       		.uleb128 0xb
 2253 005e 3B       		.uleb128 0x3b
 2254 005f 0B       		.uleb128 0xb
 2255 0060 27       		.uleb128 0x27
 2256 0061 19       		.uleb128 0x19
 2257 0062 11       		.uleb128 0x11
 2258 0063 01       		.uleb128 0x1
 2259 0064 12       		.uleb128 0x12
 2260 0065 06       		.uleb128 0x6
 2261 0066 40       		.uleb128 0x40
 2262 0067 18       		.uleb128 0x18
 2263 0068 9642     		.uleb128 0x2116
 2264 006a 19       		.uleb128 0x19
 2265 006b 01       		.uleb128 0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 61


 2266 006c 13       		.uleb128 0x13
 2267 006d 00       		.byte	0
 2268 006e 00       		.byte	0
 2269 006f 08       		.uleb128 0x8
 2270 0070 34       		.uleb128 0x34
 2271 0071 00       		.byte	0
 2272 0072 03       		.uleb128 0x3
 2273 0073 0E       		.uleb128 0xe
 2274 0074 3A       		.uleb128 0x3a
 2275 0075 0B       		.uleb128 0xb
 2276 0076 3B       		.uleb128 0x3b
 2277 0077 0B       		.uleb128 0xb
 2278 0078 49       		.uleb128 0x49
 2279 0079 13       		.uleb128 0x13
 2280 007a 02       		.uleb128 0x2
 2281 007b 18       		.uleb128 0x18
 2282 007c 00       		.byte	0
 2283 007d 00       		.byte	0
 2284 007e 09       		.uleb128 0x9
 2285 007f 2E       		.uleb128 0x2e
 2286 0080 00       		.byte	0
 2287 0081 3F       		.uleb128 0x3f
 2288 0082 19       		.uleb128 0x19
 2289 0083 03       		.uleb128 0x3
 2290 0084 0E       		.uleb128 0xe
 2291 0085 3A       		.uleb128 0x3a
 2292 0086 0B       		.uleb128 0xb
 2293 0087 3B       		.uleb128 0x3b
 2294 0088 0B       		.uleb128 0xb
 2295 0089 27       		.uleb128 0x27
 2296 008a 19       		.uleb128 0x19
 2297 008b 11       		.uleb128 0x11
 2298 008c 01       		.uleb128 0x1
 2299 008d 12       		.uleb128 0x12
 2300 008e 06       		.uleb128 0x6
 2301 008f 40       		.uleb128 0x40
 2302 0090 18       		.uleb128 0x18
 2303 0091 9742     		.uleb128 0x2117
 2304 0093 19       		.uleb128 0x19
 2305 0094 00       		.byte	0
 2306 0095 00       		.byte	0
 2307 0096 0A       		.uleb128 0xa
 2308 0097 2E       		.uleb128 0x2e
 2309 0098 00       		.byte	0
 2310 0099 3F       		.uleb128 0x3f
 2311 009a 19       		.uleb128 0x19
 2312 009b 03       		.uleb128 0x3
 2313 009c 0E       		.uleb128 0xe
 2314 009d 3A       		.uleb128 0x3a
 2315 009e 0B       		.uleb128 0xb
 2316 009f 3B       		.uleb128 0x3b
 2317 00a0 05       		.uleb128 0x5
 2318 00a1 27       		.uleb128 0x27
 2319 00a2 19       		.uleb128 0x19
 2320 00a3 11       		.uleb128 0x11
 2321 00a4 01       		.uleb128 0x1
 2322 00a5 12       		.uleb128 0x12
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 62


 2323 00a6 06       		.uleb128 0x6
 2324 00a7 40       		.uleb128 0x40
 2325 00a8 18       		.uleb128 0x18
 2326 00a9 9742     		.uleb128 0x2117
 2327 00ab 19       		.uleb128 0x19
 2328 00ac 00       		.byte	0
 2329 00ad 00       		.byte	0
 2330 00ae 0B       		.uleb128 0xb
 2331 00af 2E       		.uleb128 0x2e
 2332 00b0 01       		.byte	0x1
 2333 00b1 3F       		.uleb128 0x3f
 2334 00b2 19       		.uleb128 0x19
 2335 00b3 03       		.uleb128 0x3
 2336 00b4 0E       		.uleb128 0xe
 2337 00b5 3A       		.uleb128 0x3a
 2338 00b6 0B       		.uleb128 0xb
 2339 00b7 3B       		.uleb128 0x3b
 2340 00b8 05       		.uleb128 0x5
 2341 00b9 27       		.uleb128 0x27
 2342 00ba 19       		.uleb128 0x19
 2343 00bb 11       		.uleb128 0x11
 2344 00bc 01       		.uleb128 0x1
 2345 00bd 12       		.uleb128 0x12
 2346 00be 06       		.uleb128 0x6
 2347 00bf 40       		.uleb128 0x40
 2348 00c0 18       		.uleb128 0x18
 2349 00c1 9742     		.uleb128 0x2117
 2350 00c3 19       		.uleb128 0x19
 2351 00c4 01       		.uleb128 0x1
 2352 00c5 13       		.uleb128 0x13
 2353 00c6 00       		.byte	0
 2354 00c7 00       		.byte	0
 2355 00c8 0C       		.uleb128 0xc
 2356 00c9 05       		.uleb128 0x5
 2357 00ca 00       		.byte	0
 2358 00cb 03       		.uleb128 0x3
 2359 00cc 0E       		.uleb128 0xe
 2360 00cd 3A       		.uleb128 0x3a
 2361 00ce 0B       		.uleb128 0xb
 2362 00cf 3B       		.uleb128 0x3b
 2363 00d0 05       		.uleb128 0x5
 2364 00d1 49       		.uleb128 0x49
 2365 00d2 13       		.uleb128 0x13
 2366 00d3 02       		.uleb128 0x2
 2367 00d4 18       		.uleb128 0x18
 2368 00d5 00       		.byte	0
 2369 00d6 00       		.byte	0
 2370 00d7 0D       		.uleb128 0xd
 2371 00d8 2E       		.uleb128 0x2e
 2372 00d9 01       		.byte	0x1
 2373 00da 3F       		.uleb128 0x3f
 2374 00db 19       		.uleb128 0x19
 2375 00dc 03       		.uleb128 0x3
 2376 00dd 0E       		.uleb128 0xe
 2377 00de 3A       		.uleb128 0x3a
 2378 00df 0B       		.uleb128 0xb
 2379 00e0 3B       		.uleb128 0x3b
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 63


 2380 00e1 05       		.uleb128 0x5
 2381 00e2 27       		.uleb128 0x27
 2382 00e3 19       		.uleb128 0x19
 2383 00e4 49       		.uleb128 0x49
 2384 00e5 13       		.uleb128 0x13
 2385 00e6 11       		.uleb128 0x11
 2386 00e7 01       		.uleb128 0x1
 2387 00e8 12       		.uleb128 0x12
 2388 00e9 06       		.uleb128 0x6
 2389 00ea 40       		.uleb128 0x40
 2390 00eb 18       		.uleb128 0x18
 2391 00ec 9642     		.uleb128 0x2116
 2392 00ee 19       		.uleb128 0x19
 2393 00ef 01       		.uleb128 0x1
 2394 00f0 13       		.uleb128 0x13
 2395 00f1 00       		.byte	0
 2396 00f2 00       		.byte	0
 2397 00f3 0E       		.uleb128 0xe
 2398 00f4 34       		.uleb128 0x34
 2399 00f5 00       		.byte	0
 2400 00f6 03       		.uleb128 0x3
 2401 00f7 0E       		.uleb128 0xe
 2402 00f8 3A       		.uleb128 0x3a
 2403 00f9 0B       		.uleb128 0xb
 2404 00fa 3B       		.uleb128 0x3b
 2405 00fb 05       		.uleb128 0x5
 2406 00fc 49       		.uleb128 0x49
 2407 00fd 13       		.uleb128 0x13
 2408 00fe 02       		.uleb128 0x2
 2409 00ff 18       		.uleb128 0x18
 2410 0100 00       		.byte	0
 2411 0101 00       		.byte	0
 2412 0102 0F       		.uleb128 0xf
 2413 0103 2E       		.uleb128 0x2e
 2414 0104 01       		.byte	0x1
 2415 0105 3F       		.uleb128 0x3f
 2416 0106 19       		.uleb128 0x19
 2417 0107 03       		.uleb128 0x3
 2418 0108 0E       		.uleb128 0xe
 2419 0109 3A       		.uleb128 0x3a
 2420 010a 0B       		.uleb128 0xb
 2421 010b 3B       		.uleb128 0x3b
 2422 010c 05       		.uleb128 0x5
 2423 010d 27       		.uleb128 0x27
 2424 010e 19       		.uleb128 0x19
 2425 010f 11       		.uleb128 0x11
 2426 0110 01       		.uleb128 0x1
 2427 0111 12       		.uleb128 0x12
 2428 0112 06       		.uleb128 0x6
 2429 0113 40       		.uleb128 0x40
 2430 0114 18       		.uleb128 0x18
 2431 0115 9642     		.uleb128 0x2116
 2432 0117 19       		.uleb128 0x19
 2433 0118 01       		.uleb128 0x1
 2434 0119 13       		.uleb128 0x13
 2435 011a 00       		.byte	0
 2436 011b 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 64


 2437 011c 10       		.uleb128 0x10
 2438 011d 2E       		.uleb128 0x2e
 2439 011e 00       		.byte	0
 2440 011f 3F       		.uleb128 0x3f
 2441 0120 19       		.uleb128 0x19
 2442 0121 03       		.uleb128 0x3
 2443 0122 0E       		.uleb128 0xe
 2444 0123 3A       		.uleb128 0x3a
 2445 0124 0B       		.uleb128 0xb
 2446 0125 3B       		.uleb128 0x3b
 2447 0126 05       		.uleb128 0x5
 2448 0127 27       		.uleb128 0x27
 2449 0128 19       		.uleb128 0x19
 2450 0129 11       		.uleb128 0x11
 2451 012a 01       		.uleb128 0x1
 2452 012b 12       		.uleb128 0x12
 2453 012c 06       		.uleb128 0x6
 2454 012d 40       		.uleb128 0x40
 2455 012e 18       		.uleb128 0x18
 2456 012f 9642     		.uleb128 0x2116
 2457 0131 19       		.uleb128 0x19
 2458 0132 00       		.byte	0
 2459 0133 00       		.byte	0
 2460 0134 11       		.uleb128 0x11
 2461 0135 0F       		.uleb128 0xf
 2462 0136 00       		.byte	0
 2463 0137 0B       		.uleb128 0xb
 2464 0138 0B       		.uleb128 0xb
 2465 0139 49       		.uleb128 0x49
 2466 013a 13       		.uleb128 0x13
 2467 013b 00       		.byte	0
 2468 013c 00       		.byte	0
 2469 013d 12       		.uleb128 0x12
 2470 013e 26       		.uleb128 0x26
 2471 013f 00       		.byte	0
 2472 0140 49       		.uleb128 0x49
 2473 0141 13       		.uleb128 0x13
 2474 0142 00       		.byte	0
 2475 0143 00       		.byte	0
 2476 0144 13       		.uleb128 0x13
 2477 0145 34       		.uleb128 0x34
 2478 0146 00       		.byte	0
 2479 0147 03       		.uleb128 0x3
 2480 0148 0E       		.uleb128 0xe
 2481 0149 3A       		.uleb128 0x3a
 2482 014a 0B       		.uleb128 0xb
 2483 014b 3B       		.uleb128 0x3b
 2484 014c 0B       		.uleb128 0xb
 2485 014d 49       		.uleb128 0x49
 2486 014e 13       		.uleb128 0x13
 2487 014f 3F       		.uleb128 0x3f
 2488 0150 19       		.uleb128 0x19
 2489 0151 02       		.uleb128 0x2
 2490 0152 18       		.uleb128 0x18
 2491 0153 00       		.byte	0
 2492 0154 00       		.byte	0
 2493 0155 14       		.uleb128 0x14
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 65


 2494 0156 01       		.uleb128 0x1
 2495 0157 01       		.byte	0x1
 2496 0158 49       		.uleb128 0x49
 2497 0159 13       		.uleb128 0x13
 2498 015a 01       		.uleb128 0x1
 2499 015b 13       		.uleb128 0x13
 2500 015c 00       		.byte	0
 2501 015d 00       		.byte	0
 2502 015e 15       		.uleb128 0x15
 2503 015f 21       		.uleb128 0x21
 2504 0160 00       		.byte	0
 2505 0161 49       		.uleb128 0x49
 2506 0162 13       		.uleb128 0x13
 2507 0163 2F       		.uleb128 0x2f
 2508 0164 0B       		.uleb128 0xb
 2509 0165 00       		.byte	0
 2510 0166 00       		.byte	0
 2511 0167 00       		.byte	0
 2512              		.section	.debug_aranges,"",%progbits
 2513 0000 D4000000 		.4byte	0xd4
 2514 0004 0200     		.2byte	0x2
 2515 0006 00000000 		.4byte	.Ldebug_info0
 2516 000a 04       		.byte	0x4
 2517 000b 00       		.byte	0
 2518 000c 0000     		.2byte	0
 2519 000e 0000     		.2byte	0
 2520 0010 00000000 		.4byte	.LFB0
 2521 0014 A4000000 		.4byte	.LFE0-.LFB0
 2522 0018 00000000 		.4byte	.LFB1
 2523 001c 60000000 		.4byte	.LFE1-.LFB1
 2524 0020 00000000 		.4byte	.LFB2
 2525 0024 20000000 		.4byte	.LFE2-.LFB2
 2526 0028 00000000 		.4byte	.LFB3
 2527 002c 4C000000 		.4byte	.LFE3-.LFB3
 2528 0030 00000000 		.4byte	.LFB4
 2529 0034 18000000 		.4byte	.LFE4-.LFB4
 2530 0038 00000000 		.4byte	.LFB5
 2531 003c 18000000 		.4byte	.LFE5-.LFB5
 2532 0040 00000000 		.4byte	.LFB6
 2533 0044 18000000 		.4byte	.LFE6-.LFB6
 2534 0048 00000000 		.4byte	.LFB7
 2535 004c 18000000 		.4byte	.LFE7-.LFB7
 2536 0050 00000000 		.4byte	.LFB8
 2537 0054 20000000 		.4byte	.LFE8-.LFB8
 2538 0058 00000000 		.4byte	.LFB9
 2539 005c 20000000 		.4byte	.LFE9-.LFB9
 2540 0060 00000000 		.4byte	.LFB10
 2541 0064 3C000000 		.4byte	.LFE10-.LFB10
 2542 0068 00000000 		.4byte	.LFB11
 2543 006c 3C000000 		.4byte	.LFE11-.LFB11
 2544 0070 00000000 		.4byte	.LFB12
 2545 0074 10010000 		.4byte	.LFE12-.LFB12
 2546 0078 00000000 		.4byte	.LFB13
 2547 007c 78000000 		.4byte	.LFE13-.LFB13
 2548 0080 00000000 		.4byte	.LFB14
 2549 0084 6C000000 		.4byte	.LFE14-.LFB14
 2550 0088 00000000 		.4byte	.LFB15
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 66


 2551 008c 6C000000 		.4byte	.LFE15-.LFB15
 2552 0090 00000000 		.4byte	.LFB16
 2553 0094 48000000 		.4byte	.LFE16-.LFB16
 2554 0098 00000000 		.4byte	.LFB17
 2555 009c 7C000000 		.4byte	.LFE17-.LFB17
 2556 00a0 00000000 		.4byte	.LFB18
 2557 00a4 38000000 		.4byte	.LFE18-.LFB18
 2558 00a8 00000000 		.4byte	.LFB19
 2559 00ac 5C000000 		.4byte	.LFE19-.LFB19
 2560 00b0 00000000 		.4byte	.LFB20
 2561 00b4 0E000000 		.4byte	.LFE20-.LFB20
 2562 00b8 00000000 		.4byte	.LFB21
 2563 00bc 0E000000 		.4byte	.LFE21-.LFB21
 2564 00c0 00000000 		.4byte	.LFB22
 2565 00c4 30000000 		.4byte	.LFE22-.LFB22
 2566 00c8 00000000 		.4byte	.LFB23
 2567 00cc 70000000 		.4byte	.LFE23-.LFB23
 2568 00d0 00000000 		.4byte	0
 2569 00d4 00000000 		.4byte	0
 2570              		.section	.debug_ranges,"",%progbits
 2571              	.Ldebug_ranges0:
 2572 0000 00000000 		.4byte	.LFB0
 2573 0004 A4000000 		.4byte	.LFE0
 2574 0008 00000000 		.4byte	.LFB1
 2575 000c 60000000 		.4byte	.LFE1
 2576 0010 00000000 		.4byte	.LFB2
 2577 0014 20000000 		.4byte	.LFE2
 2578 0018 00000000 		.4byte	.LFB3
 2579 001c 4C000000 		.4byte	.LFE3
 2580 0020 00000000 		.4byte	.LFB4
 2581 0024 18000000 		.4byte	.LFE4
 2582 0028 00000000 		.4byte	.LFB5
 2583 002c 18000000 		.4byte	.LFE5
 2584 0030 00000000 		.4byte	.LFB6
 2585 0034 18000000 		.4byte	.LFE6
 2586 0038 00000000 		.4byte	.LFB7
 2587 003c 18000000 		.4byte	.LFE7
 2588 0040 00000000 		.4byte	.LFB8
 2589 0044 20000000 		.4byte	.LFE8
 2590 0048 00000000 		.4byte	.LFB9
 2591 004c 20000000 		.4byte	.LFE9
 2592 0050 00000000 		.4byte	.LFB10
 2593 0054 3C000000 		.4byte	.LFE10
 2594 0058 00000000 		.4byte	.LFB11
 2595 005c 3C000000 		.4byte	.LFE11
 2596 0060 00000000 		.4byte	.LFB12
 2597 0064 10010000 		.4byte	.LFE12
 2598 0068 00000000 		.4byte	.LFB13
 2599 006c 78000000 		.4byte	.LFE13
 2600 0070 00000000 		.4byte	.LFB14
 2601 0074 6C000000 		.4byte	.LFE14
 2602 0078 00000000 		.4byte	.LFB15
 2603 007c 6C000000 		.4byte	.LFE15
 2604 0080 00000000 		.4byte	.LFB16
 2605 0084 48000000 		.4byte	.LFE16
 2606 0088 00000000 		.4byte	.LFB17
 2607 008c 7C000000 		.4byte	.LFE17
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 67


 2608 0090 00000000 		.4byte	.LFB18
 2609 0094 38000000 		.4byte	.LFE18
 2610 0098 00000000 		.4byte	.LFB19
 2611 009c 5C000000 		.4byte	.LFE19
 2612 00a0 00000000 		.4byte	.LFB20
 2613 00a4 0E000000 		.4byte	.LFE20
 2614 00a8 00000000 		.4byte	.LFB21
 2615 00ac 0E000000 		.4byte	.LFE21
 2616 00b0 00000000 		.4byte	.LFB22
 2617 00b4 30000000 		.4byte	.LFE22
 2618 00b8 00000000 		.4byte	.LFB23
 2619 00bc 70000000 		.4byte	.LFE23
 2620 00c0 00000000 		.4byte	0
 2621 00c4 00000000 		.4byte	0
 2622              		.section	.debug_line,"",%progbits
 2623              	.Ldebug_line0:
 2624 0000 83020000 		.section	.debug_str,"MS",%progbits,1
 2624      02004300 
 2624      00000201 
 2624      FB0E0D00 
 2624      01010101 
 2625              	.LASF26:
 2626 0000 5350494D 		.ascii	"SPIM_SetTxInterruptMode\000"
 2626      5F536574 
 2626      5478496E 
 2626      74657272 
 2626      7570744D 
 2627              	.LASF7:
 2628 0018 6C6F6E67 		.ascii	"long long unsigned int\000"
 2628      206C6F6E 
 2628      6720756E 
 2628      7369676E 
 2628      65642069 
 2629              	.LASF29:
 2630 002f 746D7053 		.ascii	"tmpStatus\000"
 2630      74617475 
 2630      7300
 2631              	.LASF6:
 2632 0039 6C6F6E67 		.ascii	"long long int\000"
 2632      206C6F6E 
 2632      6720696E 
 2632      7400
 2633              	.LASF0:
 2634 0047 7369676E 		.ascii	"signed char\000"
 2634      65642063 
 2634      68617200 
 2635              	.LASF39:
 2636 0053 73697A65 		.ascii	"size\000"
 2636      00
 2637              	.LASF62:
 2638 0058 5350494D 		.ascii	"SPIM_rxBufferFull\000"
 2638      5F727842 
 2638      75666665 
 2638      7246756C 
 2638      6C00
 2639              	.LASF4:
 2640 006a 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 68


 2640      20696E74 
 2640      00
 2641              	.LASF35:
 2642 0073 746D7054 		.ascii	"tmpTxBufferRead\000"
 2642      78427566 
 2642      66657252 
 2642      65616400 
 2643              	.LASF41:
 2644 0083 5350494D 		.ascii	"SPIM_ClearRxBuffer\000"
 2644      5F436C65 
 2644      61725278 
 2644      42756666 
 2644      657200
 2645              	.LASF9:
 2646 0096 75696E74 		.ascii	"uint8\000"
 2646      3800
 2647              	.LASF12:
 2648 009c 646F7562 		.ascii	"double\000"
 2648      6C6500
 2649              	.LASF20:
 2650 00a3 5350494D 		.ascii	"SPIM_Stop\000"
 2650      5F53746F 
 2650      7000
 2651              	.LASF10:
 2652 00ad 75696E74 		.ascii	"uint32\000"
 2652      333200
 2653              	.LASF58:
 2654 00b4 5350494D 		.ascii	"SPIM_txBufferFull\000"
 2654      5F747842 
 2654      75666665 
 2654      7246756C 
 2654      6C00
 2655              	.LASF31:
 2656 00c6 5350494D 		.ascii	"SPIM_ReadRxStatus\000"
 2656      5F526561 
 2656      64527853 
 2656      74617475 
 2656      7300
 2657              	.LASF8:
 2658 00d8 756E7369 		.ascii	"unsigned int\000"
 2658      676E6564 
 2658      20696E74 
 2658      00
 2659              	.LASF32:
 2660 00e5 5350494D 		.ascii	"SPIM_WriteTxData\000"
 2660      5F577269 
 2660      74655478 
 2660      44617461 
 2660      00
 2661              	.LASF57:
 2662 00f6 5350494D 		.ascii	"SPIM_txBufferWrite\000"
 2662      5F747842 
 2662      75666665 
 2662      72577269 
 2662      746500
 2663              	.LASF5:
 2664 0109 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 69


 2664      20756E73 
 2664      69676E65 
 2664      6420696E 
 2664      7400
 2665              	.LASF56:
 2666 011b 5350494D 		.ascii	"SPIM_txBufferRead\000"
 2666      5F747842 
 2666      75666665 
 2666      72526561 
 2666      6400
 2667              	.LASF65:
 2668 012d 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\GitHub\\fre"
 2668      73657273 
 2668      5C4C756B 
 2668      61732043 
 2668      72657574 
 2669 015b 65445350 		.ascii	"eDSPPSoC-I2C\\PSoC5_SPI_Master_CapSense.cydsn\000"
 2669      50536F43 
 2669      2D493243 
 2669      5C50536F 
 2669      43355F53 
 2670              	.LASF3:
 2671 0188 73686F72 		.ascii	"short unsigned int\000"
 2671      7420756E 
 2671      7369676E 
 2671      65642069 
 2671      6E7400
 2672              	.LASF55:
 2673 019b 5350494D 		.ascii	"SPIM_txBuffer\000"
 2673      5F747842 
 2673      75666665 
 2673      7200
 2674              	.LASF46:
 2675 01a9 62756649 		.ascii	"bufIndex\000"
 2675      6E646578 
 2675      00
 2676              	.LASF47:
 2677 01b2 5350494D 		.ascii	"SPIM_ClearFIFO\000"
 2677      5F436C65 
 2677      61724649 
 2677      464F00
 2678              	.LASF28:
 2679 01c1 696E7453 		.ascii	"intSrc\000"
 2679      726300
 2680              	.LASF25:
 2681 01c8 5350494D 		.ascii	"SPIM_DisableRxInt\000"
 2681      5F446973 
 2681      61626C65 
 2681      5278496E 
 2681      7400
 2682              	.LASF54:
 2683 01da 5350494D 		.ascii	"SPIM_swStatusRx\000"
 2683      5F737753 
 2683      74617475 
 2683      73527800 
 2684              	.LASF15:
 2685 01ea 72656733 		.ascii	"reg32\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 70


 2685      3200
 2686              	.LASF43:
 2687 01f0 5350494D 		.ascii	"SPIM_PutArray\000"
 2687      5F507574 
 2687      41727261 
 2687      7900
 2688              	.LASF59:
 2689 01fe 5350494D 		.ascii	"SPIM_rxBuffer\000"
 2689      5F727842 
 2689      75666665 
 2689      7200
 2690              	.LASF16:
 2691 020c 73697A65 		.ascii	"sizetype\000"
 2691      74797065 
 2691      00
 2692              	.LASF61:
 2693 0215 5350494D 		.ascii	"SPIM_rxBufferWrite\000"
 2693      5F727842 
 2693      75666665 
 2693      72577269 
 2693      746500
 2694              	.LASF23:
 2695 0228 5350494D 		.ascii	"SPIM_EnableRxInt\000"
 2695      5F456E61 
 2695      626C6552 
 2695      78496E74 
 2695      00
 2696              	.LASF63:
 2697 0239 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2697      4320342E 
 2697      392E3320 
 2697      32303135 
 2697      30333033 
 2698 026c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2698      20726576 
 2698      6973696F 
 2698      6E203232 
 2698      31323230 
 2699 029f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2699      66756E63 
 2699      74696F6E 
 2699      2D736563 
 2699      74696F6E 
 2700              	.LASF34:
 2701 02c7 74656D70 		.ascii	"tempStatus\000"
 2701      53746174 
 2701      757300
 2702              	.LASF40:
 2703 02d2 5350494D 		.ascii	"SPIM_GetTxBufferSize\000"
 2703      5F476574 
 2703      54784275 
 2703      66666572 
 2703      53697A65 
 2704              	.LASF64:
 2705 02e7 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\SPIM.c\000"
 2705      6E657261 
 2705      7465645F 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 71


 2705      536F7572 
 2705      63655C50 
 2706              	.LASF52:
 2707 0307 5350494D 		.ascii	"SPIM_initVar\000"
 2707      5F696E69 
 2707      74566172 
 2707      00
 2708              	.LASF11:
 2709 0314 666C6F61 		.ascii	"float\000"
 2709      7400
 2710              	.LASF36:
 2711 031a 5350494D 		.ascii	"SPIM_ReadRxData\000"
 2711      5F526561 
 2711      64527844 
 2711      61746100 
 2712              	.LASF14:
 2713 032a 72656738 		.ascii	"reg8\000"
 2713      00
 2714              	.LASF1:
 2715 032f 756E7369 		.ascii	"unsigned char\000"
 2715      676E6564 
 2715      20636861 
 2715      7200
 2716              	.LASF50:
 2717 033d 5350494D 		.ascii	"SPIM_SetInterruptMode\000"
 2717      5F536574 
 2717      496E7465 
 2717      72727570 
 2717      744D6F64 
 2718              	.LASF17:
 2719 0353 5350494D 		.ascii	"SPIM_Init\000"
 2719      5F496E69 
 2719      7400
 2720              	.LASF2:
 2721 035d 73686F72 		.ascii	"short int\000"
 2721      7420696E 
 2721      7400
 2722              	.LASF48:
 2723 0367 5350494D 		.ascii	"SPIM_EnableInt\000"
 2723      5F456E61 
 2723      626C6549 
 2723      6E7400
 2724              	.LASF30:
 2725 0376 5350494D 		.ascii	"SPIM_ReadTxStatus\000"
 2725      5F526561 
 2725      64547853 
 2725      74617475 
 2725      7300
 2726              	.LASF24:
 2727 0388 5350494D 		.ascii	"SPIM_DisableTxInt\000"
 2727      5F446973 
 2727      61626C65 
 2727      5478496E 
 2727      7400
 2728              	.LASF45:
 2729 039a 62797465 		.ascii	"byteCount\000"
 2729      436F756E 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 72


 2729      7400
 2730              	.LASF27:
 2731 03a4 5350494D 		.ascii	"SPIM_SetRxInterruptMode\000"
 2731      5F536574 
 2731      5278496E 
 2731      74657272 
 2731      7570744D 
 2732              	.LASF53:
 2733 03bc 5350494D 		.ascii	"SPIM_swStatusTx\000"
 2733      5F737753 
 2733      74617475 
 2733      73547800 
 2734              	.LASF37:
 2735 03cc 72784461 		.ascii	"rxData\000"
 2735      746100
 2736              	.LASF13:
 2737 03d3 63686172 		.ascii	"char\000"
 2737      00
 2738              	.LASF19:
 2739 03d8 5350494D 		.ascii	"SPIM_Enable\000"
 2739      5F456E61 
 2739      626C6500 
 2740              	.LASF51:
 2741 03e4 5350494D 		.ascii	"SPIM_ReadStatus\000"
 2741      5F526561 
 2741      64537461 
 2741      74757300 
 2742              	.LASF44:
 2743 03f4 62756666 		.ascii	"buffer\000"
 2743      657200
 2744              	.LASF22:
 2745 03fb 5350494D 		.ascii	"SPIM_EnableTxInt\000"
 2745      5F456E61 
 2745      626C6554 
 2745      78496E74 
 2745      00
 2746              	.LASF38:
 2747 040c 5350494D 		.ascii	"SPIM_GetRxBufferSize\000"
 2747      5F476574 
 2747      52784275 
 2747      66666572 
 2747      53697A65 
 2748              	.LASF18:
 2749 0421 5350494D 		.ascii	"SPIM_Start\000"
 2749      5F537461 
 2749      727400
 2750              	.LASF21:
 2751 042c 656E6162 		.ascii	"enableInterrupts\000"
 2751      6C65496E 
 2751      74657272 
 2751      75707473 
 2751      00
 2752              	.LASF42:
 2753 043d 5350494D 		.ascii	"SPIM_ClearTxBuffer\000"
 2753      5F436C65 
 2753      61725478 
 2753      42756666 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccZHbAWz.s 			page 73


 2753      657200
 2754              	.LASF60:
 2755 0450 5350494D 		.ascii	"SPIM_rxBufferRead\000"
 2755      5F727842 
 2755      75666665 
 2755      72526561 
 2755      6400
 2756              	.LASF49:
 2757 0462 5350494D 		.ascii	"SPIM_DisableInt\000"
 2757      5F446973 
 2757      61626C65 
 2757      496E7400 
 2758              	.LASF33:
 2759 0472 74784461 		.ascii	"txData\000"
 2759      746100
 2760              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
