ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"SPIM.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	SPIM_initVar
  19              		.bss
  20              		.type	SPIM_initVar, %object
  21              		.size	SPIM_initVar, 1
  22              	SPIM_initVar:
  23 0000 00       		.space	1
  24              		.comm	SPIM_swStatusTx,1,1
  25              		.comm	SPIM_swStatusRx,1,1
  26              		.section	.text.SPIM_Init,"ax",%progbits
  27              		.align	2
  28              		.global	SPIM_Init
  29              		.thumb
  30              		.thumb_func
  31              		.type	SPIM_Init, %function
  32              	SPIM_Init:
  33              	.LFB0:
  34              		.file 1 ".\\Generated_Source\\PSoC5\\SPIM.c"
   1:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/SPIM.c **** * File Name: SPIM.c
   3:.\Generated_Source\PSoC5/SPIM.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/SPIM.c **** *
   5:.\Generated_Source\PSoC5/SPIM.c **** * Description:
   6:.\Generated_Source\PSoC5/SPIM.c **** *  This file provides all API functionality of the SPI Master component.
   7:.\Generated_Source\PSoC5/SPIM.c **** *
   8:.\Generated_Source\PSoC5/SPIM.c **** * Note:
   9:.\Generated_Source\PSoC5/SPIM.c **** *  None.
  10:.\Generated_Source\PSoC5/SPIM.c **** *
  11:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/SPIM.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/SPIM.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/SPIM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/SPIM.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/SPIM.c **** 
  18:.\Generated_Source\PSoC5/SPIM.c **** #include "SPIM_PVT.h"
  19:.\Generated_Source\PSoC5/SPIM.c **** 
  20:.\Generated_Source\PSoC5/SPIM.c **** #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  21:.\Generated_Source\PSoC5/SPIM.c ****     volatile uint16 SPIM_txBuffer[SPIM_TX_BUFFER_SIZE];
  22:.\Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBufferFull;
  23:.\Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBufferRead;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 2


  24:.\Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_txBufferWrite;
  25:.\Generated_Source\PSoC5/SPIM.c **** #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  26:.\Generated_Source\PSoC5/SPIM.c **** 
  27:.\Generated_Source\PSoC5/SPIM.c **** #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  28:.\Generated_Source\PSoC5/SPIM.c ****     volatile uint16 SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE];
  29:.\Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBufferFull;
  30:.\Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBufferRead;
  31:.\Generated_Source\PSoC5/SPIM.c ****     volatile uint8 SPIM_rxBufferWrite;
  32:.\Generated_Source\PSoC5/SPIM.c **** #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  33:.\Generated_Source\PSoC5/SPIM.c **** 
  34:.\Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_initVar = 0u;
  35:.\Generated_Source\PSoC5/SPIM.c **** 
  36:.\Generated_Source\PSoC5/SPIM.c **** volatile uint8 SPIM_swStatusTx;
  37:.\Generated_Source\PSoC5/SPIM.c **** volatile uint8 SPIM_swStatusRx;
  38:.\Generated_Source\PSoC5/SPIM.c **** 
  39:.\Generated_Source\PSoC5/SPIM.c **** 
  40:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
  41:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Init
  42:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
  43:.\Generated_Source\PSoC5/SPIM.c **** *
  44:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
  45:.\Generated_Source\PSoC5/SPIM.c **** *  Inits/Restores default SPIM configuration provided with customizer.
  46:.\Generated_Source\PSoC5/SPIM.c **** *
  47:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
  48:.\Generated_Source\PSoC5/SPIM.c **** *  None.
  49:.\Generated_Source\PSoC5/SPIM.c **** *
  50:.\Generated_Source\PSoC5/SPIM.c **** * Return:
  51:.\Generated_Source\PSoC5/SPIM.c **** *  None.
  52:.\Generated_Source\PSoC5/SPIM.c **** *
  53:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
  54:.\Generated_Source\PSoC5/SPIM.c **** *  When this function is called it initializes all of the necessary parameters
  55:.\Generated_Source\PSoC5/SPIM.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  56:.\Generated_Source\PSoC5/SPIM.c **** *  interrupt service routine, configuring the bit-counter parameters and
  57:.\Generated_Source\PSoC5/SPIM.c **** *  clearing the FIFO and Status Register.
  58:.\Generated_Source\PSoC5/SPIM.c **** *
  59:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
  60:.\Generated_Source\PSoC5/SPIM.c **** *  No.
  61:.\Generated_Source\PSoC5/SPIM.c **** *
  62:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
  63:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_Init(void) 
  64:.\Generated_Source\PSoC5/SPIM.c **** {
  35              		.loc 1 64 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  65:.\Generated_Source\PSoC5/SPIM.c ****     /* Initialize the Bit counter */
  66:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_COUNTER_PERIOD_REG = SPIM_BITCTR_INIT;
  45              		.loc 1 66 0
  46 0004 074B     		ldr	r3, .L2
  47 0006 1F22     		movs	r2, #31
  48 0008 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 3


  67:.\Generated_Source\PSoC5/SPIM.c **** 
  68:.\Generated_Source\PSoC5/SPIM.c ****     /* Init TX ISR  */
  69:.\Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
  70:.\Generated_Source\PSoC5/SPIM.c ****         CyIntDisable         (SPIM_TX_ISR_NUMBER);
  71:.\Generated_Source\PSoC5/SPIM.c ****         CyIntSetPriority     (SPIM_TX_ISR_NUMBER,  SPIM_TX_ISR_PRIORITY);
  72:.\Generated_Source\PSoC5/SPIM.c ****         (void) CyIntSetVector(SPIM_TX_ISR_NUMBER, &SPIM_TX_ISR);
  73:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
  74:.\Generated_Source\PSoC5/SPIM.c **** 
  75:.\Generated_Source\PSoC5/SPIM.c ****     /* Init RX ISR  */
  76:.\Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
  77:.\Generated_Source\PSoC5/SPIM.c ****         CyIntDisable         (SPIM_RX_ISR_NUMBER);
  78:.\Generated_Source\PSoC5/SPIM.c ****         CyIntSetPriority     (SPIM_RX_ISR_NUMBER,  SPIM_RX_ISR_PRIORITY);
  79:.\Generated_Source\PSoC5/SPIM.c ****         (void) CyIntSetVector(SPIM_RX_ISR_NUMBER, &SPIM_RX_ISR);
  80:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
  81:.\Generated_Source\PSoC5/SPIM.c **** 
  82:.\Generated_Source\PSoC5/SPIM.c ****     /* Clear any stray data from the RX and TX FIFO */
  83:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_ClearFIFO();
  49              		.loc 1 83 0
  50 000a FFF7FEFF 		bl	SPIM_ClearFIFO
  84:.\Generated_Source\PSoC5/SPIM.c **** 
  85:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
  86:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferFull  = 0u;
  87:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferRead  = 0u;
  88:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferWrite = 0u;
  89:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
  90:.\Generated_Source\PSoC5/SPIM.c **** 
  91:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
  92:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferFull  = 0u;
  93:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferRead  = 0u;
  94:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferWrite = 0u;
  95:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
  96:.\Generated_Source\PSoC5/SPIM.c **** 
  97:.\Generated_Source\PSoC5/SPIM.c ****     (void) SPIM_ReadTxStatus(); /* Clear Tx status and swStatusTx */
  51              		.loc 1 97 0
  52 000e FFF7FEFF 		bl	SPIM_ReadTxStatus
  98:.\Generated_Source\PSoC5/SPIM.c ****     (void) SPIM_ReadRxStatus(); /* Clear Rx status and swStatusRx */
  53              		.loc 1 98 0
  54 0012 FFF7FEFF 		bl	SPIM_ReadRxStatus
  99:.\Generated_Source\PSoC5/SPIM.c **** 
 100:.\Generated_Source\PSoC5/SPIM.c ****     /* Configure TX and RX interrupt mask */
 101:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = SPIM_TX_INIT_INTERRUPTS_MASK;
  55              		.loc 1 101 0
  56 0016 044B     		ldr	r3, .L2+4
  57 0018 0022     		movs	r2, #0
  58 001a 1A70     		strb	r2, [r3]
 102:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_MASK_REG = SPIM_RX_INIT_INTERRUPTS_MASK;
  59              		.loc 1 102 0
  60 001c 034B     		ldr	r3, .L2+8
  61 001e 0022     		movs	r2, #0
  62 0020 1A70     		strb	r2, [r3]
 103:.\Generated_Source\PSoC5/SPIM.c **** }
  63              		.loc 1 103 0
  64 0022 80BD     		pop	{r7, pc}
  65              	.L3:
  66              		.align	2
  67              	.L2:
  68 0024 84650040 		.word	1073767812
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 4


  69 0028 86650040 		.word	1073767814
  70 002c 87650040 		.word	1073767815
  71              		.cfi_endproc
  72              	.LFE0:
  73              		.size	SPIM_Init, .-SPIM_Init
  74              		.section	.text.SPIM_Enable,"ax",%progbits
  75              		.align	2
  76              		.global	SPIM_Enable
  77              		.thumb
  78              		.thumb_func
  79              		.type	SPIM_Enable, %function
  80              	SPIM_Enable:
  81              	.LFB1:
 104:.\Generated_Source\PSoC5/SPIM.c **** 
 105:.\Generated_Source\PSoC5/SPIM.c **** 
 106:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 107:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Enable
 108:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 109:.\Generated_Source\PSoC5/SPIM.c **** *
 110:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 111:.\Generated_Source\PSoC5/SPIM.c **** *  Enable SPIM component.
 112:.\Generated_Source\PSoC5/SPIM.c **** *
 113:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 114:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 115:.\Generated_Source\PSoC5/SPIM.c **** *
 116:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 117:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 118:.\Generated_Source\PSoC5/SPIM.c **** *
 119:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 120:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_Enable(void) 
 121:.\Generated_Source\PSoC5/SPIM.c **** {
  82              		.loc 1 121 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 8
  85              		@ frame_needed = 1, uses_anonymous_args = 0
  86 0000 80B5     		push	{r7, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 7, -8
  89              		.cfi_offset 14, -4
  90 0002 82B0     		sub	sp, sp, #8
  91              		.cfi_def_cfa_offset 16
  92 0004 00AF     		add	r7, sp, #0
  93              		.cfi_def_cfa_register 7
 122:.\Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 123:.\Generated_Source\PSoC5/SPIM.c **** 
 124:.\Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
  94              		.loc 1 124 0
  95 0006 FFF7FEFF 		bl	CyEnterCriticalSection
  96 000a 0346     		mov	r3, r0
  97 000c FB71     		strb	r3, [r7, #7]
 125:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_COUNTER_CONTROL_REG |= SPIM_CNTR_ENABLE;
  98              		.loc 1 125 0
  99 000e 114A     		ldr	r2, .L5
 100 0010 104B     		ldr	r3, .L5
 101 0012 1B78     		ldrb	r3, [r3]
 102 0014 DBB2     		uxtb	r3, r3
 103 0016 43F02003 		orr	r3, r3, #32
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 5


 104 001a DBB2     		uxtb	r3, r3
 105 001c 1370     		strb	r3, [r2]
 126:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
 106              		.loc 1 126 0
 107 001e 0E4A     		ldr	r2, .L5+4
 108 0020 0D4B     		ldr	r3, .L5+4
 109 0022 1B78     		ldrb	r3, [r3]
 110 0024 DBB2     		uxtb	r3, r3
 111 0026 43F01003 		orr	r3, r3, #16
 112 002a DBB2     		uxtb	r3, r3
 113 002c 1370     		strb	r3, [r2]
 127:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG  |= SPIM_INT_ENABLE;
 114              		.loc 1 127 0
 115 002e 0B4A     		ldr	r2, .L5+8
 116 0030 0A4B     		ldr	r3, .L5+8
 117 0032 1B78     		ldrb	r3, [r3]
 118 0034 DBB2     		uxtb	r3, r3
 119 0036 43F01003 		orr	r3, r3, #16
 120 003a DBB2     		uxtb	r3, r3
 121 003c 1370     		strb	r3, [r2]
 128:.\Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 122              		.loc 1 128 0
 123 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 124 0040 1846     		mov	r0, r3
 125 0042 FFF7FEFF 		bl	CyExitCriticalSection
 129:.\Generated_Source\PSoC5/SPIM.c **** 
 130:.\Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 131:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_IntClock_Enable();
 132:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 133:.\Generated_Source\PSoC5/SPIM.c **** 
 134:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableTxInt();
 126              		.loc 1 134 0
 127 0046 FFF7FEFF 		bl	SPIM_EnableTxInt
 135:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableRxInt();
 128              		.loc 1 135 0
 129 004a FFF7FEFF 		bl	SPIM_EnableRxInt
 136:.\Generated_Source\PSoC5/SPIM.c **** }
 130              		.loc 1 136 0
 131 004e 0837     		adds	r7, r7, #8
 132              		.cfi_def_cfa_offset 8
 133 0050 BD46     		mov	sp, r7
 134              		.cfi_def_cfa_register 13
 135              		@ sp needed
 136 0052 80BD     		pop	{r7, pc}
 137              	.L6:
 138              		.align	2
 139              	.L5:
 140 0054 94650040 		.word	1073767828
 141 0058 96650040 		.word	1073767830
 142 005c 97650040 		.word	1073767831
 143              		.cfi_endproc
 144              	.LFE1:
 145              		.size	SPIM_Enable, .-SPIM_Enable
 146              		.section	.text.SPIM_Start,"ax",%progbits
 147              		.align	2
 148              		.global	SPIM_Start
 149              		.thumb
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 6


 150              		.thumb_func
 151              		.type	SPIM_Start, %function
 152              	SPIM_Start:
 153              	.LFB2:
 137:.\Generated_Source\PSoC5/SPIM.c **** 
 138:.\Generated_Source\PSoC5/SPIM.c **** 
 139:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 140:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Start
 141:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 142:.\Generated_Source\PSoC5/SPIM.c **** *
 143:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 144:.\Generated_Source\PSoC5/SPIM.c **** *  Initialize and Enable the SPI Master component.
 145:.\Generated_Source\PSoC5/SPIM.c **** *
 146:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 147:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 148:.\Generated_Source\PSoC5/SPIM.c **** *
 149:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 150:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 151:.\Generated_Source\PSoC5/SPIM.c **** *
 152:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
 153:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_initVar - used to check initial configuration, modified on
 154:.\Generated_Source\PSoC5/SPIM.c **** *  first function call.
 155:.\Generated_Source\PSoC5/SPIM.c **** *
 156:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 157:.\Generated_Source\PSoC5/SPIM.c **** *  Enable the clock input to enable operation.
 158:.\Generated_Source\PSoC5/SPIM.c **** *
 159:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 160:.\Generated_Source\PSoC5/SPIM.c **** *  No.
 161:.\Generated_Source\PSoC5/SPIM.c **** *
 162:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 163:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_Start(void) 
 164:.\Generated_Source\PSoC5/SPIM.c **** {
 154              		.loc 1 164 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 1, uses_anonymous_args = 0
 158 0000 80B5     		push	{r7, lr}
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162 0002 00AF     		add	r7, sp, #0
 163              		.cfi_def_cfa_register 7
 165:.\Generated_Source\PSoC5/SPIM.c ****     if(0u == SPIM_initVar)
 164              		.loc 1 165 0
 165 0004 054B     		ldr	r3, .L9
 166 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 167 0008 002B     		cmp	r3, #0
 168 000a 04D1     		bne	.L8
 166:.\Generated_Source\PSoC5/SPIM.c ****     {
 167:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_Init();
 169              		.loc 1 167 0
 170 000c FFF7FEFF 		bl	SPIM_Init
 168:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_initVar = 1u;
 171              		.loc 1 168 0
 172 0010 024B     		ldr	r3, .L9
 173 0012 0122     		movs	r2, #1
 174 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 7


 175              	.L8:
 169:.\Generated_Source\PSoC5/SPIM.c ****     }
 170:.\Generated_Source\PSoC5/SPIM.c **** 
 171:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_Enable();
 176              		.loc 1 171 0
 177 0016 FFF7FEFF 		bl	SPIM_Enable
 172:.\Generated_Source\PSoC5/SPIM.c **** }
 178              		.loc 1 172 0
 179 001a 80BD     		pop	{r7, pc}
 180              	.L10:
 181              		.align	2
 182              	.L9:
 183 001c 00000000 		.word	SPIM_initVar
 184              		.cfi_endproc
 185              	.LFE2:
 186              		.size	SPIM_Start, .-SPIM_Start
 187              		.section	.text.SPIM_Stop,"ax",%progbits
 188              		.align	2
 189              		.global	SPIM_Stop
 190              		.thumb
 191              		.thumb_func
 192              		.type	SPIM_Stop, %function
 193              	SPIM_Stop:
 194              	.LFB3:
 173:.\Generated_Source\PSoC5/SPIM.c **** 
 174:.\Generated_Source\PSoC5/SPIM.c **** 
 175:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 176:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_Stop
 177:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 178:.\Generated_Source\PSoC5/SPIM.c **** *
 179:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 180:.\Generated_Source\PSoC5/SPIM.c **** *  Disable the SPI Master component.
 181:.\Generated_Source\PSoC5/SPIM.c **** *
 182:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 183:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 184:.\Generated_Source\PSoC5/SPIM.c **** *
 185:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 186:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 187:.\Generated_Source\PSoC5/SPIM.c **** *
 188:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 189:.\Generated_Source\PSoC5/SPIM.c **** *  Disable the clock input to enable operation.
 190:.\Generated_Source\PSoC5/SPIM.c **** *
 191:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 192:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_Stop(void) 
 193:.\Generated_Source\PSoC5/SPIM.c **** {
 195              		.loc 1 193 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 8
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199 0000 80B5     		push	{r7, lr}
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 7, -8
 202              		.cfi_offset 14, -4
 203 0002 82B0     		sub	sp, sp, #8
 204              		.cfi_def_cfa_offset 16
 205 0004 00AF     		add	r7, sp, #0
 206              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 8


 194:.\Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 195:.\Generated_Source\PSoC5/SPIM.c **** 
 196:.\Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 207              		.loc 1 196 0
 208 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 209 000a 0346     		mov	r3, r0
 210 000c FB71     		strb	r3, [r7, #7]
 197:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 211              		.loc 1 197 0
 212 000e 0D4A     		ldr	r2, .L12
 213 0010 0C4B     		ldr	r3, .L12
 214 0012 1B78     		ldrb	r3, [r3]
 215 0014 DBB2     		uxtb	r3, r3
 216 0016 23F01003 		bic	r3, r3, #16
 217 001a DBB2     		uxtb	r3, r3
 218 001c 1370     		strb	r3, [r2]
 198:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_ACTL_REG &= ((uint8) ~SPIM_INT_ENABLE);
 219              		.loc 1 198 0
 220 001e 0A4A     		ldr	r2, .L12+4
 221 0020 094B     		ldr	r3, .L12+4
 222 0022 1B78     		ldrb	r3, [r3]
 223 0024 DBB2     		uxtb	r3, r3
 224 0026 23F01003 		bic	r3, r3, #16
 225 002a DBB2     		uxtb	r3, r3
 226 002c 1370     		strb	r3, [r2]
 199:.\Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 227              		.loc 1 199 0
 228 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 229 0030 1846     		mov	r0, r3
 230 0032 FFF7FEFF 		bl	CyExitCriticalSection
 200:.\Generated_Source\PSoC5/SPIM.c **** 
 201:.\Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_CLOCK)
 202:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_IntClock_Disable();
 203:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_CLOCK) */
 204:.\Generated_Source\PSoC5/SPIM.c **** 
 205:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableTxInt();
 231              		.loc 1 205 0
 232 0036 FFF7FEFF 		bl	SPIM_DisableTxInt
 206:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableRxInt();
 233              		.loc 1 206 0
 234 003a FFF7FEFF 		bl	SPIM_DisableRxInt
 207:.\Generated_Source\PSoC5/SPIM.c **** }
 235              		.loc 1 207 0
 236 003e 0837     		adds	r7, r7, #8
 237              		.cfi_def_cfa_offset 8
 238 0040 BD46     		mov	sp, r7
 239              		.cfi_def_cfa_register 13
 240              		@ sp needed
 241 0042 80BD     		pop	{r7, pc}
 242              	.L13:
 243              		.align	2
 244              	.L12:
 245 0044 96650040 		.word	1073767830
 246 0048 97650040 		.word	1073767831
 247              		.cfi_endproc
 248              	.LFE3:
 249              		.size	SPIM_Stop, .-SPIM_Stop
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 9


 250              		.section	.text.SPIM_EnableTxInt,"ax",%progbits
 251              		.align	2
 252              		.global	SPIM_EnableTxInt
 253              		.thumb
 254              		.thumb_func
 255              		.type	SPIM_EnableTxInt, %function
 256              	SPIM_EnableTxInt:
 257              	.LFB4:
 208:.\Generated_Source\PSoC5/SPIM.c **** 
 209:.\Generated_Source\PSoC5/SPIM.c **** 
 210:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 211:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_EnableTxInt
 212:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 213:.\Generated_Source\PSoC5/SPIM.c **** *
 214:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 215:.\Generated_Source\PSoC5/SPIM.c **** *  Enable internal Tx interrupt generation.
 216:.\Generated_Source\PSoC5/SPIM.c **** *
 217:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 218:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 219:.\Generated_Source\PSoC5/SPIM.c **** *
 220:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 221:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 222:.\Generated_Source\PSoC5/SPIM.c **** *
 223:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 224:.\Generated_Source\PSoC5/SPIM.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 225:.\Generated_Source\PSoC5/SPIM.c **** *
 226:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_EnableTxInt(void) 
 228:.\Generated_Source\PSoC5/SPIM.c **** {
 258              		.loc 1 228 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 1, uses_anonymous_args = 0
 262              		@ link register save eliminated.
 263 0000 80B4     		push	{r7}
 264              		.cfi_def_cfa_offset 4
 265              		.cfi_offset 7, -4
 266 0002 00AF     		add	r7, sp, #0
 267              		.cfi_def_cfa_register 7
 229:.\Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 230:.\Generated_Source\PSoC5/SPIM.c ****         CyIntEnable(SPIM_TX_ISR_NUMBER);
 231:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 232:.\Generated_Source\PSoC5/SPIM.c **** }
 268              		.loc 1 232 0
 269 0004 BD46     		mov	sp, r7
 270              		.cfi_def_cfa_register 13
 271              		@ sp needed
 272 0006 5DF8047B 		ldr	r7, [sp], #4
 273              		.cfi_restore 7
 274              		.cfi_def_cfa_offset 0
 275 000a 7047     		bx	lr
 276              		.cfi_endproc
 277              	.LFE4:
 278              		.size	SPIM_EnableTxInt, .-SPIM_EnableTxInt
 279              		.section	.text.SPIM_EnableRxInt,"ax",%progbits
 280              		.align	2
 281              		.global	SPIM_EnableRxInt
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 10


 282              		.thumb
 283              		.thumb_func
 284              		.type	SPIM_EnableRxInt, %function
 285              	SPIM_EnableRxInt:
 286              	.LFB5:
 233:.\Generated_Source\PSoC5/SPIM.c **** 
 234:.\Generated_Source\PSoC5/SPIM.c **** 
 235:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 236:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_EnableRxInt
 237:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 238:.\Generated_Source\PSoC5/SPIM.c **** *
 239:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 240:.\Generated_Source\PSoC5/SPIM.c **** *  Enable internal Rx interrupt generation.
 241:.\Generated_Source\PSoC5/SPIM.c **** *
 242:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 243:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 244:.\Generated_Source\PSoC5/SPIM.c **** *
 245:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 246:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 247:.\Generated_Source\PSoC5/SPIM.c **** *
 248:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 249:.\Generated_Source\PSoC5/SPIM.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 250:.\Generated_Source\PSoC5/SPIM.c **** *
 251:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 252:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_EnableRxInt(void) 
 253:.\Generated_Source\PSoC5/SPIM.c **** {
 287              		.loc 1 253 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 1, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 292 0000 80B4     		push	{r7}
 293              		.cfi_def_cfa_offset 4
 294              		.cfi_offset 7, -4
 295 0002 00AF     		add	r7, sp, #0
 296              		.cfi_def_cfa_register 7
 254:.\Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 255:.\Generated_Source\PSoC5/SPIM.c ****         CyIntEnable(SPIM_RX_ISR_NUMBER);
 256:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 257:.\Generated_Source\PSoC5/SPIM.c **** }
 297              		.loc 1 257 0
 298 0004 BD46     		mov	sp, r7
 299              		.cfi_def_cfa_register 13
 300              		@ sp needed
 301 0006 5DF8047B 		ldr	r7, [sp], #4
 302              		.cfi_restore 7
 303              		.cfi_def_cfa_offset 0
 304 000a 7047     		bx	lr
 305              		.cfi_endproc
 306              	.LFE5:
 307              		.size	SPIM_EnableRxInt, .-SPIM_EnableRxInt
 308              		.section	.text.SPIM_DisableTxInt,"ax",%progbits
 309              		.align	2
 310              		.global	SPIM_DisableTxInt
 311              		.thumb
 312              		.thumb_func
 313              		.type	SPIM_DisableTxInt, %function
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 11


 314              	SPIM_DisableTxInt:
 315              	.LFB6:
 258:.\Generated_Source\PSoC5/SPIM.c **** 
 259:.\Generated_Source\PSoC5/SPIM.c **** 
 260:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 261:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_DisableTxInt
 262:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 263:.\Generated_Source\PSoC5/SPIM.c **** *
 264:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 265:.\Generated_Source\PSoC5/SPIM.c **** *  Disable internal Tx interrupt generation.
 266:.\Generated_Source\PSoC5/SPIM.c **** *
 267:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 268:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 269:.\Generated_Source\PSoC5/SPIM.c **** *
 270:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 271:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 272:.\Generated_Source\PSoC5/SPIM.c **** *
 273:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 274:.\Generated_Source\PSoC5/SPIM.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 275:.\Generated_Source\PSoC5/SPIM.c **** *
 276:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 277:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_DisableTxInt(void) 
 278:.\Generated_Source\PSoC5/SPIM.c **** {
 316              		.loc 1 278 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 1, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 321 0000 80B4     		push	{r7}
 322              		.cfi_def_cfa_offset 4
 323              		.cfi_offset 7, -4
 324 0002 00AF     		add	r7, sp, #0
 325              		.cfi_def_cfa_register 7
 279:.\Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_TX_INT_ENABLED)
 280:.\Generated_Source\PSoC5/SPIM.c ****         CyIntDisable(SPIM_TX_ISR_NUMBER);
 281:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_TX_INT_ENABLED) */
 282:.\Generated_Source\PSoC5/SPIM.c **** }
 326              		.loc 1 282 0
 327 0004 BD46     		mov	sp, r7
 328              		.cfi_def_cfa_register 13
 329              		@ sp needed
 330 0006 5DF8047B 		ldr	r7, [sp], #4
 331              		.cfi_restore 7
 332              		.cfi_def_cfa_offset 0
 333 000a 7047     		bx	lr
 334              		.cfi_endproc
 335              	.LFE6:
 336              		.size	SPIM_DisableTxInt, .-SPIM_DisableTxInt
 337              		.section	.text.SPIM_DisableRxInt,"ax",%progbits
 338              		.align	2
 339              		.global	SPIM_DisableRxInt
 340              		.thumb
 341              		.thumb_func
 342              		.type	SPIM_DisableRxInt, %function
 343              	SPIM_DisableRxInt:
 344              	.LFB7:
 283:.\Generated_Source\PSoC5/SPIM.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 12


 284:.\Generated_Source\PSoC5/SPIM.c **** 
 285:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_DisableRxInt
 287:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 288:.\Generated_Source\PSoC5/SPIM.c **** *
 289:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 290:.\Generated_Source\PSoC5/SPIM.c **** *  Disable internal Rx interrupt generation.
 291:.\Generated_Source\PSoC5/SPIM.c **** *
 292:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 293:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 294:.\Generated_Source\PSoC5/SPIM.c **** *
 295:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 296:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 297:.\Generated_Source\PSoC5/SPIM.c **** *
 298:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 299:.\Generated_Source\PSoC5/SPIM.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 300:.\Generated_Source\PSoC5/SPIM.c **** *
 301:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_DisableRxInt(void) 
 303:.\Generated_Source\PSoC5/SPIM.c **** {
 345              		.loc 1 303 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 1, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 350 0000 80B4     		push	{r7}
 351              		.cfi_def_cfa_offset 4
 352              		.cfi_offset 7, -4
 353 0002 00AF     		add	r7, sp, #0
 354              		.cfi_def_cfa_register 7
 304:.\Generated_Source\PSoC5/SPIM.c ****     #if(0u != SPIM_INTERNAL_RX_INT_ENABLED)
 305:.\Generated_Source\PSoC5/SPIM.c ****         CyIntDisable(SPIM_RX_ISR_NUMBER);
 306:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (0u != SPIM_INTERNAL_RX_INT_ENABLED) */
 307:.\Generated_Source\PSoC5/SPIM.c **** }
 355              		.loc 1 307 0
 356 0004 BD46     		mov	sp, r7
 357              		.cfi_def_cfa_register 13
 358              		@ sp needed
 359 0006 5DF8047B 		ldr	r7, [sp], #4
 360              		.cfi_restore 7
 361              		.cfi_def_cfa_offset 0
 362 000a 7047     		bx	lr
 363              		.cfi_endproc
 364              	.LFE7:
 365              		.size	SPIM_DisableRxInt, .-SPIM_DisableRxInt
 366              		.section	.text.SPIM_SetTxInterruptMode,"ax",%progbits
 367              		.align	2
 368              		.global	SPIM_SetTxInterruptMode
 369              		.thumb
 370              		.thumb_func
 371              		.type	SPIM_SetTxInterruptMode, %function
 372              	SPIM_SetTxInterruptMode:
 373              	.LFB8:
 308:.\Generated_Source\PSoC5/SPIM.c **** 
 309:.\Generated_Source\PSoC5/SPIM.c **** 
 310:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 311:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_SetTxInterruptMode
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 13


 312:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 313:.\Generated_Source\PSoC5/SPIM.c **** *
 314:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 315:.\Generated_Source\PSoC5/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 316:.\Generated_Source\PSoC5/SPIM.c **** *
 317:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 318:.\Generated_Source\PSoC5/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 319:.\Generated_Source\PSoC5/SPIM.c **** *  header file).
 320:.\Generated_Source\PSoC5/SPIM.c **** *
 321:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 322:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 323:.\Generated_Source\PSoC5/SPIM.c **** *
 324:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 325:.\Generated_Source\PSoC5/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 326:.\Generated_Source\PSoC5/SPIM.c **** *
 327:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 328:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_SetTxInterruptMode(uint8 intSrc) 
 329:.\Generated_Source\PSoC5/SPIM.c **** {
 374              		.loc 1 329 0
 375              		.cfi_startproc
 376              		@ args = 0, pretend = 0, frame = 8
 377              		@ frame_needed = 1, uses_anonymous_args = 0
 378              		@ link register save eliminated.
 379 0000 80B4     		push	{r7}
 380              		.cfi_def_cfa_offset 4
 381              		.cfi_offset 7, -4
 382 0002 83B0     		sub	sp, sp, #12
 383              		.cfi_def_cfa_offset 16
 384 0004 00AF     		add	r7, sp, #0
 385              		.cfi_def_cfa_register 7
 386 0006 0346     		mov	r3, r0
 387 0008 FB71     		strb	r3, [r7, #7]
 330:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_MASK_REG = intSrc;
 388              		.loc 1 330 0
 389 000a 044A     		ldr	r2, .L19
 390 000c FB79     		ldrb	r3, [r7, #7]
 391 000e 1370     		strb	r3, [r2]
 331:.\Generated_Source\PSoC5/SPIM.c **** }
 392              		.loc 1 331 0
 393 0010 0C37     		adds	r7, r7, #12
 394              		.cfi_def_cfa_offset 4
 395 0012 BD46     		mov	sp, r7
 396              		.cfi_def_cfa_register 13
 397              		@ sp needed
 398 0014 5DF8047B 		ldr	r7, [sp], #4
 399              		.cfi_restore 7
 400              		.cfi_def_cfa_offset 0
 401 0018 7047     		bx	lr
 402              	.L20:
 403 001a 00BF     		.align	2
 404              	.L19:
 405 001c 86650040 		.word	1073767814
 406              		.cfi_endproc
 407              	.LFE8:
 408              		.size	SPIM_SetTxInterruptMode, .-SPIM_SetTxInterruptMode
 409              		.section	.text.SPIM_SetRxInterruptMode,"ax",%progbits
 410              		.align	2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 14


 411              		.global	SPIM_SetRxInterruptMode
 412              		.thumb
 413              		.thumb_func
 414              		.type	SPIM_SetRxInterruptMode, %function
 415              	SPIM_SetRxInterruptMode:
 416              	.LFB9:
 332:.\Generated_Source\PSoC5/SPIM.c **** 
 333:.\Generated_Source\PSoC5/SPIM.c **** 
 334:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 335:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_SetRxInterruptMode
 336:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 337:.\Generated_Source\PSoC5/SPIM.c **** *
 338:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 339:.\Generated_Source\PSoC5/SPIM.c **** *  Configure which status bits trigger an interrupt event.
 340:.\Generated_Source\PSoC5/SPIM.c **** *
 341:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 342:.\Generated_Source\PSoC5/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 343:.\Generated_Source\PSoC5/SPIM.c **** *  header file).
 344:.\Generated_Source\PSoC5/SPIM.c **** *
 345:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 346:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 347:.\Generated_Source\PSoC5/SPIM.c **** *
 348:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 349:.\Generated_Source\PSoC5/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
 350:.\Generated_Source\PSoC5/SPIM.c **** *
 351:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 352:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_SetRxInterruptMode(uint8 intSrc) 
 353:.\Generated_Source\PSoC5/SPIM.c **** {
 417              		.loc 1 353 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 8
 420              		@ frame_needed = 1, uses_anonymous_args = 0
 421              		@ link register save eliminated.
 422 0000 80B4     		push	{r7}
 423              		.cfi_def_cfa_offset 4
 424              		.cfi_offset 7, -4
 425 0002 83B0     		sub	sp, sp, #12
 426              		.cfi_def_cfa_offset 16
 427 0004 00AF     		add	r7, sp, #0
 428              		.cfi_def_cfa_register 7
 429 0006 0346     		mov	r3, r0
 430 0008 FB71     		strb	r3, [r7, #7]
 354:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  = intSrc;
 431              		.loc 1 354 0
 432 000a 044A     		ldr	r2, .L22
 433 000c FB79     		ldrb	r3, [r7, #7]
 434 000e 1370     		strb	r3, [r2]
 355:.\Generated_Source\PSoC5/SPIM.c **** }
 435              		.loc 1 355 0
 436 0010 0C37     		adds	r7, r7, #12
 437              		.cfi_def_cfa_offset 4
 438 0012 BD46     		mov	sp, r7
 439              		.cfi_def_cfa_register 13
 440              		@ sp needed
 441 0014 5DF8047B 		ldr	r7, [sp], #4
 442              		.cfi_restore 7
 443              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 15


 444 0018 7047     		bx	lr
 445              	.L23:
 446 001a 00BF     		.align	2
 447              	.L22:
 448 001c 87650040 		.word	1073767815
 449              		.cfi_endproc
 450              	.LFE9:
 451              		.size	SPIM_SetRxInterruptMode, .-SPIM_SetRxInterruptMode
 452              		.section	.text.SPIM_ReadTxStatus,"ax",%progbits
 453              		.align	2
 454              		.global	SPIM_ReadTxStatus
 455              		.thumb
 456              		.thumb_func
 457              		.type	SPIM_ReadTxStatus, %function
 458              	SPIM_ReadTxStatus:
 459              	.LFB10:
 356:.\Generated_Source\PSoC5/SPIM.c **** 
 357:.\Generated_Source\PSoC5/SPIM.c **** 
 358:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 359:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadTxStatus
 360:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 361:.\Generated_Source\PSoC5/SPIM.c **** *
 362:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 363:.\Generated_Source\PSoC5/SPIM.c **** *  Read the Tx status register for the component.
 364:.\Generated_Source\PSoC5/SPIM.c **** *
 365:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 366:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 367:.\Generated_Source\PSoC5/SPIM.c **** *
 368:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 369:.\Generated_Source\PSoC5/SPIM.c **** *  Contents of the Tx status register.
 370:.\Generated_Source\PSoC5/SPIM.c **** *
 371:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
 372:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_swStatusTx - used to store in software status register,
 373:.\Generated_Source\PSoC5/SPIM.c **** *  modified every function call - resets to zero.
 374:.\Generated_Source\PSoC5/SPIM.c **** *
 375:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 376:.\Generated_Source\PSoC5/SPIM.c **** *  Allows the user and the API to read the Tx status register for error
 377:.\Generated_Source\PSoC5/SPIM.c **** *  detection and flow control.
 378:.\Generated_Source\PSoC5/SPIM.c **** *
 379:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 380:.\Generated_Source\PSoC5/SPIM.c **** *  Clear Tx status register of the component.
 381:.\Generated_Source\PSoC5/SPIM.c **** *
 382:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 383:.\Generated_Source\PSoC5/SPIM.c **** *  No.
 384:.\Generated_Source\PSoC5/SPIM.c **** *
 385:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 386:.\Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadTxStatus(void) 
 387:.\Generated_Source\PSoC5/SPIM.c **** {
 460              		.loc 1 387 0
 461              		.cfi_startproc
 462              		@ args = 0, pretend = 0, frame = 8
 463              		@ frame_needed = 1, uses_anonymous_args = 0
 464              		@ link register save eliminated.
 465 0000 80B4     		push	{r7}
 466              		.cfi_def_cfa_offset 4
 467              		.cfi_offset 7, -4
 468 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 16


 469              		.cfi_def_cfa_offset 16
 470 0004 00AF     		add	r7, sp, #0
 471              		.cfi_def_cfa_register 7
 388:.\Generated_Source\PSoC5/SPIM.c ****     uint8 tmpStatus;
 389:.\Generated_Source\PSoC5/SPIM.c **** 
 390:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 391:.\Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 392:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 393:.\Generated_Source\PSoC5/SPIM.c **** 
 394:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 395:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusTx = 0u;
 396:.\Generated_Source\PSoC5/SPIM.c **** 
 397:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 398:.\Generated_Source\PSoC5/SPIM.c **** 
 399:.\Generated_Source\PSoC5/SPIM.c ****     #else
 400:.\Generated_Source\PSoC5/SPIM.c **** 
 401:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_TX_STATUS_REG;
 472              		.loc 1 401 0
 473 0006 054B     		ldr	r3, .L26
 474 0008 1B78     		ldrb	r3, [r3]
 475 000a FB71     		strb	r3, [r7, #7]
 402:.\Generated_Source\PSoC5/SPIM.c **** 
 403:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 404:.\Generated_Source\PSoC5/SPIM.c **** 
 405:.\Generated_Source\PSoC5/SPIM.c ****     return(tmpStatus);
 476              		.loc 1 405 0
 477 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 406:.\Generated_Source\PSoC5/SPIM.c **** }
 478              		.loc 1 406 0
 479 000e 1846     		mov	r0, r3
 480 0010 0C37     		adds	r7, r7, #12
 481              		.cfi_def_cfa_offset 4
 482 0012 BD46     		mov	sp, r7
 483              		.cfi_def_cfa_register 13
 484              		@ sp needed
 485 0014 5DF8047B 		ldr	r7, [sp], #4
 486              		.cfi_restore 7
 487              		.cfi_def_cfa_offset 0
 488 0018 7047     		bx	lr
 489              	.L27:
 490 001a 00BF     		.align	2
 491              	.L26:
 492 001c 66650040 		.word	1073767782
 493              		.cfi_endproc
 494              	.LFE10:
 495              		.size	SPIM_ReadTxStatus, .-SPIM_ReadTxStatus
 496              		.section	.text.SPIM_ReadRxStatus,"ax",%progbits
 497              		.align	2
 498              		.global	SPIM_ReadRxStatus
 499              		.thumb
 500              		.thumb_func
 501              		.type	SPIM_ReadRxStatus, %function
 502              	SPIM_ReadRxStatus:
 503              	.LFB11:
 407:.\Generated_Source\PSoC5/SPIM.c **** 
 408:.\Generated_Source\PSoC5/SPIM.c **** 
 409:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 17


 410:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadRxStatus
 411:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 412:.\Generated_Source\PSoC5/SPIM.c **** *
 413:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 414:.\Generated_Source\PSoC5/SPIM.c **** *  Read the Rx status register for the component.
 415:.\Generated_Source\PSoC5/SPIM.c **** *
 416:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 417:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 418:.\Generated_Source\PSoC5/SPIM.c **** *
 419:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 420:.\Generated_Source\PSoC5/SPIM.c **** *  Contents of the Rx status register.
 421:.\Generated_Source\PSoC5/SPIM.c **** *
 422:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
 423:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_swStatusRx - used to store in software Rx status register,
 424:.\Generated_Source\PSoC5/SPIM.c **** *  modified every function call - resets to zero.
 425:.\Generated_Source\PSoC5/SPIM.c **** *
 426:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 427:.\Generated_Source\PSoC5/SPIM.c **** *  Allows the user and the API to read the Rx status register for error
 428:.\Generated_Source\PSoC5/SPIM.c **** *  detection and flow control.
 429:.\Generated_Source\PSoC5/SPIM.c **** *
 430:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 431:.\Generated_Source\PSoC5/SPIM.c **** *  Clear Rx status register of the component.
 432:.\Generated_Source\PSoC5/SPIM.c **** *
 433:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 434:.\Generated_Source\PSoC5/SPIM.c **** *  No.
 435:.\Generated_Source\PSoC5/SPIM.c **** *
 436:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 437:.\Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadRxStatus(void) 
 438:.\Generated_Source\PSoC5/SPIM.c **** {
 504              		.loc 1 438 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 8
 507              		@ frame_needed = 1, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509 0000 80B4     		push	{r7}
 510              		.cfi_def_cfa_offset 4
 511              		.cfi_offset 7, -4
 512 0002 83B0     		sub	sp, sp, #12
 513              		.cfi_def_cfa_offset 16
 514 0004 00AF     		add	r7, sp, #0
 515              		.cfi_def_cfa_register 7
 439:.\Generated_Source\PSoC5/SPIM.c ****     uint8 tmpStatus;
 440:.\Generated_Source\PSoC5/SPIM.c **** 
 441:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 442:.\Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 443:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 444:.\Generated_Source\PSoC5/SPIM.c **** 
 445:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
 446:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusRx = 0u;
 447:.\Generated_Source\PSoC5/SPIM.c **** 
 448:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 449:.\Generated_Source\PSoC5/SPIM.c **** 
 450:.\Generated_Source\PSoC5/SPIM.c ****     #else
 451:.\Generated_Source\PSoC5/SPIM.c **** 
 452:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus = SPIM_RX_STATUS_REG;
 516              		.loc 1 452 0
 517 0006 054B     		ldr	r3, .L30
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 18


 518 0008 1B78     		ldrb	r3, [r3]
 519 000a FB71     		strb	r3, [r7, #7]
 453:.\Generated_Source\PSoC5/SPIM.c **** 
 454:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 455:.\Generated_Source\PSoC5/SPIM.c **** 
 456:.\Generated_Source\PSoC5/SPIM.c ****     return(tmpStatus);
 520              		.loc 1 456 0
 521 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 457:.\Generated_Source\PSoC5/SPIM.c **** }
 522              		.loc 1 457 0
 523 000e 1846     		mov	r0, r3
 524 0010 0C37     		adds	r7, r7, #12
 525              		.cfi_def_cfa_offset 4
 526 0012 BD46     		mov	sp, r7
 527              		.cfi_def_cfa_register 13
 528              		@ sp needed
 529 0014 5DF8047B 		ldr	r7, [sp], #4
 530              		.cfi_restore 7
 531              		.cfi_def_cfa_offset 0
 532 0018 7047     		bx	lr
 533              	.L31:
 534 001a 00BF     		.align	2
 535              	.L30:
 536 001c 67650040 		.word	1073767783
 537              		.cfi_endproc
 538              	.LFE11:
 539              		.size	SPIM_ReadRxStatus, .-SPIM_ReadRxStatus
 540              		.section	.text.SPIM_WriteTxData,"ax",%progbits
 541              		.align	2
 542              		.global	SPIM_WriteTxData
 543              		.thumb
 544              		.thumb_func
 545              		.type	SPIM_WriteTxData, %function
 546              	SPIM_WriteTxData:
 547              	.LFB12:
 458:.\Generated_Source\PSoC5/SPIM.c **** 
 459:.\Generated_Source\PSoC5/SPIM.c **** 
 460:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 461:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_WriteTxData
 462:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 463:.\Generated_Source\PSoC5/SPIM.c **** *
 464:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 465:.\Generated_Source\PSoC5/SPIM.c **** *  Write a byte of data to be sent across the SPI.
 466:.\Generated_Source\PSoC5/SPIM.c **** *
 467:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 468:.\Generated_Source\PSoC5/SPIM.c **** *  txDataByte: The data value to send across the SPI.
 469:.\Generated_Source\PSoC5/SPIM.c **** *
 470:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 471:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 472:.\Generated_Source\PSoC5/SPIM.c **** *
 473:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
 474:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 475:.\Generated_Source\PSoC5/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 476:.\Generated_Source\PSoC5/SPIM.c **** *  call if TX Software Buffer is used.
 477:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 478:.\Generated_Source\PSoC5/SPIM.c **** *  have been read from the TX software buffer.
 479:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBuffer[SPIM_TX_BUFFER_SIZE] - used to store
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 19


 480:.\Generated_Source\PSoC5/SPIM.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 481:.\Generated_Source\PSoC5/SPIM.c **** *
 482:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 483:.\Generated_Source\PSoC5/SPIM.c **** *  Allows the user to transmit any byte of data in a single transfer.
 484:.\Generated_Source\PSoC5/SPIM.c **** *
 485:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 486:.\Generated_Source\PSoC5/SPIM.c **** *  If this function is called again before the previous byte is finished then
 487:.\Generated_Source\PSoC5/SPIM.c **** *  the next byte will be appended to the transfer with no time between
 488:.\Generated_Source\PSoC5/SPIM.c **** *  the byte transfers. Clear Tx status register of the component.
 489:.\Generated_Source\PSoC5/SPIM.c **** *
 490:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 491:.\Generated_Source\PSoC5/SPIM.c **** *  No.
 492:.\Generated_Source\PSoC5/SPIM.c **** *
 493:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 494:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_WriteTxData(uint16 txData) 
 495:.\Generated_Source\PSoC5/SPIM.c **** {
 548              		.loc 1 495 0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 8
 551              		@ frame_needed = 1, uses_anonymous_args = 0
 552              		@ link register save eliminated.
 553 0000 80B4     		push	{r7}
 554              		.cfi_def_cfa_offset 4
 555              		.cfi_offset 7, -4
 556 0002 83B0     		sub	sp, sp, #12
 557              		.cfi_def_cfa_offset 16
 558 0004 00AF     		add	r7, sp, #0
 559              		.cfi_def_cfa_register 7
 560 0006 0346     		mov	r3, r0
 561 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 496:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 497:.\Generated_Source\PSoC5/SPIM.c **** 
 498:.\Generated_Source\PSoC5/SPIM.c ****         uint8 tempStatus;
 499:.\Generated_Source\PSoC5/SPIM.c ****         uint8 tmpTxBufferRead;
 500:.\Generated_Source\PSoC5/SPIM.c **** 
 501:.\Generated_Source\PSoC5/SPIM.c ****         /* Block if TX buffer is FULL: don't overwrite */
 502:.\Generated_Source\PSoC5/SPIM.c ****         do
 503:.\Generated_Source\PSoC5/SPIM.c ****         {
 504:.\Generated_Source\PSoC5/SPIM.c ****             tmpTxBufferRead = SPIM_txBufferRead;
 505:.\Generated_Source\PSoC5/SPIM.c ****             if(0u == tmpTxBufferRead)
 506:.\Generated_Source\PSoC5/SPIM.c ****             {
 507:.\Generated_Source\PSoC5/SPIM.c ****                 tmpTxBufferRead = (SPIM_TX_BUFFER_SIZE - 1u);
 508:.\Generated_Source\PSoC5/SPIM.c ****             }
 509:.\Generated_Source\PSoC5/SPIM.c ****             else
 510:.\Generated_Source\PSoC5/SPIM.c ****             {
 511:.\Generated_Source\PSoC5/SPIM.c ****                 tmpTxBufferRead--;
 512:.\Generated_Source\PSoC5/SPIM.c ****             }
 513:.\Generated_Source\PSoC5/SPIM.c **** 
 514:.\Generated_Source\PSoC5/SPIM.c ****         }while(tmpTxBufferRead == SPIM_txBufferWrite);
 515:.\Generated_Source\PSoC5/SPIM.c **** 
 516:.\Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 517:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 518:.\Generated_Source\PSoC5/SPIM.c **** 
 519:.\Generated_Source\PSoC5/SPIM.c ****         tempStatus = SPIM_GET_STATUS_TX(SPIM_swStatusTx);
 520:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusTx = tempStatus;
 521:.\Generated_Source\PSoC5/SPIM.c **** 
 522:.\Generated_Source\PSoC5/SPIM.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 20


 523:.\Generated_Source\PSoC5/SPIM.c ****         if((SPIM_txBufferRead == SPIM_txBufferWrite) &&
 524:.\Generated_Source\PSoC5/SPIM.c ****            (0u != (SPIM_swStatusTx & SPIM_STS_TX_FIFO_NOT_FULL)))
 525:.\Generated_Source\PSoC5/SPIM.c ****         {
 526:.\Generated_Source\PSoC5/SPIM.c ****             /* Put data element into the TX FIFO */
 527:.\Generated_Source\PSoC5/SPIM.c ****             CY_SET_REG16(SPIM_TXDATA_PTR, txData);
 528:.\Generated_Source\PSoC5/SPIM.c ****         }
 529:.\Generated_Source\PSoC5/SPIM.c ****         else
 530:.\Generated_Source\PSoC5/SPIM.c ****         {
 531:.\Generated_Source\PSoC5/SPIM.c ****             /* Add to the TX software buffer */
 532:.\Generated_Source\PSoC5/SPIM.c ****             SPIM_txBufferWrite++;
 533:.\Generated_Source\PSoC5/SPIM.c ****             if(SPIM_txBufferWrite >= SPIM_TX_BUFFER_SIZE)
 534:.\Generated_Source\PSoC5/SPIM.c ****             {
 535:.\Generated_Source\PSoC5/SPIM.c ****                 SPIM_txBufferWrite = 0u;
 536:.\Generated_Source\PSoC5/SPIM.c ****             }
 537:.\Generated_Source\PSoC5/SPIM.c **** 
 538:.\Generated_Source\PSoC5/SPIM.c ****             if(SPIM_txBufferWrite == SPIM_txBufferRead)
 539:.\Generated_Source\PSoC5/SPIM.c ****             {
 540:.\Generated_Source\PSoC5/SPIM.c ****                 SPIM_txBufferRead++;
 541:.\Generated_Source\PSoC5/SPIM.c ****                 if(SPIM_txBufferRead >= SPIM_TX_BUFFER_SIZE)
 542:.\Generated_Source\PSoC5/SPIM.c ****                 {
 543:.\Generated_Source\PSoC5/SPIM.c ****                     SPIM_txBufferRead = 0u;
 544:.\Generated_Source\PSoC5/SPIM.c ****                 }
 545:.\Generated_Source\PSoC5/SPIM.c ****                 SPIM_txBufferFull = 1u;
 546:.\Generated_Source\PSoC5/SPIM.c ****             }
 547:.\Generated_Source\PSoC5/SPIM.c **** 
 548:.\Generated_Source\PSoC5/SPIM.c ****             SPIM_txBuffer[SPIM_txBufferWrite] = txData;
 549:.\Generated_Source\PSoC5/SPIM.c **** 
 550:.\Generated_Source\PSoC5/SPIM.c ****             SPIM_TX_STATUS_MASK_REG |= SPIM_STS_TX_FIFO_NOT_FULL;
 551:.\Generated_Source\PSoC5/SPIM.c ****         }
 552:.\Generated_Source\PSoC5/SPIM.c **** 
 553:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 554:.\Generated_Source\PSoC5/SPIM.c **** 
 555:.\Generated_Source\PSoC5/SPIM.c ****     #else
 556:.\Generated_Source\PSoC5/SPIM.c ****         /* Wait until TX FIFO has a place */
 557:.\Generated_Source\PSoC5/SPIM.c ****         while(0u == (SPIM_TX_STATUS_REG & SPIM_STS_TX_FIFO_NOT_FULL))
 562              		.loc 1 557 0
 563 000a 00BF     		nop
 564              	.L33:
 565              		.loc 1 557 0 is_stmt 0 discriminator 1
 566 000c 074B     		ldr	r3, .L34
 567 000e 1B78     		ldrb	r3, [r3]
 568 0010 DBB2     		uxtb	r3, r3
 569 0012 03F00403 		and	r3, r3, #4
 570 0016 002B     		cmp	r3, #0
 571 0018 F8D0     		beq	.L33
 558:.\Generated_Source\PSoC5/SPIM.c ****         {
 559:.\Generated_Source\PSoC5/SPIM.c ****         }
 560:.\Generated_Source\PSoC5/SPIM.c **** 
 561:.\Generated_Source\PSoC5/SPIM.c ****         /* Put data element into the TX FIFO */
 562:.\Generated_Source\PSoC5/SPIM.c ****         CY_SET_REG16(SPIM_TXDATA_PTR, txData);
 572              		.loc 1 562 0 is_stmt 1
 573 001a 054A     		ldr	r2, .L34+4
 574 001c FB88     		ldrh	r3, [r7, #6]	@ movhi
 575 001e 1380     		strh	r3, [r2]	@ movhi
 563:.\Generated_Source\PSoC5/SPIM.c **** 
 564:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 565:.\Generated_Source\PSoC5/SPIM.c **** }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 21


 576              		.loc 1 565 0
 577 0020 0C37     		adds	r7, r7, #12
 578              		.cfi_def_cfa_offset 4
 579 0022 BD46     		mov	sp, r7
 580              		.cfi_def_cfa_register 13
 581              		@ sp needed
 582 0024 5DF8047B 		ldr	r7, [sp], #4
 583              		.cfi_restore 7
 584              		.cfi_def_cfa_offset 0
 585 0028 7047     		bx	lr
 586              	.L35:
 587 002a 00BF     		.align	2
 588              	.L34:
 589 002c 66650040 		.word	1073767782
 590 0030 44650040 		.word	1073767748
 591              		.cfi_endproc
 592              	.LFE12:
 593              		.size	SPIM_WriteTxData, .-SPIM_WriteTxData
 594              		.section	.text.SPIM_ReadRxData,"ax",%progbits
 595              		.align	2
 596              		.global	SPIM_ReadRxData
 597              		.thumb
 598              		.thumb_func
 599              		.type	SPIM_ReadRxData, %function
 600              	SPIM_ReadRxData:
 601              	.LFB13:
 566:.\Generated_Source\PSoC5/SPIM.c **** 
 567:.\Generated_Source\PSoC5/SPIM.c **** 
 568:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 569:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadRxData
 570:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 571:.\Generated_Source\PSoC5/SPIM.c **** *
 572:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 573:.\Generated_Source\PSoC5/SPIM.c **** *  Read the next byte of data received across the SPI.
 574:.\Generated_Source\PSoC5/SPIM.c **** *
 575:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 576:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 577:.\Generated_Source\PSoC5/SPIM.c **** *
 578:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 579:.\Generated_Source\PSoC5/SPIM.c **** *  The next byte of data read from the FIFO.
 580:.\Generated_Source\PSoC5/SPIM.c **** *
 581:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
 582:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 583:.\Generated_Source\PSoC5/SPIM.c **** *  have been written down in the RX software buffer.
 584:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 585:.\Generated_Source\PSoC5/SPIM.c **** *  have been read from the RX software buffer, modified every function
 586:.\Generated_Source\PSoC5/SPIM.c **** *  call if RX Software Buffer is used.
 587:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBuffer[SPIM_RX_BUFFER_SIZE] - used to store
 588:.\Generated_Source\PSoC5/SPIM.c **** *  received data.
 589:.\Generated_Source\PSoC5/SPIM.c **** *
 590:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 591:.\Generated_Source\PSoC5/SPIM.c **** *  Allows the user to read a byte of data received.
 592:.\Generated_Source\PSoC5/SPIM.c **** *
 593:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 594:.\Generated_Source\PSoC5/SPIM.c **** *  Will return invalid data if the FIFO is empty. The user should Call
 595:.\Generated_Source\PSoC5/SPIM.c **** *  GetRxBufferSize() and if it returns a non-zero value then it is safe to call
 596:.\Generated_Source\PSoC5/SPIM.c **** *  ReadByte() function.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 22


 597:.\Generated_Source\PSoC5/SPIM.c **** *
 598:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 599:.\Generated_Source\PSoC5/SPIM.c **** *  No.
 600:.\Generated_Source\PSoC5/SPIM.c **** *
 601:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 602:.\Generated_Source\PSoC5/SPIM.c **** uint16 SPIM_ReadRxData(void) 
 603:.\Generated_Source\PSoC5/SPIM.c **** {
 602              		.loc 1 603 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 8
 605              		@ frame_needed = 1, uses_anonymous_args = 0
 606              		@ link register save eliminated.
 607 0000 80B4     		push	{r7}
 608              		.cfi_def_cfa_offset 4
 609              		.cfi_offset 7, -4
 610 0002 83B0     		sub	sp, sp, #12
 611              		.cfi_def_cfa_offset 16
 612 0004 00AF     		add	r7, sp, #0
 613              		.cfi_def_cfa_register 7
 604:.\Generated_Source\PSoC5/SPIM.c ****     uint16 rxData;
 605:.\Generated_Source\PSoC5/SPIM.c **** 
 606:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 607:.\Generated_Source\PSoC5/SPIM.c **** 
 608:.\Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 609:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 610:.\Generated_Source\PSoC5/SPIM.c **** 
 611:.\Generated_Source\PSoC5/SPIM.c ****         if(SPIM_rxBufferRead != SPIM_rxBufferWrite)
 612:.\Generated_Source\PSoC5/SPIM.c ****         {
 613:.\Generated_Source\PSoC5/SPIM.c ****             if(0u == SPIM_rxBufferFull)
 614:.\Generated_Source\PSoC5/SPIM.c ****             {
 615:.\Generated_Source\PSoC5/SPIM.c ****                 SPIM_rxBufferRead++;
 616:.\Generated_Source\PSoC5/SPIM.c ****                 if(SPIM_rxBufferRead >= SPIM_RX_BUFFER_SIZE)
 617:.\Generated_Source\PSoC5/SPIM.c ****                 {
 618:.\Generated_Source\PSoC5/SPIM.c ****                     SPIM_rxBufferRead = 0u;
 619:.\Generated_Source\PSoC5/SPIM.c ****                 }
 620:.\Generated_Source\PSoC5/SPIM.c ****             }
 621:.\Generated_Source\PSoC5/SPIM.c ****             else
 622:.\Generated_Source\PSoC5/SPIM.c ****             {
 623:.\Generated_Source\PSoC5/SPIM.c ****                 SPIM_rxBufferFull = 0u;
 624:.\Generated_Source\PSoC5/SPIM.c ****             }
 625:.\Generated_Source\PSoC5/SPIM.c ****         }
 626:.\Generated_Source\PSoC5/SPIM.c **** 
 627:.\Generated_Source\PSoC5/SPIM.c ****         rxData = SPIM_rxBuffer[SPIM_rxBufferRead];
 628:.\Generated_Source\PSoC5/SPIM.c **** 
 629:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 630:.\Generated_Source\PSoC5/SPIM.c **** 
 631:.\Generated_Source\PSoC5/SPIM.c ****     #else
 632:.\Generated_Source\PSoC5/SPIM.c **** 
 633:.\Generated_Source\PSoC5/SPIM.c ****         rxData = CY_GET_REG16(SPIM_RXDATA_PTR);
 614              		.loc 1 633 0
 615 0006 054B     		ldr	r3, .L38
 616 0008 1B88     		ldrh	r3, [r3]	@ movhi
 617 000a FB80     		strh	r3, [r7, #6]	@ movhi
 634:.\Generated_Source\PSoC5/SPIM.c **** 
 635:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 636:.\Generated_Source\PSoC5/SPIM.c **** 
 637:.\Generated_Source\PSoC5/SPIM.c ****     return(rxData);
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 23


 618              		.loc 1 637 0
 619 000c FB88     		ldrh	r3, [r7, #6]
 638:.\Generated_Source\PSoC5/SPIM.c **** }
 620              		.loc 1 638 0
 621 000e 1846     		mov	r0, r3
 622 0010 0C37     		adds	r7, r7, #12
 623              		.cfi_def_cfa_offset 4
 624 0012 BD46     		mov	sp, r7
 625              		.cfi_def_cfa_register 13
 626              		@ sp needed
 627 0014 5DF8047B 		ldr	r7, [sp], #4
 628              		.cfi_restore 7
 629              		.cfi_def_cfa_offset 0
 630 0018 7047     		bx	lr
 631              	.L39:
 632 001a 00BF     		.align	2
 633              	.L38:
 634 001c 54650040 		.word	1073767764
 635              		.cfi_endproc
 636              	.LFE13:
 637              		.size	SPIM_ReadRxData, .-SPIM_ReadRxData
 638              		.section	.text.SPIM_GetRxBufferSize,"ax",%progbits
 639              		.align	2
 640              		.global	SPIM_GetRxBufferSize
 641              		.thumb
 642              		.thumb_func
 643              		.type	SPIM_GetRxBufferSize, %function
 644              	SPIM_GetRxBufferSize:
 645              	.LFB14:
 639:.\Generated_Source\PSoC5/SPIM.c **** 
 640:.\Generated_Source\PSoC5/SPIM.c **** 
 641:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 642:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_GetRxBufferSize
 643:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 644:.\Generated_Source\PSoC5/SPIM.c **** *
 645:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 646:.\Generated_Source\PSoC5/SPIM.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 647:.\Generated_Source\PSoC5/SPIM.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 648:.\Generated_Source\PSoC5/SPIM.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 649:.\Generated_Source\PSoC5/SPIM.c **** *
 650:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 651:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 652:.\Generated_Source\PSoC5/SPIM.c **** *
 653:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 654:.\Generated_Source\PSoC5/SPIM.c **** *  Integer count of the number of bytes/words in the RX buffer.
 655:.\Generated_Source\PSoC5/SPIM.c **** *
 656:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
 657:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 658:.\Generated_Source\PSoC5/SPIM.c **** *  have been written down in the RX software buffer.
 659:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 660:.\Generated_Source\PSoC5/SPIM.c **** *  have been read from the RX software buffer.
 661:.\Generated_Source\PSoC5/SPIM.c **** *
 662:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 663:.\Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
 664:.\Generated_Source\PSoC5/SPIM.c **** *
 665:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 666:.\Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_GetRxBufferSize(void) 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 24


 667:.\Generated_Source\PSoC5/SPIM.c **** {
 646              		.loc 1 667 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 8
 649              		@ frame_needed = 1, uses_anonymous_args = 0
 650              		@ link register save eliminated.
 651 0000 80B4     		push	{r7}
 652              		.cfi_def_cfa_offset 4
 653              		.cfi_offset 7, -4
 654 0002 83B0     		sub	sp, sp, #12
 655              		.cfi_def_cfa_offset 16
 656 0004 00AF     		add	r7, sp, #0
 657              		.cfi_def_cfa_register 7
 668:.\Generated_Source\PSoC5/SPIM.c ****     uint8 size;
 669:.\Generated_Source\PSoC5/SPIM.c **** 
 670:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 671:.\Generated_Source\PSoC5/SPIM.c **** 
 672:.\Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 673:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 674:.\Generated_Source\PSoC5/SPIM.c **** 
 675:.\Generated_Source\PSoC5/SPIM.c ****         if(SPIM_rxBufferRead == SPIM_rxBufferWrite)
 676:.\Generated_Source\PSoC5/SPIM.c ****         {
 677:.\Generated_Source\PSoC5/SPIM.c ****             size = 0u;
 678:.\Generated_Source\PSoC5/SPIM.c ****         }
 679:.\Generated_Source\PSoC5/SPIM.c ****         else if(SPIM_rxBufferRead < SPIM_rxBufferWrite)
 680:.\Generated_Source\PSoC5/SPIM.c ****         {
 681:.\Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_rxBufferWrite - SPIM_rxBufferRead);
 682:.\Generated_Source\PSoC5/SPIM.c ****         }
 683:.\Generated_Source\PSoC5/SPIM.c ****         else
 684:.\Generated_Source\PSoC5/SPIM.c ****         {
 685:.\Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_RX_BUFFER_SIZE - SPIM_rxBufferRead) + SPIM_rxBufferWrite;
 686:.\Generated_Source\PSoC5/SPIM.c ****         }
 687:.\Generated_Source\PSoC5/SPIM.c **** 
 688:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 689:.\Generated_Source\PSoC5/SPIM.c **** 
 690:.\Generated_Source\PSoC5/SPIM.c ****     #else
 691:.\Generated_Source\PSoC5/SPIM.c **** 
 692:.\Generated_Source\PSoC5/SPIM.c ****         /* We can only know if there is data in the RX FIFO */
 693:.\Generated_Source\PSoC5/SPIM.c ****         size = (0u != (SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY)) ? 1u : 0u;
 658              		.loc 1 693 0
 659 0006 094B     		ldr	r3, .L44
 660 0008 1B78     		ldrb	r3, [r3]
 661 000a DBB2     		uxtb	r3, r3
 662 000c 03F02003 		and	r3, r3, #32
 663 0010 002B     		cmp	r3, #0
 664 0012 01D0     		beq	.L41
 665              		.loc 1 693 0 is_stmt 0 discriminator 1
 666 0014 0123     		movs	r3, #1
 667 0016 00E0     		b	.L42
 668              	.L41:
 669              		.loc 1 693 0 discriminator 2
 670 0018 0023     		movs	r3, #0
 671              	.L42:
 672              		.loc 1 693 0 discriminator 4
 673 001a FB71     		strb	r3, [r7, #7]
 694:.\Generated_Source\PSoC5/SPIM.c **** 
 695:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 25


 696:.\Generated_Source\PSoC5/SPIM.c **** 
 697:.\Generated_Source\PSoC5/SPIM.c ****     return(size);
 674              		.loc 1 697 0 is_stmt 1 discriminator 4
 675 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 698:.\Generated_Source\PSoC5/SPIM.c **** }
 676              		.loc 1 698 0 discriminator 4
 677 001e 1846     		mov	r0, r3
 678 0020 0C37     		adds	r7, r7, #12
 679              		.cfi_def_cfa_offset 4
 680 0022 BD46     		mov	sp, r7
 681              		.cfi_def_cfa_register 13
 682              		@ sp needed
 683 0024 5DF8047B 		ldr	r7, [sp], #4
 684              		.cfi_restore 7
 685              		.cfi_def_cfa_offset 0
 686 0028 7047     		bx	lr
 687              	.L45:
 688 002a 00BF     		.align	2
 689              	.L44:
 690 002c 67650040 		.word	1073767783
 691              		.cfi_endproc
 692              	.LFE14:
 693              		.size	SPIM_GetRxBufferSize, .-SPIM_GetRxBufferSize
 694              		.section	.text.SPIM_GetTxBufferSize,"ax",%progbits
 695              		.align	2
 696              		.global	SPIM_GetTxBufferSize
 697              		.thumb
 698              		.thumb_func
 699              		.type	SPIM_GetTxBufferSize, %function
 700              	SPIM_GetTxBufferSize:
 701              	.LFB15:
 699:.\Generated_Source\PSoC5/SPIM.c **** 
 700:.\Generated_Source\PSoC5/SPIM.c **** 
 701:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 702:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_GetTxBufferSize
 703:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 704:.\Generated_Source\PSoC5/SPIM.c **** *
 705:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 706:.\Generated_Source\PSoC5/SPIM.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 707:.\Generated_Source\PSoC5/SPIM.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 708:.\Generated_Source\PSoC5/SPIM.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 709:.\Generated_Source\PSoC5/SPIM.c **** *  Software Buffer.
 710:.\Generated_Source\PSoC5/SPIM.c **** *
 711:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 712:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 713:.\Generated_Source\PSoC5/SPIM.c **** *
 714:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 715:.\Generated_Source\PSoC5/SPIM.c **** *  Integer count of the number of bytes/words in the TX buffer.
 716:.\Generated_Source\PSoC5/SPIM.c **** *
 717:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
 718:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 719:.\Generated_Source\PSoC5/SPIM.c **** *  have been written down in the TX software buffer.
 720:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 721:.\Generated_Source\PSoC5/SPIM.c **** *  have been read from the TX software buffer.
 722:.\Generated_Source\PSoC5/SPIM.c **** *
 723:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 724:.\Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 26


 725:.\Generated_Source\PSoC5/SPIM.c **** *
 726:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 727:.\Generated_Source\PSoC5/SPIM.c **** uint8  SPIM_GetTxBufferSize(void) 
 728:.\Generated_Source\PSoC5/SPIM.c **** {
 702              		.loc 1 728 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 8
 705              		@ frame_needed = 1, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 707 0000 80B4     		push	{r7}
 708              		.cfi_def_cfa_offset 4
 709              		.cfi_offset 7, -4
 710 0002 83B0     		sub	sp, sp, #12
 711              		.cfi_def_cfa_offset 16
 712 0004 00AF     		add	r7, sp, #0
 713              		.cfi_def_cfa_register 7
 729:.\Generated_Source\PSoC5/SPIM.c ****     uint8 size;
 730:.\Generated_Source\PSoC5/SPIM.c **** 
 731:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 732:.\Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 733:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 734:.\Generated_Source\PSoC5/SPIM.c **** 
 735:.\Generated_Source\PSoC5/SPIM.c ****         if(SPIM_txBufferRead == SPIM_txBufferWrite)
 736:.\Generated_Source\PSoC5/SPIM.c ****         {
 737:.\Generated_Source\PSoC5/SPIM.c ****             size = 0u;
 738:.\Generated_Source\PSoC5/SPIM.c ****         }
 739:.\Generated_Source\PSoC5/SPIM.c ****         else if(SPIM_txBufferRead < SPIM_txBufferWrite)
 740:.\Generated_Source\PSoC5/SPIM.c ****         {
 741:.\Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_txBufferWrite - SPIM_txBufferRead);
 742:.\Generated_Source\PSoC5/SPIM.c ****         }
 743:.\Generated_Source\PSoC5/SPIM.c ****         else
 744:.\Generated_Source\PSoC5/SPIM.c ****         {
 745:.\Generated_Source\PSoC5/SPIM.c ****             size = (SPIM_TX_BUFFER_SIZE - SPIM_txBufferRead) + SPIM_txBufferWrite;
 746:.\Generated_Source\PSoC5/SPIM.c ****         }
 747:.\Generated_Source\PSoC5/SPIM.c **** 
 748:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 749:.\Generated_Source\PSoC5/SPIM.c **** 
 750:.\Generated_Source\PSoC5/SPIM.c ****     #else
 751:.\Generated_Source\PSoC5/SPIM.c **** 
 752:.\Generated_Source\PSoC5/SPIM.c ****         size = SPIM_TX_STATUS_REG;
 714              		.loc 1 752 0
 715 0006 0E4B     		ldr	r3, .L51
 716 0008 1B78     		ldrb	r3, [r3]
 717 000a FB71     		strb	r3, [r7, #7]
 753:.\Generated_Source\PSoC5/SPIM.c **** 
 754:.\Generated_Source\PSoC5/SPIM.c ****         if(0u != (size & SPIM_STS_TX_FIFO_EMPTY))
 718              		.loc 1 754 0
 719 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 720 000e 03F00203 		and	r3, r3, #2
 721 0012 002B     		cmp	r3, #0
 722 0014 02D0     		beq	.L47
 755:.\Generated_Source\PSoC5/SPIM.c ****         {
 756:.\Generated_Source\PSoC5/SPIM.c ****             size = 0u;
 723              		.loc 1 756 0
 724 0016 0023     		movs	r3, #0
 725 0018 FB71     		strb	r3, [r7, #7]
 726 001a 09E0     		b	.L48
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 27


 727              	.L47:
 757:.\Generated_Source\PSoC5/SPIM.c ****         }
 758:.\Generated_Source\PSoC5/SPIM.c ****         else if(0u != (size & SPIM_STS_TX_FIFO_NOT_FULL))
 728              		.loc 1 758 0
 729 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 730 001e 03F00403 		and	r3, r3, #4
 731 0022 002B     		cmp	r3, #0
 732 0024 02D0     		beq	.L49
 759:.\Generated_Source\PSoC5/SPIM.c ****         {
 760:.\Generated_Source\PSoC5/SPIM.c ****             size = 1u;
 733              		.loc 1 760 0
 734 0026 0123     		movs	r3, #1
 735 0028 FB71     		strb	r3, [r7, #7]
 736 002a 01E0     		b	.L48
 737              	.L49:
 761:.\Generated_Source\PSoC5/SPIM.c ****         }
 762:.\Generated_Source\PSoC5/SPIM.c ****         else
 763:.\Generated_Source\PSoC5/SPIM.c ****         {
 764:.\Generated_Source\PSoC5/SPIM.c ****             size = SPIM_FIFO_SIZE;
 738              		.loc 1 764 0
 739 002c 0423     		movs	r3, #4
 740 002e FB71     		strb	r3, [r7, #7]
 741              	.L48:
 765:.\Generated_Source\PSoC5/SPIM.c ****         }
 766:.\Generated_Source\PSoC5/SPIM.c **** 
 767:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 768:.\Generated_Source\PSoC5/SPIM.c **** 
 769:.\Generated_Source\PSoC5/SPIM.c ****     return(size);
 742              		.loc 1 769 0
 743 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 770:.\Generated_Source\PSoC5/SPIM.c **** }
 744              		.loc 1 770 0
 745 0032 1846     		mov	r0, r3
 746 0034 0C37     		adds	r7, r7, #12
 747              		.cfi_def_cfa_offset 4
 748 0036 BD46     		mov	sp, r7
 749              		.cfi_def_cfa_register 13
 750              		@ sp needed
 751 0038 5DF8047B 		ldr	r7, [sp], #4
 752              		.cfi_restore 7
 753              		.cfi_def_cfa_offset 0
 754 003c 7047     		bx	lr
 755              	.L52:
 756 003e 00BF     		.align	2
 757              	.L51:
 758 0040 66650040 		.word	1073767782
 759              		.cfi_endproc
 760              	.LFE15:
 761              		.size	SPIM_GetTxBufferSize, .-SPIM_GetTxBufferSize
 762              		.section	.text.SPIM_ClearRxBuffer,"ax",%progbits
 763              		.align	2
 764              		.global	SPIM_ClearRxBuffer
 765              		.thumb
 766              		.thumb_func
 767              		.type	SPIM_ClearRxBuffer, %function
 768              	SPIM_ClearRxBuffer:
 769              	.LFB16:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 28


 771:.\Generated_Source\PSoC5/SPIM.c **** 
 772:.\Generated_Source\PSoC5/SPIM.c **** 
 773:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 774:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ClearRxBuffer
 775:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 776:.\Generated_Source\PSoC5/SPIM.c **** *
 777:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 778:.\Generated_Source\PSoC5/SPIM.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 779:.\Generated_Source\PSoC5/SPIM.c **** *
 780:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 781:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 782:.\Generated_Source\PSoC5/SPIM.c **** *
 783:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 784:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 785:.\Generated_Source\PSoC5/SPIM.c **** *
 786:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
 787:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferWrite - used for the account of the bytes which
 788:.\Generated_Source\PSoC5/SPIM.c **** *  have been written down in the RX software buffer, modified every function
 789:.\Generated_Source\PSoC5/SPIM.c **** *  call - resets to zero.
 790:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_rxBufferRead - used for the account of the bytes which
 791:.\Generated_Source\PSoC5/SPIM.c **** *  have been read from the RX software buffer, modified every function call -
 792:.\Generated_Source\PSoC5/SPIM.c **** *  resets to zero.
 793:.\Generated_Source\PSoC5/SPIM.c **** *
 794:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 795:.\Generated_Source\PSoC5/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 796:.\Generated_Source\PSoC5/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 797:.\Generated_Source\PSoC5/SPIM.c **** *  remained in the RAM.
 798:.\Generated_Source\PSoC5/SPIM.c **** *
 799:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 800:.\Generated_Source\PSoC5/SPIM.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 801:.\Generated_Source\PSoC5/SPIM.c **** *
 802:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 803:.\Generated_Source\PSoC5/SPIM.c **** *  No.
 804:.\Generated_Source\PSoC5/SPIM.c **** *
 805:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 806:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_ClearRxBuffer(void) 
 807:.\Generated_Source\PSoC5/SPIM.c **** {
 770              		.loc 1 807 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 1, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 775 0000 80B4     		push	{r7}
 776              		.cfi_def_cfa_offset 4
 777              		.cfi_offset 7, -4
 778 0002 00AF     		add	r7, sp, #0
 779              		.cfi_def_cfa_register 7
 808:.\Generated_Source\PSoC5/SPIM.c ****     /* Clear Hardware RX FIFO */
 809:.\Generated_Source\PSoC5/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 780              		.loc 1 809 0
 781 0004 01E0     		b	.L54
 782              	.L55:
 810:.\Generated_Source\PSoC5/SPIM.c ****     {
 811:.\Generated_Source\PSoC5/SPIM.c ****         (void) CY_GET_REG16(SPIM_RXDATA_PTR);
 783              		.loc 1 811 0
 784 0006 064B     		ldr	r3, .L56
 785 0008 1B88     		ldrh	r3, [r3]	@ movhi
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 29


 786              	.L54:
 809:.\Generated_Source\PSoC5/SPIM.c ****     {
 787              		.loc 1 809 0
 788 000a 064B     		ldr	r3, .L56+4
 789 000c 1B78     		ldrb	r3, [r3]
 790 000e DBB2     		uxtb	r3, r3
 791 0010 03F02003 		and	r3, r3, #32
 792 0014 002B     		cmp	r3, #0
 793 0016 F6D1     		bne	.L55
 812:.\Generated_Source\PSoC5/SPIM.c ****     }
 813:.\Generated_Source\PSoC5/SPIM.c **** 
 814:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_RX_SOFTWARE_BUF_ENABLED)
 815:.\Generated_Source\PSoC5/SPIM.c ****         /* Disable RX interrupt to protect global veriables */
 816:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableRxInt();
 817:.\Generated_Source\PSoC5/SPIM.c **** 
 818:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferFull  = 0u;
 819:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferRead  = 0u;
 820:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_rxBufferWrite = 0u;
 821:.\Generated_Source\PSoC5/SPIM.c **** 
 822:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableRxInt();
 823:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_RX_SOFTWARE_BUF_ENABLED) */
 824:.\Generated_Source\PSoC5/SPIM.c **** }
 794              		.loc 1 824 0
 795 0018 BD46     		mov	sp, r7
 796              		.cfi_def_cfa_register 13
 797              		@ sp needed
 798 001a 5DF8047B 		ldr	r7, [sp], #4
 799              		.cfi_restore 7
 800              		.cfi_def_cfa_offset 0
 801 001e 7047     		bx	lr
 802              	.L57:
 803              		.align	2
 804              	.L56:
 805 0020 54650040 		.word	1073767764
 806 0024 67650040 		.word	1073767783
 807              		.cfi_endproc
 808              	.LFE16:
 809              		.size	SPIM_ClearRxBuffer, .-SPIM_ClearRxBuffer
 810              		.section	.text.SPIM_ClearTxBuffer,"ax",%progbits
 811              		.align	2
 812              		.global	SPIM_ClearTxBuffer
 813              		.thumb
 814              		.thumb_func
 815              		.type	SPIM_ClearTxBuffer, %function
 816              	SPIM_ClearTxBuffer:
 817              	.LFB17:
 825:.\Generated_Source\PSoC5/SPIM.c **** 
 826:.\Generated_Source\PSoC5/SPIM.c **** 
 827:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 828:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ClearTxBuffer
 829:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 830:.\Generated_Source\PSoC5/SPIM.c **** *
 831:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 832:.\Generated_Source\PSoC5/SPIM.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 833:.\Generated_Source\PSoC5/SPIM.c **** *
 834:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 835:.\Generated_Source\PSoC5/SPIM.c **** *  None.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 30


 836:.\Generated_Source\PSoC5/SPIM.c **** *
 837:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 838:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 839:.\Generated_Source\PSoC5/SPIM.c **** *
 840:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
 841:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferWrite - used for the account of the bytes which
 842:.\Generated_Source\PSoC5/SPIM.c **** *  have been written down in the TX software buffer, modified every function
 843:.\Generated_Source\PSoC5/SPIM.c **** *  call - resets to zero.
 844:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_txBufferRead - used for the account of the bytes which
 845:.\Generated_Source\PSoC5/SPIM.c **** *  have been read from the TX software buffer, modified every function call -
 846:.\Generated_Source\PSoC5/SPIM.c **** *  resets to zero.
 847:.\Generated_Source\PSoC5/SPIM.c **** *
 848:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
 849:.\Generated_Source\PSoC5/SPIM.c **** *  Setting the pointers to zero makes the system believe there is no data to
 850:.\Generated_Source\PSoC5/SPIM.c **** *  read and writing will resume at address 0 overwriting any data that may have
 851:.\Generated_Source\PSoC5/SPIM.c **** *  remained in the RAM.
 852:.\Generated_Source\PSoC5/SPIM.c **** *
 853:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 854:.\Generated_Source\PSoC5/SPIM.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 855:.\Generated_Source\PSoC5/SPIM.c **** *  overwritten.
 856:.\Generated_Source\PSoC5/SPIM.c **** *
 857:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 858:.\Generated_Source\PSoC5/SPIM.c **** *  No.
 859:.\Generated_Source\PSoC5/SPIM.c **** *
 860:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 861:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_ClearTxBuffer(void) 
 862:.\Generated_Source\PSoC5/SPIM.c **** {
 818              		.loc 1 862 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 8
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822 0000 80B5     		push	{r7, lr}
 823              		.cfi_def_cfa_offset 8
 824              		.cfi_offset 7, -8
 825              		.cfi_offset 14, -4
 826 0002 82B0     		sub	sp, sp, #8
 827              		.cfi_def_cfa_offset 16
 828 0004 00AF     		add	r7, sp, #0
 829              		.cfi_def_cfa_register 7
 863:.\Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 864:.\Generated_Source\PSoC5/SPIM.c **** 
 865:.\Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 830              		.loc 1 865 0
 831 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 832 000a 0346     		mov	r3, r0
 833 000c FB71     		strb	r3, [r7, #7]
 866:.\Generated_Source\PSoC5/SPIM.c ****     /* Clear TX FIFO */
 867:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 834              		.loc 1 867 0
 835 000e 134A     		ldr	r2, .L59
 836 0010 124B     		ldr	r3, .L59
 837 0012 1B78     		ldrb	r3, [r3]
 838 0014 DBB2     		uxtb	r3, r3
 839 0016 43F00103 		orr	r3, r3, #1
 840 001a DBB2     		uxtb	r3, r3
 841 001c 1370     		strb	r3, [r2]
 868:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 31


 842              		.loc 1 868 0
 843 001e 0F4A     		ldr	r2, .L59
 844 0020 0E4B     		ldr	r3, .L59
 845 0022 1B78     		ldrb	r3, [r3]
 846 0024 DBB2     		uxtb	r3, r3
 847 0026 23F00103 		bic	r3, r3, #1
 848 002a DBB2     		uxtb	r3, r3
 849 002c 1370     		strb	r3, [r2]
 869:.\Generated_Source\PSoC5/SPIM.c **** 
 870:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
 871:.\Generated_Source\PSoC5/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
 872:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 850              		.loc 1 872 0
 851 002e 0C4A     		ldr	r2, .L59+4
 852 0030 0B4B     		ldr	r3, .L59+4
 853 0032 1B78     		ldrb	r3, [r3]
 854 0034 DBB2     		uxtb	r3, r3
 855 0036 43F00103 		orr	r3, r3, #1
 856 003a DBB2     		uxtb	r3, r3
 857 003c 1370     		strb	r3, [r2]
 873:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 858              		.loc 1 873 0
 859 003e 084A     		ldr	r2, .L59+4
 860 0040 074B     		ldr	r3, .L59+4
 861 0042 1B78     		ldrb	r3, [r3]
 862 0044 DBB2     		uxtb	r3, r3
 863 0046 23F00103 		bic	r3, r3, #1
 864 004a DBB2     		uxtb	r3, r3
 865 004c 1370     		strb	r3, [r2]
 874:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
 875:.\Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 866              		.loc 1 875 0
 867 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 868 0050 1846     		mov	r0, r3
 869 0052 FFF7FEFF 		bl	CyExitCriticalSection
 876:.\Generated_Source\PSoC5/SPIM.c **** 
 877:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED)
 878:.\Generated_Source\PSoC5/SPIM.c ****         /* Disable TX interrupt to protect global veriables */
 879:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableTxInt();
 880:.\Generated_Source\PSoC5/SPIM.c **** 
 881:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferFull  = 0u;
 882:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferRead  = 0u;
 883:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_txBufferWrite = 0u;
 884:.\Generated_Source\PSoC5/SPIM.c **** 
 885:.\Generated_Source\PSoC5/SPIM.c ****         /* Buffer is EMPTY: disable TX FIFO NOT FULL interrupt */
 886:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_TX_STATUS_MASK_REG &= ((uint8) ~SPIM_STS_TX_FIFO_NOT_FULL);
 887:.\Generated_Source\PSoC5/SPIM.c **** 
 888:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableTxInt();
 889:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED) */
 890:.\Generated_Source\PSoC5/SPIM.c **** }
 870              		.loc 1 890 0
 871 0056 0837     		adds	r7, r7, #8
 872              		.cfi_def_cfa_offset 8
 873 0058 BD46     		mov	sp, r7
 874              		.cfi_def_cfa_register 13
 875              		@ sp needed
 876 005a 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 32


 877              	.L60:
 878              		.align	2
 879              	.L59:
 880 005c 94650040 		.word	1073767828
 881 0060 95650040 		.word	1073767829
 882              		.cfi_endproc
 883              	.LFE17:
 884              		.size	SPIM_ClearTxBuffer, .-SPIM_ClearTxBuffer
 885              		.section	.text.SPIM_PutArray,"ax",%progbits
 886              		.align	2
 887              		.global	SPIM_PutArray
 888              		.thumb
 889              		.thumb_func
 890              		.type	SPIM_PutArray, %function
 891              	SPIM_PutArray:
 892              	.LFB18:
 891:.\Generated_Source\PSoC5/SPIM.c **** 
 892:.\Generated_Source\PSoC5/SPIM.c **** 
 893:.\Generated_Source\PSoC5/SPIM.c **** #if(0u != SPIM_BIDIRECTIONAL_MODE)
 894:.\Generated_Source\PSoC5/SPIM.c ****     /*******************************************************************************
 895:.\Generated_Source\PSoC5/SPIM.c ****     * Function Name: SPIM_TxEnable
 896:.\Generated_Source\PSoC5/SPIM.c ****     ********************************************************************************
 897:.\Generated_Source\PSoC5/SPIM.c ****     *
 898:.\Generated_Source\PSoC5/SPIM.c ****     * Summary:
 899:.\Generated_Source\PSoC5/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 900:.\Generated_Source\PSoC5/SPIM.c ****     *  will set the bi-directional pin to transmit.
 901:.\Generated_Source\PSoC5/SPIM.c ****     *
 902:.\Generated_Source\PSoC5/SPIM.c ****     * Parameters:
 903:.\Generated_Source\PSoC5/SPIM.c ****     *  None.
 904:.\Generated_Source\PSoC5/SPIM.c ****     *
 905:.\Generated_Source\PSoC5/SPIM.c ****     * Return:
 906:.\Generated_Source\PSoC5/SPIM.c ****     *  None.
 907:.\Generated_Source\PSoC5/SPIM.c ****     *
 908:.\Generated_Source\PSoC5/SPIM.c ****     *******************************************************************************/
 909:.\Generated_Source\PSoC5/SPIM.c ****     void SPIM_TxEnable(void) 
 910:.\Generated_Source\PSoC5/SPIM.c ****     {
 911:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_CONTROL_REG |= SPIM_CTRL_TX_SIGNAL_EN;
 912:.\Generated_Source\PSoC5/SPIM.c ****     }
 913:.\Generated_Source\PSoC5/SPIM.c **** 
 914:.\Generated_Source\PSoC5/SPIM.c **** 
 915:.\Generated_Source\PSoC5/SPIM.c ****     /*******************************************************************************
 916:.\Generated_Source\PSoC5/SPIM.c ****     * Function Name: SPIM_TxDisable
 917:.\Generated_Source\PSoC5/SPIM.c ****     ********************************************************************************
 918:.\Generated_Source\PSoC5/SPIM.c ****     *
 919:.\Generated_Source\PSoC5/SPIM.c ****     * Summary:
 920:.\Generated_Source\PSoC5/SPIM.c ****     *  If the SPI master is configured to use a single bi-directional pin then this
 921:.\Generated_Source\PSoC5/SPIM.c ****     *  will set the bi-directional pin to receive.
 922:.\Generated_Source\PSoC5/SPIM.c ****     *
 923:.\Generated_Source\PSoC5/SPIM.c ****     * Parameters:
 924:.\Generated_Source\PSoC5/SPIM.c ****     *  None.
 925:.\Generated_Source\PSoC5/SPIM.c ****     *
 926:.\Generated_Source\PSoC5/SPIM.c ****     * Return:
 927:.\Generated_Source\PSoC5/SPIM.c ****     *  None.
 928:.\Generated_Source\PSoC5/SPIM.c ****     *
 929:.\Generated_Source\PSoC5/SPIM.c ****     *******************************************************************************/
 930:.\Generated_Source\PSoC5/SPIM.c ****     void SPIM_TxDisable(void) 
 931:.\Generated_Source\PSoC5/SPIM.c ****     {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 33


 932:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_CONTROL_REG &= ((uint8) ~SPIM_CTRL_TX_SIGNAL_EN);
 933:.\Generated_Source\PSoC5/SPIM.c ****     }
 934:.\Generated_Source\PSoC5/SPIM.c **** 
 935:.\Generated_Source\PSoC5/SPIM.c **** #endif /* (0u != SPIM_BIDIRECTIONAL_MODE) */
 936:.\Generated_Source\PSoC5/SPIM.c **** 
 937:.\Generated_Source\PSoC5/SPIM.c **** 
 938:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 939:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_PutArray
 940:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 941:.\Generated_Source\PSoC5/SPIM.c **** *
 942:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 943:.\Generated_Source\PSoC5/SPIM.c **** *  Write available data from ROM/RAM to the TX buffer while space is available
 944:.\Generated_Source\PSoC5/SPIM.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer.
 945:.\Generated_Source\PSoC5/SPIM.c **** *
 946:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 947:.\Generated_Source\PSoC5/SPIM.c **** *  *buffer: Pointer to the location in RAM containing the data to send
 948:.\Generated_Source\PSoC5/SPIM.c **** *  byteCount: The number of bytes to move to the transmit buffer.
 949:.\Generated_Source\PSoC5/SPIM.c **** *
 950:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 951:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 952:.\Generated_Source\PSoC5/SPIM.c **** *
 953:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 954:.\Generated_Source\PSoC5/SPIM.c **** *  Will stay in this routine until all data has been sent.  May get locked in
 955:.\Generated_Source\PSoC5/SPIM.c **** *  this loop if data is not being initiated by the master if there is not
 956:.\Generated_Source\PSoC5/SPIM.c **** *  enough room in the TX FIFO.
 957:.\Generated_Source\PSoC5/SPIM.c **** *
 958:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
 959:.\Generated_Source\PSoC5/SPIM.c **** *  No.
 960:.\Generated_Source\PSoC5/SPIM.c **** *
 961:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 962:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_PutArray(const uint16 buffer[], uint8 byteCount)
 963:.\Generated_Source\PSoC5/SPIM.c ****                                                                           
 964:.\Generated_Source\PSoC5/SPIM.c **** {
 893              		.loc 1 964 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 16
 896              		@ frame_needed = 1, uses_anonymous_args = 0
 897 0000 80B5     		push	{r7, lr}
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 7, -8
 900              		.cfi_offset 14, -4
 901 0002 84B0     		sub	sp, sp, #16
 902              		.cfi_def_cfa_offset 24
 903 0004 00AF     		add	r7, sp, #0
 904              		.cfi_def_cfa_register 7
 905 0006 7860     		str	r0, [r7, #4]
 906 0008 0B46     		mov	r3, r1
 907 000a FB70     		strb	r3, [r7, #3]
 965:.\Generated_Source\PSoC5/SPIM.c ****     uint8 bufIndex;
 966:.\Generated_Source\PSoC5/SPIM.c **** 
 967:.\Generated_Source\PSoC5/SPIM.c ****     bufIndex = 0u;
 908              		.loc 1 967 0
 909 000c 0023     		movs	r3, #0
 910 000e FB73     		strb	r3, [r7, #15]
 968:.\Generated_Source\PSoC5/SPIM.c **** 
 969:.\Generated_Source\PSoC5/SPIM.c ****     while(byteCount > 0u)
 911              		.loc 1 969 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 34


 912 0010 0DE0     		b	.L62
 913              	.L63:
 970:.\Generated_Source\PSoC5/SPIM.c ****     {
 971:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_WriteTxData(buffer[bufIndex]);
 914              		.loc 1 971 0
 915 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 916 0014 5B00     		lsls	r3, r3, #1
 917 0016 7A68     		ldr	r2, [r7, #4]
 918 0018 1344     		add	r3, r3, r2
 919 001a 1B88     		ldrh	r3, [r3]
 920 001c 1846     		mov	r0, r3
 921 001e FFF7FEFF 		bl	SPIM_WriteTxData
 972:.\Generated_Source\PSoC5/SPIM.c ****         bufIndex++;
 922              		.loc 1 972 0
 923 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 924 0024 0133     		adds	r3, r3, #1
 925 0026 FB73     		strb	r3, [r7, #15]
 973:.\Generated_Source\PSoC5/SPIM.c ****         byteCount--;
 926              		.loc 1 973 0
 927 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 928 002a 013B     		subs	r3, r3, #1
 929 002c FB70     		strb	r3, [r7, #3]
 930              	.L62:
 969:.\Generated_Source\PSoC5/SPIM.c ****     {
 931              		.loc 1 969 0
 932 002e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 933 0030 002B     		cmp	r3, #0
 934 0032 EED1     		bne	.L63
 974:.\Generated_Source\PSoC5/SPIM.c ****     }
 975:.\Generated_Source\PSoC5/SPIM.c **** }
 935              		.loc 1 975 0
 936 0034 1037     		adds	r7, r7, #16
 937              		.cfi_def_cfa_offset 8
 938 0036 BD46     		mov	sp, r7
 939              		.cfi_def_cfa_register 13
 940              		@ sp needed
 941 0038 80BD     		pop	{r7, pc}
 942              		.cfi_endproc
 943              	.LFE18:
 944              		.size	SPIM_PutArray, .-SPIM_PutArray
 945 003a 00BF     		.section	.text.SPIM_ClearFIFO,"ax",%progbits
 946              		.align	2
 947              		.global	SPIM_ClearFIFO
 948              		.thumb
 949              		.thumb_func
 950              		.type	SPIM_ClearFIFO, %function
 951              	SPIM_ClearFIFO:
 952              	.LFB19:
 976:.\Generated_Source\PSoC5/SPIM.c **** 
 977:.\Generated_Source\PSoC5/SPIM.c **** 
 978:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
 979:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ClearFIFO
 980:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
 981:.\Generated_Source\PSoC5/SPIM.c **** *
 982:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
 983:.\Generated_Source\PSoC5/SPIM.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
 984:.\Generated_Source\PSoC5/SPIM.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 35


 985:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
 986:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 987:.\Generated_Source\PSoC5/SPIM.c **** *
 988:.\Generated_Source\PSoC5/SPIM.c **** * Return:
 989:.\Generated_Source\PSoC5/SPIM.c **** *  None.
 990:.\Generated_Source\PSoC5/SPIM.c **** *
 991:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
 992:.\Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
 993:.\Generated_Source\PSoC5/SPIM.c **** *
 994:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
 995:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_ClearFIFO(void) 
 996:.\Generated_Source\PSoC5/SPIM.c **** {
 953              		.loc 1 996 0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 8
 956              		@ frame_needed = 1, uses_anonymous_args = 0
 957 0000 80B5     		push	{r7, lr}
 958              		.cfi_def_cfa_offset 8
 959              		.cfi_offset 7, -8
 960              		.cfi_offset 14, -4
 961 0002 82B0     		sub	sp, sp, #8
 962              		.cfi_def_cfa_offset 16
 963 0004 00AF     		add	r7, sp, #0
 964              		.cfi_def_cfa_register 7
 997:.\Generated_Source\PSoC5/SPIM.c ****     uint8 enableInterrupts;
 998:.\Generated_Source\PSoC5/SPIM.c **** 
 999:.\Generated_Source\PSoC5/SPIM.c ****     /* Clear Hardware RX FIFO */
1000:.\Generated_Source\PSoC5/SPIM.c ****     while(0u !=(SPIM_RX_STATUS_REG & SPIM_STS_RX_FIFO_NOT_EMPTY))
 965              		.loc 1 1000 0
 966 0006 01E0     		b	.L65
 967              	.L66:
1001:.\Generated_Source\PSoC5/SPIM.c ****     {
1002:.\Generated_Source\PSoC5/SPIM.c ****         (void) CY_GET_REG16(SPIM_RXDATA_PTR);
 968              		.loc 1 1002 0
 969 0008 194B     		ldr	r3, .L67
 970 000a 1B88     		ldrh	r3, [r3]	@ movhi
 971              	.L65:
1000:.\Generated_Source\PSoC5/SPIM.c ****     {
 972              		.loc 1 1000 0
 973 000c 194B     		ldr	r3, .L67+4
 974 000e 1B78     		ldrb	r3, [r3]
 975 0010 DBB2     		uxtb	r3, r3
 976 0012 03F02003 		and	r3, r3, #32
 977 0016 002B     		cmp	r3, #0
 978 0018 F6D1     		bne	.L66
1003:.\Generated_Source\PSoC5/SPIM.c ****     }
1004:.\Generated_Source\PSoC5/SPIM.c **** 
1005:.\Generated_Source\PSoC5/SPIM.c ****     enableInterrupts = CyEnterCriticalSection();
 979              		.loc 1 1005 0
 980 001a FFF7FEFF 		bl	CyEnterCriticalSection
 981 001e 0346     		mov	r3, r0
 982 0020 FB71     		strb	r3, [r7, #7]
1006:.\Generated_Source\PSoC5/SPIM.c ****     /* Clear TX FIFO */
1007:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 983              		.loc 1 1007 0
 984 0022 154A     		ldr	r2, .L67+8
 985 0024 144B     		ldr	r3, .L67+8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 36


 986 0026 1B78     		ldrb	r3, [r3]
 987 0028 DBB2     		uxtb	r3, r3
 988 002a 43F00103 		orr	r3, r3, #1
 989 002e DBB2     		uxtb	r3, r3
 990 0030 1370     		strb	r3, [r2]
1008:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_AUX_CONTROL_DP0_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 991              		.loc 1 1008 0
 992 0032 114A     		ldr	r2, .L67+8
 993 0034 104B     		ldr	r3, .L67+8
 994 0036 1B78     		ldrb	r3, [r3]
 995 0038 DBB2     		uxtb	r3, r3
 996 003a 23F00103 		bic	r3, r3, #1
 997 003e DBB2     		uxtb	r3, r3
 998 0040 1370     		strb	r3, [r2]
1009:.\Generated_Source\PSoC5/SPIM.c **** 
1010:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_USE_SECOND_DATAPATH)
1011:.\Generated_Source\PSoC5/SPIM.c ****         /* Clear TX FIFO for 2nd Datapath */
1012:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG |= ((uint8)  SPIM_TX_FIFO_CLR);
 999              		.loc 1 1012 0
 1000 0042 0E4A     		ldr	r2, .L67+12
 1001 0044 0D4B     		ldr	r3, .L67+12
 1002 0046 1B78     		ldrb	r3, [r3]
 1003 0048 DBB2     		uxtb	r3, r3
 1004 004a 43F00103 		orr	r3, r3, #1
 1005 004e DBB2     		uxtb	r3, r3
 1006 0050 1370     		strb	r3, [r2]
1013:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_AUX_CONTROL_DP1_REG &= ((uint8) ~SPIM_TX_FIFO_CLR);
 1007              		.loc 1 1013 0
 1008 0052 0A4A     		ldr	r2, .L67+12
 1009 0054 094B     		ldr	r3, .L67+12
 1010 0056 1B78     		ldrb	r3, [r3]
 1011 0058 DBB2     		uxtb	r3, r3
 1012 005a 23F00103 		bic	r3, r3, #1
 1013 005e DBB2     		uxtb	r3, r3
 1014 0060 1370     		strb	r3, [r2]
1014:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_USE_SECOND_DATAPATH) */
1015:.\Generated_Source\PSoC5/SPIM.c ****     CyExitCriticalSection(enableInterrupts);
 1015              		.loc 1 1015 0
 1016 0062 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1017 0064 1846     		mov	r0, r3
 1018 0066 FFF7FEFF 		bl	CyExitCriticalSection
1016:.\Generated_Source\PSoC5/SPIM.c **** }
 1019              		.loc 1 1016 0
 1020 006a 0837     		adds	r7, r7, #8
 1021              		.cfi_def_cfa_offset 8
 1022 006c BD46     		mov	sp, r7
 1023              		.cfi_def_cfa_register 13
 1024              		@ sp needed
 1025 006e 80BD     		pop	{r7, pc}
 1026              	.L68:
 1027              		.align	2
 1028              	.L67:
 1029 0070 54650040 		.word	1073767764
 1030 0074 67650040 		.word	1073767783
 1031 0078 94650040 		.word	1073767828
 1032 007c 95650040 		.word	1073767829
 1033              		.cfi_endproc
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 37


 1034              	.LFE19:
 1035              		.size	SPIM_ClearFIFO, .-SPIM_ClearFIFO
 1036              		.section	.text.SPIM_EnableInt,"ax",%progbits
 1037              		.align	2
 1038              		.global	SPIM_EnableInt
 1039              		.thumb
 1040              		.thumb_func
 1041              		.type	SPIM_EnableInt, %function
 1042              	SPIM_EnableInt:
 1043              	.LFB20:
1017:.\Generated_Source\PSoC5/SPIM.c **** 
1018:.\Generated_Source\PSoC5/SPIM.c **** 
1019:.\Generated_Source\PSoC5/SPIM.c **** /* Following functions are for version Compatibility, they are obsolete.
1020:.\Generated_Source\PSoC5/SPIM.c **** *  Please do not use it in new projects.
1021:.\Generated_Source\PSoC5/SPIM.c **** */
1022:.\Generated_Source\PSoC5/SPIM.c **** 
1023:.\Generated_Source\PSoC5/SPIM.c **** 
1024:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1025:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_EnableInt
1026:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1027:.\Generated_Source\PSoC5/SPIM.c **** *
1028:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
1029:.\Generated_Source\PSoC5/SPIM.c **** *  Enable internal interrupt generation.
1030:.\Generated_Source\PSoC5/SPIM.c **** *
1031:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
1032:.\Generated_Source\PSoC5/SPIM.c **** *  None.
1033:.\Generated_Source\PSoC5/SPIM.c **** *
1034:.\Generated_Source\PSoC5/SPIM.c **** * Return:
1035:.\Generated_Source\PSoC5/SPIM.c **** *  None.
1036:.\Generated_Source\PSoC5/SPIM.c **** *
1037:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
1038:.\Generated_Source\PSoC5/SPIM.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1039:.\Generated_Source\PSoC5/SPIM.c **** *
1040:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1041:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_EnableInt(void) 
1042:.\Generated_Source\PSoC5/SPIM.c **** {
 1044              		.loc 1 1042 0
 1045              		.cfi_startproc
 1046              		@ args = 0, pretend = 0, frame = 0
 1047              		@ frame_needed = 1, uses_anonymous_args = 0
 1048 0000 80B5     		push	{r7, lr}
 1049              		.cfi_def_cfa_offset 8
 1050              		.cfi_offset 7, -8
 1051              		.cfi_offset 14, -4
 1052 0002 00AF     		add	r7, sp, #0
 1053              		.cfi_def_cfa_register 7
1043:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableRxInt();
 1054              		.loc 1 1043 0
 1055 0004 FFF7FEFF 		bl	SPIM_EnableRxInt
1044:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_EnableTxInt();
 1056              		.loc 1 1044 0
 1057 0008 FFF7FEFF 		bl	SPIM_EnableTxInt
1045:.\Generated_Source\PSoC5/SPIM.c **** }
 1058              		.loc 1 1045 0
 1059 000c 80BD     		pop	{r7, pc}
 1060              		.cfi_endproc
 1061              	.LFE20:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 38


 1062              		.size	SPIM_EnableInt, .-SPIM_EnableInt
 1063 000e 00BF     		.section	.text.SPIM_DisableInt,"ax",%progbits
 1064              		.align	2
 1065              		.global	SPIM_DisableInt
 1066              		.thumb
 1067              		.thumb_func
 1068              		.type	SPIM_DisableInt, %function
 1069              	SPIM_DisableInt:
 1070              	.LFB21:
1046:.\Generated_Source\PSoC5/SPIM.c **** 
1047:.\Generated_Source\PSoC5/SPIM.c **** 
1048:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1049:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_DisableInt
1050:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1051:.\Generated_Source\PSoC5/SPIM.c **** *
1052:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
1053:.\Generated_Source\PSoC5/SPIM.c **** *  Disable internal interrupt generation.
1054:.\Generated_Source\PSoC5/SPIM.c **** *
1055:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
1056:.\Generated_Source\PSoC5/SPIM.c **** *  None.
1057:.\Generated_Source\PSoC5/SPIM.c **** *
1058:.\Generated_Source\PSoC5/SPIM.c **** * Return:
1059:.\Generated_Source\PSoC5/SPIM.c **** *  None.
1060:.\Generated_Source\PSoC5/SPIM.c **** *
1061:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
1062:.\Generated_Source\PSoC5/SPIM.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1063:.\Generated_Source\PSoC5/SPIM.c **** *
1064:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1065:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_DisableInt(void) 
1066:.\Generated_Source\PSoC5/SPIM.c **** {
 1071              		.loc 1 1066 0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 0
 1074              		@ frame_needed = 1, uses_anonymous_args = 0
 1075 0000 80B5     		push	{r7, lr}
 1076              		.cfi_def_cfa_offset 8
 1077              		.cfi_offset 7, -8
 1078              		.cfi_offset 14, -4
 1079 0002 00AF     		add	r7, sp, #0
 1080              		.cfi_def_cfa_register 7
1067:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableTxInt();
 1081              		.loc 1 1067 0
 1082 0004 FFF7FEFF 		bl	SPIM_DisableTxInt
1068:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_DisableRxInt();
 1083              		.loc 1 1068 0
 1084 0008 FFF7FEFF 		bl	SPIM_DisableRxInt
1069:.\Generated_Source\PSoC5/SPIM.c **** }
 1085              		.loc 1 1069 0
 1086 000c 80BD     		pop	{r7, pc}
 1087              		.cfi_endproc
 1088              	.LFE21:
 1089              		.size	SPIM_DisableInt, .-SPIM_DisableInt
 1090 000e 00BF     		.section	.text.SPIM_SetInterruptMode,"ax",%progbits
 1091              		.align	2
 1092              		.global	SPIM_SetInterruptMode
 1093              		.thumb
 1094              		.thumb_func
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 39


 1095              		.type	SPIM_SetInterruptMode, %function
 1096              	SPIM_SetInterruptMode:
 1097              	.LFB22:
1070:.\Generated_Source\PSoC5/SPIM.c **** 
1071:.\Generated_Source\PSoC5/SPIM.c **** 
1072:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1073:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_SetInterruptMode
1074:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1075:.\Generated_Source\PSoC5/SPIM.c **** *
1076:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
1077:.\Generated_Source\PSoC5/SPIM.c **** *  Configure which status bits trigger an interrupt event.
1078:.\Generated_Source\PSoC5/SPIM.c **** *
1079:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
1080:.\Generated_Source\PSoC5/SPIM.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1081:.\Generated_Source\PSoC5/SPIM.c **** *  header file).
1082:.\Generated_Source\PSoC5/SPIM.c **** *
1083:.\Generated_Source\PSoC5/SPIM.c **** * Return:
1084:.\Generated_Source\PSoC5/SPIM.c **** *  None.
1085:.\Generated_Source\PSoC5/SPIM.c **** *
1086:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
1087:.\Generated_Source\PSoC5/SPIM.c **** *  Enables the output of specific status bits to the interrupt controller.
1088:.\Generated_Source\PSoC5/SPIM.c **** *
1089:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1090:.\Generated_Source\PSoC5/SPIM.c **** void SPIM_SetInterruptMode(uint8 intSrc) 
1091:.\Generated_Source\PSoC5/SPIM.c **** {
 1098              		.loc 1 1091 0
 1099              		.cfi_startproc
 1100              		@ args = 0, pretend = 0, frame = 8
 1101              		@ frame_needed = 1, uses_anonymous_args = 0
 1102              		@ link register save eliminated.
 1103 0000 80B4     		push	{r7}
 1104              		.cfi_def_cfa_offset 4
 1105              		.cfi_offset 7, -4
 1106 0002 83B0     		sub	sp, sp, #12
 1107              		.cfi_def_cfa_offset 16
 1108 0004 00AF     		add	r7, sp, #0
 1109              		.cfi_def_cfa_register 7
 1110 0006 0346     		mov	r3, r0
 1111 0008 FB71     		strb	r3, [r7, #7]
1092:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_TX_STATUS_MASK_REG  = (intSrc & ((uint8) ~SPIM_STS_SPI_IDLE));
 1112              		.loc 1 1092 0
 1113 000a 074A     		ldr	r2, .L72
 1114 000c FB79     		ldrb	r3, [r7, #7]
 1115 000e 23F01003 		bic	r3, r3, #16
 1116 0012 DBB2     		uxtb	r3, r3
 1117 0014 1370     		strb	r3, [r2]
1093:.\Generated_Source\PSoC5/SPIM.c ****     SPIM_RX_STATUS_MASK_REG  =  intSrc;
 1118              		.loc 1 1093 0
 1119 0016 054A     		ldr	r2, .L72+4
 1120 0018 FB79     		ldrb	r3, [r7, #7]
 1121 001a 1370     		strb	r3, [r2]
1094:.\Generated_Source\PSoC5/SPIM.c **** }
 1122              		.loc 1 1094 0
 1123 001c 0C37     		adds	r7, r7, #12
 1124              		.cfi_def_cfa_offset 4
 1125 001e BD46     		mov	sp, r7
 1126              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 40


 1127              		@ sp needed
 1128 0020 5DF8047B 		ldr	r7, [sp], #4
 1129              		.cfi_restore 7
 1130              		.cfi_def_cfa_offset 0
 1131 0024 7047     		bx	lr
 1132              	.L73:
 1133 0026 00BF     		.align	2
 1134              	.L72:
 1135 0028 86650040 		.word	1073767814
 1136 002c 87650040 		.word	1073767815
 1137              		.cfi_endproc
 1138              	.LFE22:
 1139              		.size	SPIM_SetInterruptMode, .-SPIM_SetInterruptMode
 1140              		.section	.text.SPIM_ReadStatus,"ax",%progbits
 1141              		.align	2
 1142              		.global	SPIM_ReadStatus
 1143              		.thumb
 1144              		.thumb_func
 1145              		.type	SPIM_ReadStatus, %function
 1146              	SPIM_ReadStatus:
 1147              	.LFB23:
1095:.\Generated_Source\PSoC5/SPIM.c **** 
1096:.\Generated_Source\PSoC5/SPIM.c **** 
1097:.\Generated_Source\PSoC5/SPIM.c **** /*******************************************************************************
1098:.\Generated_Source\PSoC5/SPIM.c **** * Function Name: SPIM_ReadStatus
1099:.\Generated_Source\PSoC5/SPIM.c **** ********************************************************************************
1100:.\Generated_Source\PSoC5/SPIM.c **** *
1101:.\Generated_Source\PSoC5/SPIM.c **** * Summary:
1102:.\Generated_Source\PSoC5/SPIM.c **** *  Read the status register for the component.
1103:.\Generated_Source\PSoC5/SPIM.c **** *
1104:.\Generated_Source\PSoC5/SPIM.c **** * Parameters:
1105:.\Generated_Source\PSoC5/SPIM.c **** *  None.
1106:.\Generated_Source\PSoC5/SPIM.c **** *
1107:.\Generated_Source\PSoC5/SPIM.c **** * Return:
1108:.\Generated_Source\PSoC5/SPIM.c **** *  Contents of the status register.
1109:.\Generated_Source\PSoC5/SPIM.c **** *
1110:.\Generated_Source\PSoC5/SPIM.c **** * Global variables:
1111:.\Generated_Source\PSoC5/SPIM.c **** *  SPIM_swStatus - used to store in software status register,
1112:.\Generated_Source\PSoC5/SPIM.c **** *  modified every function call - resets to zero.
1113:.\Generated_Source\PSoC5/SPIM.c **** *
1114:.\Generated_Source\PSoC5/SPIM.c **** * Theory:
1115:.\Generated_Source\PSoC5/SPIM.c **** *  Allows the user and the API to read the status register for error detection
1116:.\Generated_Source\PSoC5/SPIM.c **** *  and flow control.
1117:.\Generated_Source\PSoC5/SPIM.c **** *
1118:.\Generated_Source\PSoC5/SPIM.c **** * Side Effects:
1119:.\Generated_Source\PSoC5/SPIM.c **** *  Clear status register of the component.
1120:.\Generated_Source\PSoC5/SPIM.c **** *
1121:.\Generated_Source\PSoC5/SPIM.c **** * Reentrant:
1122:.\Generated_Source\PSoC5/SPIM.c **** *  No.
1123:.\Generated_Source\PSoC5/SPIM.c **** *
1124:.\Generated_Source\PSoC5/SPIM.c **** *******************************************************************************/
1125:.\Generated_Source\PSoC5/SPIM.c **** uint8 SPIM_ReadStatus(void) 
1126:.\Generated_Source\PSoC5/SPIM.c **** {
 1148              		.loc 1 1126 0
 1149              		.cfi_startproc
 1150              		@ args = 0, pretend = 0, frame = 8
 1151              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 41


 1152              		@ link register save eliminated.
 1153 0000 80B4     		push	{r7}
 1154              		.cfi_def_cfa_offset 4
 1155              		.cfi_offset 7, -4
 1156 0002 83B0     		sub	sp, sp, #12
 1157              		.cfi_def_cfa_offset 16
 1158 0004 00AF     		add	r7, sp, #0
 1159              		.cfi_def_cfa_register 7
1127:.\Generated_Source\PSoC5/SPIM.c ****     uint8 tmpStatus;
1128:.\Generated_Source\PSoC5/SPIM.c **** 
1129:.\Generated_Source\PSoC5/SPIM.c ****     #if(SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED)
1130:.\Generated_Source\PSoC5/SPIM.c **** 
1131:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_DisableInt();
1132:.\Generated_Source\PSoC5/SPIM.c **** 
1133:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus  = SPIM_GET_STATUS_RX(SPIM_swStatusRx);
1134:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus |= SPIM_GET_STATUS_TX(SPIM_swStatusTx);
1135:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
1136:.\Generated_Source\PSoC5/SPIM.c **** 
1137:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusTx = 0u;
1138:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_swStatusRx = 0u;
1139:.\Generated_Source\PSoC5/SPIM.c **** 
1140:.\Generated_Source\PSoC5/SPIM.c ****         SPIM_EnableInt();
1141:.\Generated_Source\PSoC5/SPIM.c **** 
1142:.\Generated_Source\PSoC5/SPIM.c ****     #else
1143:.\Generated_Source\PSoC5/SPIM.c **** 
1144:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus  = SPIM_RX_STATUS_REG;
 1160              		.loc 1 1144 0
 1161 0006 0A4B     		ldr	r3, .L76
 1162 0008 1B78     		ldrb	r3, [r3]
 1163 000a FB71     		strb	r3, [r7, #7]
1145:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus |= SPIM_TX_STATUS_REG;
 1164              		.loc 1 1145 0
 1165 000c 094B     		ldr	r3, .L76+4
 1166 000e 1B78     		ldrb	r3, [r3]
 1167 0010 DAB2     		uxtb	r2, r3
 1168 0012 FB79     		ldrb	r3, [r7, #7]
 1169 0014 1343     		orrs	r3, r3, r2
 1170 0016 FB71     		strb	r3, [r7, #7]
1146:.\Generated_Source\PSoC5/SPIM.c ****         tmpStatus &= ((uint8) ~SPIM_STS_SPI_IDLE);
 1171              		.loc 1 1146 0
 1172 0018 FB79     		ldrb	r3, [r7, #7]
 1173 001a 23F01003 		bic	r3, r3, #16
 1174 001e FB71     		strb	r3, [r7, #7]
1147:.\Generated_Source\PSoC5/SPIM.c **** 
1148:.\Generated_Source\PSoC5/SPIM.c ****     #endif /* (SPIM_TX_SOFTWARE_BUF_ENABLED || SPIM_RX_SOFTWARE_BUF_ENABLED) */
1149:.\Generated_Source\PSoC5/SPIM.c **** 
1150:.\Generated_Source\PSoC5/SPIM.c ****     return(tmpStatus);
 1175              		.loc 1 1150 0
 1176 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1151:.\Generated_Source\PSoC5/SPIM.c **** }
 1177              		.loc 1 1151 0
 1178 0022 1846     		mov	r0, r3
 1179 0024 0C37     		adds	r7, r7, #12
 1180              		.cfi_def_cfa_offset 4
 1181 0026 BD46     		mov	sp, r7
 1182              		.cfi_def_cfa_register 13
 1183              		@ sp needed
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 42


 1184 0028 5DF8047B 		ldr	r7, [sp], #4
 1185              		.cfi_restore 7
 1186              		.cfi_def_cfa_offset 0
 1187 002c 7047     		bx	lr
 1188              	.L77:
 1189 002e 00BF     		.align	2
 1190              	.L76:
 1191 0030 67650040 		.word	1073767783
 1192 0034 66650040 		.word	1073767782
 1193              		.cfi_endproc
 1194              	.LFE23:
 1195              		.size	SPIM_ReadStatus, .-SPIM_ReadStatus
 1196              		.text
 1197              	.Letext0:
 1198              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1199              		.section	.debug_info,"",%progbits
 1200              	.Ldebug_info0:
 1201 0000 06040000 		.4byte	0x406
 1202 0004 0400     		.2byte	0x4
 1203 0006 00000000 		.4byte	.Ldebug_abbrev0
 1204 000a 04       		.byte	0x4
 1205 000b 01       		.uleb128 0x1
 1206 000c 36010000 		.4byte	.LASF53
 1207 0010 01       		.byte	0x1
 1208 0011 AF030000 		.4byte	.LASF54
 1209 0015 1E030000 		.4byte	.LASF55
 1210 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1211 001d 00000000 		.4byte	0
 1212 0021 00000000 		.4byte	.Ldebug_line0
 1213 0025 02       		.uleb128 0x2
 1214 0026 01       		.byte	0x1
 1215 0027 06       		.byte	0x6
 1216 0028 74030000 		.4byte	.LASF0
 1217 002c 02       		.uleb128 0x2
 1218 002d 01       		.byte	0x1
 1219 002e 08       		.byte	0x8
 1220 002f 16010000 		.4byte	.LASF1
 1221 0033 02       		.uleb128 0x2
 1222 0034 02       		.byte	0x2
 1223 0035 05       		.byte	0x5
 1224 0036 B6020000 		.4byte	.LASF2
 1225 003a 02       		.uleb128 0x2
 1226 003b 02       		.byte	0x2
 1227 003c 07       		.byte	0x7
 1228 003d 34000000 		.4byte	.LASF3
 1229 0041 02       		.uleb128 0x2
 1230 0042 04       		.byte	0x4
 1231 0043 05       		.byte	0x5
 1232 0044 0B030000 		.4byte	.LASF4
 1233 0048 02       		.uleb128 0x2
 1234 0049 04       		.byte	0x4
 1235 004a 07       		.byte	0x7
 1236 004b CF000000 		.4byte	.LASF5
 1237 004f 02       		.uleb128 0x2
 1238 0050 08       		.byte	0x8
 1239 0051 05       		.byte	0x5
 1240 0052 8F020000 		.4byte	.LASF6
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 43


 1241 0056 02       		.uleb128 0x2
 1242 0057 08       		.byte	0x8
 1243 0058 07       		.byte	0x7
 1244 0059 3B020000 		.4byte	.LASF7
 1245 005d 03       		.uleb128 0x3
 1246 005e 04       		.byte	0x4
 1247 005f 05       		.byte	0x5
 1248 0060 696E7400 		.ascii	"int\000"
 1249 0064 02       		.uleb128 0x2
 1250 0065 04       		.byte	0x4
 1251 0066 07       		.byte	0x7
 1252 0067 2E020000 		.4byte	.LASF8
 1253 006b 04       		.uleb128 0x4
 1254 006c E1000000 		.4byte	.LASF9
 1255 0070 02       		.byte	0x2
 1256 0071 3801     		.2byte	0x138
 1257 0073 2C000000 		.4byte	0x2c
 1258 0077 04       		.uleb128 0x4
 1259 0078 F7010000 		.4byte	.LASF10
 1260 007c 02       		.byte	0x2
 1261 007d 3901     		.2byte	0x139
 1262 007f 3A000000 		.4byte	0x3a
 1263 0083 02       		.uleb128 0x2
 1264 0084 04       		.byte	0x4
 1265 0085 04       		.byte	0x4
 1266 0086 86000000 		.4byte	.LASF11
 1267 008a 02       		.uleb128 0x2
 1268 008b 08       		.byte	0x8
 1269 008c 04       		.byte	0x4
 1270 008d C4010000 		.4byte	.LASF12
 1271 0091 02       		.uleb128 0x2
 1272 0092 01       		.byte	0x1
 1273 0093 08       		.byte	0x8
 1274 0094 47000000 		.4byte	.LASF13
 1275 0098 04       		.uleb128 0x4
 1276 0099 B9000000 		.4byte	.LASF14
 1277 009d 02       		.byte	0x2
 1278 009e E201     		.2byte	0x1e2
 1279 00a0 A4000000 		.4byte	0xa4
 1280 00a4 05       		.uleb128 0x5
 1281 00a5 6B000000 		.4byte	0x6b
 1282 00a9 04       		.uleb128 0x4
 1283 00aa 00000000 		.4byte	.LASF15
 1284 00ae 02       		.byte	0x2
 1285 00af E301     		.2byte	0x1e3
 1286 00b1 B5000000 		.4byte	0xb5
 1287 00b5 05       		.uleb128 0x5
 1288 00b6 77000000 		.4byte	0x77
 1289 00ba 02       		.uleb128 0x2
 1290 00bb 04       		.byte	0x4
 1291 00bc 07       		.byte	0x7
 1292 00bd 86020000 		.4byte	.LASF16
 1293 00c1 06       		.uleb128 0x6
 1294 00c2 9D020000 		.4byte	.LASF17
 1295 00c6 01       		.byte	0x1
 1296 00c7 3F       		.byte	0x3f
 1297 00c8 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 44


 1298 00cc 30000000 		.4byte	.LFE0-.LFB0
 1299 00d0 01       		.uleb128 0x1
 1300 00d1 9C       		.byte	0x9c
 1301 00d2 07       		.uleb128 0x7
 1302 00d3 17000000 		.4byte	.LASF19
 1303 00d7 01       		.byte	0x1
 1304 00d8 78       		.byte	0x78
 1305 00d9 00000000 		.4byte	.LFB1
 1306 00dd 60000000 		.4byte	.LFE1-.LFB1
 1307 00e1 01       		.uleb128 0x1
 1308 00e2 9C       		.byte	0x9c
 1309 00e3 F6000000 		.4byte	0xf6
 1310 00e7 08       		.uleb128 0x8
 1311 00e8 F5000000 		.4byte	.LASF21
 1312 00ec 01       		.byte	0x1
 1313 00ed 7A       		.byte	0x7a
 1314 00ee 6B000000 		.4byte	0x6b
 1315 00f2 02       		.uleb128 0x2
 1316 00f3 91       		.byte	0x91
 1317 00f4 77       		.sleb128 -9
 1318 00f5 00       		.byte	0
 1319 00f6 06       		.uleb128 0x6
 1320 00f7 80030000 		.4byte	.LASF18
 1321 00fb 01       		.byte	0x1
 1322 00fc A3       		.byte	0xa3
 1323 00fd 00000000 		.4byte	.LFB2
 1324 0101 20000000 		.4byte	.LFE2-.LFB2
 1325 0105 01       		.uleb128 0x1
 1326 0106 9C       		.byte	0x9c
 1327 0107 07       		.uleb128 0x7
 1328 0108 23000000 		.4byte	.LASF20
 1329 010c 01       		.byte	0x1
 1330 010d C0       		.byte	0xc0
 1331 010e 00000000 		.4byte	.LFB3
 1332 0112 4C000000 		.4byte	.LFE3-.LFB3
 1333 0116 01       		.uleb128 0x1
 1334 0117 9C       		.byte	0x9c
 1335 0118 2B010000 		.4byte	0x12b
 1336 011c 08       		.uleb128 0x8
 1337 011d F5000000 		.4byte	.LASF21
 1338 0121 01       		.byte	0x1
 1339 0122 C2       		.byte	0xc2
 1340 0123 6B000000 		.4byte	0x6b
 1341 0127 02       		.uleb128 0x2
 1342 0128 91       		.byte	0x91
 1343 0129 77       		.sleb128 -9
 1344 012a 00       		.byte	0
 1345 012b 09       		.uleb128 0x9
 1346 012c BE000000 		.4byte	.LASF22
 1347 0130 01       		.byte	0x1
 1348 0131 E3       		.byte	0xe3
 1349 0132 00000000 		.4byte	.LFB4
 1350 0136 0C000000 		.4byte	.LFE4-.LFB4
 1351 013a 01       		.uleb128 0x1
 1352 013b 9C       		.byte	0x9c
 1353 013c 09       		.uleb128 0x9
 1354 013d FA020000 		.4byte	.LASF23
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 45


 1355 0141 01       		.byte	0x1
 1356 0142 FC       		.byte	0xfc
 1357 0143 00000000 		.4byte	.LFB5
 1358 0147 0C000000 		.4byte	.LFE5-.LFB5
 1359 014b 01       		.uleb128 0x1
 1360 014c 9C       		.byte	0x9c
 1361 014d 0A       		.uleb128 0xa
 1362 014e 24010000 		.4byte	.LASF24
 1363 0152 01       		.byte	0x1
 1364 0153 1501     		.2byte	0x115
 1365 0155 00000000 		.4byte	.LFB6
 1366 0159 0C000000 		.4byte	.LFE6-.LFB6
 1367 015d 01       		.uleb128 0x1
 1368 015e 9C       		.byte	0x9c
 1369 015f 0A       		.uleb128 0xa
 1370 0160 9D030000 		.4byte	.LASF25
 1371 0164 01       		.byte	0x1
 1372 0165 2E01     		.2byte	0x12e
 1373 0167 00000000 		.4byte	.LFB7
 1374 016b 0C000000 		.4byte	.LFE7-.LFB7
 1375 016f 01       		.uleb128 0x1
 1376 0170 9C       		.byte	0x9c
 1377 0171 0B       		.uleb128 0xb
 1378 0172 FE010000 		.4byte	.LASF26
 1379 0176 01       		.byte	0x1
 1380 0177 4801     		.2byte	0x148
 1381 0179 00000000 		.4byte	.LFB8
 1382 017d 20000000 		.4byte	.LFE8-.LFB8
 1383 0181 01       		.uleb128 0x1
 1384 0182 9C       		.byte	0x9c
 1385 0183 97010000 		.4byte	0x197
 1386 0187 0C       		.uleb128 0xc
 1387 0188 CB010000 		.4byte	.LASF28
 1388 018c 01       		.byte	0x1
 1389 018d 4801     		.2byte	0x148
 1390 018f 6B000000 		.4byte	0x6b
 1391 0193 02       		.uleb128 0x2
 1392 0194 91       		.byte	0x91
 1393 0195 77       		.sleb128 -9
 1394 0196 00       		.byte	0
 1395 0197 0B       		.uleb128 0xb
 1396 0198 16020000 		.4byte	.LASF27
 1397 019c 01       		.byte	0x1
 1398 019d 6001     		.2byte	0x160
 1399 019f 00000000 		.4byte	.LFB9
 1400 01a3 20000000 		.4byte	.LFE9-.LFB9
 1401 01a7 01       		.uleb128 0x1
 1402 01a8 9C       		.byte	0x9c
 1403 01a9 BD010000 		.4byte	0x1bd
 1404 01ad 0C       		.uleb128 0xc
 1405 01ae CB010000 		.4byte	.LASF28
 1406 01b2 01       		.byte	0x1
 1407 01b3 6001     		.2byte	0x160
 1408 01b5 6B000000 		.4byte	0x6b
 1409 01b9 02       		.uleb128 0x2
 1410 01ba 91       		.byte	0x91
 1411 01bb 77       		.sleb128 -9
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 46


 1412 01bc 00       		.byte	0
 1413 01bd 0D       		.uleb128 0xd
 1414 01be 8B030000 		.4byte	.LASF30
 1415 01c2 01       		.byte	0x1
 1416 01c3 8201     		.2byte	0x182
 1417 01c5 6B000000 		.4byte	0x6b
 1418 01c9 00000000 		.4byte	.LFB10
 1419 01cd 20000000 		.4byte	.LFE10-.LFB10
 1420 01d1 01       		.uleb128 0x1
 1421 01d2 9C       		.byte	0x9c
 1422 01d3 E7010000 		.4byte	0x1e7
 1423 01d7 0E       		.uleb128 0xe
 1424 01d8 14030000 		.4byte	.LASF29
 1425 01dc 01       		.byte	0x1
 1426 01dd 8401     		.2byte	0x184
 1427 01df 6B000000 		.4byte	0x6b
 1428 01e3 02       		.uleb128 0x2
 1429 01e4 91       		.byte	0x91
 1430 01e5 77       		.sleb128 -9
 1431 01e6 00       		.byte	0
 1432 01e7 0D       		.uleb128 0xd
 1433 01e8 5C020000 		.4byte	.LASF31
 1434 01ec 01       		.byte	0x1
 1435 01ed B501     		.2byte	0x1b5
 1436 01ef 6B000000 		.4byte	0x6b
 1437 01f3 00000000 		.4byte	.LFB11
 1438 01f7 20000000 		.4byte	.LFE11-.LFB11
 1439 01fb 01       		.uleb128 0x1
 1440 01fc 9C       		.byte	0x9c
 1441 01fd 11020000 		.4byte	0x211
 1442 0201 0E       		.uleb128 0xe
 1443 0202 14030000 		.4byte	.LASF29
 1444 0206 01       		.byte	0x1
 1445 0207 B701     		.2byte	0x1b7
 1446 0209 6B000000 		.4byte	0x6b
 1447 020d 02       		.uleb128 0x2
 1448 020e 91       		.byte	0x91
 1449 020f 77       		.sleb128 -9
 1450 0210 00       		.byte	0
 1451 0211 0B       		.uleb128 0xb
 1452 0212 06000000 		.4byte	.LASF32
 1453 0216 01       		.byte	0x1
 1454 0217 EE01     		.2byte	0x1ee
 1455 0219 00000000 		.4byte	.LFB12
 1456 021d 34000000 		.4byte	.LFE12-.LFB12
 1457 0221 01       		.uleb128 0x1
 1458 0222 9C       		.byte	0x9c
 1459 0223 37020000 		.4byte	0x237
 1460 0227 0C       		.uleb128 0xc
 1461 0228 2D000000 		.4byte	.LASF33
 1462 022c 01       		.byte	0x1
 1463 022d EE01     		.2byte	0x1ee
 1464 022f 77000000 		.4byte	0x77
 1465 0233 02       		.uleb128 0x2
 1466 0234 91       		.byte	0x91
 1467 0235 76       		.sleb128 -10
 1468 0236 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 47


 1469 0237 0D       		.uleb128 0xd
 1470 0238 06010000 		.4byte	.LASF34
 1471 023c 01       		.byte	0x1
 1472 023d 5A02     		.2byte	0x25a
 1473 023f 77000000 		.4byte	0x77
 1474 0243 00000000 		.4byte	.LFB13
 1475 0247 20000000 		.4byte	.LFE13-.LFB13
 1476 024b 01       		.uleb128 0x1
 1477 024c 9C       		.byte	0x9c
 1478 024d 61020000 		.4byte	0x261
 1479 0251 0E       		.uleb128 0xe
 1480 0252 6F000000 		.4byte	.LASF35
 1481 0256 01       		.byte	0x1
 1482 0257 5C02     		.2byte	0x25c
 1483 0259 77000000 		.4byte	0x77
 1484 025d 02       		.uleb128 0x2
 1485 025e 91       		.byte	0x91
 1486 025f 76       		.sleb128 -10
 1487 0260 00       		.byte	0
 1488 0261 0D       		.uleb128 0xd
 1489 0262 E2010000 		.4byte	.LASF36
 1490 0266 01       		.byte	0x1
 1491 0267 9A02     		.2byte	0x29a
 1492 0269 6B000000 		.4byte	0x6b
 1493 026d 00000000 		.4byte	.LFB14
 1494 0271 30000000 		.4byte	.LFE14-.LFB14
 1495 0275 01       		.uleb128 0x1
 1496 0276 9C       		.byte	0x9c
 1497 0277 8B020000 		.4byte	0x28b
 1498 027b 0E       		.uleb128 0xe
 1499 027c 9F000000 		.4byte	.LASF37
 1500 0280 01       		.byte	0x1
 1501 0281 9C02     		.2byte	0x29c
 1502 0283 6B000000 		.4byte	0x6b
 1503 0287 02       		.uleb128 0x2
 1504 0288 91       		.byte	0x91
 1505 0289 77       		.sleb128 -9
 1506 028a 00       		.byte	0
 1507 028b 0D       		.uleb128 0xd
 1508 028c A4000000 		.4byte	.LASF38
 1509 0290 01       		.byte	0x1
 1510 0291 D702     		.2byte	0x2d7
 1511 0293 6B000000 		.4byte	0x6b
 1512 0297 00000000 		.4byte	.LFB15
 1513 029b 44000000 		.4byte	.LFE15-.LFB15
 1514 029f 01       		.uleb128 0x1
 1515 02a0 9C       		.byte	0x9c
 1516 02a1 B5020000 		.4byte	0x2b5
 1517 02a5 0E       		.uleb128 0xe
 1518 02a6 9F000000 		.4byte	.LASF37
 1519 02aa 01       		.byte	0x1
 1520 02ab D902     		.2byte	0x2d9
 1521 02ad 6B000000 		.4byte	0x6b
 1522 02b1 02       		.uleb128 0x2
 1523 02b2 91       		.byte	0x91
 1524 02b3 77       		.sleb128 -9
 1525 02b4 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 48


 1526 02b5 0A       		.uleb128 0xa
 1527 02b6 8C000000 		.4byte	.LASF39
 1528 02ba 01       		.byte	0x1
 1529 02bb 2603     		.2byte	0x326
 1530 02bd 00000000 		.4byte	.LFB16
 1531 02c1 28000000 		.4byte	.LFE16-.LFB16
 1532 02c5 01       		.uleb128 0x1
 1533 02c6 9C       		.byte	0x9c
 1534 02c7 0F       		.uleb128 0xf
 1535 02c8 C0020000 		.4byte	.LASF40
 1536 02cc 01       		.byte	0x1
 1537 02cd 5D03     		.2byte	0x35d
 1538 02cf 00000000 		.4byte	.LFB17
 1539 02d3 64000000 		.4byte	.LFE17-.LFB17
 1540 02d7 01       		.uleb128 0x1
 1541 02d8 9C       		.byte	0x9c
 1542 02d9 ED020000 		.4byte	0x2ed
 1543 02dd 0E       		.uleb128 0xe
 1544 02de F5000000 		.4byte	.LASF21
 1545 02e2 01       		.byte	0x1
 1546 02e3 5F03     		.2byte	0x35f
 1547 02e5 6B000000 		.4byte	0x6b
 1548 02e9 02       		.uleb128 0x2
 1549 02ea 91       		.byte	0x91
 1550 02eb 77       		.sleb128 -9
 1551 02ec 00       		.byte	0
 1552 02ed 0F       		.uleb128 0xf
 1553 02ee E7000000 		.4byte	.LASF41
 1554 02f2 01       		.byte	0x1
 1555 02f3 C203     		.2byte	0x3c2
 1556 02f5 00000000 		.4byte	.LFB18
 1557 02f9 3A000000 		.4byte	.LFE18-.LFB18
 1558 02fd 01       		.uleb128 0x1
 1559 02fe 9C       		.byte	0x9c
 1560 02ff 31030000 		.4byte	0x331
 1561 0303 0C       		.uleb128 0xc
 1562 0304 D3020000 		.4byte	.LASF42
 1563 0308 01       		.byte	0x1
 1564 0309 C203     		.2byte	0x3c2
 1565 030b 31030000 		.4byte	0x331
 1566 030f 02       		.uleb128 0x2
 1567 0310 91       		.byte	0x91
 1568 0311 6C       		.sleb128 -20
 1569 0312 0C       		.uleb128 0xc
 1570 0313 52020000 		.4byte	.LASF43
 1571 0317 01       		.byte	0x1
 1572 0318 C203     		.2byte	0x3c2
 1573 031a 6B000000 		.4byte	0x6b
 1574 031e 02       		.uleb128 0x2
 1575 031f 91       		.byte	0x91
 1576 0320 6B       		.sleb128 -21
 1577 0321 0E       		.uleb128 0xe
 1578 0322 6E020000 		.4byte	.LASF44
 1579 0326 01       		.byte	0x1
 1580 0327 C503     		.2byte	0x3c5
 1581 0329 6B000000 		.4byte	0x6b
 1582 032d 02       		.uleb128 0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 49


 1583 032e 91       		.byte	0x91
 1584 032f 77       		.sleb128 -9
 1585 0330 00       		.byte	0
 1586 0331 10       		.uleb128 0x10
 1587 0332 04       		.byte	0x4
 1588 0333 37030000 		.4byte	0x337
 1589 0337 11       		.uleb128 0x11
 1590 0338 77000000 		.4byte	0x77
 1591 033c 0F       		.uleb128 0xf
 1592 033d A7020000 		.4byte	.LASF45
 1593 0341 01       		.byte	0x1
 1594 0342 E303     		.2byte	0x3e3
 1595 0344 00000000 		.4byte	.LFB19
 1596 0348 80000000 		.4byte	.LFE19-.LFB19
 1597 034c 01       		.uleb128 0x1
 1598 034d 9C       		.byte	0x9c
 1599 034e 62030000 		.4byte	0x362
 1600 0352 0E       		.uleb128 0xe
 1601 0353 F5000000 		.4byte	.LASF21
 1602 0357 01       		.byte	0x1
 1603 0358 E503     		.2byte	0x3e5
 1604 035a 6B000000 		.4byte	0x6b
 1605 035e 02       		.uleb128 0x2
 1606 035f 91       		.byte	0x91
 1607 0360 77       		.sleb128 -9
 1608 0361 00       		.byte	0
 1609 0362 12       		.uleb128 0x12
 1610 0363 77020000 		.4byte	.LASF46
 1611 0367 01       		.byte	0x1
 1612 0368 1104     		.2byte	0x411
 1613 036a 00000000 		.4byte	.LFB20
 1614 036e 0E000000 		.4byte	.LFE20-.LFB20
 1615 0372 01       		.uleb128 0x1
 1616 0373 9C       		.byte	0x9c
 1617 0374 12       		.uleb128 0x12
 1618 0375 76000000 		.4byte	.LASF47
 1619 0379 01       		.byte	0x1
 1620 037a 2904     		.2byte	0x429
 1621 037c 00000000 		.4byte	.LFB21
 1622 0380 0E000000 		.4byte	.LFE21-.LFB21
 1623 0384 01       		.uleb128 0x1
 1624 0385 9C       		.byte	0x9c
 1625 0386 0B       		.uleb128 0xb
 1626 0387 4C000000 		.4byte	.LASF48
 1627 038b 01       		.byte	0x1
 1628 038c 4204     		.2byte	0x442
 1629 038e 00000000 		.4byte	.LFB22
 1630 0392 30000000 		.4byte	.LFE22-.LFB22
 1631 0396 01       		.uleb128 0x1
 1632 0397 9C       		.byte	0x9c
 1633 0398 AC030000 		.4byte	0x3ac
 1634 039c 0C       		.uleb128 0xc
 1635 039d CB010000 		.4byte	.LASF28
 1636 03a1 01       		.byte	0x1
 1637 03a2 4204     		.2byte	0x442
 1638 03a4 6B000000 		.4byte	0x6b
 1639 03a8 02       		.uleb128 0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 50


 1640 03a9 91       		.byte	0x91
 1641 03aa 77       		.sleb128 -9
 1642 03ab 00       		.byte	0
 1643 03ac 0D       		.uleb128 0xd
 1644 03ad DA020000 		.4byte	.LASF49
 1645 03b1 01       		.byte	0x1
 1646 03b2 6504     		.2byte	0x465
 1647 03b4 6B000000 		.4byte	0x6b
 1648 03b8 00000000 		.4byte	.LFB23
 1649 03bc 38000000 		.4byte	.LFE23-.LFB23
 1650 03c0 01       		.uleb128 0x1
 1651 03c1 9C       		.byte	0x9c
 1652 03c2 D6030000 		.4byte	0x3d6
 1653 03c6 0E       		.uleb128 0xe
 1654 03c7 14030000 		.4byte	.LASF29
 1655 03cb 01       		.byte	0x1
 1656 03cc 6704     		.2byte	0x467
 1657 03ce 6B000000 		.4byte	0x6b
 1658 03d2 02       		.uleb128 0x2
 1659 03d3 91       		.byte	0x91
 1660 03d4 77       		.sleb128 -9
 1661 03d5 00       		.byte	0
 1662 03d6 13       		.uleb128 0x13
 1663 03d7 62000000 		.4byte	.LASF50
 1664 03db 01       		.byte	0x1
 1665 03dc 22       		.byte	0x22
 1666 03dd 6B000000 		.4byte	0x6b
 1667 03e1 05       		.uleb128 0x5
 1668 03e2 03       		.byte	0x3
 1669 03e3 00000000 		.4byte	SPIM_initVar
 1670 03e7 13       		.uleb128 0x13
 1671 03e8 EA020000 		.4byte	.LASF51
 1672 03ec 01       		.byte	0x1
 1673 03ed 24       		.byte	0x24
 1674 03ee A4000000 		.4byte	0xa4
 1675 03f2 05       		.uleb128 0x5
 1676 03f3 03       		.byte	0x3
 1677 03f4 00000000 		.4byte	SPIM_swStatusTx
 1678 03f8 13       		.uleb128 0x13
 1679 03f9 D2010000 		.4byte	.LASF52
 1680 03fd 01       		.byte	0x1
 1681 03fe 25       		.byte	0x25
 1682 03ff A4000000 		.4byte	0xa4
 1683 0403 05       		.uleb128 0x5
 1684 0404 03       		.byte	0x3
 1685 0405 00000000 		.4byte	SPIM_swStatusRx
 1686 0409 00       		.byte	0
 1687              		.section	.debug_abbrev,"",%progbits
 1688              	.Ldebug_abbrev0:
 1689 0000 01       		.uleb128 0x1
 1690 0001 11       		.uleb128 0x11
 1691 0002 01       		.byte	0x1
 1692 0003 25       		.uleb128 0x25
 1693 0004 0E       		.uleb128 0xe
 1694 0005 13       		.uleb128 0x13
 1695 0006 0B       		.uleb128 0xb
 1696 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 51


 1697 0008 0E       		.uleb128 0xe
 1698 0009 1B       		.uleb128 0x1b
 1699 000a 0E       		.uleb128 0xe
 1700 000b 55       		.uleb128 0x55
 1701 000c 17       		.uleb128 0x17
 1702 000d 11       		.uleb128 0x11
 1703 000e 01       		.uleb128 0x1
 1704 000f 10       		.uleb128 0x10
 1705 0010 17       		.uleb128 0x17
 1706 0011 00       		.byte	0
 1707 0012 00       		.byte	0
 1708 0013 02       		.uleb128 0x2
 1709 0014 24       		.uleb128 0x24
 1710 0015 00       		.byte	0
 1711 0016 0B       		.uleb128 0xb
 1712 0017 0B       		.uleb128 0xb
 1713 0018 3E       		.uleb128 0x3e
 1714 0019 0B       		.uleb128 0xb
 1715 001a 03       		.uleb128 0x3
 1716 001b 0E       		.uleb128 0xe
 1717 001c 00       		.byte	0
 1718 001d 00       		.byte	0
 1719 001e 03       		.uleb128 0x3
 1720 001f 24       		.uleb128 0x24
 1721 0020 00       		.byte	0
 1722 0021 0B       		.uleb128 0xb
 1723 0022 0B       		.uleb128 0xb
 1724 0023 3E       		.uleb128 0x3e
 1725 0024 0B       		.uleb128 0xb
 1726 0025 03       		.uleb128 0x3
 1727 0026 08       		.uleb128 0x8
 1728 0027 00       		.byte	0
 1729 0028 00       		.byte	0
 1730 0029 04       		.uleb128 0x4
 1731 002a 16       		.uleb128 0x16
 1732 002b 00       		.byte	0
 1733 002c 03       		.uleb128 0x3
 1734 002d 0E       		.uleb128 0xe
 1735 002e 3A       		.uleb128 0x3a
 1736 002f 0B       		.uleb128 0xb
 1737 0030 3B       		.uleb128 0x3b
 1738 0031 05       		.uleb128 0x5
 1739 0032 49       		.uleb128 0x49
 1740 0033 13       		.uleb128 0x13
 1741 0034 00       		.byte	0
 1742 0035 00       		.byte	0
 1743 0036 05       		.uleb128 0x5
 1744 0037 35       		.uleb128 0x35
 1745 0038 00       		.byte	0
 1746 0039 49       		.uleb128 0x49
 1747 003a 13       		.uleb128 0x13
 1748 003b 00       		.byte	0
 1749 003c 00       		.byte	0
 1750 003d 06       		.uleb128 0x6
 1751 003e 2E       		.uleb128 0x2e
 1752 003f 00       		.byte	0
 1753 0040 3F       		.uleb128 0x3f
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 52


 1754 0041 19       		.uleb128 0x19
 1755 0042 03       		.uleb128 0x3
 1756 0043 0E       		.uleb128 0xe
 1757 0044 3A       		.uleb128 0x3a
 1758 0045 0B       		.uleb128 0xb
 1759 0046 3B       		.uleb128 0x3b
 1760 0047 0B       		.uleb128 0xb
 1761 0048 27       		.uleb128 0x27
 1762 0049 19       		.uleb128 0x19
 1763 004a 11       		.uleb128 0x11
 1764 004b 01       		.uleb128 0x1
 1765 004c 12       		.uleb128 0x12
 1766 004d 06       		.uleb128 0x6
 1767 004e 40       		.uleb128 0x40
 1768 004f 18       		.uleb128 0x18
 1769 0050 9642     		.uleb128 0x2116
 1770 0052 19       		.uleb128 0x19
 1771 0053 00       		.byte	0
 1772 0054 00       		.byte	0
 1773 0055 07       		.uleb128 0x7
 1774 0056 2E       		.uleb128 0x2e
 1775 0057 01       		.byte	0x1
 1776 0058 3F       		.uleb128 0x3f
 1777 0059 19       		.uleb128 0x19
 1778 005a 03       		.uleb128 0x3
 1779 005b 0E       		.uleb128 0xe
 1780 005c 3A       		.uleb128 0x3a
 1781 005d 0B       		.uleb128 0xb
 1782 005e 3B       		.uleb128 0x3b
 1783 005f 0B       		.uleb128 0xb
 1784 0060 27       		.uleb128 0x27
 1785 0061 19       		.uleb128 0x19
 1786 0062 11       		.uleb128 0x11
 1787 0063 01       		.uleb128 0x1
 1788 0064 12       		.uleb128 0x12
 1789 0065 06       		.uleb128 0x6
 1790 0066 40       		.uleb128 0x40
 1791 0067 18       		.uleb128 0x18
 1792 0068 9642     		.uleb128 0x2116
 1793 006a 19       		.uleb128 0x19
 1794 006b 01       		.uleb128 0x1
 1795 006c 13       		.uleb128 0x13
 1796 006d 00       		.byte	0
 1797 006e 00       		.byte	0
 1798 006f 08       		.uleb128 0x8
 1799 0070 34       		.uleb128 0x34
 1800 0071 00       		.byte	0
 1801 0072 03       		.uleb128 0x3
 1802 0073 0E       		.uleb128 0xe
 1803 0074 3A       		.uleb128 0x3a
 1804 0075 0B       		.uleb128 0xb
 1805 0076 3B       		.uleb128 0x3b
 1806 0077 0B       		.uleb128 0xb
 1807 0078 49       		.uleb128 0x49
 1808 0079 13       		.uleb128 0x13
 1809 007a 02       		.uleb128 0x2
 1810 007b 18       		.uleb128 0x18
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 53


 1811 007c 00       		.byte	0
 1812 007d 00       		.byte	0
 1813 007e 09       		.uleb128 0x9
 1814 007f 2E       		.uleb128 0x2e
 1815 0080 00       		.byte	0
 1816 0081 3F       		.uleb128 0x3f
 1817 0082 19       		.uleb128 0x19
 1818 0083 03       		.uleb128 0x3
 1819 0084 0E       		.uleb128 0xe
 1820 0085 3A       		.uleb128 0x3a
 1821 0086 0B       		.uleb128 0xb
 1822 0087 3B       		.uleb128 0x3b
 1823 0088 0B       		.uleb128 0xb
 1824 0089 27       		.uleb128 0x27
 1825 008a 19       		.uleb128 0x19
 1826 008b 11       		.uleb128 0x11
 1827 008c 01       		.uleb128 0x1
 1828 008d 12       		.uleb128 0x12
 1829 008e 06       		.uleb128 0x6
 1830 008f 40       		.uleb128 0x40
 1831 0090 18       		.uleb128 0x18
 1832 0091 9742     		.uleb128 0x2117
 1833 0093 19       		.uleb128 0x19
 1834 0094 00       		.byte	0
 1835 0095 00       		.byte	0
 1836 0096 0A       		.uleb128 0xa
 1837 0097 2E       		.uleb128 0x2e
 1838 0098 00       		.byte	0
 1839 0099 3F       		.uleb128 0x3f
 1840 009a 19       		.uleb128 0x19
 1841 009b 03       		.uleb128 0x3
 1842 009c 0E       		.uleb128 0xe
 1843 009d 3A       		.uleb128 0x3a
 1844 009e 0B       		.uleb128 0xb
 1845 009f 3B       		.uleb128 0x3b
 1846 00a0 05       		.uleb128 0x5
 1847 00a1 27       		.uleb128 0x27
 1848 00a2 19       		.uleb128 0x19
 1849 00a3 11       		.uleb128 0x11
 1850 00a4 01       		.uleb128 0x1
 1851 00a5 12       		.uleb128 0x12
 1852 00a6 06       		.uleb128 0x6
 1853 00a7 40       		.uleb128 0x40
 1854 00a8 18       		.uleb128 0x18
 1855 00a9 9742     		.uleb128 0x2117
 1856 00ab 19       		.uleb128 0x19
 1857 00ac 00       		.byte	0
 1858 00ad 00       		.byte	0
 1859 00ae 0B       		.uleb128 0xb
 1860 00af 2E       		.uleb128 0x2e
 1861 00b0 01       		.byte	0x1
 1862 00b1 3F       		.uleb128 0x3f
 1863 00b2 19       		.uleb128 0x19
 1864 00b3 03       		.uleb128 0x3
 1865 00b4 0E       		.uleb128 0xe
 1866 00b5 3A       		.uleb128 0x3a
 1867 00b6 0B       		.uleb128 0xb
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 54


 1868 00b7 3B       		.uleb128 0x3b
 1869 00b8 05       		.uleb128 0x5
 1870 00b9 27       		.uleb128 0x27
 1871 00ba 19       		.uleb128 0x19
 1872 00bb 11       		.uleb128 0x11
 1873 00bc 01       		.uleb128 0x1
 1874 00bd 12       		.uleb128 0x12
 1875 00be 06       		.uleb128 0x6
 1876 00bf 40       		.uleb128 0x40
 1877 00c0 18       		.uleb128 0x18
 1878 00c1 9742     		.uleb128 0x2117
 1879 00c3 19       		.uleb128 0x19
 1880 00c4 01       		.uleb128 0x1
 1881 00c5 13       		.uleb128 0x13
 1882 00c6 00       		.byte	0
 1883 00c7 00       		.byte	0
 1884 00c8 0C       		.uleb128 0xc
 1885 00c9 05       		.uleb128 0x5
 1886 00ca 00       		.byte	0
 1887 00cb 03       		.uleb128 0x3
 1888 00cc 0E       		.uleb128 0xe
 1889 00cd 3A       		.uleb128 0x3a
 1890 00ce 0B       		.uleb128 0xb
 1891 00cf 3B       		.uleb128 0x3b
 1892 00d0 05       		.uleb128 0x5
 1893 00d1 49       		.uleb128 0x49
 1894 00d2 13       		.uleb128 0x13
 1895 00d3 02       		.uleb128 0x2
 1896 00d4 18       		.uleb128 0x18
 1897 00d5 00       		.byte	0
 1898 00d6 00       		.byte	0
 1899 00d7 0D       		.uleb128 0xd
 1900 00d8 2E       		.uleb128 0x2e
 1901 00d9 01       		.byte	0x1
 1902 00da 3F       		.uleb128 0x3f
 1903 00db 19       		.uleb128 0x19
 1904 00dc 03       		.uleb128 0x3
 1905 00dd 0E       		.uleb128 0xe
 1906 00de 3A       		.uleb128 0x3a
 1907 00df 0B       		.uleb128 0xb
 1908 00e0 3B       		.uleb128 0x3b
 1909 00e1 05       		.uleb128 0x5
 1910 00e2 27       		.uleb128 0x27
 1911 00e3 19       		.uleb128 0x19
 1912 00e4 49       		.uleb128 0x49
 1913 00e5 13       		.uleb128 0x13
 1914 00e6 11       		.uleb128 0x11
 1915 00e7 01       		.uleb128 0x1
 1916 00e8 12       		.uleb128 0x12
 1917 00e9 06       		.uleb128 0x6
 1918 00ea 40       		.uleb128 0x40
 1919 00eb 18       		.uleb128 0x18
 1920 00ec 9742     		.uleb128 0x2117
 1921 00ee 19       		.uleb128 0x19
 1922 00ef 01       		.uleb128 0x1
 1923 00f0 13       		.uleb128 0x13
 1924 00f1 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 55


 1925 00f2 00       		.byte	0
 1926 00f3 0E       		.uleb128 0xe
 1927 00f4 34       		.uleb128 0x34
 1928 00f5 00       		.byte	0
 1929 00f6 03       		.uleb128 0x3
 1930 00f7 0E       		.uleb128 0xe
 1931 00f8 3A       		.uleb128 0x3a
 1932 00f9 0B       		.uleb128 0xb
 1933 00fa 3B       		.uleb128 0x3b
 1934 00fb 05       		.uleb128 0x5
 1935 00fc 49       		.uleb128 0x49
 1936 00fd 13       		.uleb128 0x13
 1937 00fe 02       		.uleb128 0x2
 1938 00ff 18       		.uleb128 0x18
 1939 0100 00       		.byte	0
 1940 0101 00       		.byte	0
 1941 0102 0F       		.uleb128 0xf
 1942 0103 2E       		.uleb128 0x2e
 1943 0104 01       		.byte	0x1
 1944 0105 3F       		.uleb128 0x3f
 1945 0106 19       		.uleb128 0x19
 1946 0107 03       		.uleb128 0x3
 1947 0108 0E       		.uleb128 0xe
 1948 0109 3A       		.uleb128 0x3a
 1949 010a 0B       		.uleb128 0xb
 1950 010b 3B       		.uleb128 0x3b
 1951 010c 05       		.uleb128 0x5
 1952 010d 27       		.uleb128 0x27
 1953 010e 19       		.uleb128 0x19
 1954 010f 11       		.uleb128 0x11
 1955 0110 01       		.uleb128 0x1
 1956 0111 12       		.uleb128 0x12
 1957 0112 06       		.uleb128 0x6
 1958 0113 40       		.uleb128 0x40
 1959 0114 18       		.uleb128 0x18
 1960 0115 9642     		.uleb128 0x2116
 1961 0117 19       		.uleb128 0x19
 1962 0118 01       		.uleb128 0x1
 1963 0119 13       		.uleb128 0x13
 1964 011a 00       		.byte	0
 1965 011b 00       		.byte	0
 1966 011c 10       		.uleb128 0x10
 1967 011d 0F       		.uleb128 0xf
 1968 011e 00       		.byte	0
 1969 011f 0B       		.uleb128 0xb
 1970 0120 0B       		.uleb128 0xb
 1971 0121 49       		.uleb128 0x49
 1972 0122 13       		.uleb128 0x13
 1973 0123 00       		.byte	0
 1974 0124 00       		.byte	0
 1975 0125 11       		.uleb128 0x11
 1976 0126 26       		.uleb128 0x26
 1977 0127 00       		.byte	0
 1978 0128 49       		.uleb128 0x49
 1979 0129 13       		.uleb128 0x13
 1980 012a 00       		.byte	0
 1981 012b 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 56


 1982 012c 12       		.uleb128 0x12
 1983 012d 2E       		.uleb128 0x2e
 1984 012e 00       		.byte	0
 1985 012f 3F       		.uleb128 0x3f
 1986 0130 19       		.uleb128 0x19
 1987 0131 03       		.uleb128 0x3
 1988 0132 0E       		.uleb128 0xe
 1989 0133 3A       		.uleb128 0x3a
 1990 0134 0B       		.uleb128 0xb
 1991 0135 3B       		.uleb128 0x3b
 1992 0136 05       		.uleb128 0x5
 1993 0137 27       		.uleb128 0x27
 1994 0138 19       		.uleb128 0x19
 1995 0139 11       		.uleb128 0x11
 1996 013a 01       		.uleb128 0x1
 1997 013b 12       		.uleb128 0x12
 1998 013c 06       		.uleb128 0x6
 1999 013d 40       		.uleb128 0x40
 2000 013e 18       		.uleb128 0x18
 2001 013f 9642     		.uleb128 0x2116
 2002 0141 19       		.uleb128 0x19
 2003 0142 00       		.byte	0
 2004 0143 00       		.byte	0
 2005 0144 13       		.uleb128 0x13
 2006 0145 34       		.uleb128 0x34
 2007 0146 00       		.byte	0
 2008 0147 03       		.uleb128 0x3
 2009 0148 0E       		.uleb128 0xe
 2010 0149 3A       		.uleb128 0x3a
 2011 014a 0B       		.uleb128 0xb
 2012 014b 3B       		.uleb128 0x3b
 2013 014c 0B       		.uleb128 0xb
 2014 014d 49       		.uleb128 0x49
 2015 014e 13       		.uleb128 0x13
 2016 014f 3F       		.uleb128 0x3f
 2017 0150 19       		.uleb128 0x19
 2018 0151 02       		.uleb128 0x2
 2019 0152 18       		.uleb128 0x18
 2020 0153 00       		.byte	0
 2021 0154 00       		.byte	0
 2022 0155 00       		.byte	0
 2023              		.section	.debug_aranges,"",%progbits
 2024 0000 D4000000 		.4byte	0xd4
 2025 0004 0200     		.2byte	0x2
 2026 0006 00000000 		.4byte	.Ldebug_info0
 2027 000a 04       		.byte	0x4
 2028 000b 00       		.byte	0
 2029 000c 0000     		.2byte	0
 2030 000e 0000     		.2byte	0
 2031 0010 00000000 		.4byte	.LFB0
 2032 0014 30000000 		.4byte	.LFE0-.LFB0
 2033 0018 00000000 		.4byte	.LFB1
 2034 001c 60000000 		.4byte	.LFE1-.LFB1
 2035 0020 00000000 		.4byte	.LFB2
 2036 0024 20000000 		.4byte	.LFE2-.LFB2
 2037 0028 00000000 		.4byte	.LFB3
 2038 002c 4C000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 57


 2039 0030 00000000 		.4byte	.LFB4
 2040 0034 0C000000 		.4byte	.LFE4-.LFB4
 2041 0038 00000000 		.4byte	.LFB5
 2042 003c 0C000000 		.4byte	.LFE5-.LFB5
 2043 0040 00000000 		.4byte	.LFB6
 2044 0044 0C000000 		.4byte	.LFE6-.LFB6
 2045 0048 00000000 		.4byte	.LFB7
 2046 004c 0C000000 		.4byte	.LFE7-.LFB7
 2047 0050 00000000 		.4byte	.LFB8
 2048 0054 20000000 		.4byte	.LFE8-.LFB8
 2049 0058 00000000 		.4byte	.LFB9
 2050 005c 20000000 		.4byte	.LFE9-.LFB9
 2051 0060 00000000 		.4byte	.LFB10
 2052 0064 20000000 		.4byte	.LFE10-.LFB10
 2053 0068 00000000 		.4byte	.LFB11
 2054 006c 20000000 		.4byte	.LFE11-.LFB11
 2055 0070 00000000 		.4byte	.LFB12
 2056 0074 34000000 		.4byte	.LFE12-.LFB12
 2057 0078 00000000 		.4byte	.LFB13
 2058 007c 20000000 		.4byte	.LFE13-.LFB13
 2059 0080 00000000 		.4byte	.LFB14
 2060 0084 30000000 		.4byte	.LFE14-.LFB14
 2061 0088 00000000 		.4byte	.LFB15
 2062 008c 44000000 		.4byte	.LFE15-.LFB15
 2063 0090 00000000 		.4byte	.LFB16
 2064 0094 28000000 		.4byte	.LFE16-.LFB16
 2065 0098 00000000 		.4byte	.LFB17
 2066 009c 64000000 		.4byte	.LFE17-.LFB17
 2067 00a0 00000000 		.4byte	.LFB18
 2068 00a4 3A000000 		.4byte	.LFE18-.LFB18
 2069 00a8 00000000 		.4byte	.LFB19
 2070 00ac 80000000 		.4byte	.LFE19-.LFB19
 2071 00b0 00000000 		.4byte	.LFB20
 2072 00b4 0E000000 		.4byte	.LFE20-.LFB20
 2073 00b8 00000000 		.4byte	.LFB21
 2074 00bc 0E000000 		.4byte	.LFE21-.LFB21
 2075 00c0 00000000 		.4byte	.LFB22
 2076 00c4 30000000 		.4byte	.LFE22-.LFB22
 2077 00c8 00000000 		.4byte	.LFB23
 2078 00cc 38000000 		.4byte	.LFE23-.LFB23
 2079 00d0 00000000 		.4byte	0
 2080 00d4 00000000 		.4byte	0
 2081              		.section	.debug_ranges,"",%progbits
 2082              	.Ldebug_ranges0:
 2083 0000 00000000 		.4byte	.LFB0
 2084 0004 30000000 		.4byte	.LFE0
 2085 0008 00000000 		.4byte	.LFB1
 2086 000c 60000000 		.4byte	.LFE1
 2087 0010 00000000 		.4byte	.LFB2
 2088 0014 20000000 		.4byte	.LFE2
 2089 0018 00000000 		.4byte	.LFB3
 2090 001c 4C000000 		.4byte	.LFE3
 2091 0020 00000000 		.4byte	.LFB4
 2092 0024 0C000000 		.4byte	.LFE4
 2093 0028 00000000 		.4byte	.LFB5
 2094 002c 0C000000 		.4byte	.LFE5
 2095 0030 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 58


 2096 0034 0C000000 		.4byte	.LFE6
 2097 0038 00000000 		.4byte	.LFB7
 2098 003c 0C000000 		.4byte	.LFE7
 2099 0040 00000000 		.4byte	.LFB8
 2100 0044 20000000 		.4byte	.LFE8
 2101 0048 00000000 		.4byte	.LFB9
 2102 004c 20000000 		.4byte	.LFE9
 2103 0050 00000000 		.4byte	.LFB10
 2104 0054 20000000 		.4byte	.LFE10
 2105 0058 00000000 		.4byte	.LFB11
 2106 005c 20000000 		.4byte	.LFE11
 2107 0060 00000000 		.4byte	.LFB12
 2108 0064 34000000 		.4byte	.LFE12
 2109 0068 00000000 		.4byte	.LFB13
 2110 006c 20000000 		.4byte	.LFE13
 2111 0070 00000000 		.4byte	.LFB14
 2112 0074 30000000 		.4byte	.LFE14
 2113 0078 00000000 		.4byte	.LFB15
 2114 007c 44000000 		.4byte	.LFE15
 2115 0080 00000000 		.4byte	.LFB16
 2116 0084 28000000 		.4byte	.LFE16
 2117 0088 00000000 		.4byte	.LFB17
 2118 008c 64000000 		.4byte	.LFE17
 2119 0090 00000000 		.4byte	.LFB18
 2120 0094 3A000000 		.4byte	.LFE18
 2121 0098 00000000 		.4byte	.LFB19
 2122 009c 80000000 		.4byte	.LFE19
 2123 00a0 00000000 		.4byte	.LFB20
 2124 00a4 0E000000 		.4byte	.LFE20
 2125 00a8 00000000 		.4byte	.LFB21
 2126 00ac 0E000000 		.4byte	.LFE21
 2127 00b0 00000000 		.4byte	.LFB22
 2128 00b4 30000000 		.4byte	.LFE22
 2129 00b8 00000000 		.4byte	.LFB23
 2130 00bc 38000000 		.4byte	.LFE23
 2131 00c0 00000000 		.4byte	0
 2132 00c4 00000000 		.4byte	0
 2133              		.section	.debug_line,"",%progbits
 2134              	.Ldebug_line0:
 2135 0000 62020000 		.section	.debug_str,"MS",%progbits,1
 2135      02004300 
 2135      00000201 
 2135      FB0E0D00 
 2135      01010101 
 2136              	.LASF15:
 2137 0000 72656731 		.ascii	"reg16\000"
 2137      3600
 2138              	.LASF32:
 2139 0006 5350494D 		.ascii	"SPIM_WriteTxData\000"
 2139      5F577269 
 2139      74655478 
 2139      44617461 
 2139      00
 2140              	.LASF19:
 2141 0017 5350494D 		.ascii	"SPIM_Enable\000"
 2141      5F456E61 
 2141      626C6500 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 59


 2142              	.LASF20:
 2143 0023 5350494D 		.ascii	"SPIM_Stop\000"
 2143      5F53746F 
 2143      7000
 2144              	.LASF33:
 2145 002d 74784461 		.ascii	"txData\000"
 2145      746100
 2146              	.LASF3:
 2147 0034 73686F72 		.ascii	"short unsigned int\000"
 2147      7420756E 
 2147      7369676E 
 2147      65642069 
 2147      6E7400
 2148              	.LASF13:
 2149 0047 63686172 		.ascii	"char\000"
 2149      00
 2150              	.LASF48:
 2151 004c 5350494D 		.ascii	"SPIM_SetInterruptMode\000"
 2151      5F536574 
 2151      496E7465 
 2151      72727570 
 2151      744D6F64 
 2152              	.LASF50:
 2153 0062 5350494D 		.ascii	"SPIM_initVar\000"
 2153      5F696E69 
 2153      74566172 
 2153      00
 2154              	.LASF35:
 2155 006f 72784461 		.ascii	"rxData\000"
 2155      746100
 2156              	.LASF47:
 2157 0076 5350494D 		.ascii	"SPIM_DisableInt\000"
 2157      5F446973 
 2157      61626C65 
 2157      496E7400 
 2158              	.LASF11:
 2159 0086 666C6F61 		.ascii	"float\000"
 2159      7400
 2160              	.LASF39:
 2161 008c 5350494D 		.ascii	"SPIM_ClearRxBuffer\000"
 2161      5F436C65 
 2161      61725278 
 2161      42756666 
 2161      657200
 2162              	.LASF37:
 2163 009f 73697A65 		.ascii	"size\000"
 2163      00
 2164              	.LASF38:
 2165 00a4 5350494D 		.ascii	"SPIM_GetTxBufferSize\000"
 2165      5F476574 
 2165      54784275 
 2165      66666572 
 2165      53697A65 
 2166              	.LASF14:
 2167 00b9 72656738 		.ascii	"reg8\000"
 2167      00
 2168              	.LASF22:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 60


 2169 00be 5350494D 		.ascii	"SPIM_EnableTxInt\000"
 2169      5F456E61 
 2169      626C6554 
 2169      78496E74 
 2169      00
 2170              	.LASF5:
 2171 00cf 6C6F6E67 		.ascii	"long unsigned int\000"
 2171      20756E73 
 2171      69676E65 
 2171      6420696E 
 2171      7400
 2172              	.LASF9:
 2173 00e1 75696E74 		.ascii	"uint8\000"
 2173      3800
 2174              	.LASF41:
 2175 00e7 5350494D 		.ascii	"SPIM_PutArray\000"
 2175      5F507574 
 2175      41727261 
 2175      7900
 2176              	.LASF21:
 2177 00f5 656E6162 		.ascii	"enableInterrupts\000"
 2177      6C65496E 
 2177      74657272 
 2177      75707473 
 2177      00
 2178              	.LASF34:
 2179 0106 5350494D 		.ascii	"SPIM_ReadRxData\000"
 2179      5F526561 
 2179      64527844 
 2179      61746100 
 2180              	.LASF1:
 2181 0116 756E7369 		.ascii	"unsigned char\000"
 2181      676E6564 
 2181      20636861 
 2181      7200
 2182              	.LASF24:
 2183 0124 5350494D 		.ascii	"SPIM_DisableTxInt\000"
 2183      5F446973 
 2183      61626C65 
 2183      5478496E 
 2183      7400
 2184              	.LASF53:
 2185 0136 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2185      4320342E 
 2185      392E3320 
 2185      32303135 
 2185      30333033 
 2186 0169 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2186      20726576 
 2186      6973696F 
 2186      6E203232 
 2186      31323230 
 2187 019c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2187      66756E63 
 2187      74696F6E 
 2187      2D736563 
 2187      74696F6E 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 61


 2188              	.LASF12:
 2189 01c4 646F7562 		.ascii	"double\000"
 2189      6C6500
 2190              	.LASF28:
 2191 01cb 696E7453 		.ascii	"intSrc\000"
 2191      726300
 2192              	.LASF52:
 2193 01d2 5350494D 		.ascii	"SPIM_swStatusRx\000"
 2193      5F737753 
 2193      74617475 
 2193      73527800 
 2194              	.LASF36:
 2195 01e2 5350494D 		.ascii	"SPIM_GetRxBufferSize\000"
 2195      5F476574 
 2195      52784275 
 2195      66666572 
 2195      53697A65 
 2196              	.LASF10:
 2197 01f7 75696E74 		.ascii	"uint16\000"
 2197      313600
 2198              	.LASF26:
 2199 01fe 5350494D 		.ascii	"SPIM_SetTxInterruptMode\000"
 2199      5F536574 
 2199      5478496E 
 2199      74657272 
 2199      7570744D 
 2200              	.LASF27:
 2201 0216 5350494D 		.ascii	"SPIM_SetRxInterruptMode\000"
 2201      5F536574 
 2201      5278496E 
 2201      74657272 
 2201      7570744D 
 2202              	.LASF8:
 2203 022e 756E7369 		.ascii	"unsigned int\000"
 2203      676E6564 
 2203      20696E74 
 2203      00
 2204              	.LASF7:
 2205 023b 6C6F6E67 		.ascii	"long long unsigned int\000"
 2205      206C6F6E 
 2205      6720756E 
 2205      7369676E 
 2205      65642069 
 2206              	.LASF43:
 2207 0252 62797465 		.ascii	"byteCount\000"
 2207      436F756E 
 2207      7400
 2208              	.LASF31:
 2209 025c 5350494D 		.ascii	"SPIM_ReadRxStatus\000"
 2209      5F526561 
 2209      64527853 
 2209      74617475 
 2209      7300
 2210              	.LASF44:
 2211 026e 62756649 		.ascii	"bufIndex\000"
 2211      6E646578 
 2211      00
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 62


 2212              	.LASF46:
 2213 0277 5350494D 		.ascii	"SPIM_EnableInt\000"
 2213      5F456E61 
 2213      626C6549 
 2213      6E7400
 2214              	.LASF16:
 2215 0286 73697A65 		.ascii	"sizetype\000"
 2215      74797065 
 2215      00
 2216              	.LASF6:
 2217 028f 6C6F6E67 		.ascii	"long long int\000"
 2217      206C6F6E 
 2217      6720696E 
 2217      7400
 2218              	.LASF17:
 2219 029d 5350494D 		.ascii	"SPIM_Init\000"
 2219      5F496E69 
 2219      7400
 2220              	.LASF45:
 2221 02a7 5350494D 		.ascii	"SPIM_ClearFIFO\000"
 2221      5F436C65 
 2221      61724649 
 2221      464F00
 2222              	.LASF2:
 2223 02b6 73686F72 		.ascii	"short int\000"
 2223      7420696E 
 2223      7400
 2224              	.LASF40:
 2225 02c0 5350494D 		.ascii	"SPIM_ClearTxBuffer\000"
 2225      5F436C65 
 2225      61725478 
 2225      42756666 
 2225      657200
 2226              	.LASF42:
 2227 02d3 62756666 		.ascii	"buffer\000"
 2227      657200
 2228              	.LASF49:
 2229 02da 5350494D 		.ascii	"SPIM_ReadStatus\000"
 2229      5F526561 
 2229      64537461 
 2229      74757300 
 2230              	.LASF51:
 2231 02ea 5350494D 		.ascii	"SPIM_swStatusTx\000"
 2231      5F737753 
 2231      74617475 
 2231      73547800 
 2232              	.LASF23:
 2233 02fa 5350494D 		.ascii	"SPIM_EnableRxInt\000"
 2233      5F456E61 
 2233      626C6552 
 2233      78496E74 
 2233      00
 2234              	.LASF4:
 2235 030b 6C6F6E67 		.ascii	"long int\000"
 2235      20696E74 
 2235      00
 2236              	.LASF29:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccduQS4N.s 			page 63


 2237 0314 746D7053 		.ascii	"tmpStatus\000"
 2237      74617475 
 2237      7300
 2238              	.LASF55:
 2239 031e 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\GitHub\\fre"
 2239      73657273 
 2239      5C4C756B 
 2239      61732043 
 2239      72657574 
 2240 034c 65445350 		.ascii	"eDSPPSoC-I2C\\PSoC5_SPI_Master_DSP.cydsn\000"
 2240      50536F43 
 2240      2D493243 
 2240      5C50536F 
 2240      43355F53 
 2241              	.LASF0:
 2242 0374 7369676E 		.ascii	"signed char\000"
 2242      65642063 
 2242      68617200 
 2243              	.LASF18:
 2244 0380 5350494D 		.ascii	"SPIM_Start\000"
 2244      5F537461 
 2244      727400
 2245              	.LASF30:
 2246 038b 5350494D 		.ascii	"SPIM_ReadTxStatus\000"
 2246      5F526561 
 2246      64547853 
 2246      74617475 
 2246      7300
 2247              	.LASF25:
 2248 039d 5350494D 		.ascii	"SPIM_DisableRxInt\000"
 2248      5F446973 
 2248      61626C65 
 2248      5278496E 
 2248      7400
 2249              	.LASF54:
 2250 03af 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\SPIM.c\000"
 2250      6E657261 
 2250      7465645F 
 2250      536F7572 
 2250      63655C50 
 2251              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
