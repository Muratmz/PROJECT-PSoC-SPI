ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"SPIS.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	SPIS_initVar
  19              		.bss
  20              		.type	SPIS_initVar, %object
  21              		.size	SPIS_initVar, 1
  22              	SPIS_initVar:
  23 0000 00       		.space	1
  24              		.comm	SPIS_swStatusTx,1,1
  25              		.comm	SPIS_swStatusRx,1,1
  26              		.section	.text.SPIS_Init,"ax",%progbits
  27              		.align	2
  28              		.global	SPIS_Init
  29              		.thumb
  30              		.thumb_func
  31              		.type	SPIS_Init, %function
  32              	SPIS_Init:
  33              	.LFB0:
  34              		.file 1 ".\\Generated_Source\\PSoC5\\SPIS.c"
   1:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/SPIS.c **** * File Name: SPIS.c
   3:.\Generated_Source\PSoC5/SPIS.c **** * Version 2.70
   4:.\Generated_Source\PSoC5/SPIS.c **** *
   5:.\Generated_Source\PSoC5/SPIS.c **** * Description:
   6:.\Generated_Source\PSoC5/SPIS.c **** *  This file provides all API functionality of the SPI Slave component.
   7:.\Generated_Source\PSoC5/SPIS.c **** *
   8:.\Generated_Source\PSoC5/SPIS.c **** * Note:
   9:.\Generated_Source\PSoC5/SPIS.c **** *  None.
  10:.\Generated_Source\PSoC5/SPIS.c **** *
  11:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
  12:.\Generated_Source\PSoC5/SPIS.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC5/SPIS.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC5/SPIS.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC5/SPIS.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC5/SPIS.c **** 
  18:.\Generated_Source\PSoC5/SPIS.c **** #include "SPIS_PVT.h"
  19:.\Generated_Source\PSoC5/SPIS.c **** 
  20:.\Generated_Source\PSoC5/SPIS.c **** #if (SPIS_TX_SOFTWARE_BUF_ENABLED)
  21:.\Generated_Source\PSoC5/SPIS.c **** 
  22:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBuffer[SPIS_TX_BUFFER_SIZE];
  23:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBufferRead;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 2


  24:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBufferWrite;
  25:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBufferFull;
  26:.\Generated_Source\PSoC5/SPIS.c **** 
  27:.\Generated_Source\PSoC5/SPIS.c **** #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED*/
  28:.\Generated_Source\PSoC5/SPIS.c **** 
  29:.\Generated_Source\PSoC5/SPIS.c **** #if (SPIS_RX_SOFTWARE_BUF_ENABLED)
  30:.\Generated_Source\PSoC5/SPIS.c **** 
  31:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBuffer[SPIS_RX_BUFFER_SIZE];
  32:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBufferRead;
  33:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBufferWrite;
  34:.\Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBufferFull;
  35:.\Generated_Source\PSoC5/SPIS.c **** 
  36:.\Generated_Source\PSoC5/SPIS.c **** #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
  37:.\Generated_Source\PSoC5/SPIS.c **** 
  38:.\Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_initVar = 0u;
  39:.\Generated_Source\PSoC5/SPIS.c **** 
  40:.\Generated_Source\PSoC5/SPIS.c **** volatile uint8 SPIS_swStatusTx;
  41:.\Generated_Source\PSoC5/SPIS.c **** volatile uint8 SPIS_swStatusRx;
  42:.\Generated_Source\PSoC5/SPIS.c **** 
  43:.\Generated_Source\PSoC5/SPIS.c **** 
  44:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
  45:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Init
  46:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
  47:.\Generated_Source\PSoC5/SPIS.c **** *
  48:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
  49:.\Generated_Source\PSoC5/SPIS.c **** *  Inits/Restores default SPIS configuration provided with customizer.
  50:.\Generated_Source\PSoC5/SPIS.c **** *
  51:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
  52:.\Generated_Source\PSoC5/SPIS.c **** *  None.
  53:.\Generated_Source\PSoC5/SPIS.c **** *
  54:.\Generated_Source\PSoC5/SPIS.c **** * Return:
  55:.\Generated_Source\PSoC5/SPIS.c **** *  None.
  56:.\Generated_Source\PSoC5/SPIS.c **** *
  57:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
  58:.\Generated_Source\PSoC5/SPIS.c **** *  When this function is called it initializes all of the necessary parameters
  59:.\Generated_Source\PSoC5/SPIS.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  60:.\Generated_Source\PSoC5/SPIS.c **** *  interrupt service routine, configuring the bit-counter parameters and
  61:.\Generated_Source\PSoC5/SPIS.c **** *  clearing the FIFO and Status Register.
  62:.\Generated_Source\PSoC5/SPIS.c **** *
  63:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
  64:.\Generated_Source\PSoC5/SPIS.c **** *  No.
  65:.\Generated_Source\PSoC5/SPIS.c **** *
  66:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
  67:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_Init(void) 
  68:.\Generated_Source\PSoC5/SPIS.c **** {
  35              		.loc 1 68 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  69:.\Generated_Source\PSoC5/SPIS.c ****     /*Initialize the Bit counter */
  70:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_COUNTER_PERIOD_REG = SPIS_BITCTR_INIT;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 3


  45              		.loc 1 70 0
  46 0004 0D4B     		ldr	r3, .L2
  47 0006 0722     		movs	r2, #7
  48 0008 1A70     		strb	r2, [r3]
  71:.\Generated_Source\PSoC5/SPIS.c **** 
  72:.\Generated_Source\PSoC5/SPIS.c ****     /* ISR initialization */
  73:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
  74:.\Generated_Source\PSoC5/SPIS.c **** 
  75:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
  76:.\Generated_Source\PSoC5/SPIS.c **** 
  77:.\Generated_Source\PSoC5/SPIS.c ****         /* Set the ISR to point to the SPIS_isr Interrupt. */
  78:.\Generated_Source\PSoC5/SPIS.c ****         (void)CyIntSetVector(SPIS_TX_ISR_NUMBER, &SPIS_TX_ISR);
  79:.\Generated_Source\PSoC5/SPIS.c **** 
  80:.\Generated_Source\PSoC5/SPIS.c ****         /* Set the priority. */
  81:.\Generated_Source\PSoC5/SPIS.c ****         CyIntSetPriority(SPIS_TX_ISR_NUMBER, SPIS_TX_ISR_PRIORITY);
  82:.\Generated_Source\PSoC5/SPIS.c **** 
  83:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
  84:.\Generated_Source\PSoC5/SPIS.c **** 
  85:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
  86:.\Generated_Source\PSoC5/SPIS.c **** 
  87:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
  49              		.loc 1 87 0
  50 000a 0D4B     		ldr	r3, .L2+4
  51 000c 0422     		movs	r2, #4
  52 000e 1A60     		str	r2, [r3]
  88:.\Generated_Source\PSoC5/SPIS.c **** 
  89:.\Generated_Source\PSoC5/SPIS.c ****         /* Set the ISR to point to the SPIS_isr Interrupt. */
  90:.\Generated_Source\PSoC5/SPIS.c ****         (void)CyIntSetVector(SPIS_RX_ISR_NUMBER, &SPIS_RX_ISR);
  53              		.loc 1 90 0
  54 0010 0220     		movs	r0, #2
  55 0012 0C49     		ldr	r1, .L2+8
  56 0014 FFF7FEFF 		bl	CyIntSetVector
  91:.\Generated_Source\PSoC5/SPIS.c **** 
  92:.\Generated_Source\PSoC5/SPIS.c ****         /* Set the priority. */
  93:.\Generated_Source\PSoC5/SPIS.c ****         CyIntSetPriority(SPIS_RX_ISR_NUMBER, SPIS_RX_ISR_PRIORITY);
  57              		.loc 1 93 0
  58 0018 0220     		movs	r0, #2
  59 001a 0721     		movs	r1, #7
  60 001c FFF7FEFF 		bl	CyIntSetPriority
  94:.\Generated_Source\PSoC5/SPIS.c **** 
  95:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
  96:.\Generated_Source\PSoC5/SPIS.c **** 
  97:.\Generated_Source\PSoC5/SPIS.c ****     /* Clear any stray data from the RX and TX FIFO */
  98:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_ClearFIFO();
  61              		.loc 1 98 0
  62 0020 FFF7FEFF 		bl	SPIS_ClearFIFO
  99:.\Generated_Source\PSoC5/SPIS.c **** 
 100:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 101:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferFull = 0u;
 102:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferRead = 0u;
 103:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferWrite = 0u;
 104:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 105:.\Generated_Source\PSoC5/SPIS.c **** 
 106:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 107:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferFull = 0u;
 108:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferRead = 0u;
 109:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferWrite = 0u;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 4


 110:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 111:.\Generated_Source\PSoC5/SPIS.c **** 
 112:.\Generated_Source\PSoC5/SPIS.c ****     (void) SPIS_ReadTxStatus(); /* Clear any pending status bits */
  63              		.loc 1 112 0
  64 0024 FFF7FEFF 		bl	SPIS_ReadTxStatus
 113:.\Generated_Source\PSoC5/SPIS.c ****     (void) SPIS_ReadRxStatus(); /* Clear any pending status bits */
  65              		.loc 1 113 0
  66 0028 FFF7FEFF 		bl	SPIS_ReadRxStatus
 114:.\Generated_Source\PSoC5/SPIS.c **** 
 115:.\Generated_Source\PSoC5/SPIS.c **** 
 116:.\Generated_Source\PSoC5/SPIS.c ****     /* Configure the Initial interrupt mask */
 117:.\Generated_Source\PSoC5/SPIS.c ****     #if (SPIS_TX_SOFTWARE_BUF_ENABLED)
 118:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_STATUS_MASK_REG  = (SPIS_TX_INIT_INTERRUPTS_MASK &
 119:.\Generated_Source\PSoC5/SPIS.c ****                                                 (uint8)~SPIS_STS_TX_FIFO_NOT_FULL);
 120:.\Generated_Source\PSoC5/SPIS.c ****     #else /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 121:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_STATUS_MASK_REG  = SPIS_TX_INIT_INTERRUPTS_MASK;
  67              		.loc 1 121 0
  68 002c 064B     		ldr	r3, .L2+12
  69 002e 0022     		movs	r2, #0
  70 0030 1A70     		strb	r2, [r3]
 122:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 123:.\Generated_Source\PSoC5/SPIS.c **** 
 124:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_MASK_REG  = SPIS_RX_INIT_INTERRUPTS_MASK;
  71              		.loc 1 124 0
  72 0032 064B     		ldr	r3, .L2+16
  73 0034 0822     		movs	r2, #8
  74 0036 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/SPIS.c **** }
  75              		.loc 1 125 0
  76 0038 80BD     		pop	{r7, pc}
  77              	.L3:
  78 003a 00BF     		.align	2
  79              	.L2:
  80 003c 86650040 		.word	1073767814
  81 0040 80E100E0 		.word	-536813184
  82 0044 00000000 		.word	SPIS_RX_ISR
  83 0048 82640040 		.word	1073767554
  84 004c 87650040 		.word	1073767815
  85              		.cfi_endproc
  86              	.LFE0:
  87              		.size	SPIS_Init, .-SPIS_Init
  88              		.section	.text.SPIS_Enable,"ax",%progbits
  89              		.align	2
  90              		.global	SPIS_Enable
  91              		.thumb
  92              		.thumb_func
  93              		.type	SPIS_Enable, %function
  94              	SPIS_Enable:
  95              	.LFB1:
 126:.\Generated_Source\PSoC5/SPIS.c **** 
 127:.\Generated_Source\PSoC5/SPIS.c **** 
 128:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 129:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Enable
 130:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 131:.\Generated_Source\PSoC5/SPIS.c **** *
 132:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 133:.\Generated_Source\PSoC5/SPIS.c **** *  Enable SPIS component.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 5


 134:.\Generated_Source\PSoC5/SPIS.c **** *
 135:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 136:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 137:.\Generated_Source\PSoC5/SPIS.c **** *
 138:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 139:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 140:.\Generated_Source\PSoC5/SPIS.c **** *
 141:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 142:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_Enable(void) 
 143:.\Generated_Source\PSoC5/SPIS.c **** {
  96              		.loc 1 143 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 8
  99              		@ frame_needed = 1, uses_anonymous_args = 0
 100 0000 80B5     		push	{r7, lr}
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 7, -8
 103              		.cfi_offset 14, -4
 104 0002 82B0     		sub	sp, sp, #8
 105              		.cfi_def_cfa_offset 16
 106 0004 00AF     		add	r7, sp, #0
 107              		.cfi_def_cfa_register 7
 144:.\Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
 145:.\Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 108              		.loc 1 145 0
 109 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 110 000a 0346     		mov	r3, r0
 111 000c FB71     		strb	r3, [r7, #7]
 146:.\Generated_Source\PSoC5/SPIS.c **** 
 147:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_COUNTER_CONTROL_REG |= SPIS_CNTR_ENABLE;
 112              		.loc 1 147 0
 113 000e 114A     		ldr	r2, .L5
 114 0010 104B     		ldr	r3, .L5
 115 0012 1B78     		ldrb	r3, [r3]
 116 0014 DBB2     		uxtb	r3, r3
 117 0016 43F02003 		orr	r3, r3, #32
 118 001a DBB2     		uxtb	r3, r3
 119 001c 1370     		strb	r3, [r2]
 148:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_ACTL_REG |= SPIS_INT_ENABLE;
 120              		.loc 1 148 0
 121 001e 0E4A     		ldr	r2, .L5+4
 122 0020 0D4B     		ldr	r3, .L5+4
 123 0022 1B78     		ldrb	r3, [r3]
 124 0024 DBB2     		uxtb	r3, r3
 125 0026 43F01003 		orr	r3, r3, #16
 126 002a DBB2     		uxtb	r3, r3
 127 002c 1370     		strb	r3, [r2]
 149:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_ACTL_REG |= SPIS_INT_ENABLE;
 128              		.loc 1 149 0
 129 002e 0B4A     		ldr	r2, .L5+8
 130 0030 0A4B     		ldr	r3, .L5+8
 131 0032 1B78     		ldrb	r3, [r3]
 132 0034 DBB2     		uxtb	r3, r3
 133 0036 43F01003 		orr	r3, r3, #16
 134 003a DBB2     		uxtb	r3, r3
 135 003c 1370     		strb	r3, [r2]
 150:.\Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 6


 151:.\Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 136              		.loc 1 151 0
 137 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 138 0040 1846     		mov	r0, r3
 139 0042 FFF7FEFF 		bl	CyExitCriticalSection
 152:.\Generated_Source\PSoC5/SPIS.c **** 
 153:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 154:.\Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_TX_ISR_NUMBER);
 155:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 156:.\Generated_Source\PSoC5/SPIS.c **** 
 157:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
 158:.\Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_RX_ISR_NUMBER);
 140              		.loc 1 158 0
 141 0046 064B     		ldr	r3, .L5+12
 142 0048 0422     		movs	r2, #4
 143 004a 1A60     		str	r2, [r3]
 159:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
 160:.\Generated_Source\PSoC5/SPIS.c **** }
 144              		.loc 1 160 0
 145 004c 0837     		adds	r7, r7, #8
 146              		.cfi_def_cfa_offset 8
 147 004e BD46     		mov	sp, r7
 148              		.cfi_def_cfa_register 13
 149              		@ sp needed
 150 0050 80BD     		pop	{r7, pc}
 151              	.L6:
 152 0052 00BF     		.align	2
 153              	.L5:
 154 0054 96650040 		.word	1073767830
 155 0058 92640040 		.word	1073767570
 156 005c 97650040 		.word	1073767831
 157 0060 00E100E0 		.word	-536813312
 158              		.cfi_endproc
 159              	.LFE1:
 160              		.size	SPIS_Enable, .-SPIS_Enable
 161              		.section	.text.SPIS_Start,"ax",%progbits
 162              		.align	2
 163              		.global	SPIS_Start
 164              		.thumb
 165              		.thumb_func
 166              		.type	SPIS_Start, %function
 167              	SPIS_Start:
 168              	.LFB2:
 161:.\Generated_Source\PSoC5/SPIS.c **** 
 162:.\Generated_Source\PSoC5/SPIS.c **** 
 163:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Start
 165:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/SPIS.c **** *
 167:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 168:.\Generated_Source\PSoC5/SPIS.c **** *  Initialize and Enable the SPI Slave component.
 169:.\Generated_Source\PSoC5/SPIS.c **** *
 170:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 171:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 172:.\Generated_Source\PSoC5/SPIS.c **** *
 173:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 174:.\Generated_Source\PSoC5/SPIS.c **** *  None.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 7


 175:.\Generated_Source\PSoC5/SPIS.c **** *
 176:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 177:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_initVar - used to check initial configuration, modified on
 178:.\Generated_Source\PSoC5/SPIS.c **** *  first function call.
 179:.\Generated_Source\PSoC5/SPIS.c **** *
 180:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 181:.\Generated_Source\PSoC5/SPIS.c **** *  Enable the clock input to enable operation.
 182:.\Generated_Source\PSoC5/SPIS.c **** *
 183:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 184:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 185:.\Generated_Source\PSoC5/SPIS.c **** *
 186:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 187:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_Start(void) 
 188:.\Generated_Source\PSoC5/SPIS.c **** {
 169              		.loc 1 188 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 0
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173 0000 80B5     		push	{r7, lr}
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 7, -8
 176              		.cfi_offset 14, -4
 177 0002 00AF     		add	r7, sp, #0
 178              		.cfi_def_cfa_register 7
 189:.\Generated_Source\PSoC5/SPIS.c ****     if(SPIS_initVar == 0u)
 179              		.loc 1 189 0
 180 0004 054B     		ldr	r3, .L9
 181 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 182 0008 002B     		cmp	r3, #0
 183 000a 04D1     		bne	.L8
 190:.\Generated_Source\PSoC5/SPIS.c ****     {
 191:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_Init();
 184              		.loc 1 191 0
 185 000c FFF7FEFF 		bl	SPIS_Init
 192:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_initVar = 1u;
 186              		.loc 1 192 0
 187 0010 024B     		ldr	r3, .L9
 188 0012 0122     		movs	r2, #1
 189 0014 1A70     		strb	r2, [r3]
 190              	.L8:
 193:.\Generated_Source\PSoC5/SPIS.c ****     }
 194:.\Generated_Source\PSoC5/SPIS.c **** 
 195:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_Enable();
 191              		.loc 1 195 0
 192 0016 FFF7FEFF 		bl	SPIS_Enable
 196:.\Generated_Source\PSoC5/SPIS.c **** }
 193              		.loc 1 196 0
 194 001a 80BD     		pop	{r7, pc}
 195              	.L10:
 196              		.align	2
 197              	.L9:
 198 001c 00000000 		.word	SPIS_initVar
 199              		.cfi_endproc
 200              	.LFE2:
 201              		.size	SPIS_Start, .-SPIS_Start
 202              		.section	.text.SPIS_Stop,"ax",%progbits
 203              		.align	2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 8


 204              		.global	SPIS_Stop
 205              		.thumb
 206              		.thumb_func
 207              		.type	SPIS_Stop, %function
 208              	SPIS_Stop:
 209              	.LFB3:
 197:.\Generated_Source\PSoC5/SPIS.c **** 
 198:.\Generated_Source\PSoC5/SPIS.c **** 
 199:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 200:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Stop
 201:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 202:.\Generated_Source\PSoC5/SPIS.c **** *
 203:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 204:.\Generated_Source\PSoC5/SPIS.c **** *  Disable the SPI Slave component.
 205:.\Generated_Source\PSoC5/SPIS.c **** *
 206:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 207:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 208:.\Generated_Source\PSoC5/SPIS.c **** *
 209:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 210:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 211:.\Generated_Source\PSoC5/SPIS.c **** *
 212:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 213:.\Generated_Source\PSoC5/SPIS.c **** *  Disable the internal interrupt if one is used.
 214:.\Generated_Source\PSoC5/SPIS.c **** *
 215:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 216:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_Stop(void) 
 217:.\Generated_Source\PSoC5/SPIS.c **** {
 210              		.loc 1 217 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 8
 213              		@ frame_needed = 1, uses_anonymous_args = 0
 214 0000 80B5     		push	{r7, lr}
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 7, -8
 217              		.cfi_offset 14, -4
 218 0002 82B0     		sub	sp, sp, #8
 219              		.cfi_def_cfa_offset 16
 220 0004 00AF     		add	r7, sp, #0
 221              		.cfi_def_cfa_register 7
 218:.\Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
 219:.\Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 222              		.loc 1 219 0
 223 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 224 000a 0346     		mov	r3, r0
 225 000c FB71     		strb	r3, [r7, #7]
 220:.\Generated_Source\PSoC5/SPIS.c **** 
 221:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_ACTL_REG &= (uint8)~SPIS_INT_ENABLE;
 226              		.loc 1 221 0
 227 000e 0D4A     		ldr	r2, .L12
 228 0010 0C4B     		ldr	r3, .L12
 229 0012 1B78     		ldrb	r3, [r3]
 230 0014 DBB2     		uxtb	r3, r3
 231 0016 23F01003 		bic	r3, r3, #16
 232 001a DBB2     		uxtb	r3, r3
 233 001c 1370     		strb	r3, [r2]
 222:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_ACTL_REG &= (uint8)~SPIS_INT_ENABLE;
 234              		.loc 1 222 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 9


 235 001e 0A4A     		ldr	r2, .L12+4
 236 0020 094B     		ldr	r3, .L12+4
 237 0022 1B78     		ldrb	r3, [r3]
 238 0024 DBB2     		uxtb	r3, r3
 239 0026 23F01003 		bic	r3, r3, #16
 240 002a DBB2     		uxtb	r3, r3
 241 002c 1370     		strb	r3, [r2]
 223:.\Generated_Source\PSoC5/SPIS.c **** 
 224:.\Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 242              		.loc 1 224 0
 243 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 244 0030 1846     		mov	r0, r3
 245 0032 FFF7FEFF 		bl	CyExitCriticalSection
 225:.\Generated_Source\PSoC5/SPIS.c **** 
 226:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 227:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
 228:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 229:.\Generated_Source\PSoC5/SPIS.c **** 
 230:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
 231:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
 246              		.loc 1 231 0
 247 0036 054B     		ldr	r3, .L12+8
 248 0038 0422     		movs	r2, #4
 249 003a 1A60     		str	r2, [r3]
 232:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
 233:.\Generated_Source\PSoC5/SPIS.c **** }
 250              		.loc 1 233 0
 251 003c 0837     		adds	r7, r7, #8
 252              		.cfi_def_cfa_offset 8
 253 003e BD46     		mov	sp, r7
 254              		.cfi_def_cfa_register 13
 255              		@ sp needed
 256 0040 80BD     		pop	{r7, pc}
 257              	.L13:
 258 0042 00BF     		.align	2
 259              	.L12:
 260 0044 92640040 		.word	1073767570
 261 0048 97650040 		.word	1073767831
 262 004c 80E100E0 		.word	-536813184
 263              		.cfi_endproc
 264              	.LFE3:
 265              		.size	SPIS_Stop, .-SPIS_Stop
 266              		.section	.text.SPIS_EnableTxInt,"ax",%progbits
 267              		.align	2
 268              		.global	SPIS_EnableTxInt
 269              		.thumb
 270              		.thumb_func
 271              		.type	SPIS_EnableTxInt, %function
 272              	SPIS_EnableTxInt:
 273              	.LFB4:
 234:.\Generated_Source\PSoC5/SPIS.c **** 
 235:.\Generated_Source\PSoC5/SPIS.c **** 
 236:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 237:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_EnableTxInt
 238:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 239:.\Generated_Source\PSoC5/SPIS.c **** *
 240:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 10


 241:.\Generated_Source\PSoC5/SPIS.c **** *  Enable internal Tx interrupt generation.
 242:.\Generated_Source\PSoC5/SPIS.c **** *
 243:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 244:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 245:.\Generated_Source\PSoC5/SPIS.c **** *
 246:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 247:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 248:.\Generated_Source\PSoC5/SPIS.c **** *
 249:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 250:.\Generated_Source\PSoC5/SPIS.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 251:.\Generated_Source\PSoC5/SPIS.c **** *
 252:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 253:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_EnableTxInt(void) 
 254:.\Generated_Source\PSoC5/SPIS.c **** {
 274              		.loc 1 254 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 279 0000 80B4     		push	{r7}
 280              		.cfi_def_cfa_offset 4
 281              		.cfi_offset 7, -4
 282 0002 00AF     		add	r7, sp, #0
 283              		.cfi_def_cfa_register 7
 255:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 256:.\Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_TX_ISR_NUMBER);
 257:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 258:.\Generated_Source\PSoC5/SPIS.c **** }
 284              		.loc 1 258 0
 285 0004 BD46     		mov	sp, r7
 286              		.cfi_def_cfa_register 13
 287              		@ sp needed
 288 0006 5DF8047B 		ldr	r7, [sp], #4
 289              		.cfi_restore 7
 290              		.cfi_def_cfa_offset 0
 291 000a 7047     		bx	lr
 292              		.cfi_endproc
 293              	.LFE4:
 294              		.size	SPIS_EnableTxInt, .-SPIS_EnableTxInt
 295              		.section	.text.SPIS_EnableRxInt,"ax",%progbits
 296              		.align	2
 297              		.global	SPIS_EnableRxInt
 298              		.thumb
 299              		.thumb_func
 300              		.type	SPIS_EnableRxInt, %function
 301              	SPIS_EnableRxInt:
 302              	.LFB5:
 259:.\Generated_Source\PSoC5/SPIS.c **** 
 260:.\Generated_Source\PSoC5/SPIS.c **** 
 261:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 262:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_EnableRxInt
 263:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 264:.\Generated_Source\PSoC5/SPIS.c **** *
 265:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 266:.\Generated_Source\PSoC5/SPIS.c **** *  Enable internal Rx interrupt generation.
 267:.\Generated_Source\PSoC5/SPIS.c **** *
 268:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 11


 269:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 270:.\Generated_Source\PSoC5/SPIS.c **** *
 271:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 272:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 273:.\Generated_Source\PSoC5/SPIS.c **** *
 274:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 275:.\Generated_Source\PSoC5/SPIS.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 276:.\Generated_Source\PSoC5/SPIS.c **** *
 277:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 278:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_EnableRxInt(void) 
 279:.\Generated_Source\PSoC5/SPIS.c **** {
 303              		.loc 1 279 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308 0000 80B4     		push	{r7}
 309              		.cfi_def_cfa_offset 4
 310              		.cfi_offset 7, -4
 311 0002 00AF     		add	r7, sp, #0
 312              		.cfi_def_cfa_register 7
 280:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
 281:.\Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_RX_ISR_NUMBER);
 313              		.loc 1 281 0
 314 0004 034B     		ldr	r3, .L16
 315 0006 0422     		movs	r2, #4
 316 0008 1A60     		str	r2, [r3]
 282:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
 283:.\Generated_Source\PSoC5/SPIS.c **** }
 317              		.loc 1 283 0
 318 000a BD46     		mov	sp, r7
 319              		.cfi_def_cfa_register 13
 320              		@ sp needed
 321 000c 5DF8047B 		ldr	r7, [sp], #4
 322              		.cfi_restore 7
 323              		.cfi_def_cfa_offset 0
 324 0010 7047     		bx	lr
 325              	.L17:
 326 0012 00BF     		.align	2
 327              	.L16:
 328 0014 00E100E0 		.word	-536813312
 329              		.cfi_endproc
 330              	.LFE5:
 331              		.size	SPIS_EnableRxInt, .-SPIS_EnableRxInt
 332              		.section	.text.SPIS_DisableTxInt,"ax",%progbits
 333              		.align	2
 334              		.global	SPIS_DisableTxInt
 335              		.thumb
 336              		.thumb_func
 337              		.type	SPIS_DisableTxInt, %function
 338              	SPIS_DisableTxInt:
 339              	.LFB6:
 284:.\Generated_Source\PSoC5/SPIS.c **** 
 285:.\Generated_Source\PSoC5/SPIS.c **** 
 286:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 287:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_DisableTxInt
 288:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 12


 289:.\Generated_Source\PSoC5/SPIS.c **** *
 290:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 291:.\Generated_Source\PSoC5/SPIS.c **** *  Disable internal Tx interrupt generation.
 292:.\Generated_Source\PSoC5/SPIS.c **** *
 293:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 294:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 295:.\Generated_Source\PSoC5/SPIS.c **** *
 296:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 297:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 298:.\Generated_Source\PSoC5/SPIS.c **** *
 299:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 300:.\Generated_Source\PSoC5/SPIS.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 301:.\Generated_Source\PSoC5/SPIS.c **** *
 302:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 303:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_DisableTxInt(void) 
 304:.\Generated_Source\PSoC5/SPIS.c **** {
 340              		.loc 1 304 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 0
 343              		@ frame_needed = 1, uses_anonymous_args = 0
 344              		@ link register save eliminated.
 345 0000 80B4     		push	{r7}
 346              		.cfi_def_cfa_offset 4
 347              		.cfi_offset 7, -4
 348 0002 00AF     		add	r7, sp, #0
 349              		.cfi_def_cfa_register 7
 305:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 306:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
 307:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 308:.\Generated_Source\PSoC5/SPIS.c **** }
 350              		.loc 1 308 0
 351 0004 BD46     		mov	sp, r7
 352              		.cfi_def_cfa_register 13
 353              		@ sp needed
 354 0006 5DF8047B 		ldr	r7, [sp], #4
 355              		.cfi_restore 7
 356              		.cfi_def_cfa_offset 0
 357 000a 7047     		bx	lr
 358              		.cfi_endproc
 359              	.LFE6:
 360              		.size	SPIS_DisableTxInt, .-SPIS_DisableTxInt
 361              		.section	.text.SPIS_DisableRxInt,"ax",%progbits
 362              		.align	2
 363              		.global	SPIS_DisableRxInt
 364              		.thumb
 365              		.thumb_func
 366              		.type	SPIS_DisableRxInt, %function
 367              	SPIS_DisableRxInt:
 368              	.LFB7:
 309:.\Generated_Source\PSoC5/SPIS.c **** 
 310:.\Generated_Source\PSoC5/SPIS.c **** 
 311:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 312:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_DisableRxInt
 313:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 314:.\Generated_Source\PSoC5/SPIS.c **** *
 315:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 316:.\Generated_Source\PSoC5/SPIS.c **** *  Disable internal Rx interrupt generation.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 13


 317:.\Generated_Source\PSoC5/SPIS.c **** *
 318:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 319:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 320:.\Generated_Source\PSoC5/SPIS.c **** *
 321:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 322:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 323:.\Generated_Source\PSoC5/SPIS.c **** *
 324:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 325:.\Generated_Source\PSoC5/SPIS.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 326:.\Generated_Source\PSoC5/SPIS.c **** *
 327:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 328:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_DisableRxInt(void) 
 329:.\Generated_Source\PSoC5/SPIS.c **** {
 369              		.loc 1 329 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374 0000 80B4     		push	{r7}
 375              		.cfi_def_cfa_offset 4
 376              		.cfi_offset 7, -4
 377 0002 00AF     		add	r7, sp, #0
 378              		.cfi_def_cfa_register 7
 330:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
 331:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
 379              		.loc 1 331 0
 380 0004 034B     		ldr	r3, .L20
 381 0006 0422     		movs	r2, #4
 382 0008 1A60     		str	r2, [r3]
 332:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
 333:.\Generated_Source\PSoC5/SPIS.c **** }
 383              		.loc 1 333 0
 384 000a BD46     		mov	sp, r7
 385              		.cfi_def_cfa_register 13
 386              		@ sp needed
 387 000c 5DF8047B 		ldr	r7, [sp], #4
 388              		.cfi_restore 7
 389              		.cfi_def_cfa_offset 0
 390 0010 7047     		bx	lr
 391              	.L21:
 392 0012 00BF     		.align	2
 393              	.L20:
 394 0014 80E100E0 		.word	-536813184
 395              		.cfi_endproc
 396              	.LFE7:
 397              		.size	SPIS_DisableRxInt, .-SPIS_DisableRxInt
 398              		.section	.text.SPIS_SetTxInterruptMode,"ax",%progbits
 399              		.align	2
 400              		.global	SPIS_SetTxInterruptMode
 401              		.thumb
 402              		.thumb_func
 403              		.type	SPIS_SetTxInterruptMode, %function
 404              	SPIS_SetTxInterruptMode:
 405              	.LFB8:
 334:.\Generated_Source\PSoC5/SPIS.c **** 
 335:.\Generated_Source\PSoC5/SPIS.c **** 
 336:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 14


 337:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_SetTxInterruptMode
 338:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 339:.\Generated_Source\PSoC5/SPIS.c **** *
 340:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 341:.\Generated_Source\PSoC5/SPIS.c **** *  Configure which status bits trigger an interrupt event.
 342:.\Generated_Source\PSoC5/SPIS.c **** *
 343:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 344:.\Generated_Source\PSoC5/SPIS.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 345:.\Generated_Source\PSoC5/SPIS.c **** *  header file).
 346:.\Generated_Source\PSoC5/SPIS.c **** *
 347:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 348:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 349:.\Generated_Source\PSoC5/SPIS.c **** *
 350:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 351:.\Generated_Source\PSoC5/SPIS.c **** *  Enables the output of specific status bits to the interrupt controller.
 352:.\Generated_Source\PSoC5/SPIS.c **** *
 353:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 354:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_SetTxInterruptMode(uint8 intSrc) 
 355:.\Generated_Source\PSoC5/SPIS.c **** {
 406              		.loc 1 355 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 8
 409              		@ frame_needed = 1, uses_anonymous_args = 0
 410              		@ link register save eliminated.
 411 0000 80B4     		push	{r7}
 412              		.cfi_def_cfa_offset 4
 413              		.cfi_offset 7, -4
 414 0002 83B0     		sub	sp, sp, #12
 415              		.cfi_def_cfa_offset 16
 416 0004 00AF     		add	r7, sp, #0
 417              		.cfi_def_cfa_register 7
 418 0006 0346     		mov	r3, r0
 419 0008 FB71     		strb	r3, [r7, #7]
 356:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_MASK_REG  = intSrc;
 420              		.loc 1 356 0
 421 000a 044A     		ldr	r2, .L23
 422 000c FB79     		ldrb	r3, [r7, #7]
 423 000e 1370     		strb	r3, [r2]
 357:.\Generated_Source\PSoC5/SPIS.c **** }
 424              		.loc 1 357 0
 425 0010 0C37     		adds	r7, r7, #12
 426              		.cfi_def_cfa_offset 4
 427 0012 BD46     		mov	sp, r7
 428              		.cfi_def_cfa_register 13
 429              		@ sp needed
 430 0014 5DF8047B 		ldr	r7, [sp], #4
 431              		.cfi_restore 7
 432              		.cfi_def_cfa_offset 0
 433 0018 7047     		bx	lr
 434              	.L24:
 435 001a 00BF     		.align	2
 436              	.L23:
 437 001c 82640040 		.word	1073767554
 438              		.cfi_endproc
 439              	.LFE8:
 440              		.size	SPIS_SetTxInterruptMode, .-SPIS_SetTxInterruptMode
 441              		.section	.text.SPIS_SetRxInterruptMode,"ax",%progbits
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 15


 442              		.align	2
 443              		.global	SPIS_SetRxInterruptMode
 444              		.thumb
 445              		.thumb_func
 446              		.type	SPIS_SetRxInterruptMode, %function
 447              	SPIS_SetRxInterruptMode:
 448              	.LFB9:
 358:.\Generated_Source\PSoC5/SPIS.c **** 
 359:.\Generated_Source\PSoC5/SPIS.c **** 
 360:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 361:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_SetRxInterruptMode
 362:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 363:.\Generated_Source\PSoC5/SPIS.c **** *
 364:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 365:.\Generated_Source\PSoC5/SPIS.c **** *  Configure which status bits trigger an interrupt event.
 366:.\Generated_Source\PSoC5/SPIS.c **** *
 367:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 368:.\Generated_Source\PSoC5/SPIS.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 369:.\Generated_Source\PSoC5/SPIS.c **** *  header file).
 370:.\Generated_Source\PSoC5/SPIS.c **** *
 371:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 372:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 373:.\Generated_Source\PSoC5/SPIS.c **** *
 374:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 375:.\Generated_Source\PSoC5/SPIS.c **** *  Enables the output of specific status bits to the interrupt controller.
 376:.\Generated_Source\PSoC5/SPIS.c **** *
 377:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 378:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_SetRxInterruptMode(uint8 intSrc) 
 379:.\Generated_Source\PSoC5/SPIS.c **** {
 449              		.loc 1 379 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 8
 452              		@ frame_needed = 1, uses_anonymous_args = 0
 453              		@ link register save eliminated.
 454 0000 80B4     		push	{r7}
 455              		.cfi_def_cfa_offset 4
 456              		.cfi_offset 7, -4
 457 0002 83B0     		sub	sp, sp, #12
 458              		.cfi_def_cfa_offset 16
 459 0004 00AF     		add	r7, sp, #0
 460              		.cfi_def_cfa_register 7
 461 0006 0346     		mov	r3, r0
 462 0008 FB71     		strb	r3, [r7, #7]
 380:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_MASK_REG  = intSrc;
 463              		.loc 1 380 0
 464 000a 044A     		ldr	r2, .L26
 465 000c FB79     		ldrb	r3, [r7, #7]
 466 000e 1370     		strb	r3, [r2]
 381:.\Generated_Source\PSoC5/SPIS.c **** }
 467              		.loc 1 381 0
 468 0010 0C37     		adds	r7, r7, #12
 469              		.cfi_def_cfa_offset 4
 470 0012 BD46     		mov	sp, r7
 471              		.cfi_def_cfa_register 13
 472              		@ sp needed
 473 0014 5DF8047B 		ldr	r7, [sp], #4
 474              		.cfi_restore 7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 16


 475              		.cfi_def_cfa_offset 0
 476 0018 7047     		bx	lr
 477              	.L27:
 478 001a 00BF     		.align	2
 479              	.L26:
 480 001c 87650040 		.word	1073767815
 481              		.cfi_endproc
 482              	.LFE9:
 483              		.size	SPIS_SetRxInterruptMode, .-SPIS_SetRxInterruptMode
 484              		.section	.text.SPIS_ReadTxStatus,"ax",%progbits
 485              		.align	2
 486              		.global	SPIS_ReadTxStatus
 487              		.thumb
 488              		.thumb_func
 489              		.type	SPIS_ReadTxStatus, %function
 490              	SPIS_ReadTxStatus:
 491              	.LFB10:
 382:.\Generated_Source\PSoC5/SPIS.c **** 
 383:.\Generated_Source\PSoC5/SPIS.c **** 
 384:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 385:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadTxStatus
 386:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 387:.\Generated_Source\PSoC5/SPIS.c **** *
 388:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 389:.\Generated_Source\PSoC5/SPIS.c **** *  Read the Tx status register for the component.
 390:.\Generated_Source\PSoC5/SPIS.c **** *
 391:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 392:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 393:.\Generated_Source\PSoC5/SPIS.c **** *
 394:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 395:.\Generated_Source\PSoC5/SPIS.c **** *  Contents of the Tx status register.
 396:.\Generated_Source\PSoC5/SPIS.c **** *
 397:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 398:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_swStatusTx - used to store in software status register,
 399:.\Generated_Source\PSoC5/SPIS.c **** *  modified every function call - resets to zero.
 400:.\Generated_Source\PSoC5/SPIS.c **** *
 401:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 402:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user and the API to read the Tx status register for error
 403:.\Generated_Source\PSoC5/SPIS.c **** *  detection and flow control.
 404:.\Generated_Source\PSoC5/SPIS.c **** *
 405:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 406:.\Generated_Source\PSoC5/SPIS.c **** *  Clear Tx status register of the component.
 407:.\Generated_Source\PSoC5/SPIS.c **** *
 408:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 409:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 410:.\Generated_Source\PSoC5/SPIS.c **** *
 411:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 412:.\Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadTxStatus(void) 
 413:.\Generated_Source\PSoC5/SPIS.c **** {
 492              		.loc 1 413 0
 493              		.cfi_startproc
 494              		@ args = 0, pretend = 0, frame = 8
 495              		@ frame_needed = 1, uses_anonymous_args = 0
 496              		@ link register save eliminated.
 497 0000 80B4     		push	{r7}
 498              		.cfi_def_cfa_offset 4
 499              		.cfi_offset 7, -4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 17


 500 0002 83B0     		sub	sp, sp, #12
 501              		.cfi_def_cfa_offset 16
 502 0004 00AF     		add	r7, sp, #0
 503              		.cfi_def_cfa_register 7
 414:.\Generated_Source\PSoC5/SPIS.c ****     uint8 tmpStatus;
 415:.\Generated_Source\PSoC5/SPIS.c **** 
 416:.\Generated_Source\PSoC5/SPIS.c ****     #if (SPIS_TX_SOFTWARE_BUF_ENABLED)
 417:.\Generated_Source\PSoC5/SPIS.c **** 
 418:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 419:.\Generated_Source\PSoC5/SPIS.c **** 
 420:.\Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_GET_STATUS_TX(SPIS_swStatusTx);
 421:.\Generated_Source\PSoC5/SPIS.c **** 
 422:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusTx = 0u;
 423:.\Generated_Source\PSoC5/SPIS.c **** 
 424:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupts */
 425:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 426:.\Generated_Source\PSoC5/SPIS.c **** 
 427:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_TX_SOFTWARE_BUF_ENABLED */
 428:.\Generated_Source\PSoC5/SPIS.c **** 
 429:.\Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_TX_STATUS_REG;
 504              		.loc 1 429 0
 505 0006 054B     		ldr	r3, .L30
 506 0008 1B78     		ldrb	r3, [r3]
 507 000a FB71     		strb	r3, [r7, #7]
 430:.\Generated_Source\PSoC5/SPIS.c **** 
 431:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 432:.\Generated_Source\PSoC5/SPIS.c **** 
 433:.\Generated_Source\PSoC5/SPIS.c ****     return(tmpStatus);
 508              		.loc 1 433 0
 509 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 434:.\Generated_Source\PSoC5/SPIS.c **** }
 510              		.loc 1 434 0
 511 000e 1846     		mov	r0, r3
 512 0010 0C37     		adds	r7, r7, #12
 513              		.cfi_def_cfa_offset 4
 514 0012 BD46     		mov	sp, r7
 515              		.cfi_def_cfa_register 13
 516              		@ sp needed
 517 0014 5DF8047B 		ldr	r7, [sp], #4
 518              		.cfi_restore 7
 519              		.cfi_def_cfa_offset 0
 520 0018 7047     		bx	lr
 521              	.L31:
 522 001a 00BF     		.align	2
 523              	.L30:
 524 001c 62640040 		.word	1073767522
 525              		.cfi_endproc
 526              	.LFE10:
 527              		.size	SPIS_ReadTxStatus, .-SPIS_ReadTxStatus
 528              		.section	.text.SPIS_ReadRxStatus,"ax",%progbits
 529              		.align	2
 530              		.global	SPIS_ReadRxStatus
 531              		.thumb
 532              		.thumb_func
 533              		.type	SPIS_ReadRxStatus, %function
 534              	SPIS_ReadRxStatus:
 535              	.LFB11:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 18


 435:.\Generated_Source\PSoC5/SPIS.c **** 
 436:.\Generated_Source\PSoC5/SPIS.c **** 
 437:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 438:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadRxStatus
 439:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 440:.\Generated_Source\PSoC5/SPIS.c **** *
 441:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 442:.\Generated_Source\PSoC5/SPIS.c **** *  Read the Rx status register for the component.
 443:.\Generated_Source\PSoC5/SPIS.c **** *
 444:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 445:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 446:.\Generated_Source\PSoC5/SPIS.c **** *
 447:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 448:.\Generated_Source\PSoC5/SPIS.c **** *  Contents of the Rx status register.
 449:.\Generated_Source\PSoC5/SPIS.c **** *
 450:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 451:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_swStatusRx - used to store in software Rx status register,
 452:.\Generated_Source\PSoC5/SPIS.c **** *  modified every function call - resets to zero.
 453:.\Generated_Source\PSoC5/SPIS.c **** *
 454:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 455:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user and the API to read the Rx status register for error
 456:.\Generated_Source\PSoC5/SPIS.c **** *  detection and flow control.
 457:.\Generated_Source\PSoC5/SPIS.c **** *
 458:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 459:.\Generated_Source\PSoC5/SPIS.c **** *  Clear Rx status register of the component.
 460:.\Generated_Source\PSoC5/SPIS.c **** *
 461:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 462:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 463:.\Generated_Source\PSoC5/SPIS.c **** *
 464:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 465:.\Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadRxStatus(void) 
 466:.\Generated_Source\PSoC5/SPIS.c **** {
 536              		.loc 1 466 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 8
 539              		@ frame_needed = 1, uses_anonymous_args = 0
 540              		@ link register save eliminated.
 541 0000 80B4     		push	{r7}
 542              		.cfi_def_cfa_offset 4
 543              		.cfi_offset 7, -4
 544 0002 83B0     		sub	sp, sp, #12
 545              		.cfi_def_cfa_offset 16
 546 0004 00AF     		add	r7, sp, #0
 547              		.cfi_def_cfa_register 7
 467:.\Generated_Source\PSoC5/SPIS.c ****     uint8 tmpStatus;
 468:.\Generated_Source\PSoC5/SPIS.c **** 
 469:.\Generated_Source\PSoC5/SPIS.c ****     #if (SPIS_RX_SOFTWARE_BUF_ENABLED)
 470:.\Generated_Source\PSoC5/SPIS.c **** 
 471:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 472:.\Generated_Source\PSoC5/SPIS.c **** 
 473:.\Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_GET_STATUS_RX(SPIS_swStatusRx);
 474:.\Generated_Source\PSoC5/SPIS.c **** 
 475:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusRx = 0u;
 476:.\Generated_Source\PSoC5/SPIS.c **** 
 477:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupts */
 478:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 479:.\Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 19


 480:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_RX_SOFTWARE_BUF_ENABLED */
 481:.\Generated_Source\PSoC5/SPIS.c **** 
 482:.\Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_RX_STATUS_REG;
 548              		.loc 1 482 0
 549 0006 054B     		ldr	r3, .L34
 550 0008 1B78     		ldrb	r3, [r3]
 551 000a FB71     		strb	r3, [r7, #7]
 483:.\Generated_Source\PSoC5/SPIS.c **** 
 484:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 485:.\Generated_Source\PSoC5/SPIS.c **** 
 486:.\Generated_Source\PSoC5/SPIS.c ****     return(tmpStatus);
 552              		.loc 1 486 0
 553 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 487:.\Generated_Source\PSoC5/SPIS.c **** }
 554              		.loc 1 487 0
 555 000e 1846     		mov	r0, r3
 556 0010 0C37     		adds	r7, r7, #12
 557              		.cfi_def_cfa_offset 4
 558 0012 BD46     		mov	sp, r7
 559              		.cfi_def_cfa_register 13
 560              		@ sp needed
 561 0014 5DF8047B 		ldr	r7, [sp], #4
 562              		.cfi_restore 7
 563              		.cfi_def_cfa_offset 0
 564 0018 7047     		bx	lr
 565              	.L35:
 566 001a 00BF     		.align	2
 567              	.L34:
 568 001c 67650040 		.word	1073767783
 569              		.cfi_endproc
 570              	.LFE11:
 571              		.size	SPIS_ReadRxStatus, .-SPIS_ReadRxStatus
 572              		.section	.text.SPIS_WriteTxData,"ax",%progbits
 573              		.align	2
 574              		.global	SPIS_WriteTxData
 575              		.thumb
 576              		.thumb_func
 577              		.type	SPIS_WriteTxData, %function
 578              	SPIS_WriteTxData:
 579              	.LFB12:
 488:.\Generated_Source\PSoC5/SPIS.c **** 
 489:.\Generated_Source\PSoC5/SPIS.c **** 
 490:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 491:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_WriteTxData
 492:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 493:.\Generated_Source\PSoC5/SPIS.c **** *
 494:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 495:.\Generated_Source\PSoC5/SPIS.c **** *  Write a byte of data to be sent across the SPI.
 496:.\Generated_Source\PSoC5/SPIS.c **** *
 497:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 498:.\Generated_Source\PSoC5/SPIS.c **** *  txDataByte: The data value to send across the SPI.
 499:.\Generated_Source\PSoC5/SPIS.c **** *
 500:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 501:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 502:.\Generated_Source\PSoC5/SPIS.c **** *
 503:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 504:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferWrite - used for the account of the bytes which
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 20


 505:.\Generated_Source\PSoC5/SPIS.c **** *  have been written down in the TX software buffer, modified every function
 506:.\Generated_Source\PSoC5/SPIS.c **** *  call if TX Software Buffer is used.
 507:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferRead - used for the account of the bytes which
 508:.\Generated_Source\PSoC5/SPIS.c **** *  have been read from the TX software buffer.
 509:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBuffer[SPIS_TX_BUFFER_SIZE] - used to store
 510:.\Generated_Source\PSoC5/SPIS.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 511:.\Generated_Source\PSoC5/SPIS.c **** *
 512:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 513:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user to transmit any byte of data in a single transfer.
 514:.\Generated_Source\PSoC5/SPIS.c **** *
 515:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 516:.\Generated_Source\PSoC5/SPIS.c **** *  If this function is called again before the previous byte is finished then
 517:.\Generated_Source\PSoC5/SPIS.c **** *  the next byte will be appended to the transfer with no time between
 518:.\Generated_Source\PSoC5/SPIS.c **** *  the byte transfers. Clear Tx status register of the component.
 519:.\Generated_Source\PSoC5/SPIS.c **** *
 520:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 521:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 522:.\Generated_Source\PSoC5/SPIS.c **** *
 523:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 524:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_WriteTxData(uint8 txData) 
 525:.\Generated_Source\PSoC5/SPIS.c **** {
 580              		.loc 1 525 0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 8
 583              		@ frame_needed = 1, uses_anonymous_args = 0
 584              		@ link register save eliminated.
 585 0000 80B4     		push	{r7}
 586              		.cfi_def_cfa_offset 4
 587              		.cfi_offset 7, -4
 588 0002 83B0     		sub	sp, sp, #12
 589              		.cfi_def_cfa_offset 16
 590 0004 00AF     		add	r7, sp, #0
 591              		.cfi_def_cfa_register 7
 592 0006 0346     		mov	r3, r0
 593 0008 FB71     		strb	r3, [r7, #7]
 526:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 527:.\Generated_Source\PSoC5/SPIS.c **** 
 528:.\Generated_Source\PSoC5/SPIS.c ****         uint8 tempStatus;
 529:.\Generated_Source\PSoC5/SPIS.c ****         uint8 tmpTxBufferRead;
 530:.\Generated_Source\PSoC5/SPIS.c **** 
 531:.\Generated_Source\PSoC5/SPIS.c ****         /* Block if buffer is full, so we don't overwrite. */
 532:.\Generated_Source\PSoC5/SPIS.c ****         do
 533:.\Generated_Source\PSoC5/SPIS.c ****         {
 534:.\Generated_Source\PSoC5/SPIS.c ****             tmpTxBufferRead = SPIS_txBufferRead;
 535:.\Generated_Source\PSoC5/SPIS.c ****             if (0u == tmpTxBufferRead)
 536:.\Generated_Source\PSoC5/SPIS.c ****             {
 537:.\Generated_Source\PSoC5/SPIS.c ****                 tmpTxBufferRead = SPIS_TX_BUFFER_SIZE - 1u;
 538:.\Generated_Source\PSoC5/SPIS.c ****             }
 539:.\Generated_Source\PSoC5/SPIS.c ****             else
 540:.\Generated_Source\PSoC5/SPIS.c ****             {
 541:.\Generated_Source\PSoC5/SPIS.c ****                 tmpTxBufferRead--;
 542:.\Generated_Source\PSoC5/SPIS.c ****             }
 543:.\Generated_Source\PSoC5/SPIS.c **** 
 544:.\Generated_Source\PSoC5/SPIS.c ****         }
 545:.\Generated_Source\PSoC5/SPIS.c ****         while(tmpTxBufferRead == SPIS_txBufferWrite);
 546:.\Generated_Source\PSoC5/SPIS.c **** 
 547:.\Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 21


 548:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 549:.\Generated_Source\PSoC5/SPIS.c **** 
 550:.\Generated_Source\PSoC5/SPIS.c ****         tempStatus = SPIS_GET_STATUS_TX(SPIS_swStatusTx);
 551:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusTx = tempStatus;
 552:.\Generated_Source\PSoC5/SPIS.c **** 
 553:.\Generated_Source\PSoC5/SPIS.c ****         if((SPIS_txBufferRead == SPIS_txBufferWrite) &&
 554:.\Generated_Source\PSoC5/SPIS.c ****             (0u != (SPIS_swStatusTx & SPIS_STS_TX_FIFO_NOT_FULL)))
 555:.\Generated_Source\PSoC5/SPIS.c ****         {
 556:.\Generated_Source\PSoC5/SPIS.c ****             /* Put data element into the TX FIFO */
 557:.\Generated_Source\PSoC5/SPIS.c ****             CY_SET_REG8(SPIS_TXDATA_PTR, txData);
 558:.\Generated_Source\PSoC5/SPIS.c ****         }
 559:.\Generated_Source\PSoC5/SPIS.c ****         else
 560:.\Generated_Source\PSoC5/SPIS.c ****         {
 561:.\Generated_Source\PSoC5/SPIS.c ****             /* Put data element into the software buffer */
 562:.\Generated_Source\PSoC5/SPIS.c ****             SPIS_txBufferWrite++;
 563:.\Generated_Source\PSoC5/SPIS.c ****             if(SPIS_txBufferWrite >= SPIS_TX_BUFFER_SIZE)
 564:.\Generated_Source\PSoC5/SPIS.c ****             {
 565:.\Generated_Source\PSoC5/SPIS.c ****                 SPIS_txBufferWrite = 0u;
 566:.\Generated_Source\PSoC5/SPIS.c ****             }
 567:.\Generated_Source\PSoC5/SPIS.c **** 
 568:.\Generated_Source\PSoC5/SPIS.c ****             if(SPIS_txBufferWrite == SPIS_txBufferRead)
 569:.\Generated_Source\PSoC5/SPIS.c ****             {
 570:.\Generated_Source\PSoC5/SPIS.c ****                 SPIS_txBufferRead++;
 571:.\Generated_Source\PSoC5/SPIS.c ****                 if(SPIS_txBufferRead >= SPIS_RX_BUFFER_SIZE)
 572:.\Generated_Source\PSoC5/SPIS.c ****                 {
 573:.\Generated_Source\PSoC5/SPIS.c ****                     SPIS_txBufferRead = 0u;
 574:.\Generated_Source\PSoC5/SPIS.c ****                 }
 575:.\Generated_Source\PSoC5/SPIS.c ****                 SPIS_txBufferFull = 1u;
 576:.\Generated_Source\PSoC5/SPIS.c ****             }
 577:.\Generated_Source\PSoC5/SPIS.c **** 
 578:.\Generated_Source\PSoC5/SPIS.c ****             SPIS_txBuffer[SPIS_txBufferWrite] = txData;
 579:.\Generated_Source\PSoC5/SPIS.c **** 
 580:.\Generated_Source\PSoC5/SPIS.c ****             SPIS_TX_STATUS_MASK_REG |= SPIS_STS_TX_FIFO_NOT_FULL;
 581:.\Generated_Source\PSoC5/SPIS.c ****         }
 582:.\Generated_Source\PSoC5/SPIS.c **** 
 583:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 584:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 585:.\Generated_Source\PSoC5/SPIS.c **** 
 586:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_TX_SOFTWARE_BUF_ENABLED */
 587:.\Generated_Source\PSoC5/SPIS.c ****         /* Wait until TX FIFO has a place */
 588:.\Generated_Source\PSoC5/SPIS.c ****         while(0u == (SPIS_TX_STATUS_REG & SPIS_STS_TX_FIFO_NOT_FULL))
 594              		.loc 1 588 0
 595 000a 00BF     		nop
 596              	.L37:
 597              		.loc 1 588 0 is_stmt 0 discriminator 1
 598 000c 074B     		ldr	r3, .L38
 599 000e 1B78     		ldrb	r3, [r3]
 600 0010 DBB2     		uxtb	r3, r3
 601 0012 03F00203 		and	r3, r3, #2
 602 0016 002B     		cmp	r3, #0
 603 0018 F8D0     		beq	.L37
 589:.\Generated_Source\PSoC5/SPIS.c ****         {
 590:.\Generated_Source\PSoC5/SPIS.c ****         }
 591:.\Generated_Source\PSoC5/SPIS.c **** 
 592:.\Generated_Source\PSoC5/SPIS.c ****         /* Put data element into the TX FIFO */
 593:.\Generated_Source\PSoC5/SPIS.c ****         CY_SET_REG8(SPIS_TXDATA_PTR, txData);
 604              		.loc 1 593 0 is_stmt 1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 22


 605 001a 054A     		ldr	r2, .L38+4
 606 001c FB79     		ldrb	r3, [r7, #7]
 607 001e 1370     		strb	r3, [r2]
 594:.\Generated_Source\PSoC5/SPIS.c ****         
 595:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 596:.\Generated_Source\PSoC5/SPIS.c **** }
 608              		.loc 1 596 0
 609 0020 0C37     		adds	r7, r7, #12
 610              		.cfi_def_cfa_offset 4
 611 0022 BD46     		mov	sp, r7
 612              		.cfi_def_cfa_register 13
 613              		@ sp needed
 614 0024 5DF8047B 		ldr	r7, [sp], #4
 615              		.cfi_restore 7
 616              		.cfi_def_cfa_offset 0
 617 0028 7047     		bx	lr
 618              	.L39:
 619 002a 00BF     		.align	2
 620              	.L38:
 621 002c 62640040 		.word	1073767522
 622 0030 45650040 		.word	1073767749
 623              		.cfi_endproc
 624              	.LFE12:
 625              		.size	SPIS_WriteTxData, .-SPIS_WriteTxData
 626              		.section	.text.SPIS_WriteTxDataZero,"ax",%progbits
 627              		.align	2
 628              		.global	SPIS_WriteTxDataZero
 629              		.thumb
 630              		.thumb_func
 631              		.type	SPIS_WriteTxDataZero, %function
 632              	SPIS_WriteTxDataZero:
 633              	.LFB13:
 597:.\Generated_Source\PSoC5/SPIS.c **** 
 598:.\Generated_Source\PSoC5/SPIS.c **** #if(SPIS_MODE_USE_ZERO != 0u)
 599:.\Generated_Source\PSoC5/SPIS.c **** 
 600:.\Generated_Source\PSoC5/SPIS.c ****     /*******************************************************************************
 601:.\Generated_Source\PSoC5/SPIS.c ****     * Function Name: SPIS_WriteTxDataZero
 602:.\Generated_Source\PSoC5/SPIS.c ****     ********************************************************************************
 603:.\Generated_Source\PSoC5/SPIS.c ****     *
 604:.\Generated_Source\PSoC5/SPIS.c ****     * Summary:
 605:.\Generated_Source\PSoC5/SPIS.c ****     *  Write a byte zero of data to be sent across the SPI. This must be used in
 606:.\Generated_Source\PSoC5/SPIS.c ****     *  Mode 00 and 01 if the FIFO is empty and data is not being sent.
 607:.\Generated_Source\PSoC5/SPIS.c ****     *
 608:.\Generated_Source\PSoC5/SPIS.c ****     * Parameters:
 609:.\Generated_Source\PSoC5/SPIS.c ****     *  txDataByte: The data value to send across the SPI.
 610:.\Generated_Source\PSoC5/SPIS.c ****     *
 611:.\Generated_Source\PSoC5/SPIS.c ****     * Return:
 612:.\Generated_Source\PSoC5/SPIS.c ****     *  None.
 613:.\Generated_Source\PSoC5/SPIS.c ****     *
 614:.\Generated_Source\PSoC5/SPIS.c ****     * Theory:
 615:.\Generated_Source\PSoC5/SPIS.c ****     *  Allows the user to transmit any byte of data in a single transfer. Clear
 616:.\Generated_Source\PSoC5/SPIS.c ****     *  status register of the component.
 617:.\Generated_Source\PSoC5/SPIS.c ****     *
 618:.\Generated_Source\PSoC5/SPIS.c ****     *******************************************************************************/
 619:.\Generated_Source\PSoC5/SPIS.c ****     void SPIS_WriteTxDataZero(uint8 txDataByte)
 620:.\Generated_Source\PSoC5/SPIS.c ****                                         
 621:.\Generated_Source\PSoC5/SPIS.c ****     {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 23


 634              		.loc 1 621 0
 635              		.cfi_startproc
 636              		@ args = 0, pretend = 0, frame = 8
 637              		@ frame_needed = 1, uses_anonymous_args = 0
 638              		@ link register save eliminated.
 639 0000 80B4     		push	{r7}
 640              		.cfi_def_cfa_offset 4
 641              		.cfi_offset 7, -4
 642 0002 83B0     		sub	sp, sp, #12
 643              		.cfi_def_cfa_offset 16
 644 0004 00AF     		add	r7, sp, #0
 645              		.cfi_def_cfa_register 7
 646 0006 0346     		mov	r3, r0
 647 0008 FB71     		strb	r3, [r7, #7]
 622:.\Generated_Source\PSoC5/SPIS.c ****         CY_SET_REG8(SPIS_TXDATA_ZERO_PTR, txDataByte);
 648              		.loc 1 622 0
 649 000a 044A     		ldr	r2, .L41
 650 000c FB79     		ldrb	r3, [r7, #7]
 651 000e 1370     		strb	r3, [r2]
 623:.\Generated_Source\PSoC5/SPIS.c ****     }
 652              		.loc 1 623 0
 653 0010 0C37     		adds	r7, r7, #12
 654              		.cfi_def_cfa_offset 4
 655 0012 BD46     		mov	sp, r7
 656              		.cfi_def_cfa_register 13
 657              		@ sp needed
 658 0014 5DF8047B 		ldr	r7, [sp], #4
 659              		.cfi_restore 7
 660              		.cfi_def_cfa_offset 0
 661 0018 7047     		bx	lr
 662              	.L42:
 663 001a 00BF     		.align	2
 664              	.L41:
 665 001c 05650040 		.word	1073767685
 666              		.cfi_endproc
 667              	.LFE13:
 668              		.size	SPIS_WriteTxDataZero, .-SPIS_WriteTxDataZero
 669              		.section	.text.SPIS_ReadRxData,"ax",%progbits
 670              		.align	2
 671              		.global	SPIS_ReadRxData
 672              		.thumb
 673              		.thumb_func
 674              		.type	SPIS_ReadRxData, %function
 675              	SPIS_ReadRxData:
 676              	.LFB14:
 624:.\Generated_Source\PSoC5/SPIS.c **** 
 625:.\Generated_Source\PSoC5/SPIS.c **** #endif /* (SPIS_MODE_USE_ZERO != 0u) */
 626:.\Generated_Source\PSoC5/SPIS.c **** 
 627:.\Generated_Source\PSoC5/SPIS.c **** 
 628:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 629:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadRxData
 630:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 631:.\Generated_Source\PSoC5/SPIS.c **** *
 632:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 633:.\Generated_Source\PSoC5/SPIS.c **** *  Read the next byte of data received across the SPI.
 634:.\Generated_Source\PSoC5/SPIS.c **** *
 635:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 24


 636:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 637:.\Generated_Source\PSoC5/SPIS.c **** *
 638:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 639:.\Generated_Source\PSoC5/SPIS.c **** *  The next byte of data read from the FIFO.
 640:.\Generated_Source\PSoC5/SPIS.c **** *
 641:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 642:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferWrite - used for the account of the bytes which
 643:.\Generated_Source\PSoC5/SPIS.c **** *  have been written down in the RX software buffer.
 644:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferRead - used for the account of the bytes which
 645:.\Generated_Source\PSoC5/SPIS.c **** *  have been read from the RX software buffer, modified every function
 646:.\Generated_Source\PSoC5/SPIS.c **** *  call if RX Software Buffer is used.
 647:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBuffer[SPIS_RX_BUFFER_SIZE] - used to store
 648:.\Generated_Source\PSoC5/SPIS.c **** *  received data.
 649:.\Generated_Source\PSoC5/SPIS.c **** *
 650:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 651:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user to read a byte of data received.
 652:.\Generated_Source\PSoC5/SPIS.c **** *
 653:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 654:.\Generated_Source\PSoC5/SPIS.c **** *  Will return invalid data if the FIFO is empty.  User should poll for FIFO
 655:.\Generated_Source\PSoC5/SPIS.c **** *  empty status before calling Read function.
 656:.\Generated_Source\PSoC5/SPIS.c **** *
 657:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 658:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 659:.\Generated_Source\PSoC5/SPIS.c **** *
 660:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 661:.\Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadRxData(void) 
 662:.\Generated_Source\PSoC5/SPIS.c **** {
 677              		.loc 1 662 0
 678              		.cfi_startproc
 679              		@ args = 0, pretend = 0, frame = 8
 680              		@ frame_needed = 1, uses_anonymous_args = 0
 681              		@ link register save eliminated.
 682 0000 80B4     		push	{r7}
 683              		.cfi_def_cfa_offset 4
 684              		.cfi_offset 7, -4
 685 0002 83B0     		sub	sp, sp, #12
 686              		.cfi_def_cfa_offset 16
 687 0004 00AF     		add	r7, sp, #0
 688              		.cfi_def_cfa_register 7
 663:.\Generated_Source\PSoC5/SPIS.c ****     uint8 rxData;
 664:.\Generated_Source\PSoC5/SPIS.c **** 
 665:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 666:.\Generated_Source\PSoC5/SPIS.c **** 
 667:.\Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 668:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 669:.\Generated_Source\PSoC5/SPIS.c **** 
 670:.\Generated_Source\PSoC5/SPIS.c ****         if(SPIS_rxBufferRead != SPIS_rxBufferWrite)
 671:.\Generated_Source\PSoC5/SPIS.c ****         {
 672:.\Generated_Source\PSoC5/SPIS.c ****             if(SPIS_rxBufferFull == 0u)
 673:.\Generated_Source\PSoC5/SPIS.c ****             {
 674:.\Generated_Source\PSoC5/SPIS.c ****                 SPIS_rxBufferRead++;
 675:.\Generated_Source\PSoC5/SPIS.c ****                 if(SPIS_rxBufferRead >= SPIS_RX_BUFFER_SIZE)
 676:.\Generated_Source\PSoC5/SPIS.c ****                 {
 677:.\Generated_Source\PSoC5/SPIS.c ****                     SPIS_rxBufferRead = 0u;
 678:.\Generated_Source\PSoC5/SPIS.c ****                 }
 679:.\Generated_Source\PSoC5/SPIS.c ****             }
 680:.\Generated_Source\PSoC5/SPIS.c ****             else
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 25


 681:.\Generated_Source\PSoC5/SPIS.c ****             {
 682:.\Generated_Source\PSoC5/SPIS.c ****                 SPIS_rxBufferFull = 0u;
 683:.\Generated_Source\PSoC5/SPIS.c ****             }
 684:.\Generated_Source\PSoC5/SPIS.c ****         }
 685:.\Generated_Source\PSoC5/SPIS.c **** 
 686:.\Generated_Source\PSoC5/SPIS.c ****         rxData = SPIS_rxBuffer[SPIS_rxBufferRead];
 687:.\Generated_Source\PSoC5/SPIS.c **** 
 688:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 689:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 690:.\Generated_Source\PSoC5/SPIS.c **** 
 691:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_RX_SOFTWARE_BUF_ENABLED */
 692:.\Generated_Source\PSoC5/SPIS.c **** 
 693:.\Generated_Source\PSoC5/SPIS.c ****         rxData = CY_GET_REG8(SPIS_RXDATA_PTR);
 689              		.loc 1 693 0
 690 0006 054B     		ldr	r3, .L45
 691 0008 1B78     		ldrb	r3, [r3]
 692 000a FB71     		strb	r3, [r7, #7]
 694:.\Generated_Source\PSoC5/SPIS.c **** 
 695:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 696:.\Generated_Source\PSoC5/SPIS.c **** 
 697:.\Generated_Source\PSoC5/SPIS.c ****     return (rxData);
 693              		.loc 1 697 0
 694 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 698:.\Generated_Source\PSoC5/SPIS.c **** 
 699:.\Generated_Source\PSoC5/SPIS.c **** }
 695              		.loc 1 699 0
 696 000e 1846     		mov	r0, r3
 697 0010 0C37     		adds	r7, r7, #12
 698              		.cfi_def_cfa_offset 4
 699 0012 BD46     		mov	sp, r7
 700              		.cfi_def_cfa_register 13
 701              		@ sp needed
 702 0014 5DF8047B 		ldr	r7, [sp], #4
 703              		.cfi_restore 7
 704              		.cfi_def_cfa_offset 0
 705 0018 7047     		bx	lr
 706              	.L46:
 707 001a 00BF     		.align	2
 708              	.L45:
 709 001c 55650040 		.word	1073767765
 710              		.cfi_endproc
 711              	.LFE14:
 712              		.size	SPIS_ReadRxData, .-SPIS_ReadRxData
 713              		.section	.text.SPIS_GetRxBufferSize,"ax",%progbits
 714              		.align	2
 715              		.global	SPIS_GetRxBufferSize
 716              		.thumb
 717              		.thumb_func
 718              		.type	SPIS_GetRxBufferSize, %function
 719              	SPIS_GetRxBufferSize:
 720              	.LFB15:
 700:.\Generated_Source\PSoC5/SPIS.c **** 
 701:.\Generated_Source\PSoC5/SPIS.c **** 
 702:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 703:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_GetRxBufferSize
 704:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 705:.\Generated_Source\PSoC5/SPIS.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 26


 706:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 707:.\Generated_Source\PSoC5/SPIS.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 708:.\Generated_Source\PSoC5/SPIS.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 709:.\Generated_Source\PSoC5/SPIS.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 710:.\Generated_Source\PSoC5/SPIS.c **** *
 711:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 712:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 713:.\Generated_Source\PSoC5/SPIS.c **** *
 714:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 715:.\Generated_Source\PSoC5/SPIS.c **** *  Integer count of the number of bytes/words in the RX buffer.
 716:.\Generated_Source\PSoC5/SPIS.c **** *
 717:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 718:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferWrite - used for the account of the bytes which
 719:.\Generated_Source\PSoC5/SPIS.c **** *  have been written down in the RX software buffer.
 720:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferRead - used for the account of the bytes which
 721:.\Generated_Source\PSoC5/SPIS.c **** *  have been read from the RX software buffer.
 722:.\Generated_Source\PSoC5/SPIS.c **** *
 723:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 724:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user to find out how full the RX Buffer is.
 725:.\Generated_Source\PSoC5/SPIS.c **** *
 726:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 727:.\Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_GetRxBufferSize(void) 
 728:.\Generated_Source\PSoC5/SPIS.c **** {
 721              		.loc 1 728 0
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 8
 724              		@ frame_needed = 1, uses_anonymous_args = 0
 725              		@ link register save eliminated.
 726 0000 80B4     		push	{r7}
 727              		.cfi_def_cfa_offset 4
 728              		.cfi_offset 7, -4
 729 0002 83B0     		sub	sp, sp, #12
 730              		.cfi_def_cfa_offset 16
 731 0004 00AF     		add	r7, sp, #0
 732              		.cfi_def_cfa_register 7
 729:.\Generated_Source\PSoC5/SPIS.c ****     uint8 size;
 730:.\Generated_Source\PSoC5/SPIS.c **** 
 731:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 732:.\Generated_Source\PSoC5/SPIS.c **** 
 733:.\Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 734:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 735:.\Generated_Source\PSoC5/SPIS.c **** 
 736:.\Generated_Source\PSoC5/SPIS.c ****         if(SPIS_rxBufferRead == SPIS_rxBufferWrite)
 737:.\Generated_Source\PSoC5/SPIS.c ****         {
 738:.\Generated_Source\PSoC5/SPIS.c ****             size = 0u; /* No data in RX buffer */
 739:.\Generated_Source\PSoC5/SPIS.c ****         }
 740:.\Generated_Source\PSoC5/SPIS.c ****         else if(SPIS_rxBufferRead < SPIS_rxBufferWrite)
 741:.\Generated_Source\PSoC5/SPIS.c ****         {
 742:.\Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_rxBufferWrite - SPIS_rxBufferRead);
 743:.\Generated_Source\PSoC5/SPIS.c ****         }
 744:.\Generated_Source\PSoC5/SPIS.c ****         else
 745:.\Generated_Source\PSoC5/SPIS.c ****         {
 746:.\Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_RX_BUFFER_SIZE - SPIS_rxBufferRead) + SPIS_rxBufferWrite;
 747:.\Generated_Source\PSoC5/SPIS.c ****         }
 748:.\Generated_Source\PSoC5/SPIS.c **** 
 749:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable interrupt. */
 750:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 27


 751:.\Generated_Source\PSoC5/SPIS.c **** 
 752:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_RX_SOFTWARE_BUF_ENABLED*/
 753:.\Generated_Source\PSoC5/SPIS.c **** 
 754:.\Generated_Source\PSoC5/SPIS.c ****         /* We can only know if there is data in the fifo. */
 755:.\Generated_Source\PSoC5/SPIS.c ****         size = ((SPIS_RX_STATUS_REG & SPIS_STS_RX_FIFO_NOT_EMPTY) != 0u) ? 1u : 0u;
 733              		.loc 1 755 0
 734 0006 094B     		ldr	r3, .L51
 735 0008 1B78     		ldrb	r3, [r3]
 736 000a DBB2     		uxtb	r3, r3
 737 000c 03F00803 		and	r3, r3, #8
 738 0010 002B     		cmp	r3, #0
 739 0012 01D0     		beq	.L48
 740              		.loc 1 755 0 is_stmt 0 discriminator 1
 741 0014 0123     		movs	r3, #1
 742 0016 00E0     		b	.L49
 743              	.L48:
 744              		.loc 1 755 0 discriminator 2
 745 0018 0023     		movs	r3, #0
 746              	.L49:
 747              		.loc 1 755 0 discriminator 4
 748 001a FB71     		strb	r3, [r7, #7]
 756:.\Generated_Source\PSoC5/SPIS.c **** 
 757:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 758:.\Generated_Source\PSoC5/SPIS.c **** 
 759:.\Generated_Source\PSoC5/SPIS.c ****     return (size);
 749              		.loc 1 759 0 is_stmt 1 discriminator 4
 750 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 760:.\Generated_Source\PSoC5/SPIS.c **** }
 751              		.loc 1 760 0 discriminator 4
 752 001e 1846     		mov	r0, r3
 753 0020 0C37     		adds	r7, r7, #12
 754              		.cfi_def_cfa_offset 4
 755 0022 BD46     		mov	sp, r7
 756              		.cfi_def_cfa_register 13
 757              		@ sp needed
 758 0024 5DF8047B 		ldr	r7, [sp], #4
 759              		.cfi_restore 7
 760              		.cfi_def_cfa_offset 0
 761 0028 7047     		bx	lr
 762              	.L52:
 763 002a 00BF     		.align	2
 764              	.L51:
 765 002c 67650040 		.word	1073767783
 766              		.cfi_endproc
 767              	.LFE15:
 768              		.size	SPIS_GetRxBufferSize, .-SPIS_GetRxBufferSize
 769              		.section	.text.SPIS_GetTxBufferSize,"ax",%progbits
 770              		.align	2
 771              		.global	SPIS_GetTxBufferSize
 772              		.thumb
 773              		.thumb_func
 774              		.type	SPIS_GetTxBufferSize, %function
 775              	SPIS_GetTxBufferSize:
 776              	.LFB16:
 761:.\Generated_Source\PSoC5/SPIS.c **** 
 762:.\Generated_Source\PSoC5/SPIS.c **** 
 763:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 28


 764:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_GetTxBufferSize
 765:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 766:.\Generated_Source\PSoC5/SPIS.c **** *
 767:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 768:.\Generated_Source\PSoC5/SPIS.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 769:.\Generated_Source\PSoC5/SPIS.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 770:.\Generated_Source\PSoC5/SPIS.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 771:.\Generated_Source\PSoC5/SPIS.c **** *  Software Buffer.
 772:.\Generated_Source\PSoC5/SPIS.c **** *
 773:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 774:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 775:.\Generated_Source\PSoC5/SPIS.c **** *
 776:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 777:.\Generated_Source\PSoC5/SPIS.c **** *  Integer count of the number of bytes/words in the TX buffer.
 778:.\Generated_Source\PSoC5/SPIS.c **** *
 779:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 780:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferWrite - used for the account of the bytes which
 781:.\Generated_Source\PSoC5/SPIS.c **** *  have been written down in the TX software buffer.
 782:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferRead - used for the account of the bytes which
 783:.\Generated_Source\PSoC5/SPIS.c **** *  have been read from the TX software buffer.
 784:.\Generated_Source\PSoC5/SPIS.c **** *
 785:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 786:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user to find out how full the TX Buffer is.
 787:.\Generated_Source\PSoC5/SPIS.c **** *
 788:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 789:.\Generated_Source\PSoC5/SPIS.c **** *  Clear status register of the component.
 790:.\Generated_Source\PSoC5/SPIS.c **** *
 791:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 792:.\Generated_Source\PSoC5/SPIS.c **** uint8  SPIS_GetTxBufferSize(void) 
 793:.\Generated_Source\PSoC5/SPIS.c **** {
 777              		.loc 1 793 0
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 8
 780              		@ frame_needed = 1, uses_anonymous_args = 0
 781              		@ link register save eliminated.
 782 0000 80B4     		push	{r7}
 783              		.cfi_def_cfa_offset 4
 784              		.cfi_offset 7, -4
 785 0002 83B0     		sub	sp, sp, #12
 786              		.cfi_def_cfa_offset 16
 787 0004 00AF     		add	r7, sp, #0
 788              		.cfi_def_cfa_register 7
 794:.\Generated_Source\PSoC5/SPIS.c ****     uint8 size;
 795:.\Generated_Source\PSoC5/SPIS.c **** 
 796:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 797:.\Generated_Source\PSoC5/SPIS.c **** 
 798:.\Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 799:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 800:.\Generated_Source\PSoC5/SPIS.c **** 
 801:.\Generated_Source\PSoC5/SPIS.c ****         if(SPIS_txBufferRead == SPIS_txBufferWrite)
 802:.\Generated_Source\PSoC5/SPIS.c ****         {
 803:.\Generated_Source\PSoC5/SPIS.c ****             size = 0u;
 804:.\Generated_Source\PSoC5/SPIS.c ****         }
 805:.\Generated_Source\PSoC5/SPIS.c ****         else if(SPIS_txBufferRead < SPIS_txBufferWrite)
 806:.\Generated_Source\PSoC5/SPIS.c ****         {
 807:.\Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_txBufferWrite - SPIS_txBufferRead);
 808:.\Generated_Source\PSoC5/SPIS.c ****         }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 29


 809:.\Generated_Source\PSoC5/SPIS.c ****         else
 810:.\Generated_Source\PSoC5/SPIS.c ****         {
 811:.\Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_TX_BUFFER_SIZE - SPIS_txBufferRead) + SPIS_txBufferWrite;
 812:.\Generated_Source\PSoC5/SPIS.c ****         }
 813:.\Generated_Source\PSoC5/SPIS.c **** 
 814:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 815:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 816:.\Generated_Source\PSoC5/SPIS.c **** 
 817:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_TX_SOFTWARE_BUF_ENABLED */
 818:.\Generated_Source\PSoC5/SPIS.c **** 
 819:.\Generated_Source\PSoC5/SPIS.c ****         size = SPIS_TX_STATUS_REG;
 789              		.loc 1 819 0
 790 0006 0E4B     		ldr	r3, .L58
 791 0008 1B78     		ldrb	r3, [r3]
 792 000a FB71     		strb	r3, [r7, #7]
 820:.\Generated_Source\PSoC5/SPIS.c **** 
 821:.\Generated_Source\PSoC5/SPIS.c ****         /* Is the fifo is full. */
 822:.\Generated_Source\PSoC5/SPIS.c ****         if((size & SPIS_STS_TX_FIFO_EMPTY) != 0u)
 793              		.loc 1 822 0
 794 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 795 000e 03F00403 		and	r3, r3, #4
 796 0012 002B     		cmp	r3, #0
 797 0014 02D0     		beq	.L54
 823:.\Generated_Source\PSoC5/SPIS.c ****         {
 824:.\Generated_Source\PSoC5/SPIS.c ****             size = 0u;
 798              		.loc 1 824 0
 799 0016 0023     		movs	r3, #0
 800 0018 FB71     		strb	r3, [r7, #7]
 801 001a 09E0     		b	.L55
 802              	.L54:
 825:.\Generated_Source\PSoC5/SPIS.c ****         }
 826:.\Generated_Source\PSoC5/SPIS.c ****         else if((size & SPIS_STS_TX_FIFO_NOT_FULL) != 0u)
 803              		.loc 1 826 0
 804 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 805 001e 03F00203 		and	r3, r3, #2
 806 0022 002B     		cmp	r3, #0
 807 0024 02D0     		beq	.L56
 827:.\Generated_Source\PSoC5/SPIS.c ****         {
 828:.\Generated_Source\PSoC5/SPIS.c ****             size = 1u;
 808              		.loc 1 828 0
 809 0026 0123     		movs	r3, #1
 810 0028 FB71     		strb	r3, [r7, #7]
 811 002a 01E0     		b	.L55
 812              	.L56:
 829:.\Generated_Source\PSoC5/SPIS.c ****         }
 830:.\Generated_Source\PSoC5/SPIS.c ****         else
 831:.\Generated_Source\PSoC5/SPIS.c ****         {
 832:.\Generated_Source\PSoC5/SPIS.c ****             size = 4u;
 813              		.loc 1 832 0
 814 002c 0423     		movs	r3, #4
 815 002e FB71     		strb	r3, [r7, #7]
 816              	.L55:
 833:.\Generated_Source\PSoC5/SPIS.c ****         }
 834:.\Generated_Source\PSoC5/SPIS.c **** 
 835:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 836:.\Generated_Source\PSoC5/SPIS.c **** 
 837:.\Generated_Source\PSoC5/SPIS.c ****     return (size);
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 30


 817              		.loc 1 837 0
 818 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 838:.\Generated_Source\PSoC5/SPIS.c **** }
 819              		.loc 1 838 0
 820 0032 1846     		mov	r0, r3
 821 0034 0C37     		adds	r7, r7, #12
 822              		.cfi_def_cfa_offset 4
 823 0036 BD46     		mov	sp, r7
 824              		.cfi_def_cfa_register 13
 825              		@ sp needed
 826 0038 5DF8047B 		ldr	r7, [sp], #4
 827              		.cfi_restore 7
 828              		.cfi_def_cfa_offset 0
 829 003c 7047     		bx	lr
 830              	.L59:
 831 003e 00BF     		.align	2
 832              	.L58:
 833 0040 62640040 		.word	1073767522
 834              		.cfi_endproc
 835              	.LFE16:
 836              		.size	SPIS_GetTxBufferSize, .-SPIS_GetTxBufferSize
 837              		.section	.text.SPIS_ClearRxBuffer,"ax",%progbits
 838              		.align	2
 839              		.global	SPIS_ClearRxBuffer
 840              		.thumb
 841              		.thumb_func
 842              		.type	SPIS_ClearRxBuffer, %function
 843              	SPIS_ClearRxBuffer:
 844              	.LFB17:
 839:.\Generated_Source\PSoC5/SPIS.c **** 
 840:.\Generated_Source\PSoC5/SPIS.c **** 
 841:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 842:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ClearRxBuffer
 843:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 844:.\Generated_Source\PSoC5/SPIS.c **** *
 845:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 846:.\Generated_Source\PSoC5/SPIS.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 847:.\Generated_Source\PSoC5/SPIS.c **** *
 848:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 849:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 850:.\Generated_Source\PSoC5/SPIS.c **** *
 851:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 852:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 853:.\Generated_Source\PSoC5/SPIS.c **** *
 854:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 855:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferWrite - used for the account of the bytes which
 856:.\Generated_Source\PSoC5/SPIS.c **** *  have been written down in the RX software buffer, modified every function
 857:.\Generated_Source\PSoC5/SPIS.c **** *  call - resets to zero.
 858:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferRead - used for the account of the bytes which
 859:.\Generated_Source\PSoC5/SPIS.c **** *  have been read from the RX software buffer, modified every function call -
 860:.\Generated_Source\PSoC5/SPIS.c **** *  resets to zero.
 861:.\Generated_Source\PSoC5/SPIS.c **** *
 862:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 863:.\Generated_Source\PSoC5/SPIS.c **** *  Setting the pointers to zero makes the system believe there is no data to
 864:.\Generated_Source\PSoC5/SPIS.c **** *  read and writing will resume at address 0 overwriting any data that may have
 865:.\Generated_Source\PSoC5/SPIS.c **** *  remained in the RAM.
 866:.\Generated_Source\PSoC5/SPIS.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 31


 867:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 868:.\Generated_Source\PSoC5/SPIS.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 869:.\Generated_Source\PSoC5/SPIS.c **** *
 870:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 871:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 872:.\Generated_Source\PSoC5/SPIS.c **** *
 873:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 874:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_ClearRxBuffer(void) 
 875:.\Generated_Source\PSoC5/SPIS.c **** {
 845              		.loc 1 875 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 1, uses_anonymous_args = 0
 849              		@ link register save eliminated.
 850 0000 80B4     		push	{r7}
 851              		.cfi_def_cfa_offset 4
 852              		.cfi_offset 7, -4
 853 0002 00AF     		add	r7, sp, #0
 854              		.cfi_def_cfa_register 7
 876:.\Generated_Source\PSoC5/SPIS.c ****     /* Clear Hardware RX FIFO */
 877:.\Generated_Source\PSoC5/SPIS.c ****     while((SPIS_RX_STATUS_REG & SPIS_STS_RX_FIFO_NOT_EMPTY) != 0u)
 855              		.loc 1 877 0
 856 0004 01E0     		b	.L61
 857              	.L62:
 878:.\Generated_Source\PSoC5/SPIS.c ****     {
 879:.\Generated_Source\PSoC5/SPIS.c ****         CY_GET_REG8(SPIS_RXDATA_PTR);
 858              		.loc 1 879 0
 859 0006 064B     		ldr	r3, .L63
 860 0008 1B78     		ldrb	r3, [r3]
 861              	.L61:
 877:.\Generated_Source\PSoC5/SPIS.c ****     {
 862              		.loc 1 877 0
 863 000a 064B     		ldr	r3, .L63+4
 864 000c 1B78     		ldrb	r3, [r3]
 865 000e DBB2     		uxtb	r3, r3
 866 0010 03F00803 		and	r3, r3, #8
 867 0014 002B     		cmp	r3, #0
 868 0016 F6D1     		bne	.L62
 880:.\Generated_Source\PSoC5/SPIS.c ****     }
 881:.\Generated_Source\PSoC5/SPIS.c **** 
 882:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 883:.\Generated_Source\PSoC5/SPIS.c **** 
 884:.\Generated_Source\PSoC5/SPIS.c ****         /* Disable interrupt to protect variables that could change on interrupt. */
 885:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 886:.\Generated_Source\PSoC5/SPIS.c **** 
 887:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferRead  = 0u;
 888:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferWrite = 0u;
 889:.\Generated_Source\PSoC5/SPIS.c **** 		SPIS_rxBufferFull  = 0u;
 890:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable interrupt. */
 891:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 892:.\Generated_Source\PSoC5/SPIS.c **** 
 893:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 894:.\Generated_Source\PSoC5/SPIS.c **** }
 869              		.loc 1 894 0
 870 0018 BD46     		mov	sp, r7
 871              		.cfi_def_cfa_register 13
 872              		@ sp needed
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 32


 873 001a 5DF8047B 		ldr	r7, [sp], #4
 874              		.cfi_restore 7
 875              		.cfi_def_cfa_offset 0
 876 001e 7047     		bx	lr
 877              	.L64:
 878              		.align	2
 879              	.L63:
 880 0020 55650040 		.word	1073767765
 881 0024 67650040 		.word	1073767783
 882              		.cfi_endproc
 883              	.LFE17:
 884              		.size	SPIS_ClearRxBuffer, .-SPIS_ClearRxBuffer
 885              		.section	.text.SPIS_ClearTxBuffer,"ax",%progbits
 886              		.align	2
 887              		.global	SPIS_ClearTxBuffer
 888              		.thumb
 889              		.thumb_func
 890              		.type	SPIS_ClearTxBuffer, %function
 891              	SPIS_ClearTxBuffer:
 892              	.LFB18:
 895:.\Generated_Source\PSoC5/SPIS.c **** 
 896:.\Generated_Source\PSoC5/SPIS.c **** 
 897:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 898:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ClearTxBuffer
 899:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 900:.\Generated_Source\PSoC5/SPIS.c **** *
 901:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
 902:.\Generated_Source\PSoC5/SPIS.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 903:.\Generated_Source\PSoC5/SPIS.c **** *
 904:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
 905:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 906:.\Generated_Source\PSoC5/SPIS.c **** *
 907:.\Generated_Source\PSoC5/SPIS.c **** * Return:
 908:.\Generated_Source\PSoC5/SPIS.c **** *  None.
 909:.\Generated_Source\PSoC5/SPIS.c **** *
 910:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
 911:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferWrite - used for the account of the bytes which
 912:.\Generated_Source\PSoC5/SPIS.c **** *  have been written down in the TX software buffer, modified every function
 913:.\Generated_Source\PSoC5/SPIS.c **** *  call - resets to zero.
 914:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferRead - used for the account of the bytes which
 915:.\Generated_Source\PSoC5/SPIS.c **** *  have been read from the TX software buffer, modified every function call -
 916:.\Generated_Source\PSoC5/SPIS.c **** *  resets to zero.
 917:.\Generated_Source\PSoC5/SPIS.c **** *
 918:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
 919:.\Generated_Source\PSoC5/SPIS.c **** *  Setting the pointers to zero makes the system believe there is no data to
 920:.\Generated_Source\PSoC5/SPIS.c **** *  read and writing will resume at address 0 overwriting any data that may have
 921:.\Generated_Source\PSoC5/SPIS.c **** *  remained in the RAM.
 922:.\Generated_Source\PSoC5/SPIS.c **** *
 923:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 924:.\Generated_Source\PSoC5/SPIS.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 925:.\Generated_Source\PSoC5/SPIS.c **** *  overwritten.
 926:.\Generated_Source\PSoC5/SPIS.c **** *
 927:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 928:.\Generated_Source\PSoC5/SPIS.c **** *  No.
 929:.\Generated_Source\PSoC5/SPIS.c **** *
 930:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 931:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_ClearTxBuffer(void) 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 33


 932:.\Generated_Source\PSoC5/SPIS.c **** {
 893              		.loc 1 932 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 8
 896              		@ frame_needed = 1, uses_anonymous_args = 0
 897 0000 80B5     		push	{r7, lr}
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 7, -8
 900              		.cfi_offset 14, -4
 901 0002 82B0     		sub	sp, sp, #8
 902              		.cfi_def_cfa_offset 16
 903 0004 00AF     		add	r7, sp, #0
 904              		.cfi_def_cfa_register 7
 933:.\Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
 934:.\Generated_Source\PSoC5/SPIS.c **** 
 935:.\Generated_Source\PSoC5/SPIS.c ****     /* Clear Hardware TX FIFO */
 936:.\Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 905              		.loc 1 936 0
 906 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 907 000a 0346     		mov	r3, r0
 908 000c FB71     		strb	r3, [r7, #7]
 937:.\Generated_Source\PSoC5/SPIS.c **** 
 938:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_DATA_WIDTH <= 8u)
 939:.\Generated_Source\PSoC5/SPIS.c **** 
 940:.\Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
 941:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
 909              		.loc 1 941 0
 910 000e 0B4A     		ldr	r2, .L66
 911 0010 0A4B     		ldr	r3, .L66
 912 0012 1B78     		ldrb	r3, [r3]
 913 0014 DBB2     		uxtb	r3, r3
 914 0016 43F00303 		orr	r3, r3, #3
 915 001a DBB2     		uxtb	r3, r3
 916 001c 1370     		strb	r3, [r2]
 942:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
 917              		.loc 1 942 0
 918 001e 074A     		ldr	r2, .L66
 919 0020 064B     		ldr	r3, .L66
 920 0022 1B78     		ldrb	r3, [r3]
 921 0024 DBB2     		uxtb	r3, r3
 922 0026 23F00303 		bic	r3, r3, #3
 923 002a DBB2     		uxtb	r3, r3
 924 002c 1370     		strb	r3, [r2]
 943:.\Generated_Source\PSoC5/SPIS.c **** 
 944:.\Generated_Source\PSoC5/SPIS.c ****     #else
 945:.\Generated_Source\PSoC5/SPIS.c **** 
 946:.\Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
 947:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
 948:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
 949:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG |= (uint8)SPIS_FIFO_CLR;
 950:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG &= (uint8)~SPIS_FIFO_CLR;
 951:.\Generated_Source\PSoC5/SPIS.c **** 
 952:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_DATA_WIDTH > 8u */
 953:.\Generated_Source\PSoC5/SPIS.c **** 
 954:.\Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 925              		.loc 1 954 0
 926 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 34


 927 0030 1846     		mov	r0, r3
 928 0032 FFF7FEFF 		bl	CyExitCriticalSection
 955:.\Generated_Source\PSoC5/SPIS.c **** 
 956:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 957:.\Generated_Source\PSoC5/SPIS.c **** 
 958:.\Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 959:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 960:.\Generated_Source\PSoC5/SPIS.c **** 
 961:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferRead  = 0u;
 962:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferWrite = 0u;
 963:.\Generated_Source\PSoC5/SPIS.c **** 		SPIS_txBufferFull  = 0u;
 964:.\Generated_Source\PSoC5/SPIS.c **** 		
 965:.\Generated_Source\PSoC5/SPIS.c ****         /* If Buffer is empty then disable TX FIFO status interrupt */
 966:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_STATUS_MASK_REG &= (uint8)~SPIS_STS_TX_FIFO_NOT_FULL;
 967:.\Generated_Source\PSoC5/SPIS.c **** 
 968:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 969:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 970:.\Generated_Source\PSoC5/SPIS.c **** 
 971:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 972:.\Generated_Source\PSoC5/SPIS.c **** }
 929              		.loc 1 972 0
 930 0036 0837     		adds	r7, r7, #8
 931              		.cfi_def_cfa_offset 8
 932 0038 BD46     		mov	sp, r7
 933              		.cfi_def_cfa_register 13
 934              		@ sp needed
 935 003a 80BD     		pop	{r7, pc}
 936              	.L67:
 937              		.align	2
 938              	.L66:
 939 003c 95650040 		.word	1073767829
 940              		.cfi_endproc
 941              	.LFE18:
 942              		.size	SPIS_ClearTxBuffer, .-SPIS_ClearTxBuffer
 943              		.section	.text.SPIS_PutArray,"ax",%progbits
 944              		.align	2
 945              		.global	SPIS_PutArray
 946              		.thumb
 947              		.thumb_func
 948              		.type	SPIS_PutArray, %function
 949              	SPIS_PutArray:
 950              	.LFB19:
 973:.\Generated_Source\PSoC5/SPIS.c **** 
 974:.\Generated_Source\PSoC5/SPIS.c **** 
 975:.\Generated_Source\PSoC5/SPIS.c **** #if (SPIS_BIDIRECTIONAL_MODE != 0u)
 976:.\Generated_Source\PSoC5/SPIS.c **** 
 977:.\Generated_Source\PSoC5/SPIS.c ****     /*******************************************************************************
 978:.\Generated_Source\PSoC5/SPIS.c ****     * Function Name: SPIS_TxEnable
 979:.\Generated_Source\PSoC5/SPIS.c ****     ********************************************************************************
 980:.\Generated_Source\PSoC5/SPIS.c ****     *
 981:.\Generated_Source\PSoC5/SPIS.c ****     * Summary:
 982:.\Generated_Source\PSoC5/SPIS.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
 983:.\Generated_Source\PSoC5/SPIS.c ****     *  will set the bi-directional pin to transmit.
 984:.\Generated_Source\PSoC5/SPIS.c ****     *
 985:.\Generated_Source\PSoC5/SPIS.c ****     * Parameters:
 986:.\Generated_Source\PSoC5/SPIS.c ****     *  None.
 987:.\Generated_Source\PSoC5/SPIS.c ****     *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 35


 988:.\Generated_Source\PSoC5/SPIS.c ****     * Return:
 989:.\Generated_Source\PSoC5/SPIS.c ****     *  None.
 990:.\Generated_Source\PSoC5/SPIS.c ****     *
 991:.\Generated_Source\PSoC5/SPIS.c ****     *******************************************************************************/
 992:.\Generated_Source\PSoC5/SPIS.c ****     void SPIS_TxEnable(void) 
 993:.\Generated_Source\PSoC5/SPIS.c ****     {
 994:.\Generated_Source\PSoC5/SPIS.c ****             SPIS_CONTROL_REG |= SPIS_CTRL_TX_SIGNAL_EN;
 995:.\Generated_Source\PSoC5/SPIS.c ****     }
 996:.\Generated_Source\PSoC5/SPIS.c **** 
 997:.\Generated_Source\PSoC5/SPIS.c **** 
 998:.\Generated_Source\PSoC5/SPIS.c ****     /*******************************************************************************
 999:.\Generated_Source\PSoC5/SPIS.c ****     * Function Name: SPIS_TxDisable
1000:.\Generated_Source\PSoC5/SPIS.c ****     ********************************************************************************
1001:.\Generated_Source\PSoC5/SPIS.c ****     *
1002:.\Generated_Source\PSoC5/SPIS.c ****     * Summary:
1003:.\Generated_Source\PSoC5/SPIS.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
1004:.\Generated_Source\PSoC5/SPIS.c ****     *  will set the bi-directional pin to receive.
1005:.\Generated_Source\PSoC5/SPIS.c ****     *
1006:.\Generated_Source\PSoC5/SPIS.c ****     * Parameters:
1007:.\Generated_Source\PSoC5/SPIS.c ****     *  None.
1008:.\Generated_Source\PSoC5/SPIS.c ****     *
1009:.\Generated_Source\PSoC5/SPIS.c ****     * Return:
1010:.\Generated_Source\PSoC5/SPIS.c ****     *  None.
1011:.\Generated_Source\PSoC5/SPIS.c ****     *
1012:.\Generated_Source\PSoC5/SPIS.c ****     *******************************************************************************/
1013:.\Generated_Source\PSoC5/SPIS.c ****     void SPIS_TxDisable(void) 
1014:.\Generated_Source\PSoC5/SPIS.c ****     {
1015:.\Generated_Source\PSoC5/SPIS.c ****             SPIS_CONTROL_REG &= (uint8)~SPIS_CTRL_TX_SIGNAL_EN;
1016:.\Generated_Source\PSoC5/SPIS.c ****     }
1017:.\Generated_Source\PSoC5/SPIS.c **** 
1018:.\Generated_Source\PSoC5/SPIS.c **** #endif /* SPIS_BIDIRECTIONAL_MODE != 0u */
1019:.\Generated_Source\PSoC5/SPIS.c **** 
1020:.\Generated_Source\PSoC5/SPIS.c **** 
1021:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1022:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_PutArray
1023:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1024:.\Generated_Source\PSoC5/SPIS.c **** *
1025:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
1026:.\Generated_Source\PSoC5/SPIS.c **** *  Write available data from RAM/ROM to the TX buffer while space is available
1027:.\Generated_Source\PSoC5/SPIS.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer. If
1028:.\Generated_Source\PSoC5/SPIS.c **** *  used Mode 00 or 01 before PutArray() function should be called
1029:.\Generated_Source\PSoC5/SPIS.c **** *  WriteTxDataZero() function.
1030:.\Generated_Source\PSoC5/SPIS.c **** *
1031:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
1032:.\Generated_Source\PSoC5/SPIS.c **** *  *buffer: Pointer to the location in RAM containing the data to send
1033:.\Generated_Source\PSoC5/SPIS.c **** *  byteCount: The number of bytes to move to the transmit buffer.
1034:.\Generated_Source\PSoC5/SPIS.c **** *
1035:.\Generated_Source\PSoC5/SPIS.c **** * Return:
1036:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1037:.\Generated_Source\PSoC5/SPIS.c **** *
1038:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
1039:.\Generated_Source\PSoC5/SPIS.c **** *  Will stay in this routine until all data has been sent.  May get locked in
1040:.\Generated_Source\PSoC5/SPIS.c **** *  this loop if data is not being initiated by the master if there is not
1041:.\Generated_Source\PSoC5/SPIS.c **** *  enough room in the TX FIFO.
1042:.\Generated_Source\PSoC5/SPIS.c **** *
1043:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
1044:.\Generated_Source\PSoC5/SPIS.c **** *  No.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 36


1045:.\Generated_Source\PSoC5/SPIS.c **** *
1046:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1047:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_PutArray(const uint8 buffer[], uint8 byteCount)
1048:.\Generated_Source\PSoC5/SPIS.c ****                                                                     
1049:.\Generated_Source\PSoC5/SPIS.c **** {
 951              		.loc 1 1049 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 16
 954              		@ frame_needed = 1, uses_anonymous_args = 0
 955 0000 80B5     		push	{r7, lr}
 956              		.cfi_def_cfa_offset 8
 957              		.cfi_offset 7, -8
 958              		.cfi_offset 14, -4
 959 0002 84B0     		sub	sp, sp, #16
 960              		.cfi_def_cfa_offset 24
 961 0004 00AF     		add	r7, sp, #0
 962              		.cfi_def_cfa_register 7
 963 0006 7860     		str	r0, [r7, #4]
 964 0008 0B46     		mov	r3, r1
 965 000a FB70     		strb	r3, [r7, #3]
1050:.\Generated_Source\PSoC5/SPIS.c ****     uint8 bufIndex;
1051:.\Generated_Source\PSoC5/SPIS.c ****     bufIndex = 0u;
 966              		.loc 1 1051 0
 967 000c 0023     		movs	r3, #0
 968 000e FB73     		strb	r3, [r7, #15]
1052:.\Generated_Source\PSoC5/SPIS.c **** 
1053:.\Generated_Source\PSoC5/SPIS.c ****     while(byteCount > 0u)
 969              		.loc 1 1053 0
 970 0010 0CE0     		b	.L69
 971              	.L70:
1054:.\Generated_Source\PSoC5/SPIS.c ****     {
1055:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_WriteTxData(buffer[bufIndex]);
 972              		.loc 1 1055 0
 973 0012 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 974 0014 7A68     		ldr	r2, [r7, #4]
 975 0016 1344     		add	r3, r3, r2
 976 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 977 001a 1846     		mov	r0, r3
 978 001c FFF7FEFF 		bl	SPIS_WriteTxData
1056:.\Generated_Source\PSoC5/SPIS.c ****         bufIndex++;
 979              		.loc 1 1056 0
 980 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 981 0022 0133     		adds	r3, r3, #1
 982 0024 FB73     		strb	r3, [r7, #15]
1057:.\Generated_Source\PSoC5/SPIS.c ****         byteCount--;
 983              		.loc 1 1057 0
 984 0026 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 985 0028 013B     		subs	r3, r3, #1
 986 002a FB70     		strb	r3, [r7, #3]
 987              	.L69:
1053:.\Generated_Source\PSoC5/SPIS.c ****     {
 988              		.loc 1 1053 0
 989 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 990 002e 002B     		cmp	r3, #0
 991 0030 EFD1     		bne	.L70
1058:.\Generated_Source\PSoC5/SPIS.c ****     }
1059:.\Generated_Source\PSoC5/SPIS.c **** }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 37


 992              		.loc 1 1059 0
 993 0032 1037     		adds	r7, r7, #16
 994              		.cfi_def_cfa_offset 8
 995 0034 BD46     		mov	sp, r7
 996              		.cfi_def_cfa_register 13
 997              		@ sp needed
 998 0036 80BD     		pop	{r7, pc}
 999              		.cfi_endproc
 1000              	.LFE19:
 1001              		.size	SPIS_PutArray, .-SPIS_PutArray
 1002              		.section	.text.SPIS_ClearFIFO,"ax",%progbits
 1003              		.align	2
 1004              		.global	SPIS_ClearFIFO
 1005              		.thumb
 1006              		.thumb_func
 1007              		.type	SPIS_ClearFIFO, %function
 1008              	SPIS_ClearFIFO:
 1009              	.LFB20:
1060:.\Generated_Source\PSoC5/SPIS.c **** 
1061:.\Generated_Source\PSoC5/SPIS.c **** 
1062:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1063:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ClearFIFO
1064:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1065:.\Generated_Source\PSoC5/SPIS.c **** *
1066:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
1067:.\Generated_Source\PSoC5/SPIS.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
1068:.\Generated_Source\PSoC5/SPIS.c **** *
1069:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
1070:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1071:.\Generated_Source\PSoC5/SPIS.c **** *
1072:.\Generated_Source\PSoC5/SPIS.c **** * Return:
1073:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1074:.\Generated_Source\PSoC5/SPIS.c **** *
1075:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
1076:.\Generated_Source\PSoC5/SPIS.c **** *  Clear status register of the component.
1077:.\Generated_Source\PSoC5/SPIS.c **** *
1078:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1079:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_ClearFIFO(void) 
1080:.\Generated_Source\PSoC5/SPIS.c **** {
 1010              		.loc 1 1080 0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 8
 1013              		@ frame_needed = 1, uses_anonymous_args = 0
 1014 0000 80B5     		push	{r7, lr}
 1015              		.cfi_def_cfa_offset 8
 1016              		.cfi_offset 7, -8
 1017              		.cfi_offset 14, -4
 1018 0002 82B0     		sub	sp, sp, #8
 1019              		.cfi_def_cfa_offset 16
 1020 0004 00AF     		add	r7, sp, #0
 1021              		.cfi_def_cfa_register 7
1081:.\Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
1082:.\Generated_Source\PSoC5/SPIS.c **** 
1083:.\Generated_Source\PSoC5/SPIS.c ****     while((SPIS_RX_STATUS_REG & SPIS_STS_RX_FIFO_NOT_EMPTY) != 0u)
 1022              		.loc 1 1083 0
 1023 0006 01E0     		b	.L72
 1024              	.L73:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 38


1084:.\Generated_Source\PSoC5/SPIS.c ****     {
1085:.\Generated_Source\PSoC5/SPIS.c ****         CY_GET_REG8(SPIS_RXDATA_PTR);
 1025              		.loc 1 1085 0
 1026 0008 114B     		ldr	r3, .L74
 1027 000a 1B78     		ldrb	r3, [r3]
 1028              	.L72:
1083:.\Generated_Source\PSoC5/SPIS.c ****     {
 1029              		.loc 1 1083 0
 1030 000c 114B     		ldr	r3, .L74+4
 1031 000e 1B78     		ldrb	r3, [r3]
 1032 0010 DBB2     		uxtb	r3, r3
 1033 0012 03F00803 		and	r3, r3, #8
 1034 0016 002B     		cmp	r3, #0
 1035 0018 F6D1     		bne	.L73
1086:.\Generated_Source\PSoC5/SPIS.c ****     }
1087:.\Generated_Source\PSoC5/SPIS.c **** 
1088:.\Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 1036              		.loc 1 1088 0
 1037 001a FFF7FEFF 		bl	CyEnterCriticalSection
 1038 001e 0346     		mov	r3, r0
 1039 0020 FB71     		strb	r3, [r7, #7]
1089:.\Generated_Source\PSoC5/SPIS.c **** 
1090:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_DATA_WIDTH <= 8u)
1091:.\Generated_Source\PSoC5/SPIS.c **** 
1092:.\Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
1093:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
 1040              		.loc 1 1093 0
 1041 0022 0D4A     		ldr	r2, .L74+8
 1042 0024 0C4B     		ldr	r3, .L74+8
 1043 0026 1B78     		ldrb	r3, [r3]
 1044 0028 DBB2     		uxtb	r3, r3
 1045 002a 43F00303 		orr	r3, r3, #3
 1046 002e DBB2     		uxtb	r3, r3
 1047 0030 1370     		strb	r3, [r2]
1094:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
 1048              		.loc 1 1094 0
 1049 0032 094A     		ldr	r2, .L74+8
 1050 0034 084B     		ldr	r3, .L74+8
 1051 0036 1B78     		ldrb	r3, [r3]
 1052 0038 DBB2     		uxtb	r3, r3
 1053 003a 23F00303 		bic	r3, r3, #3
 1054 003e DBB2     		uxtb	r3, r3
 1055 0040 1370     		strb	r3, [r2]
1095:.\Generated_Source\PSoC5/SPIS.c **** 
1096:.\Generated_Source\PSoC5/SPIS.c ****     #else
1097:.\Generated_Source\PSoC5/SPIS.c **** 
1098:.\Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
1099:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
1100:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
1101:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG |= (uint8)SPIS_FIFO_CLR;
1102:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG &= (uint8)~SPIS_FIFO_CLR;
1103:.\Generated_Source\PSoC5/SPIS.c **** 
1104:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_DATA_WIDTH <= 8u */
1105:.\Generated_Source\PSoC5/SPIS.c **** 
1106:.\Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 1056              		.loc 1 1106 0
 1057 0042 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 39


 1058 0044 1846     		mov	r0, r3
 1059 0046 FFF7FEFF 		bl	CyExitCriticalSection
1107:.\Generated_Source\PSoC5/SPIS.c **** }
 1060              		.loc 1 1107 0
 1061 004a 0837     		adds	r7, r7, #8
 1062              		.cfi_def_cfa_offset 8
 1063 004c BD46     		mov	sp, r7
 1064              		.cfi_def_cfa_register 13
 1065              		@ sp needed
 1066 004e 80BD     		pop	{r7, pc}
 1067              	.L75:
 1068              		.align	2
 1069              	.L74:
 1070 0050 55650040 		.word	1073767765
 1071 0054 67650040 		.word	1073767783
 1072 0058 95650040 		.word	1073767829
 1073              		.cfi_endproc
 1074              	.LFE20:
 1075              		.size	SPIS_ClearFIFO, .-SPIS_ClearFIFO
 1076              		.section	.text.SPIS_EnableInt,"ax",%progbits
 1077              		.align	2
 1078              		.global	SPIS_EnableInt
 1079              		.thumb
 1080              		.thumb_func
 1081              		.type	SPIS_EnableInt, %function
 1082              	SPIS_EnableInt:
 1083              	.LFB21:
1108:.\Generated_Source\PSoC5/SPIS.c **** 
1109:.\Generated_Source\PSoC5/SPIS.c **** 
1110:.\Generated_Source\PSoC5/SPIS.c **** /* Following functions are for version Compatibility, they are obsolete.
1111:.\Generated_Source\PSoC5/SPIS.c **** *  Please do not use it in new projects.
1112:.\Generated_Source\PSoC5/SPIS.c **** */
1113:.\Generated_Source\PSoC5/SPIS.c **** 
1114:.\Generated_Source\PSoC5/SPIS.c **** 
1115:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1116:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_EnableInt
1117:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1118:.\Generated_Source\PSoC5/SPIS.c **** *
1119:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
1120:.\Generated_Source\PSoC5/SPIS.c **** *  Enable internal interrupt generation.
1121:.\Generated_Source\PSoC5/SPIS.c **** *
1122:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
1123:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1124:.\Generated_Source\PSoC5/SPIS.c **** *
1125:.\Generated_Source\PSoC5/SPIS.c **** * Return:
1126:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1127:.\Generated_Source\PSoC5/SPIS.c **** *
1128:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
1129:.\Generated_Source\PSoC5/SPIS.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1130:.\Generated_Source\PSoC5/SPIS.c **** *
1131:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1132:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_EnableInt(void) 
1133:.\Generated_Source\PSoC5/SPIS.c **** {
 1084              		.loc 1 1133 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
 1087              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 40


 1088              		@ link register save eliminated.
 1089 0000 80B4     		push	{r7}
 1090              		.cfi_def_cfa_offset 4
 1091              		.cfi_offset 7, -4
 1092 0002 00AF     		add	r7, sp, #0
 1093              		.cfi_def_cfa_register 7
1134:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
1135:.\Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_TX_ISR_NUMBER);
1136:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
1137:.\Generated_Source\PSoC5/SPIS.c **** 
1138:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
1139:.\Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_RX_ISR_NUMBER);
 1094              		.loc 1 1139 0
 1095 0004 034B     		ldr	r3, .L77
 1096 0006 0422     		movs	r2, #4
 1097 0008 1A60     		str	r2, [r3]
1140:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
1141:.\Generated_Source\PSoC5/SPIS.c **** }
 1098              		.loc 1 1141 0
 1099 000a BD46     		mov	sp, r7
 1100              		.cfi_def_cfa_register 13
 1101              		@ sp needed
 1102 000c 5DF8047B 		ldr	r7, [sp], #4
 1103              		.cfi_restore 7
 1104              		.cfi_def_cfa_offset 0
 1105 0010 7047     		bx	lr
 1106              	.L78:
 1107 0012 00BF     		.align	2
 1108              	.L77:
 1109 0014 00E100E0 		.word	-536813312
 1110              		.cfi_endproc
 1111              	.LFE21:
 1112              		.size	SPIS_EnableInt, .-SPIS_EnableInt
 1113              		.section	.text.SPIS_DisableInt,"ax",%progbits
 1114              		.align	2
 1115              		.global	SPIS_DisableInt
 1116              		.thumb
 1117              		.thumb_func
 1118              		.type	SPIS_DisableInt, %function
 1119              	SPIS_DisableInt:
 1120              	.LFB22:
1142:.\Generated_Source\PSoC5/SPIS.c **** 
1143:.\Generated_Source\PSoC5/SPIS.c **** 
1144:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1145:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_DisableInt
1146:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1147:.\Generated_Source\PSoC5/SPIS.c **** *
1148:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
1149:.\Generated_Source\PSoC5/SPIS.c **** *  Disable internal interrupt generation.
1150:.\Generated_Source\PSoC5/SPIS.c **** *
1151:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
1152:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1153:.\Generated_Source\PSoC5/SPIS.c **** *
1154:.\Generated_Source\PSoC5/SPIS.c **** * Return:
1155:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1156:.\Generated_Source\PSoC5/SPIS.c **** *
1157:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 41


1158:.\Generated_Source\PSoC5/SPIS.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1159:.\Generated_Source\PSoC5/SPIS.c **** *
1160:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1161:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_DisableInt(void) 
1162:.\Generated_Source\PSoC5/SPIS.c **** {
 1121              		.loc 1 1162 0
 1122              		.cfi_startproc
 1123              		@ args = 0, pretend = 0, frame = 0
 1124              		@ frame_needed = 1, uses_anonymous_args = 0
 1125              		@ link register save eliminated.
 1126 0000 80B4     		push	{r7}
 1127              		.cfi_def_cfa_offset 4
 1128              		.cfi_offset 7, -4
 1129 0002 00AF     		add	r7, sp, #0
 1130              		.cfi_def_cfa_register 7
1163:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
1164:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
1165:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
1166:.\Generated_Source\PSoC5/SPIS.c **** 
1167:.\Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
1168:.\Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
 1131              		.loc 1 1168 0
 1132 0004 034B     		ldr	r3, .L80
 1133 0006 0422     		movs	r2, #4
 1134 0008 1A60     		str	r2, [r3]
1169:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
1170:.\Generated_Source\PSoC5/SPIS.c **** }
 1135              		.loc 1 1170 0
 1136 000a BD46     		mov	sp, r7
 1137              		.cfi_def_cfa_register 13
 1138              		@ sp needed
 1139 000c 5DF8047B 		ldr	r7, [sp], #4
 1140              		.cfi_restore 7
 1141              		.cfi_def_cfa_offset 0
 1142 0010 7047     		bx	lr
 1143              	.L81:
 1144 0012 00BF     		.align	2
 1145              	.L80:
 1146 0014 80E100E0 		.word	-536813184
 1147              		.cfi_endproc
 1148              	.LFE22:
 1149              		.size	SPIS_DisableInt, .-SPIS_DisableInt
 1150              		.section	.text.SPIS_SetInterruptMode,"ax",%progbits
 1151              		.align	2
 1152              		.global	SPIS_SetInterruptMode
 1153              		.thumb
 1154              		.thumb_func
 1155              		.type	SPIS_SetInterruptMode, %function
 1156              	SPIS_SetInterruptMode:
 1157              	.LFB23:
1171:.\Generated_Source\PSoC5/SPIS.c **** 
1172:.\Generated_Source\PSoC5/SPIS.c **** 
1173:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1174:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_SetInterruptMode
1175:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1176:.\Generated_Source\PSoC5/SPIS.c **** *
1177:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 42


1178:.\Generated_Source\PSoC5/SPIS.c **** *  Configure which status bits trigger an interrupt event.
1179:.\Generated_Source\PSoC5/SPIS.c **** *
1180:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
1181:.\Generated_Source\PSoC5/SPIS.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1182:.\Generated_Source\PSoC5/SPIS.c **** *  header file).
1183:.\Generated_Source\PSoC5/SPIS.c **** *
1184:.\Generated_Source\PSoC5/SPIS.c **** * Return:
1185:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1186:.\Generated_Source\PSoC5/SPIS.c **** *
1187:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
1188:.\Generated_Source\PSoC5/SPIS.c **** *  Enables the output of specific status bits to the interrupt controller.
1189:.\Generated_Source\PSoC5/SPIS.c **** *
1190:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1191:.\Generated_Source\PSoC5/SPIS.c **** void SPIS_SetInterruptMode(uint8 intSrc) 
1192:.\Generated_Source\PSoC5/SPIS.c **** {
 1158              		.loc 1 1192 0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 8
 1161              		@ frame_needed = 1, uses_anonymous_args = 0
 1162              		@ link register save eliminated.
 1163 0000 80B4     		push	{r7}
 1164              		.cfi_def_cfa_offset 4
 1165              		.cfi_offset 7, -4
 1166 0002 83B0     		sub	sp, sp, #12
 1167              		.cfi_def_cfa_offset 16
 1168 0004 00AF     		add	r7, sp, #0
 1169              		.cfi_def_cfa_register 7
 1170 0006 0346     		mov	r3, r0
 1171 0008 FB71     		strb	r3, [r7, #7]
1193:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_MASK_REG  = intSrc;
 1172              		.loc 1 1193 0
 1173 000a 054A     		ldr	r2, .L83
 1174 000c FB79     		ldrb	r3, [r7, #7]
 1175 000e 1370     		strb	r3, [r2]
1194:.\Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_MASK_REG  = intSrc;
 1176              		.loc 1 1194 0
 1177 0010 044A     		ldr	r2, .L83+4
 1178 0012 FB79     		ldrb	r3, [r7, #7]
 1179 0014 1370     		strb	r3, [r2]
1195:.\Generated_Source\PSoC5/SPIS.c **** }
 1180              		.loc 1 1195 0
 1181 0016 0C37     		adds	r7, r7, #12
 1182              		.cfi_def_cfa_offset 4
 1183 0018 BD46     		mov	sp, r7
 1184              		.cfi_def_cfa_register 13
 1185              		@ sp needed
 1186 001a 5DF8047B 		ldr	r7, [sp], #4
 1187              		.cfi_restore 7
 1188              		.cfi_def_cfa_offset 0
 1189 001e 7047     		bx	lr
 1190              	.L84:
 1191              		.align	2
 1192              	.L83:
 1193 0020 82640040 		.word	1073767554
 1194 0024 87650040 		.word	1073767815
 1195              		.cfi_endproc
 1196              	.LFE23:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 43


 1197              		.size	SPIS_SetInterruptMode, .-SPIS_SetInterruptMode
 1198              		.section	.text.SPIS_ReadStatus,"ax",%progbits
 1199              		.align	2
 1200              		.global	SPIS_ReadStatus
 1201              		.thumb
 1202              		.thumb_func
 1203              		.type	SPIS_ReadStatus, %function
 1204              	SPIS_ReadStatus:
 1205              	.LFB24:
1196:.\Generated_Source\PSoC5/SPIS.c **** 
1197:.\Generated_Source\PSoC5/SPIS.c **** 
1198:.\Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1199:.\Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadStatus
1200:.\Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1201:.\Generated_Source\PSoC5/SPIS.c **** *
1202:.\Generated_Source\PSoC5/SPIS.c **** * Summary:
1203:.\Generated_Source\PSoC5/SPIS.c **** *  Read the status register for the component.
1204:.\Generated_Source\PSoC5/SPIS.c **** *
1205:.\Generated_Source\PSoC5/SPIS.c **** * Parameters:
1206:.\Generated_Source\PSoC5/SPIS.c **** *  None.
1207:.\Generated_Source\PSoC5/SPIS.c **** *
1208:.\Generated_Source\PSoC5/SPIS.c **** * Return:
1209:.\Generated_Source\PSoC5/SPIS.c **** *  Contents of the status register.
1210:.\Generated_Source\PSoC5/SPIS.c **** *
1211:.\Generated_Source\PSoC5/SPIS.c **** * Global variables:
1212:.\Generated_Source\PSoC5/SPIS.c **** *  SPIS_swStatus - used to store in software status register,
1213:.\Generated_Source\PSoC5/SPIS.c **** *  modified every function call - resets to zero.
1214:.\Generated_Source\PSoC5/SPIS.c **** *
1215:.\Generated_Source\PSoC5/SPIS.c **** * Theory:
1216:.\Generated_Source\PSoC5/SPIS.c **** *  Allows the user and the API to read the status register for error detection
1217:.\Generated_Source\PSoC5/SPIS.c **** *  and flow control.
1218:.\Generated_Source\PSoC5/SPIS.c **** *
1219:.\Generated_Source\PSoC5/SPIS.c **** * Side Effects:
1220:.\Generated_Source\PSoC5/SPIS.c **** *  Clear status register of the component.
1221:.\Generated_Source\PSoC5/SPIS.c **** *
1222:.\Generated_Source\PSoC5/SPIS.c **** * Reentrant:
1223:.\Generated_Source\PSoC5/SPIS.c **** *  No.
1224:.\Generated_Source\PSoC5/SPIS.c **** *
1225:.\Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1226:.\Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadStatus(void) 
1227:.\Generated_Source\PSoC5/SPIS.c **** {
 1206              		.loc 1 1227 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 8
 1209              		@ frame_needed = 1, uses_anonymous_args = 0
 1210              		@ link register save eliminated.
 1211 0000 80B4     		push	{r7}
 1212              		.cfi_def_cfa_offset 4
 1213              		.cfi_offset 7, -4
 1214 0002 83B0     		sub	sp, sp, #12
 1215              		.cfi_def_cfa_offset 16
 1216 0004 00AF     		add	r7, sp, #0
 1217              		.cfi_def_cfa_register 7
1228:.\Generated_Source\PSoC5/SPIS.c ****     uint8 tmpStatus;
1229:.\Generated_Source\PSoC5/SPIS.c **** 
1230:.\Generated_Source\PSoC5/SPIS.c ****     #if ((SPIS_TX_SOFTWARE_BUF_ENABLED) || (SPIS_RX_SOFTWARE_BUF_ENABLED))
1231:.\Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 44


1232:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableInt();
1233:.\Generated_Source\PSoC5/SPIS.c **** 
1234:.\Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_GET_STATUS_TX(SPIS_swStatusTx) |
1235:.\Generated_Source\PSoC5/SPIS.c ****               (SPIS_GET_STATUS_RX(SPIS_swStatusRx) & (uint8)~SPIS_STS_RX_FIFO_FULL);
1236:.\Generated_Source\PSoC5/SPIS.c **** 
1237:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusTx = 0u;
1238:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusRx = 0u;
1239:.\Generated_Source\PSoC5/SPIS.c **** 
1240:.\Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupts */
1241:.\Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableInt();
1242:.\Generated_Source\PSoC5/SPIS.c **** 
1243:.\Generated_Source\PSoC5/SPIS.c ****     #else /* !((SPIS_TX_SOFTWARE_BUF_ENABLED) || (SPIS_RX_SOFTWARE_BUF_ENABLED)) */
1244:.\Generated_Source\PSoC5/SPIS.c **** 
1245:.\Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_TX_STATUS_REG | (SPIS_RX_STATUS_REG &
 1218              		.loc 1 1245 0
 1219 0006 0A4B     		ldr	r3, .L87
 1220 0008 1B78     		ldrb	r3, [r3]
 1221 000a DBB2     		uxtb	r3, r3
 1222 000c DAB2     		uxtb	r2, r3
 1223 000e 094B     		ldr	r3, .L87+4
 1224 0010 1B78     		ldrb	r3, [r3]
 1225 0012 DBB2     		uxtb	r3, r3
 1226 0014 DBB2     		uxtb	r3, r3
 1227 0016 23F04003 		bic	r3, r3, #64
 1228 001a DBB2     		uxtb	r3, r3
 1229 001c 1343     		orrs	r3, r3, r2
 1230 001e DBB2     		uxtb	r3, r3
 1231 0020 FB71     		strb	r3, [r7, #7]
1246:.\Generated_Source\PSoC5/SPIS.c ****                                                       (uint8)~SPIS_STS_RX_FIFO_FULL);
1247:.\Generated_Source\PSoC5/SPIS.c **** 
1248:.\Generated_Source\PSoC5/SPIS.c ****     #endif /* (SPIS_TX_SOFTWARE_BUF_ENABLED) || (SPIS_RX_SOFTWARE_BUF_ENABLED) */
1249:.\Generated_Source\PSoC5/SPIS.c **** 
1250:.\Generated_Source\PSoC5/SPIS.c ****     return(tmpStatus);
 1232              		.loc 1 1250 0
 1233 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1251:.\Generated_Source\PSoC5/SPIS.c **** }
 1234              		.loc 1 1251 0
 1235 0024 1846     		mov	r0, r3
 1236 0026 0C37     		adds	r7, r7, #12
 1237              		.cfi_def_cfa_offset 4
 1238 0028 BD46     		mov	sp, r7
 1239              		.cfi_def_cfa_register 13
 1240              		@ sp needed
 1241 002a 5DF8047B 		ldr	r7, [sp], #4
 1242              		.cfi_restore 7
 1243              		.cfi_def_cfa_offset 0
 1244 002e 7047     		bx	lr
 1245              	.L88:
 1246              		.align	2
 1247              	.L87:
 1248 0030 62640040 		.word	1073767522
 1249 0034 67650040 		.word	1073767783
 1250              		.cfi_endproc
 1251              	.LFE24:
 1252              		.size	SPIS_ReadStatus, .-SPIS_ReadStatus
 1253              		.text
 1254              	.Letext0:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 45


 1255              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1256              		.section	.debug_info,"",%progbits
 1257              	.Ldebug_info0:
 1258 0000 2D040000 		.4byte	0x42d
 1259 0004 0400     		.2byte	0x4
 1260 0006 00000000 		.4byte	.Ldebug_abbrev0
 1261 000a 04       		.byte	0x4
 1262 000b 01       		.uleb128 0x1
 1263 000c E1010000 		.4byte	.LASF55
 1264 0010 01       		.byte	0x1
 1265 0011 26000000 		.4byte	.LASF56
 1266 0015 5C000000 		.4byte	.LASF57
 1267 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1268 001d 00000000 		.4byte	0
 1269 0021 00000000 		.4byte	.Ldebug_line0
 1270 0025 02       		.uleb128 0x2
 1271 0026 01       		.byte	0x1
 1272 0027 06       		.byte	0x6
 1273 0028 8B030000 		.4byte	.LASF0
 1274 002c 02       		.uleb128 0x2
 1275 002d 01       		.byte	0x1
 1276 002e 08       		.byte	0x8
 1277 002f C2010000 		.4byte	.LASF1
 1278 0033 02       		.uleb128 0x2
 1279 0034 02       		.byte	0x2
 1280 0035 05       		.byte	0x5
 1281 0036 39030000 		.4byte	.LASF2
 1282 003a 02       		.uleb128 0x2
 1283 003b 02       		.byte	0x2
 1284 003c 07       		.byte	0x7
 1285 003d 97030000 		.4byte	.LASF3
 1286 0041 02       		.uleb128 0x2
 1287 0042 04       		.byte	0x4
 1288 0043 05       		.byte	0x5
 1289 0044 69030000 		.4byte	.LASF4
 1290 0048 02       		.uleb128 0x2
 1291 0049 04       		.byte	0x4
 1292 004a 07       		.byte	0x7
 1293 004b 69010000 		.4byte	.LASF5
 1294 004f 02       		.uleb128 0x2
 1295 0050 08       		.byte	0x8
 1296 0051 05       		.byte	0x5
 1297 0052 14030000 		.4byte	.LASF6
 1298 0056 02       		.uleb128 0x2
 1299 0057 08       		.byte	0x8
 1300 0058 07       		.byte	0x7
 1301 0059 B8020000 		.4byte	.LASF7
 1302 005d 03       		.uleb128 0x3
 1303 005e 04       		.byte	0x4
 1304 005f 05       		.byte	0x5
 1305 0060 696E7400 		.ascii	"int\000"
 1306 0064 02       		.uleb128 0x2
 1307 0065 04       		.byte	0x4
 1308 0066 07       		.byte	0x7
 1309 0067 AB020000 		.4byte	.LASF8
 1310 006b 04       		.uleb128 0x4
 1311 006c 7B010000 		.4byte	.LASF9
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 46


 1312 0070 02       		.byte	0x2
 1313 0071 9201     		.2byte	0x192
 1314 0073 2C000000 		.4byte	0x2c
 1315 0077 04       		.uleb128 0x4
 1316 0078 97020000 		.4byte	.LASF10
 1317 007c 02       		.byte	0x2
 1318 007d 9401     		.2byte	0x194
 1319 007f 48000000 		.4byte	0x48
 1320 0083 02       		.uleb128 0x2
 1321 0084 04       		.byte	0x4
 1322 0085 04       		.byte	0x4
 1323 0086 59010000 		.4byte	.LASF11
 1324 008a 02       		.uleb128 0x2
 1325 008b 08       		.byte	0x8
 1326 008c 04       		.byte	0x4
 1327 008d 6F020000 		.4byte	.LASF12
 1328 0091 02       		.uleb128 0x2
 1329 0092 01       		.byte	0x1
 1330 0093 08       		.byte	0x8
 1331 0094 34030000 		.4byte	.LASF13
 1332 0098 04       		.uleb128 0x4
 1333 0099 64010000 		.4byte	.LASF14
 1334 009d 02       		.byte	0x2
 1335 009e 3C02     		.2byte	0x23c
 1336 00a0 A4000000 		.4byte	0xa4
 1337 00a4 05       		.uleb128 0x5
 1338 00a5 6B000000 		.4byte	0x6b
 1339 00a9 04       		.uleb128 0x4
 1340 00aa 00000000 		.4byte	.LASF15
 1341 00ae 02       		.byte	0x2
 1342 00af 3E02     		.2byte	0x23e
 1343 00b1 B5000000 		.4byte	0xb5
 1344 00b5 05       		.uleb128 0x5
 1345 00b6 77000000 		.4byte	0x77
 1346 00ba 02       		.uleb128 0x2
 1347 00bb 04       		.byte	0x4
 1348 00bc 07       		.byte	0x7
 1349 00bd FB020000 		.4byte	.LASF16
 1350 00c1 06       		.uleb128 0x6
 1351 00c2 CF020000 		.4byte	.LASF17
 1352 00c6 01       		.byte	0x1
 1353 00c7 43       		.byte	0x43
 1354 00c8 00000000 		.4byte	.LFB0
 1355 00cc 50000000 		.4byte	.LFE0-.LFB0
 1356 00d0 01       		.uleb128 0x1
 1357 00d1 9C       		.byte	0x9c
 1358 00d2 07       		.uleb128 0x7
 1359 00d3 8B020000 		.4byte	.LASF19
 1360 00d7 01       		.byte	0x1
 1361 00d8 8E       		.byte	0x8e
 1362 00d9 00000000 		.4byte	.LFB1
 1363 00dd 64000000 		.4byte	.LFE1-.LFB1
 1364 00e1 01       		.uleb128 0x1
 1365 00e2 9C       		.byte	0x9c
 1366 00e3 F6000000 		.4byte	0xf6
 1367 00e7 08       		.uleb128 0x8
 1368 00e8 9C010000 		.4byte	.LASF21
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 47


 1369 00ec 01       		.byte	0x1
 1370 00ed 90       		.byte	0x90
 1371 00ee 6B000000 		.4byte	0x6b
 1372 00f2 02       		.uleb128 0x2
 1373 00f3 91       		.byte	0x91
 1374 00f4 77       		.sleb128 -9
 1375 00f5 00       		.byte	0
 1376 00f6 06       		.uleb128 0x6
 1377 00f7 1B000000 		.4byte	.LASF18
 1378 00fb 01       		.byte	0x1
 1379 00fc BB       		.byte	0xbb
 1380 00fd 00000000 		.4byte	.LFB2
 1381 0101 20000000 		.4byte	.LFE2-.LFB2
 1382 0105 01       		.uleb128 0x1
 1383 0106 9C       		.byte	0x9c
 1384 0107 07       		.uleb128 0x7
 1385 0108 AA030000 		.4byte	.LASF20
 1386 010c 01       		.byte	0x1
 1387 010d D8       		.byte	0xd8
 1388 010e 00000000 		.4byte	.LFB3
 1389 0112 50000000 		.4byte	.LFE3-.LFB3
 1390 0116 01       		.uleb128 0x1
 1391 0117 9C       		.byte	0x9c
 1392 0118 2B010000 		.4byte	0x12b
 1393 011c 08       		.uleb128 0x8
 1394 011d 9C010000 		.4byte	.LASF21
 1395 0121 01       		.byte	0x1
 1396 0122 DA       		.byte	0xda
 1397 0123 6B000000 		.4byte	0x6b
 1398 0127 02       		.uleb128 0x2
 1399 0128 91       		.byte	0x91
 1400 0129 77       		.sleb128 -9
 1401 012a 00       		.byte	0
 1402 012b 09       		.uleb128 0x9
 1403 012c D0010000 		.4byte	.LASF22
 1404 0130 01       		.byte	0x1
 1405 0131 FD       		.byte	0xfd
 1406 0132 00000000 		.4byte	.LFB4
 1407 0136 0C000000 		.4byte	.LFE4-.LFB4
 1408 013a 01       		.uleb128 0x1
 1409 013b 9C       		.byte	0x9c
 1410 013c 0A       		.uleb128 0xa
 1411 013d 81010000 		.4byte	.LASF23
 1412 0141 01       		.byte	0x1
 1413 0142 1601     		.2byte	0x116
 1414 0144 00000000 		.4byte	.LFB5
 1415 0148 18000000 		.4byte	.LFE5-.LFB5
 1416 014c 01       		.uleb128 0x1
 1417 014d 9C       		.byte	0x9c
 1418 014e 0A       		.uleb128 0xa
 1419 014f D9020000 		.4byte	.LASF24
 1420 0153 01       		.byte	0x1
 1421 0154 2F01     		.2byte	0x12f
 1422 0156 00000000 		.4byte	.LFB6
 1423 015a 0C000000 		.4byte	.LFE6-.LFB6
 1424 015e 01       		.uleb128 0x1
 1425 015f 9C       		.byte	0x9c
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 48


 1426 0160 0A       		.uleb128 0xa
 1427 0161 D3000000 		.4byte	.LASF25
 1428 0165 01       		.byte	0x1
 1429 0166 4801     		.2byte	0x148
 1430 0168 00000000 		.4byte	.LFB7
 1431 016c 18000000 		.4byte	.LFE7-.LFB7
 1432 0170 01       		.uleb128 0x1
 1433 0171 9C       		.byte	0x9c
 1434 0172 0B       		.uleb128 0xb
 1435 0173 B4030000 		.4byte	.LASF26
 1436 0177 01       		.byte	0x1
 1437 0178 6201     		.2byte	0x162
 1438 017a 00000000 		.4byte	.LFB8
 1439 017e 20000000 		.4byte	.LFE8-.LFB8
 1440 0182 01       		.uleb128 0x1
 1441 0183 9C       		.byte	0x9c
 1442 0184 98010000 		.4byte	0x198
 1443 0188 0C       		.uleb128 0xc
 1444 0189 76020000 		.4byte	.LASF28
 1445 018d 01       		.byte	0x1
 1446 018e 6201     		.2byte	0x162
 1447 0190 6B000000 		.4byte	0x6b
 1448 0194 02       		.uleb128 0x2
 1449 0195 91       		.byte	0x91
 1450 0196 77       		.sleb128 -9
 1451 0197 00       		.byte	0
 1452 0198 0B       		.uleb128 0xb
 1453 0199 D7030000 		.4byte	.LASF27
 1454 019d 01       		.byte	0x1
 1455 019e 7A01     		.2byte	0x17a
 1456 01a0 00000000 		.4byte	.LFB9
 1457 01a4 20000000 		.4byte	.LFE9-.LFB9
 1458 01a8 01       		.uleb128 0x1
 1459 01a9 9C       		.byte	0x9c
 1460 01aa BE010000 		.4byte	0x1be
 1461 01ae 0C       		.uleb128 0xc
 1462 01af 76020000 		.4byte	.LASF28
 1463 01b3 01       		.byte	0x1
 1464 01b4 7A01     		.2byte	0x17a
 1465 01b6 6B000000 		.4byte	0x6b
 1466 01ba 02       		.uleb128 0x2
 1467 01bb 91       		.byte	0x91
 1468 01bc 77       		.sleb128 -9
 1469 01bd 00       		.byte	0
 1470 01be 0D       		.uleb128 0xd
 1471 01bf 18010000 		.4byte	.LASF30
 1472 01c3 01       		.byte	0x1
 1473 01c4 9C01     		.2byte	0x19c
 1474 01c6 6B000000 		.4byte	0x6b
 1475 01ca 00000000 		.4byte	.LFB10
 1476 01ce 20000000 		.4byte	.LFE10-.LFB10
 1477 01d2 01       		.uleb128 0x1
 1478 01d3 9C       		.byte	0x9c
 1479 01d4 E8010000 		.4byte	0x1e8
 1480 01d8 0E       		.uleb128 0xe
 1481 01d9 72030000 		.4byte	.LASF29
 1482 01dd 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 49


 1483 01de 9E01     		.2byte	0x19e
 1484 01e0 6B000000 		.4byte	0x6b
 1485 01e4 02       		.uleb128 0x2
 1486 01e5 91       		.byte	0x91
 1487 01e6 77       		.sleb128 -9
 1488 01e7 00       		.byte	0
 1489 01e8 0D       		.uleb128 0xd
 1490 01e9 22030000 		.4byte	.LASF31
 1491 01ed 01       		.byte	0x1
 1492 01ee D101     		.2byte	0x1d1
 1493 01f0 6B000000 		.4byte	0x6b
 1494 01f4 00000000 		.4byte	.LFB11
 1495 01f8 20000000 		.4byte	.LFE11-.LFB11
 1496 01fc 01       		.uleb128 0x1
 1497 01fd 9C       		.byte	0x9c
 1498 01fe 12020000 		.4byte	0x212
 1499 0202 0E       		.uleb128 0xe
 1500 0203 72030000 		.4byte	.LASF29
 1501 0207 01       		.byte	0x1
 1502 0208 D301     		.2byte	0x1d3
 1503 020a 6B000000 		.4byte	0x6b
 1504 020e 02       		.uleb128 0x2
 1505 020f 91       		.byte	0x91
 1506 0210 77       		.sleb128 -9
 1507 0211 00       		.byte	0
 1508 0212 0B       		.uleb128 0xb
 1509 0213 C2000000 		.4byte	.LASF32
 1510 0217 01       		.byte	0x1
 1511 0218 0C02     		.2byte	0x20c
 1512 021a 00000000 		.4byte	.LFB12
 1513 021e 34000000 		.4byte	.LFE12-.LFB12
 1514 0222 01       		.uleb128 0x1
 1515 0223 9C       		.byte	0x9c
 1516 0224 38020000 		.4byte	0x238
 1517 0228 0C       		.uleb128 0xc
 1518 0229 F4020000 		.4byte	.LASF33
 1519 022d 01       		.byte	0x1
 1520 022e 0C02     		.2byte	0x20c
 1521 0230 6B000000 		.4byte	0x6b
 1522 0234 02       		.uleb128 0x2
 1523 0235 91       		.byte	0x91
 1524 0236 77       		.sleb128 -9
 1525 0237 00       		.byte	0
 1526 0238 0B       		.uleb128 0xb
 1527 0239 06000000 		.4byte	.LASF34
 1528 023d 01       		.byte	0x1
 1529 023e 6B02     		.2byte	0x26b
 1530 0240 00000000 		.4byte	.LFB13
 1531 0244 20000000 		.4byte	.LFE13-.LFB13
 1532 0248 01       		.uleb128 0x1
 1533 0249 9C       		.byte	0x9c
 1534 024a 5E020000 		.4byte	0x25e
 1535 024e 0C       		.uleb128 0xc
 1536 024f CC030000 		.4byte	.LASF35
 1537 0253 01       		.byte	0x1
 1538 0254 6B02     		.2byte	0x26b
 1539 0256 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 50


 1540 025a 02       		.uleb128 0x2
 1541 025b 91       		.byte	0x91
 1542 025c 77       		.sleb128 -9
 1543 025d 00       		.byte	0
 1544 025e 0D       		.uleb128 0xd
 1545 025f F5000000 		.4byte	.LASF36
 1546 0263 01       		.byte	0x1
 1547 0264 9502     		.2byte	0x295
 1548 0266 6B000000 		.4byte	0x6b
 1549 026a 00000000 		.4byte	.LFB14
 1550 026e 20000000 		.4byte	.LFE14-.LFB14
 1551 0272 01       		.uleb128 0x1
 1552 0273 9C       		.byte	0x9c
 1553 0274 88020000 		.4byte	0x288
 1554 0278 0E       		.uleb128 0xe
 1555 0279 3D010000 		.4byte	.LASF37
 1556 027d 01       		.byte	0x1
 1557 027e 9702     		.2byte	0x297
 1558 0280 6B000000 		.4byte	0x6b
 1559 0284 02       		.uleb128 0x2
 1560 0285 91       		.byte	0x91
 1561 0286 77       		.sleb128 -9
 1562 0287 00       		.byte	0
 1563 0288 0D       		.uleb128 0xd
 1564 0289 AD010000 		.4byte	.LASF38
 1565 028d 01       		.byte	0x1
 1566 028e D702     		.2byte	0x2d7
 1567 0290 6B000000 		.4byte	0x6b
 1568 0294 00000000 		.4byte	.LFB15
 1569 0298 30000000 		.4byte	.LFE15-.LFB15
 1570 029c 01       		.uleb128 0x1
 1571 029d 9C       		.byte	0x9c
 1572 029e B2020000 		.4byte	0x2b2
 1573 02a2 0E       		.uleb128 0xe
 1574 02a3 5F010000 		.4byte	.LASF39
 1575 02a7 01       		.byte	0x1
 1576 02a8 D902     		.2byte	0x2d9
 1577 02aa 6B000000 		.4byte	0x6b
 1578 02ae 02       		.uleb128 0x2
 1579 02af 91       		.byte	0x91
 1580 02b0 77       		.sleb128 -9
 1581 02b1 00       		.byte	0
 1582 02b2 0D       		.uleb128 0xd
 1583 02b3 44010000 		.4byte	.LASF40
 1584 02b7 01       		.byte	0x1
 1585 02b8 1803     		.2byte	0x318
 1586 02ba 6B000000 		.4byte	0x6b
 1587 02be 00000000 		.4byte	.LFB16
 1588 02c2 44000000 		.4byte	.LFE16-.LFB16
 1589 02c6 01       		.uleb128 0x1
 1590 02c7 9C       		.byte	0x9c
 1591 02c8 DC020000 		.4byte	0x2dc
 1592 02cc 0E       		.uleb128 0xe
 1593 02cd 5F010000 		.4byte	.LASF39
 1594 02d1 01       		.byte	0x1
 1595 02d2 1A03     		.2byte	0x31a
 1596 02d4 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 51


 1597 02d8 02       		.uleb128 0x2
 1598 02d9 91       		.byte	0x91
 1599 02da 77       		.sleb128 -9
 1600 02db 00       		.byte	0
 1601 02dc 0A       		.uleb128 0xa
 1602 02dd 2A010000 		.4byte	.LASF41
 1603 02e1 01       		.byte	0x1
 1604 02e2 6A03     		.2byte	0x36a
 1605 02e4 00000000 		.4byte	.LFB17
 1606 02e8 28000000 		.4byte	.LFE17-.LFB17
 1607 02ec 01       		.uleb128 0x1
 1608 02ed 9C       		.byte	0x9c
 1609 02ee 0F       		.uleb128 0xf
 1610 02ef 05010000 		.4byte	.LASF42
 1611 02f3 01       		.byte	0x1
 1612 02f4 A303     		.2byte	0x3a3
 1613 02f6 00000000 		.4byte	.LFB18
 1614 02fa 40000000 		.4byte	.LFE18-.LFB18
 1615 02fe 01       		.uleb128 0x1
 1616 02ff 9C       		.byte	0x9c
 1617 0300 14030000 		.4byte	0x314
 1618 0304 0E       		.uleb128 0xe
 1619 0305 9C010000 		.4byte	.LASF21
 1620 0309 01       		.byte	0x1
 1621 030a A503     		.2byte	0x3a5
 1622 030c 6B000000 		.4byte	0x6b
 1623 0310 02       		.uleb128 0x2
 1624 0311 91       		.byte	0x91
 1625 0312 77       		.sleb128 -9
 1626 0313 00       		.byte	0
 1627 0314 0F       		.uleb128 0xf
 1628 0315 7D020000 		.4byte	.LASF43
 1629 0319 01       		.byte	0x1
 1630 031a 1704     		.2byte	0x417
 1631 031c 00000000 		.4byte	.LFB19
 1632 0320 38000000 		.4byte	.LFE19-.LFB19
 1633 0324 01       		.uleb128 0x1
 1634 0325 9C       		.byte	0x9c
 1635 0326 58030000 		.4byte	0x358
 1636 032a 0C       		.uleb128 0xc
 1637 032b 52030000 		.4byte	.LASF44
 1638 032f 01       		.byte	0x1
 1639 0330 1704     		.2byte	0x417
 1640 0332 58030000 		.4byte	0x358
 1641 0336 02       		.uleb128 0x2
 1642 0337 91       		.byte	0x91
 1643 0338 6C       		.sleb128 -20
 1644 0339 0C       		.uleb128 0xc
 1645 033a 92010000 		.4byte	.LASF45
 1646 033e 01       		.byte	0x1
 1647 033f 1704     		.2byte	0x417
 1648 0341 6B000000 		.4byte	0x6b
 1649 0345 02       		.uleb128 0x2
 1650 0346 91       		.byte	0x91
 1651 0347 6B       		.sleb128 -21
 1652 0348 0E       		.uleb128 0xe
 1653 0349 EB020000 		.4byte	.LASF46
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 52


 1654 034d 01       		.byte	0x1
 1655 034e 1A04     		.2byte	0x41a
 1656 0350 6B000000 		.4byte	0x6b
 1657 0354 02       		.uleb128 0x2
 1658 0355 91       		.byte	0x91
 1659 0356 77       		.sleb128 -9
 1660 0357 00       		.byte	0
 1661 0358 10       		.uleb128 0x10
 1662 0359 04       		.byte	0x4
 1663 035a 5E030000 		.4byte	0x35e
 1664 035e 11       		.uleb128 0x11
 1665 035f 6B000000 		.4byte	0x6b
 1666 0363 0F       		.uleb128 0xf
 1667 0364 7C030000 		.4byte	.LASF47
 1668 0368 01       		.byte	0x1
 1669 0369 3704     		.2byte	0x437
 1670 036b 00000000 		.4byte	.LFB20
 1671 036f 5C000000 		.4byte	.LFE20-.LFB20
 1672 0373 01       		.uleb128 0x1
 1673 0374 9C       		.byte	0x9c
 1674 0375 89030000 		.4byte	0x389
 1675 0379 0E       		.uleb128 0xe
 1676 037a 9C010000 		.4byte	.LASF21
 1677 037e 01       		.byte	0x1
 1678 037f 3904     		.2byte	0x439
 1679 0381 6B000000 		.4byte	0x6b
 1680 0385 02       		.uleb128 0x2
 1681 0386 91       		.byte	0x91
 1682 0387 77       		.sleb128 -9
 1683 0388 00       		.byte	0
 1684 0389 0A       		.uleb128 0xa
 1685 038a 43030000 		.4byte	.LASF48
 1686 038e 01       		.byte	0x1
 1687 038f 6C04     		.2byte	0x46c
 1688 0391 00000000 		.4byte	.LFB21
 1689 0395 18000000 		.4byte	.LFE21-.LFB21
 1690 0399 01       		.uleb128 0x1
 1691 039a 9C       		.byte	0x9c
 1692 039b 0A       		.uleb128 0xa
 1693 039c 04030000 		.4byte	.LASF49
 1694 03a0 01       		.byte	0x1
 1695 03a1 8904     		.2byte	0x489
 1696 03a3 00000000 		.4byte	.LFB22
 1697 03a7 18000000 		.4byte	.LFE22-.LFB22
 1698 03ab 01       		.uleb128 0x1
 1699 03ac 9C       		.byte	0x9c
 1700 03ad 0B       		.uleb128 0xb
 1701 03ae 46000000 		.4byte	.LASF50
 1702 03b2 01       		.byte	0x1
 1703 03b3 A704     		.2byte	0x4a7
 1704 03b5 00000000 		.4byte	.LFB23
 1705 03b9 28000000 		.4byte	.LFE23-.LFB23
 1706 03bd 01       		.uleb128 0x1
 1707 03be 9C       		.byte	0x9c
 1708 03bf D3030000 		.4byte	0x3d3
 1709 03c3 0C       		.uleb128 0xc
 1710 03c4 76020000 		.4byte	.LASF28
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 53


 1711 03c8 01       		.byte	0x1
 1712 03c9 A704     		.2byte	0x4a7
 1713 03cb 6B000000 		.4byte	0x6b
 1714 03cf 02       		.uleb128 0x2
 1715 03d0 91       		.byte	0x91
 1716 03d1 77       		.sleb128 -9
 1717 03d2 00       		.byte	0
 1718 03d3 0D       		.uleb128 0xd
 1719 03d4 59030000 		.4byte	.LASF51
 1720 03d8 01       		.byte	0x1
 1721 03d9 CA04     		.2byte	0x4ca
 1722 03db 6B000000 		.4byte	0x6b
 1723 03df 00000000 		.4byte	.LFB24
 1724 03e3 38000000 		.4byte	.LFE24-.LFB24
 1725 03e7 01       		.uleb128 0x1
 1726 03e8 9C       		.byte	0x9c
 1727 03e9 FD030000 		.4byte	0x3fd
 1728 03ed 0E       		.uleb128 0xe
 1729 03ee 72030000 		.4byte	.LASF29
 1730 03f2 01       		.byte	0x1
 1731 03f3 CC04     		.2byte	0x4cc
 1732 03f5 6B000000 		.4byte	0x6b
 1733 03f9 02       		.uleb128 0x2
 1734 03fa 91       		.byte	0x91
 1735 03fb 77       		.sleb128 -9
 1736 03fc 00       		.byte	0
 1737 03fd 12       		.uleb128 0x12
 1738 03fe 9E020000 		.4byte	.LASF52
 1739 0402 01       		.byte	0x1
 1740 0403 26       		.byte	0x26
 1741 0404 6B000000 		.4byte	0x6b
 1742 0408 05       		.uleb128 0x5
 1743 0409 03       		.byte	0x3
 1744 040a 00000000 		.4byte	SPIS_initVar
 1745 040e 12       		.uleb128 0x12
 1746 040f E5000000 		.4byte	.LASF53
 1747 0413 01       		.byte	0x1
 1748 0414 28       		.byte	0x28
 1749 0415 A4000000 		.4byte	0xa4
 1750 0419 05       		.uleb128 0x5
 1751 041a 03       		.byte	0x3
 1752 041b 00000000 		.4byte	SPIS_swStatusTx
 1753 041f 12       		.uleb128 0x12
 1754 0420 B2000000 		.4byte	.LASF54
 1755 0424 01       		.byte	0x1
 1756 0425 29       		.byte	0x29
 1757 0426 A4000000 		.4byte	0xa4
 1758 042a 05       		.uleb128 0x5
 1759 042b 03       		.byte	0x3
 1760 042c 00000000 		.4byte	SPIS_swStatusRx
 1761 0430 00       		.byte	0
 1762              		.section	.debug_abbrev,"",%progbits
 1763              	.Ldebug_abbrev0:
 1764 0000 01       		.uleb128 0x1
 1765 0001 11       		.uleb128 0x11
 1766 0002 01       		.byte	0x1
 1767 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 54


 1768 0004 0E       		.uleb128 0xe
 1769 0005 13       		.uleb128 0x13
 1770 0006 0B       		.uleb128 0xb
 1771 0007 03       		.uleb128 0x3
 1772 0008 0E       		.uleb128 0xe
 1773 0009 1B       		.uleb128 0x1b
 1774 000a 0E       		.uleb128 0xe
 1775 000b 55       		.uleb128 0x55
 1776 000c 17       		.uleb128 0x17
 1777 000d 11       		.uleb128 0x11
 1778 000e 01       		.uleb128 0x1
 1779 000f 10       		.uleb128 0x10
 1780 0010 17       		.uleb128 0x17
 1781 0011 00       		.byte	0
 1782 0012 00       		.byte	0
 1783 0013 02       		.uleb128 0x2
 1784 0014 24       		.uleb128 0x24
 1785 0015 00       		.byte	0
 1786 0016 0B       		.uleb128 0xb
 1787 0017 0B       		.uleb128 0xb
 1788 0018 3E       		.uleb128 0x3e
 1789 0019 0B       		.uleb128 0xb
 1790 001a 03       		.uleb128 0x3
 1791 001b 0E       		.uleb128 0xe
 1792 001c 00       		.byte	0
 1793 001d 00       		.byte	0
 1794 001e 03       		.uleb128 0x3
 1795 001f 24       		.uleb128 0x24
 1796 0020 00       		.byte	0
 1797 0021 0B       		.uleb128 0xb
 1798 0022 0B       		.uleb128 0xb
 1799 0023 3E       		.uleb128 0x3e
 1800 0024 0B       		.uleb128 0xb
 1801 0025 03       		.uleb128 0x3
 1802 0026 08       		.uleb128 0x8
 1803 0027 00       		.byte	0
 1804 0028 00       		.byte	0
 1805 0029 04       		.uleb128 0x4
 1806 002a 16       		.uleb128 0x16
 1807 002b 00       		.byte	0
 1808 002c 03       		.uleb128 0x3
 1809 002d 0E       		.uleb128 0xe
 1810 002e 3A       		.uleb128 0x3a
 1811 002f 0B       		.uleb128 0xb
 1812 0030 3B       		.uleb128 0x3b
 1813 0031 05       		.uleb128 0x5
 1814 0032 49       		.uleb128 0x49
 1815 0033 13       		.uleb128 0x13
 1816 0034 00       		.byte	0
 1817 0035 00       		.byte	0
 1818 0036 05       		.uleb128 0x5
 1819 0037 35       		.uleb128 0x35
 1820 0038 00       		.byte	0
 1821 0039 49       		.uleb128 0x49
 1822 003a 13       		.uleb128 0x13
 1823 003b 00       		.byte	0
 1824 003c 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 55


 1825 003d 06       		.uleb128 0x6
 1826 003e 2E       		.uleb128 0x2e
 1827 003f 00       		.byte	0
 1828 0040 3F       		.uleb128 0x3f
 1829 0041 19       		.uleb128 0x19
 1830 0042 03       		.uleb128 0x3
 1831 0043 0E       		.uleb128 0xe
 1832 0044 3A       		.uleb128 0x3a
 1833 0045 0B       		.uleb128 0xb
 1834 0046 3B       		.uleb128 0x3b
 1835 0047 0B       		.uleb128 0xb
 1836 0048 27       		.uleb128 0x27
 1837 0049 19       		.uleb128 0x19
 1838 004a 11       		.uleb128 0x11
 1839 004b 01       		.uleb128 0x1
 1840 004c 12       		.uleb128 0x12
 1841 004d 06       		.uleb128 0x6
 1842 004e 40       		.uleb128 0x40
 1843 004f 18       		.uleb128 0x18
 1844 0050 9642     		.uleb128 0x2116
 1845 0052 19       		.uleb128 0x19
 1846 0053 00       		.byte	0
 1847 0054 00       		.byte	0
 1848 0055 07       		.uleb128 0x7
 1849 0056 2E       		.uleb128 0x2e
 1850 0057 01       		.byte	0x1
 1851 0058 3F       		.uleb128 0x3f
 1852 0059 19       		.uleb128 0x19
 1853 005a 03       		.uleb128 0x3
 1854 005b 0E       		.uleb128 0xe
 1855 005c 3A       		.uleb128 0x3a
 1856 005d 0B       		.uleb128 0xb
 1857 005e 3B       		.uleb128 0x3b
 1858 005f 0B       		.uleb128 0xb
 1859 0060 27       		.uleb128 0x27
 1860 0061 19       		.uleb128 0x19
 1861 0062 11       		.uleb128 0x11
 1862 0063 01       		.uleb128 0x1
 1863 0064 12       		.uleb128 0x12
 1864 0065 06       		.uleb128 0x6
 1865 0066 40       		.uleb128 0x40
 1866 0067 18       		.uleb128 0x18
 1867 0068 9642     		.uleb128 0x2116
 1868 006a 19       		.uleb128 0x19
 1869 006b 01       		.uleb128 0x1
 1870 006c 13       		.uleb128 0x13
 1871 006d 00       		.byte	0
 1872 006e 00       		.byte	0
 1873 006f 08       		.uleb128 0x8
 1874 0070 34       		.uleb128 0x34
 1875 0071 00       		.byte	0
 1876 0072 03       		.uleb128 0x3
 1877 0073 0E       		.uleb128 0xe
 1878 0074 3A       		.uleb128 0x3a
 1879 0075 0B       		.uleb128 0xb
 1880 0076 3B       		.uleb128 0x3b
 1881 0077 0B       		.uleb128 0xb
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 56


 1882 0078 49       		.uleb128 0x49
 1883 0079 13       		.uleb128 0x13
 1884 007a 02       		.uleb128 0x2
 1885 007b 18       		.uleb128 0x18
 1886 007c 00       		.byte	0
 1887 007d 00       		.byte	0
 1888 007e 09       		.uleb128 0x9
 1889 007f 2E       		.uleb128 0x2e
 1890 0080 00       		.byte	0
 1891 0081 3F       		.uleb128 0x3f
 1892 0082 19       		.uleb128 0x19
 1893 0083 03       		.uleb128 0x3
 1894 0084 0E       		.uleb128 0xe
 1895 0085 3A       		.uleb128 0x3a
 1896 0086 0B       		.uleb128 0xb
 1897 0087 3B       		.uleb128 0x3b
 1898 0088 0B       		.uleb128 0xb
 1899 0089 27       		.uleb128 0x27
 1900 008a 19       		.uleb128 0x19
 1901 008b 11       		.uleb128 0x11
 1902 008c 01       		.uleb128 0x1
 1903 008d 12       		.uleb128 0x12
 1904 008e 06       		.uleb128 0x6
 1905 008f 40       		.uleb128 0x40
 1906 0090 18       		.uleb128 0x18
 1907 0091 9742     		.uleb128 0x2117
 1908 0093 19       		.uleb128 0x19
 1909 0094 00       		.byte	0
 1910 0095 00       		.byte	0
 1911 0096 0A       		.uleb128 0xa
 1912 0097 2E       		.uleb128 0x2e
 1913 0098 00       		.byte	0
 1914 0099 3F       		.uleb128 0x3f
 1915 009a 19       		.uleb128 0x19
 1916 009b 03       		.uleb128 0x3
 1917 009c 0E       		.uleb128 0xe
 1918 009d 3A       		.uleb128 0x3a
 1919 009e 0B       		.uleb128 0xb
 1920 009f 3B       		.uleb128 0x3b
 1921 00a0 05       		.uleb128 0x5
 1922 00a1 27       		.uleb128 0x27
 1923 00a2 19       		.uleb128 0x19
 1924 00a3 11       		.uleb128 0x11
 1925 00a4 01       		.uleb128 0x1
 1926 00a5 12       		.uleb128 0x12
 1927 00a6 06       		.uleb128 0x6
 1928 00a7 40       		.uleb128 0x40
 1929 00a8 18       		.uleb128 0x18
 1930 00a9 9742     		.uleb128 0x2117
 1931 00ab 19       		.uleb128 0x19
 1932 00ac 00       		.byte	0
 1933 00ad 00       		.byte	0
 1934 00ae 0B       		.uleb128 0xb
 1935 00af 2E       		.uleb128 0x2e
 1936 00b0 01       		.byte	0x1
 1937 00b1 3F       		.uleb128 0x3f
 1938 00b2 19       		.uleb128 0x19
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 57


 1939 00b3 03       		.uleb128 0x3
 1940 00b4 0E       		.uleb128 0xe
 1941 00b5 3A       		.uleb128 0x3a
 1942 00b6 0B       		.uleb128 0xb
 1943 00b7 3B       		.uleb128 0x3b
 1944 00b8 05       		.uleb128 0x5
 1945 00b9 27       		.uleb128 0x27
 1946 00ba 19       		.uleb128 0x19
 1947 00bb 11       		.uleb128 0x11
 1948 00bc 01       		.uleb128 0x1
 1949 00bd 12       		.uleb128 0x12
 1950 00be 06       		.uleb128 0x6
 1951 00bf 40       		.uleb128 0x40
 1952 00c0 18       		.uleb128 0x18
 1953 00c1 9742     		.uleb128 0x2117
 1954 00c3 19       		.uleb128 0x19
 1955 00c4 01       		.uleb128 0x1
 1956 00c5 13       		.uleb128 0x13
 1957 00c6 00       		.byte	0
 1958 00c7 00       		.byte	0
 1959 00c8 0C       		.uleb128 0xc
 1960 00c9 05       		.uleb128 0x5
 1961 00ca 00       		.byte	0
 1962 00cb 03       		.uleb128 0x3
 1963 00cc 0E       		.uleb128 0xe
 1964 00cd 3A       		.uleb128 0x3a
 1965 00ce 0B       		.uleb128 0xb
 1966 00cf 3B       		.uleb128 0x3b
 1967 00d0 05       		.uleb128 0x5
 1968 00d1 49       		.uleb128 0x49
 1969 00d2 13       		.uleb128 0x13
 1970 00d3 02       		.uleb128 0x2
 1971 00d4 18       		.uleb128 0x18
 1972 00d5 00       		.byte	0
 1973 00d6 00       		.byte	0
 1974 00d7 0D       		.uleb128 0xd
 1975 00d8 2E       		.uleb128 0x2e
 1976 00d9 01       		.byte	0x1
 1977 00da 3F       		.uleb128 0x3f
 1978 00db 19       		.uleb128 0x19
 1979 00dc 03       		.uleb128 0x3
 1980 00dd 0E       		.uleb128 0xe
 1981 00de 3A       		.uleb128 0x3a
 1982 00df 0B       		.uleb128 0xb
 1983 00e0 3B       		.uleb128 0x3b
 1984 00e1 05       		.uleb128 0x5
 1985 00e2 27       		.uleb128 0x27
 1986 00e3 19       		.uleb128 0x19
 1987 00e4 49       		.uleb128 0x49
 1988 00e5 13       		.uleb128 0x13
 1989 00e6 11       		.uleb128 0x11
 1990 00e7 01       		.uleb128 0x1
 1991 00e8 12       		.uleb128 0x12
 1992 00e9 06       		.uleb128 0x6
 1993 00ea 40       		.uleb128 0x40
 1994 00eb 18       		.uleb128 0x18
 1995 00ec 9742     		.uleb128 0x2117
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 58


 1996 00ee 19       		.uleb128 0x19
 1997 00ef 01       		.uleb128 0x1
 1998 00f0 13       		.uleb128 0x13
 1999 00f1 00       		.byte	0
 2000 00f2 00       		.byte	0
 2001 00f3 0E       		.uleb128 0xe
 2002 00f4 34       		.uleb128 0x34
 2003 00f5 00       		.byte	0
 2004 00f6 03       		.uleb128 0x3
 2005 00f7 0E       		.uleb128 0xe
 2006 00f8 3A       		.uleb128 0x3a
 2007 00f9 0B       		.uleb128 0xb
 2008 00fa 3B       		.uleb128 0x3b
 2009 00fb 05       		.uleb128 0x5
 2010 00fc 49       		.uleb128 0x49
 2011 00fd 13       		.uleb128 0x13
 2012 00fe 02       		.uleb128 0x2
 2013 00ff 18       		.uleb128 0x18
 2014 0100 00       		.byte	0
 2015 0101 00       		.byte	0
 2016 0102 0F       		.uleb128 0xf
 2017 0103 2E       		.uleb128 0x2e
 2018 0104 01       		.byte	0x1
 2019 0105 3F       		.uleb128 0x3f
 2020 0106 19       		.uleb128 0x19
 2021 0107 03       		.uleb128 0x3
 2022 0108 0E       		.uleb128 0xe
 2023 0109 3A       		.uleb128 0x3a
 2024 010a 0B       		.uleb128 0xb
 2025 010b 3B       		.uleb128 0x3b
 2026 010c 05       		.uleb128 0x5
 2027 010d 27       		.uleb128 0x27
 2028 010e 19       		.uleb128 0x19
 2029 010f 11       		.uleb128 0x11
 2030 0110 01       		.uleb128 0x1
 2031 0111 12       		.uleb128 0x12
 2032 0112 06       		.uleb128 0x6
 2033 0113 40       		.uleb128 0x40
 2034 0114 18       		.uleb128 0x18
 2035 0115 9642     		.uleb128 0x2116
 2036 0117 19       		.uleb128 0x19
 2037 0118 01       		.uleb128 0x1
 2038 0119 13       		.uleb128 0x13
 2039 011a 00       		.byte	0
 2040 011b 00       		.byte	0
 2041 011c 10       		.uleb128 0x10
 2042 011d 0F       		.uleb128 0xf
 2043 011e 00       		.byte	0
 2044 011f 0B       		.uleb128 0xb
 2045 0120 0B       		.uleb128 0xb
 2046 0121 49       		.uleb128 0x49
 2047 0122 13       		.uleb128 0x13
 2048 0123 00       		.byte	0
 2049 0124 00       		.byte	0
 2050 0125 11       		.uleb128 0x11
 2051 0126 26       		.uleb128 0x26
 2052 0127 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 59


 2053 0128 49       		.uleb128 0x49
 2054 0129 13       		.uleb128 0x13
 2055 012a 00       		.byte	0
 2056 012b 00       		.byte	0
 2057 012c 12       		.uleb128 0x12
 2058 012d 34       		.uleb128 0x34
 2059 012e 00       		.byte	0
 2060 012f 03       		.uleb128 0x3
 2061 0130 0E       		.uleb128 0xe
 2062 0131 3A       		.uleb128 0x3a
 2063 0132 0B       		.uleb128 0xb
 2064 0133 3B       		.uleb128 0x3b
 2065 0134 0B       		.uleb128 0xb
 2066 0135 49       		.uleb128 0x49
 2067 0136 13       		.uleb128 0x13
 2068 0137 3F       		.uleb128 0x3f
 2069 0138 19       		.uleb128 0x19
 2070 0139 02       		.uleb128 0x2
 2071 013a 18       		.uleb128 0x18
 2072 013b 00       		.byte	0
 2073 013c 00       		.byte	0
 2074 013d 00       		.byte	0
 2075              		.section	.debug_aranges,"",%progbits
 2076 0000 DC000000 		.4byte	0xdc
 2077 0004 0200     		.2byte	0x2
 2078 0006 00000000 		.4byte	.Ldebug_info0
 2079 000a 04       		.byte	0x4
 2080 000b 00       		.byte	0
 2081 000c 0000     		.2byte	0
 2082 000e 0000     		.2byte	0
 2083 0010 00000000 		.4byte	.LFB0
 2084 0014 50000000 		.4byte	.LFE0-.LFB0
 2085 0018 00000000 		.4byte	.LFB1
 2086 001c 64000000 		.4byte	.LFE1-.LFB1
 2087 0020 00000000 		.4byte	.LFB2
 2088 0024 20000000 		.4byte	.LFE2-.LFB2
 2089 0028 00000000 		.4byte	.LFB3
 2090 002c 50000000 		.4byte	.LFE3-.LFB3
 2091 0030 00000000 		.4byte	.LFB4
 2092 0034 0C000000 		.4byte	.LFE4-.LFB4
 2093 0038 00000000 		.4byte	.LFB5
 2094 003c 18000000 		.4byte	.LFE5-.LFB5
 2095 0040 00000000 		.4byte	.LFB6
 2096 0044 0C000000 		.4byte	.LFE6-.LFB6
 2097 0048 00000000 		.4byte	.LFB7
 2098 004c 18000000 		.4byte	.LFE7-.LFB7
 2099 0050 00000000 		.4byte	.LFB8
 2100 0054 20000000 		.4byte	.LFE8-.LFB8
 2101 0058 00000000 		.4byte	.LFB9
 2102 005c 20000000 		.4byte	.LFE9-.LFB9
 2103 0060 00000000 		.4byte	.LFB10
 2104 0064 20000000 		.4byte	.LFE10-.LFB10
 2105 0068 00000000 		.4byte	.LFB11
 2106 006c 20000000 		.4byte	.LFE11-.LFB11
 2107 0070 00000000 		.4byte	.LFB12
 2108 0074 34000000 		.4byte	.LFE12-.LFB12
 2109 0078 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 60


 2110 007c 20000000 		.4byte	.LFE13-.LFB13
 2111 0080 00000000 		.4byte	.LFB14
 2112 0084 20000000 		.4byte	.LFE14-.LFB14
 2113 0088 00000000 		.4byte	.LFB15
 2114 008c 30000000 		.4byte	.LFE15-.LFB15
 2115 0090 00000000 		.4byte	.LFB16
 2116 0094 44000000 		.4byte	.LFE16-.LFB16
 2117 0098 00000000 		.4byte	.LFB17
 2118 009c 28000000 		.4byte	.LFE17-.LFB17
 2119 00a0 00000000 		.4byte	.LFB18
 2120 00a4 40000000 		.4byte	.LFE18-.LFB18
 2121 00a8 00000000 		.4byte	.LFB19
 2122 00ac 38000000 		.4byte	.LFE19-.LFB19
 2123 00b0 00000000 		.4byte	.LFB20
 2124 00b4 5C000000 		.4byte	.LFE20-.LFB20
 2125 00b8 00000000 		.4byte	.LFB21
 2126 00bc 18000000 		.4byte	.LFE21-.LFB21
 2127 00c0 00000000 		.4byte	.LFB22
 2128 00c4 18000000 		.4byte	.LFE22-.LFB22
 2129 00c8 00000000 		.4byte	.LFB23
 2130 00cc 28000000 		.4byte	.LFE23-.LFB23
 2131 00d0 00000000 		.4byte	.LFB24
 2132 00d4 38000000 		.4byte	.LFE24-.LFB24
 2133 00d8 00000000 		.4byte	0
 2134 00dc 00000000 		.4byte	0
 2135              		.section	.debug_ranges,"",%progbits
 2136              	.Ldebug_ranges0:
 2137 0000 00000000 		.4byte	.LFB0
 2138 0004 50000000 		.4byte	.LFE0
 2139 0008 00000000 		.4byte	.LFB1
 2140 000c 64000000 		.4byte	.LFE1
 2141 0010 00000000 		.4byte	.LFB2
 2142 0014 20000000 		.4byte	.LFE2
 2143 0018 00000000 		.4byte	.LFB3
 2144 001c 50000000 		.4byte	.LFE3
 2145 0020 00000000 		.4byte	.LFB4
 2146 0024 0C000000 		.4byte	.LFE4
 2147 0028 00000000 		.4byte	.LFB5
 2148 002c 18000000 		.4byte	.LFE5
 2149 0030 00000000 		.4byte	.LFB6
 2150 0034 0C000000 		.4byte	.LFE6
 2151 0038 00000000 		.4byte	.LFB7
 2152 003c 18000000 		.4byte	.LFE7
 2153 0040 00000000 		.4byte	.LFB8
 2154 0044 20000000 		.4byte	.LFE8
 2155 0048 00000000 		.4byte	.LFB9
 2156 004c 20000000 		.4byte	.LFE9
 2157 0050 00000000 		.4byte	.LFB10
 2158 0054 20000000 		.4byte	.LFE10
 2159 0058 00000000 		.4byte	.LFB11
 2160 005c 20000000 		.4byte	.LFE11
 2161 0060 00000000 		.4byte	.LFB12
 2162 0064 34000000 		.4byte	.LFE12
 2163 0068 00000000 		.4byte	.LFB13
 2164 006c 20000000 		.4byte	.LFE13
 2165 0070 00000000 		.4byte	.LFB14
 2166 0074 20000000 		.4byte	.LFE14
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 61


 2167 0078 00000000 		.4byte	.LFB15
 2168 007c 30000000 		.4byte	.LFE15
 2169 0080 00000000 		.4byte	.LFB16
 2170 0084 44000000 		.4byte	.LFE16
 2171 0088 00000000 		.4byte	.LFB17
 2172 008c 28000000 		.4byte	.LFE17
 2173 0090 00000000 		.4byte	.LFB18
 2174 0094 40000000 		.4byte	.LFE18
 2175 0098 00000000 		.4byte	.LFB19
 2176 009c 38000000 		.4byte	.LFE19
 2177 00a0 00000000 		.4byte	.LFB20
 2178 00a4 5C000000 		.4byte	.LFE20
 2179 00a8 00000000 		.4byte	.LFB21
 2180 00ac 18000000 		.4byte	.LFE21
 2181 00b0 00000000 		.4byte	.LFB22
 2182 00b4 18000000 		.4byte	.LFE22
 2183 00b8 00000000 		.4byte	.LFB23
 2184 00bc 28000000 		.4byte	.LFE23
 2185 00c0 00000000 		.4byte	.LFB24
 2186 00c4 38000000 		.4byte	.LFE24
 2187 00c8 00000000 		.4byte	0
 2188 00cc 00000000 		.4byte	0
 2189              		.section	.debug_line,"",%progbits
 2190              	.Ldebug_line0:
 2191 0000 74020000 		.section	.debug_str,"MS",%progbits,1
 2191      02004300 
 2191      00000201 
 2191      FB0E0D00 
 2191      01010101 
 2192              	.LASF15:
 2193 0000 72656733 		.ascii	"reg32\000"
 2193      3200
 2194              	.LASF34:
 2195 0006 53504953 		.ascii	"SPIS_WriteTxDataZero\000"
 2195      5F577269 
 2195      74655478 
 2195      44617461 
 2195      5A65726F 
 2196              	.LASF18:
 2197 001b 53504953 		.ascii	"SPIS_Start\000"
 2197      5F537461 
 2197      727400
 2198              	.LASF56:
 2199 0026 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\SPIS.c\000"
 2199      6E657261 
 2199      7465645F 
 2199      536F7572 
 2199      63655C50 
 2200              	.LASF50:
 2201 0046 53504953 		.ascii	"SPIS_SetInterruptMode\000"
 2201      5F536574 
 2201      496E7465 
 2201      72727570 
 2201      744D6F64 
 2202              	.LASF57:
 2203 005c 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\GitHub\\fre"
 2203      73657273 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 62


 2203      5C4C756B 
 2203      61732043 
 2203      72657574 
 2204 008a 65445350 		.ascii	"eDSPPSoC-I2C\\PSoC5_SPI_Master_DSP.cydsn\000"
 2204      50536F43 
 2204      2D493243 
 2204      5C50536F 
 2204      43355F53 
 2205              	.LASF54:
 2206 00b2 53504953 		.ascii	"SPIS_swStatusRx\000"
 2206      5F737753 
 2206      74617475 
 2206      73527800 
 2207              	.LASF32:
 2208 00c2 53504953 		.ascii	"SPIS_WriteTxData\000"
 2208      5F577269 
 2208      74655478 
 2208      44617461 
 2208      00
 2209              	.LASF25:
 2210 00d3 53504953 		.ascii	"SPIS_DisableRxInt\000"
 2210      5F446973 
 2210      61626C65 
 2210      5278496E 
 2210      7400
 2211              	.LASF53:
 2212 00e5 53504953 		.ascii	"SPIS_swStatusTx\000"
 2212      5F737753 
 2212      74617475 
 2212      73547800 
 2213              	.LASF36:
 2214 00f5 53504953 		.ascii	"SPIS_ReadRxData\000"
 2214      5F526561 
 2214      64527844 
 2214      61746100 
 2215              	.LASF42:
 2216 0105 53504953 		.ascii	"SPIS_ClearTxBuffer\000"
 2216      5F436C65 
 2216      61725478 
 2216      42756666 
 2216      657200
 2217              	.LASF30:
 2218 0118 53504953 		.ascii	"SPIS_ReadTxStatus\000"
 2218      5F526561 
 2218      64547853 
 2218      74617475 
 2218      7300
 2219              	.LASF41:
 2220 012a 53504953 		.ascii	"SPIS_ClearRxBuffer\000"
 2220      5F436C65 
 2220      61725278 
 2220      42756666 
 2220      657200
 2221              	.LASF37:
 2222 013d 72784461 		.ascii	"rxData\000"
 2222      746100
 2223              	.LASF40:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 63


 2224 0144 53504953 		.ascii	"SPIS_GetTxBufferSize\000"
 2224      5F476574 
 2224      54784275 
 2224      66666572 
 2224      53697A65 
 2225              	.LASF11:
 2226 0159 666C6F61 		.ascii	"float\000"
 2226      7400
 2227              	.LASF39:
 2228 015f 73697A65 		.ascii	"size\000"
 2228      00
 2229              	.LASF14:
 2230 0164 72656738 		.ascii	"reg8\000"
 2230      00
 2231              	.LASF5:
 2232 0169 6C6F6E67 		.ascii	"long unsigned int\000"
 2232      20756E73 
 2232      69676E65 
 2232      6420696E 
 2232      7400
 2233              	.LASF9:
 2234 017b 75696E74 		.ascii	"uint8\000"
 2234      3800
 2235              	.LASF23:
 2236 0181 53504953 		.ascii	"SPIS_EnableRxInt\000"
 2236      5F456E61 
 2236      626C6552 
 2236      78496E74 
 2236      00
 2237              	.LASF45:
 2238 0192 62797465 		.ascii	"byteCount\000"
 2238      436F756E 
 2238      7400
 2239              	.LASF21:
 2240 019c 656E6162 		.ascii	"enableInterrupts\000"
 2240      6C65496E 
 2240      74657272 
 2240      75707473 
 2240      00
 2241              	.LASF38:
 2242 01ad 53504953 		.ascii	"SPIS_GetRxBufferSize\000"
 2242      5F476574 
 2242      52784275 
 2242      66666572 
 2242      53697A65 
 2243              	.LASF1:
 2244 01c2 756E7369 		.ascii	"unsigned char\000"
 2244      676E6564 
 2244      20636861 
 2244      7200
 2245              	.LASF22:
 2246 01d0 53504953 		.ascii	"SPIS_EnableTxInt\000"
 2246      5F456E61 
 2246      626C6554 
 2246      78496E74 
 2246      00
 2247              	.LASF55:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 64


 2248 01e1 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2248      4320342E 
 2248      392E3320 
 2248      32303135 
 2248      30333033 
 2249 0214 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2249      20726576 
 2249      6973696F 
 2249      6E203232 
 2249      31323230 
 2250 0247 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2250      66756E63 
 2250      74696F6E 
 2250      2D736563 
 2250      74696F6E 
 2251              	.LASF12:
 2252 026f 646F7562 		.ascii	"double\000"
 2252      6C6500
 2253              	.LASF28:
 2254 0276 696E7453 		.ascii	"intSrc\000"
 2254      726300
 2255              	.LASF43:
 2256 027d 53504953 		.ascii	"SPIS_PutArray\000"
 2256      5F507574 
 2256      41727261 
 2256      7900
 2257              	.LASF19:
 2258 028b 53504953 		.ascii	"SPIS_Enable\000"
 2258      5F456E61 
 2258      626C6500 
 2259              	.LASF10:
 2260 0297 75696E74 		.ascii	"uint32\000"
 2260      333200
 2261              	.LASF52:
 2262 029e 53504953 		.ascii	"SPIS_initVar\000"
 2262      5F696E69 
 2262      74566172 
 2262      00
 2263              	.LASF8:
 2264 02ab 756E7369 		.ascii	"unsigned int\000"
 2264      676E6564 
 2264      20696E74 
 2264      00
 2265              	.LASF7:
 2266 02b8 6C6F6E67 		.ascii	"long long unsigned int\000"
 2266      206C6F6E 
 2266      6720756E 
 2266      7369676E 
 2266      65642069 
 2267              	.LASF17:
 2268 02cf 53504953 		.ascii	"SPIS_Init\000"
 2268      5F496E69 
 2268      7400
 2269              	.LASF24:
 2270 02d9 53504953 		.ascii	"SPIS_DisableTxInt\000"
 2270      5F446973 
 2270      61626C65 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 65


 2270      5478496E 
 2270      7400
 2271              	.LASF46:
 2272 02eb 62756649 		.ascii	"bufIndex\000"
 2272      6E646578 
 2272      00
 2273              	.LASF33:
 2274 02f4 74784461 		.ascii	"txData\000"
 2274      746100
 2275              	.LASF16:
 2276 02fb 73697A65 		.ascii	"sizetype\000"
 2276      74797065 
 2276      00
 2277              	.LASF49:
 2278 0304 53504953 		.ascii	"SPIS_DisableInt\000"
 2278      5F446973 
 2278      61626C65 
 2278      496E7400 
 2279              	.LASF6:
 2280 0314 6C6F6E67 		.ascii	"long long int\000"
 2280      206C6F6E 
 2280      6720696E 
 2280      7400
 2281              	.LASF31:
 2282 0322 53504953 		.ascii	"SPIS_ReadRxStatus\000"
 2282      5F526561 
 2282      64527853 
 2282      74617475 
 2282      7300
 2283              	.LASF13:
 2284 0334 63686172 		.ascii	"char\000"
 2284      00
 2285              	.LASF2:
 2286 0339 73686F72 		.ascii	"short int\000"
 2286      7420696E 
 2286      7400
 2287              	.LASF48:
 2288 0343 53504953 		.ascii	"SPIS_EnableInt\000"
 2288      5F456E61 
 2288      626C6549 
 2288      6E7400
 2289              	.LASF44:
 2290 0352 62756666 		.ascii	"buffer\000"
 2290      657200
 2291              	.LASF51:
 2292 0359 53504953 		.ascii	"SPIS_ReadStatus\000"
 2292      5F526561 
 2292      64537461 
 2292      74757300 
 2293              	.LASF4:
 2294 0369 6C6F6E67 		.ascii	"long int\000"
 2294      20696E74 
 2294      00
 2295              	.LASF29:
 2296 0372 746D7053 		.ascii	"tmpStatus\000"
 2296      74617475 
 2296      7300
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc95qapF.s 			page 66


 2297              	.LASF47:
 2298 037c 53504953 		.ascii	"SPIS_ClearFIFO\000"
 2298      5F436C65 
 2298      61724649 
 2298      464F00
 2299              	.LASF0:
 2300 038b 7369676E 		.ascii	"signed char\000"
 2300      65642063 
 2300      68617200 
 2301              	.LASF3:
 2302 0397 73686F72 		.ascii	"short unsigned int\000"
 2302      7420756E 
 2302      7369676E 
 2302      65642069 
 2302      6E7400
 2303              	.LASF20:
 2304 03aa 53504953 		.ascii	"SPIS_Stop\000"
 2304      5F53746F 
 2304      7000
 2305              	.LASF26:
 2306 03b4 53504953 		.ascii	"SPIS_SetTxInterruptMode\000"
 2306      5F536574 
 2306      5478496E 
 2306      74657272 
 2306      7570744D 
 2307              	.LASF35:
 2308 03cc 74784461 		.ascii	"txDataByte\000"
 2308      74614279 
 2308      746500
 2309              	.LASF27:
 2310 03d7 53504953 		.ascii	"SPIS_SetRxInterruptMode\000"
 2310      5F536574 
 2310      5278496E 
 2310      74657272 
 2310      7570744D 
 2311              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
