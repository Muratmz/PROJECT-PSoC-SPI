ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBFS_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USBFS_EP_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	USBFS_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	USBFS_EP_1_ISR, %function
  24              	USBFS_EP_1_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\USBFS_episr.c"
   1:.\Generated_Source\PSoC5/USBFS_episr.c **** /***************************************************************************//**
   2:.\Generated_Source\PSoC5/USBFS_episr.c **** * \file USBFS_episr.c
   3:.\Generated_Source\PSoC5/USBFS_episr.c **** * \version 3.0
   4:.\Generated_Source\PSoC5/USBFS_episr.c **** *
   5:.\Generated_Source\PSoC5/USBFS_episr.c **** * \brief
   6:.\Generated_Source\PSoC5/USBFS_episr.c **** *  This file contains the Data endpoint Interrupt Service Routines.
   7:.\Generated_Source\PSoC5/USBFS_episr.c **** *
   8:.\Generated_Source\PSoC5/USBFS_episr.c **** ********************************************************************************
   9:.\Generated_Source\PSoC5/USBFS_episr.c **** * \copyright
  10:.\Generated_Source\PSoC5/USBFS_episr.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  11:.\Generated_Source\PSoC5/USBFS_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  12:.\Generated_Source\PSoC5/USBFS_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  13:.\Generated_Source\PSoC5/USBFS_episr.c **** * the software package with which this file was provided.
  14:.\Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
  15:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  16:.\Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_pvt.h"
  17:.\Generated_Source\PSoC5/USBFS_episr.c **** #include "USBFS_cydmac.h"
  18:.\Generated_Source\PSoC5/USBFS_episr.c **** #include "cyapicallbacks.h"
  19:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  20:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  21:.\Generated_Source\PSoC5/USBFS_episr.c **** /***************************************
  22:.\Generated_Source\PSoC5/USBFS_episr.c **** * Custom Declarations
  23:.\Generated_Source\PSoC5/USBFS_episr.c **** ***************************************/
  24:.\Generated_Source\PSoC5/USBFS_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
  25:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  26:.\Generated_Source\PSoC5/USBFS_episr.c **** /* `#END` */
  27:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  28:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  29:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP1_ISR_ACTIVE)
  30:.\Generated_Source\PSoC5/USBFS_episr.c ****     /******************************************************************************
  31:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_1_ISR
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 2


  32:.\Generated_Source\PSoC5/USBFS_episr.c ****     ***************************************************************************//**
  33:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
  34:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  35:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
  36:.\Generated_Source\PSoC5/USBFS_episr.c ****     ******************************************************************************/
  37:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_1_ISR)
  38:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
  27              		.loc 1 38 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  39:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  40:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_ENTRY_CALLBACK
  41:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_EntryCallback();
  42:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_ENTRY_CALLBACK) */
  43:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  44:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  45:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  46:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  47:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  48:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
  49:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  50:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
  51:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
  52:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
  53:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
  54:.\Generated_Source\PSoC5/USBFS_episr.c ****     
  55:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP1_INTR);
  37              		.loc 1 55 0
  38 0004 104A     		ldr	r2, .L3
  39 0006 104B     		ldr	r3, .L3
  40 0008 1B78     		ldrb	r3, [r3]
  41 000a DBB2     		uxtb	r3, r3
  42 000c 23F00103 		bic	r3, r3, #1
  43 0010 DBB2     		uxtb	r3, r3
  44 0012 1370     		strb	r3, [r2]
  56:.\Generated_Source\PSoC5/USBFS_episr.c ****             
  57:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
  58:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
  59:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
  60:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
  61:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
  62:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP1].addr & USBFS_DIR_IN))
  63:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
  64:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
  65:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
  66:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP1].epCr0;
  45              		.loc 1 66 0
  46 0014 0D4B     		ldr	r3, .L3+4
  47 0016 9B7C     		ldrb	r3, [r3, #18]
  67:.\Generated_Source\PSoC5/USBFS_episr.c ****             
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 3


  68:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
  69:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP1) != USBFS_EP_TYPE_ISOC)
  48              		.loc 1 69 0
  49 0018 0D4B     		ldr	r3, .L3+8
  50 001a 1B7B     		ldrb	r3, [r3, #12]
  51 001c DBB2     		uxtb	r3, r3
  52 001e 03F00303 		and	r3, r3, #3
  53 0022 012B     		cmp	r3, #1
  54 0024 08D0     		beq	.L2
  70:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
  71:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP1].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
  55              		.loc 1 71 0
  56 0026 0A4B     		ldr	r3, .L3+8
  57 0028 DB7B     		ldrb	r3, [r3, #15]
  58 002a DBB2     		uxtb	r3, r3
  59 002c 83F07F03 		eor	r3, r3, #127
  60 0030 DB43     		mvns	r3, r3
  61 0032 DAB2     		uxtb	r2, r3
  62 0034 064B     		ldr	r3, .L3+8
  63 0036 DA73     		strb	r2, [r3, #15]
  64              	.L2:
  72:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
  73:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  74:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
  75:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
  76:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
  77:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
  78:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
  79:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
  80:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP1].apiEpState = USBFS_EVENT_PENDING;
  65              		.loc 1 80 0
  66 0038 054B     		ldr	r3, .L3+8
  67 003a 0122     		movs	r2, #1
  68 003c 5A73     		strb	r2, [r3, #13]
  81:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
  82:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  83:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
  84:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
  85:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
  86:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP1)
  87:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
  88:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
  89:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
  90:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
  91:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
  92:.\Generated_Source\PSoC5/USBFS_episr.c ****     
  93:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  94:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  95:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
  96:.\Generated_Source\PSoC5/USBFS_episr.c **** 
  97:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_1_ISR_EXIT_CALLBACK
  98:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_1_ISR_ExitCallback();
  99:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_1_ISR_EXIT_CALLBACK) */
 100:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 101:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 102:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 103:.\Generated_Source\PSoC5/USBFS_episr.c ****         
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 4


 104:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 105:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 106:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 107:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
  69              		.loc 1 107 0
  70 003e BD46     		mov	sp, r7
  71              		.cfi_def_cfa_register 13
  72              		@ sp needed
  73 0040 5DF8047B 		ldr	r7, [sp], #4
  74              		.cfi_restore 7
  75              		.cfi_def_cfa_offset 0
  76 0044 7047     		bx	lr
  77              	.L4:
  78 0046 00BF     		.align	2
  79              	.L3:
  80 0048 0B600040 		.word	1073766411
  81 004c FC5F0040 		.word	1073766396
  82 0050 00000000 		.word	USBFS_EP
  83              		.cfi_endproc
  84              	.LFE0:
  85              		.size	USBFS_EP_1_ISR, .-USBFS_EP_1_ISR
  86              		.section	.text.USBFS_EP_6_ISR,"ax",%progbits
  87              		.align	2
  88              		.global	USBFS_EP_6_ISR
  89              		.thumb
  90              		.thumb_func
  91              		.type	USBFS_EP_6_ISR, %function
  92              	USBFS_EP_6_ISR:
  93              	.LFB1:
 108:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 109:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP1_ISR_ACTIVE) */
 110:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 111:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 112:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP2_ISR_ACTIVE)
 113:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 114:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_2_ISR
 115:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 116:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 117:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 2 Interrupt Service Routine.
 118:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 119:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 120:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_2_ISR)
 121:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 122:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_ENTRY_CALLBACK
 123:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_EntryCallback();
 124:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_ENTRY_CALLBACK) */
 125:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 126:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 127:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 128:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 129:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 130:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 131:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 132:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 133:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 134:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 135:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 5


 136:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 137:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP2_INTR);
 138:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 139:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 140:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 141:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 142:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 143:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 144:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP2].addr & USBFS_DIR_IN))
 145:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO) */
 146:.\Generated_Source\PSoC5/USBFS_episr.c ****         {            
 147:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 148:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP2].epCr0;
 149:.\Generated_Source\PSoC5/USBFS_episr.c ****             
 150:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 151:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP2) != USBFS_EP_TYPE_ISOC)
 152:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 153:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP2].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 154:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 155:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 156:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 157:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 158:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 159:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 160:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 161:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 162:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP2].apiEpState = USBFS_EVENT_PENDING;
 163:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 164:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 165:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 166:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 167:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 168:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP2)
 169:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 170:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 171:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 172:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 173:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 174:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 175:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 176:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 177:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 178:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 179:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_2_ISR_EXIT_CALLBACK
 180:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_2_ISR_ExitCallback();
 181:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_2_ISR_EXIT_CALLBACK) */
 182:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 183:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 184:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 185:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 186:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 187:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 188:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 189:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 190:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP2_ISR_ACTIVE) */
 191:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 192:.\Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 6


 193:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP3_ISR_ACTIVE)
 194:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 195:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_3_ISR
 196:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 197:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 198:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 3 Interrupt Service Routine.
 199:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 200:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 201:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_3_ISR)
 202:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 203:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_ENTRY_CALLBACK
 204:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_EntryCallback();
 205:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_ENTRY_CALLBACK) */
 206:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 207:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 208:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 209:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 210:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 211:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 212:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 213:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 214:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 215:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 216:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 217:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 218:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP3_INTR);    
 219:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 220:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 221:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 222:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to be read from endpoint buffer. 
 223:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 224:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 225:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP3].addr & USBFS_DIR_IN))
 226:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 227:.\Generated_Source\PSoC5/USBFS_episr.c ****         {            
 228:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 229:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP3].epCr0;
 230:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 231:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 232:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP3) != USBFS_EP_TYPE_ISOC)
 233:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 234:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP3].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 235:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 236:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 237:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 238:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 239:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 240:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 241:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 242:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 243:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP3].apiEpState = USBFS_EVENT_PENDING;
 244:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 245:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 246:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 247:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 248:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 249:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP3)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 7


 250:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 251:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 252:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 253:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 254:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 255:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 256:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 257:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 258:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 259:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 260:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_3_ISR_EXIT_CALLBACK
 261:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_3_ISR_ExitCallback();
 262:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_3_ISR_EXIT_CALLBACK) */
 263:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 264:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 265:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 266:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 267:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 268:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 269:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 270:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 271:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP3_ISR_ACTIVE) */
 272:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 273:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 274:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP4_ISR_ACTIVE)
 275:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 276:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_4_ISR
 277:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 278:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 279:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 4 Interrupt Service Routine.
 280:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 281:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 282:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_4_ISR)
 283:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 284:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_ENTRY_CALLBACK
 285:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_EntryCallback();
 286:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_ENTRY_CALLBACK) */
 287:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 288:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 289:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 290:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 291:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 292:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 293:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 294:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 295:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 296:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 297:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 298:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 299:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP4_INTR);
 300:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 301:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 302:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 303:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 304:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 305:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 306:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP4].addr & USBFS_DIR_IN))
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 8


 307:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 308:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 309:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 310:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP4].epCr0;
 311:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 312:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 313:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP4) != USBFS_EP_TYPE_ISOC)
 314:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 315:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP4].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 316:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 317:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 318:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 319:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 320:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 321:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 322:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 323:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 324:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP4].apiEpState = USBFS_EVENT_PENDING;
 325:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 326:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 327:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 328:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 329:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 330:.\Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP4)
 331:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 332:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 333:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 334:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 335:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */        
 336:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 337:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 338:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 339:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 340:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 341:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_4_ISR_EXIT_CALLBACK
 342:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_4_ISR_ExitCallback();
 343:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_4_ISR_EXIT_CALLBACK) */
 344:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 345:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 346:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 347:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 348:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 349:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 350:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 351:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 352:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP4_ISR_ACTIVE) */
 353:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 354:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 355:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP5_ISR_ACTIVE)
 356:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 357:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_5_ISR
 358:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 359:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 360:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 361:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 362:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 363:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 9


 364:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_5_ISR)
 365:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 366:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_ENTRY_CALLBACK
 367:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_EntryCallback();
 368:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_ENTRY_CALLBACK) */
 369:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 370:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 371:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 372:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 373:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 374:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (defined(USBFS_ENABLE_MIDI_STREAMING) && !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && \
 375:.\Generated_Source\PSoC5/USBFS_episr.c ****                  USBFS_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 376:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 377:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 378:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 379:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 380:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 381:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP5_INTR);
 382:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 383:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 384:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 385:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 386:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 387:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 388:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP5].addr & USBFS_DIR_IN))
 389:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 390:.\Generated_Source\PSoC5/USBFS_episr.c ****         {            
 391:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 392:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP5].epCr0;
 393:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 394:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 395:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP5) != USBFS_EP_TYPE_ISOC)
 396:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 397:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP5].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 398:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 399:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 400:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 401:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 402:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 403:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 404:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 405:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 406:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP5].apiEpState = USBFS_EVENT_PENDING;
 407:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 408:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 409:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))        
 410:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 411:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 412:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP5)
 413:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 414:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 415:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 416:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 417:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 418:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 419:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 420:.\Generated_Source\PSoC5/USBFS_episr.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 10


 421:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 422:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 423:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_5_ISR_EXIT_CALLBACK
 424:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_5_ISR_ExitCallback();
 425:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_5_ISR_EXIT_CALLBACK) */
 426:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 427:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 428:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 429:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 430:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 431:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 432:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 433:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 434:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP5_ISR_ACTIVE) */
 435:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 436:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 437:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP6_ISR_ACTIVE)
 438:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 439:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_6_ISR
 440:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 441:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 442:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 6 Interrupt Service Routine.
 443:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 444:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 445:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 446:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_6_ISR)
 447:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
  94              		.loc 1 447 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99 0000 80B4     		push	{r7}
 100              		.cfi_def_cfa_offset 4
 101              		.cfi_offset 7, -4
 102 0002 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 448:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_ENTRY_CALLBACK
 449:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_EntryCallback();
 450:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_ENTRY_CALLBACK) */
 451:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 452:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 453:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 454:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 455:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 456:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 457:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 458:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 459:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 460:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 461:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 462:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 463:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP6_INTR);
 104              		.loc 1 463 0
 105 0004 124A     		ldr	r2, .L7
 106 0006 124B     		ldr	r3, .L7
 107 0008 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 11


 108 000a DBB2     		uxtb	r3, r3
 109 000c 23F02003 		bic	r3, r3, #32
 110 0010 DBB2     		uxtb	r3, r3
 111 0012 1370     		strb	r3, [r2]
 464:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 465:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 466:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 467:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 468:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 469:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 470:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP6].addr & USBFS_DIR_IN))
 471:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 472:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 473:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 474:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP6].epCr0;
 112              		.loc 1 474 0
 113 0014 0F4B     		ldr	r3, .L7+4
 114 0016 93F86230 		ldrb	r3, [r3, #98]
 475:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 476:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 477:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP6) != USBFS_EP_TYPE_ISOC)
 115              		.loc 1 477 0
 116 001a 0F4B     		ldr	r3, .L7+8
 117 001c 93F84830 		ldrb	r3, [r3, #72]
 118 0020 DBB2     		uxtb	r3, r3
 119 0022 03F00303 		and	r3, r3, #3
 120 0026 012B     		cmp	r3, #1
 121 0028 0AD0     		beq	.L6
 478:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 479:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP6].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 122              		.loc 1 479 0
 123 002a 0B4B     		ldr	r3, .L7+8
 124 002c 93F84B30 		ldrb	r3, [r3, #75]
 125 0030 DBB2     		uxtb	r3, r3
 126 0032 83F07F03 		eor	r3, r3, #127
 127 0036 DB43     		mvns	r3, r3
 128 0038 DAB2     		uxtb	r2, r3
 129 003a 074B     		ldr	r3, .L7+8
 130 003c 83F84B20 		strb	r2, [r3, #75]
 131              	.L6:
 480:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 481:.\Generated_Source\PSoC5/USBFS_episr.c ****             
 482:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 483:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 484:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 485:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 486:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 487:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 488:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP6].apiEpState = USBFS_EVENT_PENDING;
 132              		.loc 1 488 0
 133 0040 054B     		ldr	r3, .L7+8
 134 0042 0122     		movs	r2, #1
 135 0044 83F84920 		strb	r2, [r3, #73]
 489:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 490:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 491:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 492:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 12


 493:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 494:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP6)
 495:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 496:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 497:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 498:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 499:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 500:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 501:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 502:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 503:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 504:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 505:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_6_ISR_EXIT_CALLBACK
 506:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_6_ISR_ExitCallback();
 507:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_6_ISR_EXIT_CALLBACK) */
 508:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 509:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 510:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 511:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 512:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 513:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 514:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 515:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 136              		.loc 1 515 0
 137 0048 BD46     		mov	sp, r7
 138              		.cfi_def_cfa_register 13
 139              		@ sp needed
 140 004a 5DF8047B 		ldr	r7, [sp], #4
 141              		.cfi_restore 7
 142              		.cfi_def_cfa_offset 0
 143 004e 7047     		bx	lr
 144              	.L8:
 145              		.align	2
 146              	.L7:
 147 0050 0B600040 		.word	1073766411
 148 0054 FC5F0040 		.word	1073766396
 149 0058 00000000 		.word	USBFS_EP
 150              		.cfi_endproc
 151              	.LFE1:
 152              		.size	USBFS_EP_6_ISR, .-USBFS_EP_6_ISR
 153              		.section	.text.USBFS_BUS_RESET_ISR,"ax",%progbits
 154              		.align	2
 155              		.global	USBFS_BUS_RESET_ISR
 156              		.thumb
 157              		.thumb_func
 158              		.type	USBFS_BUS_RESET_ISR, %function
 159              	USBFS_BUS_RESET_ISR:
 160              	.LFB2:
 516:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP6_ISR_ACTIVE) */
 517:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 518:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 519:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP7_ISR_ACTIVE)
 520:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 521:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_7_ISR
 522:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 523:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 524:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 7 Interrupt Service Routine.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 13


 525:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 526:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 527:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 528:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_7_ISR)
 529:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 530:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_ENTRY_CALLBACK
 531:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_EntryCallback();
 532:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_ENTRY_CALLBACK) */
 533:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 534:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 535:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 536:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 537:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 538:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 539:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 540:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 541:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 542:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 543:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 544:.\Generated_Source\PSoC5/USBFS_episr.c ****     
 545:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP7_INTR);
 546:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 547:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 548:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 549:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 550:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 551:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 552:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP7].addr & USBFS_DIR_IN))
 553:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 554:.\Generated_Source\PSoC5/USBFS_episr.c ****         {           
 555:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
 556:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP7].epCr0;
 557:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 558:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 559:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP7) != USBFS_EP_TYPE_ISOC)
 560:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 561:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP7].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 562:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 563:.\Generated_Source\PSoC5/USBFS_episr.c ****             
 564:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 565:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 566:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 567:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 568:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 569:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 570:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP7].apiEpState = USBFS_EVENT_PENDING;
 571:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 572:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 573:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 574:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 575:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 576:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 577:.\Generated_Source\PSoC5/USBFS_episr.c ****             if(USBFS_midi_out_ep == USBFS_EP7)
 578:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 579:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 580:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 581:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 14


 582:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 583:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 584:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 585:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 586:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 587:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 588:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_7_ISR_EXIT_CALLBACK
 589:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_7_ISR_ExitCallback();
 590:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_7_ISR_EXIT_CALLBACK) */
 591:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 592:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 593:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 594:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 595:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 596:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 597:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 598:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 599:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP7_ISR_ACTIVE) */
 600:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 601:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 602:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_EP8_ISR_ACTIVE)
 603:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 604:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_EP_8_ISR
 605:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 606:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 607:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 608:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 609:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 610:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 611:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_EP_8_ISR)
 612:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 613:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_ENTRY_CALLBACK
 614:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_EntryCallback();
 615:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_ENTRY_CALLBACK) */
 616:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 617:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 618:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 619:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 620:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 621:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 622:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 623:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 624:.\Generated_Source\PSoC5/USBFS_episr.c ****             uint8 intEn = EA;
 625:.\Generated_Source\PSoC5/USBFS_episr.c ****             CyGlobalIntEnable;  /* Enable nested interrupts. */
 626:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 627:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 628:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieEpInterruptSource(USBFS_SIE_INT_EP8_INTR);
 629:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 630:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* Notifies user that transfer IN or OUT transfer is completed.
 631:.\Generated_Source\PSoC5/USBFS_episr.c ****         * IN endpoint: endpoint buffer can be reloaded, Host is read data.
 632:.\Generated_Source\PSoC5/USBFS_episr.c ****         * OUT endpoint: data is ready to read from endpoint buffer. 
 633:.\Generated_Source\PSoC5/USBFS_episr.c ****         */
 634:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)
 635:.\Generated_Source\PSoC5/USBFS_episr.c ****         if (0u != (USBFS_EP[USBFS_EP8].addr & USBFS_DIR_IN))
 636:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_MANAGEMENT_DMA_AUTO) */
 637:.\Generated_Source\PSoC5/USBFS_episr.c ****         {
 638:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Read CR0 register to clear SIE lock. */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 15


 639:.\Generated_Source\PSoC5/USBFS_episr.c ****             (void) USBFS_SIE_EP_BASE.sieEp[USBFS_EP8].epCr0;
 640:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 641:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* Toggle all endpoint types except ISOC. */
 642:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_GET_EP_TYPE(USBFS_EP8) != USBFS_EP_TYPE_ISOC)
 643:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 644:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_EP[USBFS_EP8].epToggle ^= USBFS_EPX_CNT_DATA_TOGGLE;
 645:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 646:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 647:.\Generated_Source\PSoC5/USBFS_episr.c ****             /* EP_MANAGEMENT_DMA_AUTO (Ticket ID# 214187): For OUT endpoint this event is used to n
 648:.\Generated_Source\PSoC5/USBFS_episr.c ****             * user that DMA has completed copying data from OUT endpoint which is not completely tr
 649:.\Generated_Source\PSoC5/USBFS_episr.c ****             * Because last chunk of data is being copied.
 650:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC 3/5LP: it is acceptable as DMA is really fast.
 651:.\Generated_Source\PSoC5/USBFS_episr.c ****             * For CY_PSOC4: this event is set in Arbiter interrupt (source is DMA_TERMIN).
 652:.\Generated_Source\PSoC5/USBFS_episr.c ****             */
 653:.\Generated_Source\PSoC5/USBFS_episr.c ****             USBFS_EP[USBFS_EP8].apiEpState = USBFS_EVENT_PENDING;
 654:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 655:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 656:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO))
 657:.\Generated_Source\PSoC5/USBFS_episr.c ****         #if (defined(USBFS_ENABLE_MIDI_STREAMING) && \
 658:.\Generated_Source\PSoC5/USBFS_episr.c ****             !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 659:.\Generated_Source\PSoC5/USBFS_episr.c ****             if (USBFS_midi_out_ep == USBFS_EP8)
 660:.\Generated_Source\PSoC5/USBFS_episr.c ****             {
 661:.\Generated_Source\PSoC5/USBFS_episr.c ****                 USBFS_MIDI_OUT_Service();
 662:.\Generated_Source\PSoC5/USBFS_episr.c ****             }
 663:.\Generated_Source\PSoC5/USBFS_episr.c ****         #endif /* (USBFS_ISR_SERVICE_MIDI_OUT) */
 664:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (!(CY_PSOC4 && USBFS_EP_MANAGEMENT_DMA_AUTO)) */
 665:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 666:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 667:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 668:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 669:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 670:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_EP_8_ISR_EXIT_CALLBACK
 671:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_EP_8_ISR_ExitCallback();
 672:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_EP_8_ISR_EXIT_CALLBACK) */
 673:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 674:.\Generated_Source\PSoC5/USBFS_episr.c ****     #if (CY_PSOC3 && defined(USBFS_ENABLE_MIDI_STREAMING) && \
 675:.\Generated_Source\PSoC5/USBFS_episr.c ****         !defined(USBFS_MAIN_SERVICE_MIDI_OUT) && USBFS_ISR_SERVICE_MIDI_OUT)
 676:.\Generated_Source\PSoC5/USBFS_episr.c ****         
 677:.\Generated_Source\PSoC5/USBFS_episr.c ****             EA = intEn; /* Restore nested interrupt configuration. */
 678:.\Generated_Source\PSoC5/USBFS_episr.c ****         }
 679:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (CY_PSOC3 && USBFS_ISR_SERVICE_MIDI_OUT) */
 680:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 681:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_EP8_ISR_ACTIVE) */
 682:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 683:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 684:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_SOF_ISR_ACTIVE)
 685:.\Generated_Source\PSoC5/USBFS_episr.c ****     /*******************************************************************************
 686:.\Generated_Source\PSoC5/USBFS_episr.c ****     * Function Name: USBFS_SOF_ISR
 687:.\Generated_Source\PSoC5/USBFS_episr.c ****     ****************************************************************************//**
 688:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 689:.\Generated_Source\PSoC5/USBFS_episr.c ****     *  Start of Frame Interrupt Service Routine.
 690:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 691:.\Generated_Source\PSoC5/USBFS_episr.c ****     *
 692:.\Generated_Source\PSoC5/USBFS_episr.c ****     *******************************************************************************/
 693:.\Generated_Source\PSoC5/USBFS_episr.c ****     CY_ISR(USBFS_SOF_ISR)
 694:.\Generated_Source\PSoC5/USBFS_episr.c ****     {
 695:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_ENTRY_CALLBACK
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 16


 696:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_EntryCallback();
 697:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_ENTRY_CALLBACK) */
 698:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 699:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#START SOF_USER_CODE` Place your code here */
 700:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 701:.\Generated_Source\PSoC5/USBFS_episr.c ****         /* `#END` */
 702:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 703:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_SOF_INTR);
 704:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 705:.\Generated_Source\PSoC5/USBFS_episr.c ****     #ifdef USBFS_SOF_ISR_EXIT_CALLBACK
 706:.\Generated_Source\PSoC5/USBFS_episr.c ****         USBFS_SOF_ISR_ExitCallback();
 707:.\Generated_Source\PSoC5/USBFS_episr.c ****     #endif /* (USBFS_SOF_ISR_EXIT_CALLBACK) */
 708:.\Generated_Source\PSoC5/USBFS_episr.c ****     }
 709:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_SOF_ISR_ACTIVE) */
 710:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 711:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 712:.\Generated_Source\PSoC5/USBFS_episr.c **** #if (USBFS_BUS_RESET_ISR_ACTIVE)
 713:.\Generated_Source\PSoC5/USBFS_episr.c **** /*******************************************************************************
 714:.\Generated_Source\PSoC5/USBFS_episr.c **** * Function Name: USBFS_BUS_RESET_ISR
 715:.\Generated_Source\PSoC5/USBFS_episr.c **** ****************************************************************************//**
 716:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 717:.\Generated_Source\PSoC5/USBFS_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 718:.\Generated_Source\PSoC5/USBFS_episr.c **** *  parameters as the last USER call to _Start
 719:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 720:.\Generated_Source\PSoC5/USBFS_episr.c **** *
 721:.\Generated_Source\PSoC5/USBFS_episr.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/USBFS_episr.c **** CY_ISR(USBFS_BUS_RESET_ISR)
 723:.\Generated_Source\PSoC5/USBFS_episr.c **** {
 161              		.loc 1 723 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 1, uses_anonymous_args = 0
 165 0000 80B5     		push	{r7, lr}
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 7, -8
 168              		.cfi_offset 14, -4
 169 0002 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
 724:.\Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_ENTRY_CALLBACK
 725:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_EntryCallback();
 726:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_ENTRY_CALLBACK) */
 727:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 728:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 729:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 730:.\Generated_Source\PSoC5/USBFS_episr.c ****     /* `#END` */
 731:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 732:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ClearSieInterruptSource(USBFS_INTR_SIE_BUS_RESET_INTR);
 733:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 734:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_ReInitComponent();
 171              		.loc 1 734 0
 172 0004 FFF7FEFF 		bl	USBFS_ReInitComponent
 735:.\Generated_Source\PSoC5/USBFS_episr.c **** 
 736:.\Generated_Source\PSoC5/USBFS_episr.c **** #ifdef USBFS_BUS_RESET_ISR_EXIT_CALLBACK
 737:.\Generated_Source\PSoC5/USBFS_episr.c ****     USBFS_BUS_RESET_ISR_ExitCallback();
 738:.\Generated_Source\PSoC5/USBFS_episr.c **** #endif /* (USBFS_BUS_RESET_ISR_EXIT_CALLBACK) */
 739:.\Generated_Source\PSoC5/USBFS_episr.c **** }
 173              		.loc 1 739 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 17


 174 0008 80BD     		pop	{r7, pc}
 175              		.cfi_endproc
 176              	.LFE2:
 177              		.size	USBFS_BUS_RESET_ISR, .-USBFS_BUS_RESET_ISR
 178 000a 00BF     		.text
 179              	.Letext0:
 180              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 181              		.file 3 ".\\Generated_Source\\PSoC5\\USBFS.h"
 182              		.file 4 ".\\Generated_Source\\PSoC5\\USBFS_pvt.h"
 183              		.section	.debug_info,"",%progbits
 184              	.Ldebug_info0:
 185 0000 09020000 		.4byte	0x209
 186 0004 0400     		.2byte	0x4
 187 0006 00000000 		.4byte	.Ldebug_abbrev0
 188 000a 04       		.byte	0x4
 189 000b 01       		.uleb128 0x1
 190 000c 20010000 		.4byte	.LASF35
 191 0010 01       		.byte	0x1
 192 0011 C3000000 		.4byte	.LASF36
 193 0015 06000000 		.4byte	.LASF37
 194 0019 00000000 		.4byte	.Ldebug_ranges0+0
 195 001d 00000000 		.4byte	0
 196 0021 00000000 		.4byte	.Ldebug_line0
 197 0025 02       		.uleb128 0x2
 198 0026 01       		.byte	0x1
 199 0027 06       		.byte	0x6
 200 0028 94020000 		.4byte	.LASF0
 201 002c 02       		.uleb128 0x2
 202 002d 01       		.byte	0x1
 203 002e 08       		.byte	0x8
 204 002f B5000000 		.4byte	.LASF1
 205 0033 02       		.uleb128 0x2
 206 0034 02       		.byte	0x2
 207 0035 05       		.byte	0x5
 208 0036 62020000 		.4byte	.LASF2
 209 003a 02       		.uleb128 0x2
 210 003b 02       		.byte	0x2
 211 003c 07       		.byte	0x7
 212 003d 62000000 		.4byte	.LASF3
 213 0041 02       		.uleb128 0x2
 214 0042 04       		.byte	0x4
 215 0043 05       		.byte	0x5
 216 0044 8B020000 		.4byte	.LASF4
 217 0048 02       		.uleb128 0x2
 218 0049 04       		.byte	0x4
 219 004a 07       		.byte	0x7
 220 004b FA000000 		.4byte	.LASF5
 221 004f 02       		.uleb128 0x2
 222 0050 08       		.byte	0x8
 223 0051 05       		.byte	0x5
 224 0052 44020000 		.4byte	.LASF6
 225 0056 02       		.uleb128 0x2
 226 0057 08       		.byte	0x8
 227 0058 07       		.byte	0x7
 228 0059 FD010000 		.4byte	.LASF7
 229 005d 03       		.uleb128 0x3
 230 005e 04       		.byte	0x4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 18


 231 005f 05       		.byte	0x5
 232 0060 696E7400 		.ascii	"int\000"
 233 0064 02       		.uleb128 0x2
 234 0065 04       		.byte	0x4
 235 0066 07       		.byte	0x7
 236 0067 F0010000 		.4byte	.LASF8
 237 006b 04       		.uleb128 0x4
 238 006c 6C020000 		.4byte	.LASF9
 239 0070 02       		.byte	0x2
 240 0071 9201     		.2byte	0x192
 241 0073 2C000000 		.4byte	0x2c
 242 0077 04       		.uleb128 0x4
 243 0078 D4010000 		.4byte	.LASF10
 244 007c 02       		.byte	0x2
 245 007d 9301     		.2byte	0x193
 246 007f 3A000000 		.4byte	0x3a
 247 0083 02       		.uleb128 0x2
 248 0084 04       		.byte	0x4
 249 0085 04       		.byte	0x4
 250 0086 5C000000 		.4byte	.LASF11
 251 008a 02       		.uleb128 0x2
 252 008b 08       		.byte	0x8
 253 008c 04       		.byte	0x4
 254 008d AE010000 		.4byte	.LASF12
 255 0091 02       		.uleb128 0x2
 256 0092 01       		.byte	0x1
 257 0093 08       		.byte	0x8
 258 0094 52020000 		.4byte	.LASF13
 259 0098 04       		.uleb128 0x4
 260 0099 EA000000 		.4byte	.LASF14
 261 009d 02       		.byte	0x2
 262 009e 3C02     		.2byte	0x23c
 263 00a0 A4000000 		.4byte	0xa4
 264 00a4 05       		.uleb128 0x5
 265 00a5 6B000000 		.4byte	0x6b
 266 00a9 02       		.uleb128 0x2
 267 00aa 04       		.byte	0x4
 268 00ab 07       		.byte	0x7
 269 00ac 2D020000 		.4byte	.LASF15
 270 00b0 06       		.uleb128 0x6
 271 00b1 0C       		.byte	0xc
 272 00b2 03       		.byte	0x3
 273 00b3 8C       		.byte	0x8c
 274 00b4 25010000 		.4byte	0x125
 275 00b8 07       		.uleb128 0x7
 276 00b9 36020000 		.4byte	.LASF16
 277 00bd 03       		.byte	0x3
 278 00be 8E       		.byte	0x8e
 279 00bf 6B000000 		.4byte	0x6b
 280 00c3 00       		.byte	0
 281 00c4 07       		.uleb128 0x7
 282 00c5 EF000000 		.4byte	.LASF17
 283 00c9 03       		.byte	0x3
 284 00ca 8F       		.byte	0x8f
 285 00cb 6B000000 		.4byte	0x6b
 286 00cf 01       		.byte	0x1
 287 00d0 07       		.uleb128 0x7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 19


 288 00d1 14020000 		.4byte	.LASF18
 289 00d5 03       		.byte	0x3
 290 00d6 90       		.byte	0x90
 291 00d7 6B000000 		.4byte	0x6b
 292 00db 02       		.byte	0x2
 293 00dc 07       		.uleb128 0x7
 294 00dd AC000000 		.4byte	.LASF19
 295 00e1 03       		.byte	0x3
 296 00e2 91       		.byte	0x91
 297 00e3 6B000000 		.4byte	0x6b
 298 00e7 03       		.byte	0x3
 299 00e8 07       		.uleb128 0x7
 300 00e9 0C010000 		.4byte	.LASF20
 301 00ed 03       		.byte	0x3
 302 00ee 92       		.byte	0x92
 303 00ef 6B000000 		.4byte	0x6b
 304 00f3 04       		.byte	0x4
 305 00f4 07       		.uleb128 0x7
 306 00f5 3D020000 		.4byte	.LASF21
 307 00f9 03       		.byte	0x3
 308 00fa 93       		.byte	0x93
 309 00fb 6B000000 		.4byte	0x6b
 310 00ff 05       		.byte	0x5
 311 0100 07       		.uleb128 0x7
 312 0101 C9010000 		.4byte	.LASF22
 313 0105 03       		.byte	0x3
 314 0106 94       		.byte	0x94
 315 0107 77000000 		.4byte	0x77
 316 010b 06       		.byte	0x6
 317 010c 07       		.uleb128 0x7
 318 010d 57020000 		.4byte	.LASF23
 319 0111 03       		.byte	0x3
 320 0112 95       		.byte	0x95
 321 0113 77000000 		.4byte	0x77
 322 0117 08       		.byte	0x8
 323 0118 07       		.uleb128 0x7
 324 0119 72020000 		.4byte	.LASF24
 325 011d 03       		.byte	0x3
 326 011e 96       		.byte	0x96
 327 011f 6B000000 		.4byte	0x6b
 328 0123 0A       		.byte	0xa
 329 0124 00       		.byte	0
 330 0125 08       		.uleb128 0x8
 331 0126 75000000 		.4byte	.LASF25
 332 012a 03       		.byte	0x3
 333 012b 97       		.byte	0x97
 334 012c B0000000 		.4byte	0xb0
 335 0130 06       		.uleb128 0x6
 336 0131 10       		.byte	0x10
 337 0132 03       		.byte	0x3
 338 0133 D3       		.byte	0xd3
 339 0134 69010000 		.4byte	0x169
 340 0138 07       		.uleb128 0x7
 341 0139 9E000000 		.4byte	.LASF26
 342 013d 03       		.byte	0x3
 343 013e D5       		.byte	0xd5
 344 013f 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 20


 345 0143 00       		.byte	0
 346 0144 07       		.uleb128 0x7
 347 0145 A5000000 		.4byte	.LASF27
 348 0149 03       		.byte	0x3
 349 014a D6       		.byte	0xd6
 350 014b 6B000000 		.4byte	0x6b
 351 014f 01       		.byte	0x1
 352 0150 07       		.uleb128 0x7
 353 0151 00000000 		.4byte	.LASF28
 354 0155 03       		.byte	0x3
 355 0156 D7       		.byte	0xd7
 356 0157 6B000000 		.4byte	0x6b
 357 015b 02       		.byte	0x2
 358 015c 09       		.uleb128 0x9
 359 015d 67617000 		.ascii	"gap\000"
 360 0161 03       		.byte	0x3
 361 0162 D8       		.byte	0xd8
 362 0163 69010000 		.4byte	0x169
 363 0167 03       		.byte	0x3
 364 0168 00       		.byte	0
 365 0169 0A       		.uleb128 0xa
 366 016a 6B000000 		.4byte	0x6b
 367 016e 79010000 		.4byte	0x179
 368 0172 0B       		.uleb128 0xb
 369 0173 A9000000 		.4byte	0xa9
 370 0177 0C       		.byte	0xc
 371 0178 00       		.byte	0
 372 0179 08       		.uleb128 0x8
 373 017a B5010000 		.4byte	.LASF29
 374 017e 03       		.byte	0x3
 375 017f D9       		.byte	0xd9
 376 0180 30010000 		.4byte	0x130
 377 0184 0C       		.uleb128 0xc
 378 0185 90       		.byte	0x90
 379 0186 03       		.byte	0x3
 380 0187 0D01     		.2byte	0x10d
 381 0189 9B010000 		.4byte	0x19b
 382 018d 0D       		.uleb128 0xd
 383 018e 11010000 		.4byte	.LASF30
 384 0192 03       		.byte	0x3
 385 0193 0F01     		.2byte	0x10f
 386 0195 9B010000 		.4byte	0x19b
 387 0199 00       		.byte	0
 388 019a 00       		.byte	0
 389 019b 0A       		.uleb128 0xa
 390 019c 79010000 		.4byte	0x179
 391 01a0 AB010000 		.4byte	0x1ab
 392 01a4 0B       		.uleb128 0xb
 393 01a5 A9000000 		.4byte	0xa9
 394 01a9 08       		.byte	0x8
 395 01aa 00       		.byte	0
 396 01ab 04       		.uleb128 0x4
 397 01ac DB010000 		.4byte	.LASF31
 398 01b0 03       		.byte	0x3
 399 01b1 1001     		.2byte	0x110
 400 01b3 84010000 		.4byte	0x184
 401 01b7 0E       		.uleb128 0xe
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 21


 402 01b8 1E020000 		.4byte	.LASF32
 403 01bc 01       		.byte	0x1
 404 01bd 25       		.byte	0x25
 405 01be 00000000 		.4byte	.LFB0
 406 01c2 54000000 		.4byte	.LFE0-.LFB0
 407 01c6 01       		.uleb128 0x1
 408 01c7 9C       		.byte	0x9c
 409 01c8 0F       		.uleb128 0xf
 410 01c9 7C020000 		.4byte	.LASF33
 411 01cd 01       		.byte	0x1
 412 01ce BE01     		.2byte	0x1be
 413 01d0 00000000 		.4byte	.LFB1
 414 01d4 5C000000 		.4byte	.LFE1-.LFB1
 415 01d8 01       		.uleb128 0x1
 416 01d9 9C       		.byte	0x9c
 417 01da 10       		.uleb128 0x10
 418 01db 8A000000 		.4byte	.LASF34
 419 01df 01       		.byte	0x1
 420 01e0 D202     		.2byte	0x2d2
 421 01e2 00000000 		.4byte	.LFB2
 422 01e6 0A000000 		.4byte	.LFE2-.LFB2
 423 01ea 01       		.uleb128 0x1
 424 01eb 9C       		.byte	0x9c
 425 01ec 0A       		.uleb128 0xa
 426 01ed 25010000 		.4byte	0x125
 427 01f1 FC010000 		.4byte	0x1fc
 428 01f5 0B       		.uleb128 0xb
 429 01f6 A9000000 		.4byte	0xa9
 430 01fa 08       		.byte	0x8
 431 01fb 00       		.byte	0
 432 01fc 11       		.uleb128 0x11
 433 01fd 17010000 		.4byte	.LASF38
 434 0201 04       		.byte	0x4
 435 0202 78       		.byte	0x78
 436 0203 07020000 		.4byte	0x207
 437 0207 05       		.uleb128 0x5
 438 0208 EC010000 		.4byte	0x1ec
 439 020c 00       		.byte	0
 440              		.section	.debug_abbrev,"",%progbits
 441              	.Ldebug_abbrev0:
 442 0000 01       		.uleb128 0x1
 443 0001 11       		.uleb128 0x11
 444 0002 01       		.byte	0x1
 445 0003 25       		.uleb128 0x25
 446 0004 0E       		.uleb128 0xe
 447 0005 13       		.uleb128 0x13
 448 0006 0B       		.uleb128 0xb
 449 0007 03       		.uleb128 0x3
 450 0008 0E       		.uleb128 0xe
 451 0009 1B       		.uleb128 0x1b
 452 000a 0E       		.uleb128 0xe
 453 000b 55       		.uleb128 0x55
 454 000c 17       		.uleb128 0x17
 455 000d 11       		.uleb128 0x11
 456 000e 01       		.uleb128 0x1
 457 000f 10       		.uleb128 0x10
 458 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 22


 459 0011 00       		.byte	0
 460 0012 00       		.byte	0
 461 0013 02       		.uleb128 0x2
 462 0014 24       		.uleb128 0x24
 463 0015 00       		.byte	0
 464 0016 0B       		.uleb128 0xb
 465 0017 0B       		.uleb128 0xb
 466 0018 3E       		.uleb128 0x3e
 467 0019 0B       		.uleb128 0xb
 468 001a 03       		.uleb128 0x3
 469 001b 0E       		.uleb128 0xe
 470 001c 00       		.byte	0
 471 001d 00       		.byte	0
 472 001e 03       		.uleb128 0x3
 473 001f 24       		.uleb128 0x24
 474 0020 00       		.byte	0
 475 0021 0B       		.uleb128 0xb
 476 0022 0B       		.uleb128 0xb
 477 0023 3E       		.uleb128 0x3e
 478 0024 0B       		.uleb128 0xb
 479 0025 03       		.uleb128 0x3
 480 0026 08       		.uleb128 0x8
 481 0027 00       		.byte	0
 482 0028 00       		.byte	0
 483 0029 04       		.uleb128 0x4
 484 002a 16       		.uleb128 0x16
 485 002b 00       		.byte	0
 486 002c 03       		.uleb128 0x3
 487 002d 0E       		.uleb128 0xe
 488 002e 3A       		.uleb128 0x3a
 489 002f 0B       		.uleb128 0xb
 490 0030 3B       		.uleb128 0x3b
 491 0031 05       		.uleb128 0x5
 492 0032 49       		.uleb128 0x49
 493 0033 13       		.uleb128 0x13
 494 0034 00       		.byte	0
 495 0035 00       		.byte	0
 496 0036 05       		.uleb128 0x5
 497 0037 35       		.uleb128 0x35
 498 0038 00       		.byte	0
 499 0039 49       		.uleb128 0x49
 500 003a 13       		.uleb128 0x13
 501 003b 00       		.byte	0
 502 003c 00       		.byte	0
 503 003d 06       		.uleb128 0x6
 504 003e 13       		.uleb128 0x13
 505 003f 01       		.byte	0x1
 506 0040 0B       		.uleb128 0xb
 507 0041 0B       		.uleb128 0xb
 508 0042 3A       		.uleb128 0x3a
 509 0043 0B       		.uleb128 0xb
 510 0044 3B       		.uleb128 0x3b
 511 0045 0B       		.uleb128 0xb
 512 0046 01       		.uleb128 0x1
 513 0047 13       		.uleb128 0x13
 514 0048 00       		.byte	0
 515 0049 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 23


 516 004a 07       		.uleb128 0x7
 517 004b 0D       		.uleb128 0xd
 518 004c 00       		.byte	0
 519 004d 03       		.uleb128 0x3
 520 004e 0E       		.uleb128 0xe
 521 004f 3A       		.uleb128 0x3a
 522 0050 0B       		.uleb128 0xb
 523 0051 3B       		.uleb128 0x3b
 524 0052 0B       		.uleb128 0xb
 525 0053 49       		.uleb128 0x49
 526 0054 13       		.uleb128 0x13
 527 0055 38       		.uleb128 0x38
 528 0056 0B       		.uleb128 0xb
 529 0057 00       		.byte	0
 530 0058 00       		.byte	0
 531 0059 08       		.uleb128 0x8
 532 005a 16       		.uleb128 0x16
 533 005b 00       		.byte	0
 534 005c 03       		.uleb128 0x3
 535 005d 0E       		.uleb128 0xe
 536 005e 3A       		.uleb128 0x3a
 537 005f 0B       		.uleb128 0xb
 538 0060 3B       		.uleb128 0x3b
 539 0061 0B       		.uleb128 0xb
 540 0062 49       		.uleb128 0x49
 541 0063 13       		.uleb128 0x13
 542 0064 00       		.byte	0
 543 0065 00       		.byte	0
 544 0066 09       		.uleb128 0x9
 545 0067 0D       		.uleb128 0xd
 546 0068 00       		.byte	0
 547 0069 03       		.uleb128 0x3
 548 006a 08       		.uleb128 0x8
 549 006b 3A       		.uleb128 0x3a
 550 006c 0B       		.uleb128 0xb
 551 006d 3B       		.uleb128 0x3b
 552 006e 0B       		.uleb128 0xb
 553 006f 49       		.uleb128 0x49
 554 0070 13       		.uleb128 0x13
 555 0071 38       		.uleb128 0x38
 556 0072 0B       		.uleb128 0xb
 557 0073 00       		.byte	0
 558 0074 00       		.byte	0
 559 0075 0A       		.uleb128 0xa
 560 0076 01       		.uleb128 0x1
 561 0077 01       		.byte	0x1
 562 0078 49       		.uleb128 0x49
 563 0079 13       		.uleb128 0x13
 564 007a 01       		.uleb128 0x1
 565 007b 13       		.uleb128 0x13
 566 007c 00       		.byte	0
 567 007d 00       		.byte	0
 568 007e 0B       		.uleb128 0xb
 569 007f 21       		.uleb128 0x21
 570 0080 00       		.byte	0
 571 0081 49       		.uleb128 0x49
 572 0082 13       		.uleb128 0x13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 24


 573 0083 2F       		.uleb128 0x2f
 574 0084 0B       		.uleb128 0xb
 575 0085 00       		.byte	0
 576 0086 00       		.byte	0
 577 0087 0C       		.uleb128 0xc
 578 0088 13       		.uleb128 0x13
 579 0089 01       		.byte	0x1
 580 008a 0B       		.uleb128 0xb
 581 008b 0B       		.uleb128 0xb
 582 008c 3A       		.uleb128 0x3a
 583 008d 0B       		.uleb128 0xb
 584 008e 3B       		.uleb128 0x3b
 585 008f 05       		.uleb128 0x5
 586 0090 01       		.uleb128 0x1
 587 0091 13       		.uleb128 0x13
 588 0092 00       		.byte	0
 589 0093 00       		.byte	0
 590 0094 0D       		.uleb128 0xd
 591 0095 0D       		.uleb128 0xd
 592 0096 00       		.byte	0
 593 0097 03       		.uleb128 0x3
 594 0098 0E       		.uleb128 0xe
 595 0099 3A       		.uleb128 0x3a
 596 009a 0B       		.uleb128 0xb
 597 009b 3B       		.uleb128 0x3b
 598 009c 05       		.uleb128 0x5
 599 009d 49       		.uleb128 0x49
 600 009e 13       		.uleb128 0x13
 601 009f 38       		.uleb128 0x38
 602 00a0 0B       		.uleb128 0xb
 603 00a1 00       		.byte	0
 604 00a2 00       		.byte	0
 605 00a3 0E       		.uleb128 0xe
 606 00a4 2E       		.uleb128 0x2e
 607 00a5 00       		.byte	0
 608 00a6 3F       		.uleb128 0x3f
 609 00a7 19       		.uleb128 0x19
 610 00a8 03       		.uleb128 0x3
 611 00a9 0E       		.uleb128 0xe
 612 00aa 3A       		.uleb128 0x3a
 613 00ab 0B       		.uleb128 0xb
 614 00ac 3B       		.uleb128 0x3b
 615 00ad 0B       		.uleb128 0xb
 616 00ae 27       		.uleb128 0x27
 617 00af 19       		.uleb128 0x19
 618 00b0 11       		.uleb128 0x11
 619 00b1 01       		.uleb128 0x1
 620 00b2 12       		.uleb128 0x12
 621 00b3 06       		.uleb128 0x6
 622 00b4 40       		.uleb128 0x40
 623 00b5 18       		.uleb128 0x18
 624 00b6 9742     		.uleb128 0x2117
 625 00b8 19       		.uleb128 0x19
 626 00b9 00       		.byte	0
 627 00ba 00       		.byte	0
 628 00bb 0F       		.uleb128 0xf
 629 00bc 2E       		.uleb128 0x2e
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 25


 630 00bd 00       		.byte	0
 631 00be 3F       		.uleb128 0x3f
 632 00bf 19       		.uleb128 0x19
 633 00c0 03       		.uleb128 0x3
 634 00c1 0E       		.uleb128 0xe
 635 00c2 3A       		.uleb128 0x3a
 636 00c3 0B       		.uleb128 0xb
 637 00c4 3B       		.uleb128 0x3b
 638 00c5 05       		.uleb128 0x5
 639 00c6 27       		.uleb128 0x27
 640 00c7 19       		.uleb128 0x19
 641 00c8 11       		.uleb128 0x11
 642 00c9 01       		.uleb128 0x1
 643 00ca 12       		.uleb128 0x12
 644 00cb 06       		.uleb128 0x6
 645 00cc 40       		.uleb128 0x40
 646 00cd 18       		.uleb128 0x18
 647 00ce 9742     		.uleb128 0x2117
 648 00d0 19       		.uleb128 0x19
 649 00d1 00       		.byte	0
 650 00d2 00       		.byte	0
 651 00d3 10       		.uleb128 0x10
 652 00d4 2E       		.uleb128 0x2e
 653 00d5 00       		.byte	0
 654 00d6 3F       		.uleb128 0x3f
 655 00d7 19       		.uleb128 0x19
 656 00d8 03       		.uleb128 0x3
 657 00d9 0E       		.uleb128 0xe
 658 00da 3A       		.uleb128 0x3a
 659 00db 0B       		.uleb128 0xb
 660 00dc 3B       		.uleb128 0x3b
 661 00dd 05       		.uleb128 0x5
 662 00de 27       		.uleb128 0x27
 663 00df 19       		.uleb128 0x19
 664 00e0 11       		.uleb128 0x11
 665 00e1 01       		.uleb128 0x1
 666 00e2 12       		.uleb128 0x12
 667 00e3 06       		.uleb128 0x6
 668 00e4 40       		.uleb128 0x40
 669 00e5 18       		.uleb128 0x18
 670 00e6 9642     		.uleb128 0x2116
 671 00e8 19       		.uleb128 0x19
 672 00e9 00       		.byte	0
 673 00ea 00       		.byte	0
 674 00eb 11       		.uleb128 0x11
 675 00ec 34       		.uleb128 0x34
 676 00ed 00       		.byte	0
 677 00ee 03       		.uleb128 0x3
 678 00ef 0E       		.uleb128 0xe
 679 00f0 3A       		.uleb128 0x3a
 680 00f1 0B       		.uleb128 0xb
 681 00f2 3B       		.uleb128 0x3b
 682 00f3 0B       		.uleb128 0xb
 683 00f4 49       		.uleb128 0x49
 684 00f5 13       		.uleb128 0x13
 685 00f6 3F       		.uleb128 0x3f
 686 00f7 19       		.uleb128 0x19
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 26


 687 00f8 3C       		.uleb128 0x3c
 688 00f9 19       		.uleb128 0x19
 689 00fa 00       		.byte	0
 690 00fb 00       		.byte	0
 691 00fc 00       		.byte	0
 692              		.section	.debug_aranges,"",%progbits
 693 0000 2C000000 		.4byte	0x2c
 694 0004 0200     		.2byte	0x2
 695 0006 00000000 		.4byte	.Ldebug_info0
 696 000a 04       		.byte	0x4
 697 000b 00       		.byte	0
 698 000c 0000     		.2byte	0
 699 000e 0000     		.2byte	0
 700 0010 00000000 		.4byte	.LFB0
 701 0014 54000000 		.4byte	.LFE0-.LFB0
 702 0018 00000000 		.4byte	.LFB1
 703 001c 5C000000 		.4byte	.LFE1-.LFB1
 704 0020 00000000 		.4byte	.LFB2
 705 0024 0A000000 		.4byte	.LFE2-.LFB2
 706 0028 00000000 		.4byte	0
 707 002c 00000000 		.4byte	0
 708              		.section	.debug_ranges,"",%progbits
 709              	.Ldebug_ranges0:
 710 0000 00000000 		.4byte	.LFB0
 711 0004 54000000 		.4byte	.LFE0
 712 0008 00000000 		.4byte	.LFB1
 713 000c 5C000000 		.4byte	.LFE1
 714 0010 00000000 		.4byte	.LFB2
 715 0014 0A000000 		.4byte	.LFE2
 716 0018 00000000 		.4byte	0
 717 001c 00000000 		.4byte	0
 718              		.section	.debug_line,"",%progbits
 719              	.Ldebug_line0:
 720 0000 B9000000 		.section	.debug_str,"MS",%progbits,1
 720      02006400 
 720      00000201 
 720      FB0E0D00 
 720      01010101 
 721              	.LASF28:
 722 0000 65704372 		.ascii	"epCr0\000"
 722      3000
 723              	.LASF37:
 724 0006 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\GitHub\\fre"
 724      73657273 
 724      5C4C756B 
 724      61732043 
 724      72657574 
 725 0034 65445350 		.ascii	"eDSPPSoC-I2C\\PSoC5_SPI_Master_DSP.cydsn\000"
 725      50536F43 
 725      2D493243 
 725      5C50536F 
 725      43355F53 
 726              	.LASF11:
 727 005c 666C6F61 		.ascii	"float\000"
 727      7400
 728              	.LASF3:
 729 0062 73686F72 		.ascii	"short unsigned int\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 27


 729      7420756E 
 729      7369676E 
 729      65642069 
 729      6E7400
 730              	.LASF25:
 731 0075 545F5553 		.ascii	"T_USBFS_EP_CTL_BLOCK\000"
 731      4246535F 
 731      45505F43 
 731      544C5F42 
 731      4C4F434B 
 732              	.LASF34:
 733 008a 55534246 		.ascii	"USBFS_BUS_RESET_ISR\000"
 733      535F4255 
 733      535F5245 
 733      5345545F 
 733      49535200 
 734              	.LASF26:
 735 009e 6570436E 		.ascii	"epCnt0\000"
 735      743000
 736              	.LASF27:
 737 00a5 6570436E 		.ascii	"epCnt1\000"
 737      743100
 738              	.LASF19:
 739 00ac 6570546F 		.ascii	"epToggle\000"
 739      67676C65 
 739      00
 740              	.LASF1:
 741 00b5 756E7369 		.ascii	"unsigned char\000"
 741      676E6564 
 741      20636861 
 741      7200
 742              	.LASF36:
 743 00c3 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\USBFS_episr.c\000"
 743      6E657261 
 743      7465645F 
 743      536F7572 
 743      63655C50 
 744              	.LASF14:
 745 00ea 72656738 		.ascii	"reg8\000"
 745      00
 746              	.LASF17:
 747 00ef 61706945 		.ascii	"apiEpState\000"
 747      70537461 
 747      746500
 748              	.LASF5:
 749 00fa 6C6F6E67 		.ascii	"long unsigned int\000"
 749      20756E73 
 749      69676E65 
 749      6420696E 
 749      7400
 750              	.LASF20:
 751 010c 61646472 		.ascii	"addr\000"
 751      00
 752              	.LASF30:
 753 0111 73696545 		.ascii	"sieEp\000"
 753      7000
 754              	.LASF38:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 28


 755 0117 55534246 		.ascii	"USBFS_EP\000"
 755      535F4550 
 755      00
 756              	.LASF35:
 757 0120 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 757      4320342E 
 757      392E3320 
 757      32303135 
 757      30333033 
 758 0153 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 758      20726576 
 758      6973696F 
 758      6E203232 
 758      31323230 
 759 0186 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 759      66756E63 
 759      74696F6E 
 759      2D736563 
 759      74696F6E 
 760              	.LASF12:
 761 01ae 646F7562 		.ascii	"double\000"
 761      6C6500
 762              	.LASF29:
 763 01b5 55534246 		.ascii	"USBFS_sie_ep_struct\000"
 763      535F7369 
 763      655F6570 
 763      5F737472 
 763      75637400 
 764              	.LASF22:
 765 01c9 62756666 		.ascii	"buffOffset\000"
 765      4F666673 
 765      657400
 766              	.LASF10:
 767 01d4 75696E74 		.ascii	"uint16\000"
 767      313600
 768              	.LASF31:
 769 01db 55534246 		.ascii	"USBFS_sie_eps_struct\000"
 769      535F7369 
 769      655F6570 
 769      735F7374 
 769      72756374 
 770              	.LASF8:
 771 01f0 756E7369 		.ascii	"unsigned int\000"
 771      676E6564 
 771      20696E74 
 771      00
 772              	.LASF7:
 773 01fd 6C6F6E67 		.ascii	"long long unsigned int\000"
 773      206C6F6E 
 773      6720756E 
 773      7369676E 
 773      65642069 
 774              	.LASF18:
 775 0214 68774570 		.ascii	"hwEpState\000"
 775      53746174 
 775      6500
 776              	.LASF32:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cchcuuO5.s 			page 29


 777 021e 55534246 		.ascii	"USBFS_EP_1_ISR\000"
 777      535F4550 
 777      5F315F49 
 777      535200
 778              	.LASF15:
 779 022d 73697A65 		.ascii	"sizetype\000"
 779      74797065 
 779      00
 780              	.LASF16:
 781 0236 61747472 		.ascii	"attrib\000"
 781      696200
 782              	.LASF21:
 783 023d 65704D6F 		.ascii	"epMode\000"
 783      646500
 784              	.LASF6:
 785 0244 6C6F6E67 		.ascii	"long long int\000"
 785      206C6F6E 
 785      6720696E 
 785      7400
 786              	.LASF13:
 787 0252 63686172 		.ascii	"char\000"
 787      00
 788              	.LASF23:
 789 0257 62756666 		.ascii	"bufferSize\000"
 789      65725369 
 789      7A6500
 790              	.LASF2:
 791 0262 73686F72 		.ascii	"short int\000"
 791      7420696E 
 791      7400
 792              	.LASF9:
 793 026c 75696E74 		.ascii	"uint8\000"
 793      3800
 794              	.LASF24:
 795 0272 696E7465 		.ascii	"interface\000"
 795      72666163 
 795      6500
 796              	.LASF33:
 797 027c 55534246 		.ascii	"USBFS_EP_6_ISR\000"
 797      535F4550 
 797      5F365F49 
 797      535200
 798              	.LASF4:
 799 028b 6C6F6E67 		.ascii	"long int\000"
 799      20696E74 
 799      00
 800              	.LASF0:
 801 0294 7369676E 		.ascii	"signed char\000"
 801      65642063 
 801      68617200 
 802              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
