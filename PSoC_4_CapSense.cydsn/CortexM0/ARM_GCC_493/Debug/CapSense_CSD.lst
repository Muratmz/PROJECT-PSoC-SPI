ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSD.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	CapSense_CSD_lowLevelTuningDone
  18              		.bss
  19              		.type	CapSense_CSD_lowLevelTuningDone, %object
  20              		.size	CapSense_CSD_lowLevelTuningDone, 1
  21              	CapSense_CSD_lowLevelTuningDone:
  22 0000 00       		.space	1
  23              		.comm	CapSense_CSD_scanSpeedTbl,2,4
  24              		.global	CapSense_CSD_prescalersTuningDone
  25              		.type	CapSense_CSD_prescalersTuningDone, %object
  26              		.size	CapSense_CSD_prescalersTuningDone, 1
  27              	CapSense_CSD_prescalersTuningDone:
  28 0001 00       		.space	1
  29              		.global	CapSense_CSD_csdStatusVar
  30              		.type	CapSense_CSD_csdStatusVar, %object
  31              		.size	CapSense_CSD_csdStatusVar, 1
  32              	CapSense_CSD_csdStatusVar:
  33 0002 00       		.space	1
  34              		.global	CapSense_CSD_sensorIndex
  35              		.type	CapSense_CSD_sensorIndex, %object
  36              		.size	CapSense_CSD_sensorIndex, 1
  37              	CapSense_CSD_sensorIndex:
  38 0003 00       		.space	1
  39              		.global	CapSense_CSD_sensorRaw
  40              		.align	2
  41              		.type	CapSense_CSD_sensorRaw, %object
  42              		.size	CapSense_CSD_sensorRaw, 24
  43              	CapSense_CSD_sensorRaw:
  44 0004 00000000 		.space	24
  44      00000000 
  44      00000000 
  44      00000000 
  44      00000000 
  45              		.comm	CapSense_CSD_csdTrim1,1,1
  46              		.comm	CapSense_CSD_unscannedSnsDriveMode,12,4
  47              		.comm	CapSense_CSD_sensorEnableMaskBackup,2,4
  48              		.global	CapSense_CSD_sensorEnableMask
  49              		.data
  50              		.align	2
  51              		.type	CapSense_CSD_sensorEnableMask, %object
  52              		.size	CapSense_CSD_sensorEnableMask, 2
  53              	CapSense_CSD_sensorEnableMask:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 2


  54 0000 FF       		.byte	-1
  55 0001 0F       		.byte	15
  56              		.global	CapSense_CSD_pcTable
  57 0002 0000     		.align	2
  58              		.type	CapSense_CSD_pcTable, %object
  59              		.size	CapSense_CSD_pcTable, 48
  60              	CapSense_CSD_pcTable:
  61 0004 08000440 		.word	1074003976
  62 0008 08000440 		.word	1074003976
  63 000c 08000440 		.word	1074003976
  64 0010 08000440 		.word	1074003976
  65 0014 08000440 		.word	1074003976
  66 0018 08000440 		.word	1074003976
  67 001c 08000440 		.word	1074003976
  68 0020 08000440 		.word	1074003976
  69 0024 08010440 		.word	1074004232
  70 0028 08010440 		.word	1074004232
  71 002c 08010440 		.word	1074004232
  72 0030 08010440 		.word	1074004232
  73              		.global	CapSense_CSD_portTable
  74              		.section	.rodata
  75              		.align	2
  76              		.type	CapSense_CSD_portTable, %object
  77              		.size	CapSense_CSD_portTable, 12
  78              	CapSense_CSD_portTable:
  79 0000 00       		.byte	0
  80 0001 00       		.byte	0
  81 0002 00       		.byte	0
  82 0003 00       		.byte	0
  83 0004 00       		.byte	0
  84 0005 00       		.byte	0
  85 0006 00       		.byte	0
  86 0007 00       		.byte	0
  87 0008 01       		.byte	1
  88 0009 01       		.byte	1
  89 000a 01       		.byte	1
  90 000b 01       		.byte	1
  91              		.global	CapSense_CSD_maskTable
  92              		.align	2
  93              		.type	CapSense_CSD_maskTable, %object
  94              		.size	CapSense_CSD_maskTable, 48
  95              	CapSense_CSD_maskTable:
  96 000c 01000000 		.word	1
  97 0010 02000000 		.word	2
  98 0014 04000000 		.word	4
  99 0018 08000000 		.word	8
 100 001c 10000000 		.word	16
 101 0020 20000000 		.word	32
 102 0024 40000000 		.word	64
 103 0028 80000000 		.word	128
 104 002c 01000000 		.word	1
 105 0030 02000000 		.word	2
 106 0034 04000000 		.word	4
 107 0038 08000000 		.word	8
 108              		.global	CapSense_CSD_pinShiftTbl
 109              		.align	2
 110              		.type	CapSense_CSD_pinShiftTbl, %object
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 3


 111              		.size	CapSense_CSD_pinShiftTbl, 12
 112              	CapSense_CSD_pinShiftTbl:
 113 003c 00       		.byte	0
 114 003d 01       		.byte	1
 115 003e 02       		.byte	2
 116 003f 03       		.byte	3
 117 0040 04       		.byte	4
 118 0041 05       		.byte	5
 119 0042 06       		.byte	6
 120 0043 07       		.byte	7
 121 0044 00       		.byte	0
 122 0045 01       		.byte	1
 123 0046 02       		.byte	2
 124 0047 03       		.byte	3
 125              		.comm	CapSense_CSD_modulationIDAC,12,4
 126              		.comm	CapSense_CSD_compensationIDAC,12,4
 127              		.global	CapSense_CSD_widgetResolution
 128              		.data
 129              		.align	2
 130              		.type	CapSense_CSD_widgetResolution, %object
 131              		.size	CapSense_CSD_widgetResolution, 4
 132              	CapSense_CSD_widgetResolution:
 133 0034 0000FF0F 		.word	268369920
 134              		.comm	CapSense_CSD_senseClkDividerVal,12,4
 135              		.comm	CapSense_CSD_sampleClkDividerVal,12,4
 136              		.global	CapSense_CSD_widgetNumber
 137              		.section	.rodata
 138              		.align	2
 139              		.type	CapSense_CSD_widgetNumber, %object
 140              		.size	CapSense_CSD_widgetNumber, 12
 141              	CapSense_CSD_widgetNumber:
 142 0048 00000000 		.space	12
 142      00000000 
 142      00000000 
 143              		.global	CapSense_CSD_prtSelTbl
 144              		.align	2
 145              		.type	CapSense_CSD_prtSelTbl, %object
 146              		.size	CapSense_CSD_prtSelTbl, 20
 147              	CapSense_CSD_prtSelTbl:
 148 0054 00000140 		.word	1073807360
 149 0058 04000140 		.word	1073807364
 150 005c 08000140 		.word	1073807368
 151 0060 0C000140 		.word	1073807372
 152 0064 10000140 		.word	1073807376
 153              		.global	CapSense_CSD_prtCfgTbl
 154              		.align	2
 155              		.type	CapSense_CSD_prtCfgTbl, %object
 156              		.size	CapSense_CSD_prtCfgTbl, 20
 157              	CapSense_CSD_prtCfgTbl:
 158 0068 08000440 		.word	1074003976
 159 006c 08010440 		.word	1074004232
 160 0070 08020440 		.word	1074004488
 161 0074 08030440 		.word	1074004744
 162 0078 08040440 		.word	1074005000
 163              		.global	CapSense_CSD_prtDRTbl
 164              		.align	2
 165              		.type	CapSense_CSD_prtDRTbl, %object
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 4


 166              		.size	CapSense_CSD_prtDRTbl, 20
 167              	CapSense_CSD_prtDRTbl:
 168 007c 00000440 		.word	1074003968
 169 0080 00010440 		.word	1074004224
 170 0084 00020440 		.word	1074004480
 171 0088 00030440 		.word	1074004736
 172 008c 00040440 		.word	1074004992
 173              		.section	.text.CapSense_CSD_Init,"ax",%progbits
 174              		.align	2
 175              		.global	CapSense_CSD_Init
 176              		.code	16
 177              		.thumb_func
 178              		.type	CapSense_CSD_Init, %function
 179              	CapSense_CSD_Init:
 180              	.LFB34:
 181              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSD.c"
   1:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSD.c **** * File Name: CapSense_CSD.c
   3:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This file provides the source code for scanning APIs for the CapSense CSD
   7:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  component.
   8:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSD.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSD.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSD.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSD.c **** #include "CapSense_CSD.h"
  19:.\Generated_Source\PSoC4/CapSense_CSD.c **** #include "CapSense_CSD_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSD.c **** #include "cypins.h"
  21:.\Generated_Source\PSoC4/CapSense_CSD.c **** #include "cyapicallbacks.h"
  22:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  23:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if(0u != CapSense_CSD_CSHL_API_GENERATE)
  24:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #include "CapSense_CSD_CSHL.h"
  25:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (0u != CapSense_CSD_CSHL_API_GENERATE) */
  26:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  27:.\Generated_Source\PSoC4/CapSense_CSD.c **** /* This definition is intended to prevent unexpected linker error.
  28:.\Generated_Source\PSoC4/CapSense_CSD.c ****    For more details please see the IAR Technical Note 49981 */
  29:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if defined(__ICCARM__)
  30:.\Generated_Source\PSoC4/CapSense_CSD.c ****     extern void CapSense_CSD_EnableSensor(uint32 sensor);
  31:.\Generated_Source\PSoC4/CapSense_CSD.c ****     extern void CapSense_CSD_DisableSensor(uint32 sensor);
  32:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (__ICCARM__) */
  33:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  34:.\Generated_Source\PSoC4/CapSense_CSD.c **** /* SmartSense functions */
  35:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  36:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8 CapSense_CSD_lowLevelTuningDone = 0u;
  37:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8 CapSense_CSD_scanSpeedTbl[((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u];
  38:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  39:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  40:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if(CapSense_CSD_PRS_OPTIONS != CapSense_CSD__PRS_NONE)
  41:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8 CapSense_CSD_prescalersTuningDone = 0u;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 5


  42:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_PRS_OPTIONS == CapSense_CSD__PRS_NONE) */
  43:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSD.c **** /* Global software variables */
  45:.\Generated_Source\PSoC4/CapSense_CSD.c **** volatile uint8 CapSense_CSD_csdStatusVar = 0u;   /* CapSense CSD status, variable */
  46:.\Generated_Source\PSoC4/CapSense_CSD.c **** volatile uint8 CapSense_CSD_sensorIndex = 0u;    /* Index of scannig sensor */
  47:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  48:.\Generated_Source\PSoC4/CapSense_CSD.c **** /* Global array of Raw Counts */
  49:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  50:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  51:.\Generated_Source\PSoC4/CapSense_CSD.c **** /* Backup variables for trim registers*/
  52:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_IDAC1_POLARITY == CapSense_CSD__IDAC_SINK)
  53:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8 CapSense_CSD_csdTrim2;
  54:.\Generated_Source\PSoC4/CapSense_CSD.c **** #else
  55:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8 CapSense_CSD_csdTrim1;
  56:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_IDAC1_POLARITY == CapSense_CSD__IDAC_SINK) */
  57:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  58:.\Generated_Source\PSoC4/CapSense_CSD.c **** /* Global array of un-scanned sensors state */
  59:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint8 CapSense_CSD_unscannedSnsDriveMode[CapSense_CSD_PORT_PIN_CONFIG_TBL_ZISE];
  60:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  61:.\Generated_Source\PSoC4/CapSense_CSD.c **** /* Backup array for CapSense_CSD_sensorEnableMask */
  62:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint8 CapSense_CSD_sensorEnableMaskBackup[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  63:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSD.c **** /* Configured constants and arrays by Customizer */
  65:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint8 CapSense_CSD_sensorEnableMask[(((CapSense_CSD_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  66:.\Generated_Source\PSoC4/CapSense_CSD.c **** 0xFFu, 0xFu, };
  67:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSD.c **** reg32 * CapSense_CSD_pcTable[] = {
  69:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e0__LS__PC, 
  70:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e1__LS__PC, 
  71:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e2__LS__PC, 
  72:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e3__LS__PC, 
  73:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e4__LS__PC, 
  74:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e5__LS__PC, 
  75:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e6__LS__PC, 
  76:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e7__LS__PC, 
  77:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e8__LS__PC, 
  78:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e9__LS__PC, 
  79:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e10__LS__PC, 
  80:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (reg32 *)CapSense_CSD_Sns__LinearSlider0_e11__LS__PC, 
  81:.\Generated_Source\PSoC4/CapSense_CSD.c **** };
  82:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  83:.\Generated_Source\PSoC4/CapSense_CSD.c **** const uint8 CapSense_CSD_portTable[] = {
  84:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e0__LS__PORT, 
  85:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e1__LS__PORT, 
  86:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e2__LS__PORT, 
  87:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e3__LS__PORT, 
  88:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e4__LS__PORT, 
  89:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e5__LS__PORT, 
  90:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e6__LS__PORT, 
  91:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e7__LS__PORT, 
  92:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e8__LS__PORT, 
  93:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e9__LS__PORT, 
  94:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e10__LS__PORT, 
  95:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e11__LS__PORT, 
  96:.\Generated_Source\PSoC4/CapSense_CSD.c **** };
  97:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
  98:.\Generated_Source\PSoC4/CapSense_CSD.c **** const uint32 CapSense_CSD_maskTable[] = {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 6


  99:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e0__LS__MASK, 
 100:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e1__LS__MASK, 
 101:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e2__LS__MASK, 
 102:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e3__LS__MASK, 
 103:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e4__LS__MASK, 
 104:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e5__LS__MASK, 
 105:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e6__LS__MASK, 
 106:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e7__LS__MASK, 
 107:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e8__LS__MASK, 
 108:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e9__LS__MASK, 
 109:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e10__LS__MASK, 
 110:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Sns__LinearSlider0_e11__LS__MASK, 
 111:.\Generated_Source\PSoC4/CapSense_CSD.c **** };
 112:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 113:.\Generated_Source\PSoC4/CapSense_CSD.c **** const uint8 CapSense_CSD_pinShiftTbl[] = {
 114:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e0__LS__SHIFT, 
 115:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e1__LS__SHIFT, 
 116:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e2__LS__SHIFT, 
 117:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e3__LS__SHIFT, 
 118:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e4__LS__SHIFT, 
 119:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e5__LS__SHIFT, 
 120:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e6__LS__SHIFT, 
 121:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e7__LS__SHIFT, 
 122:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e8__LS__SHIFT, 
 123:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e9__LS__SHIFT, 
 124:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e10__LS__SHIFT, 
 125:.\Generated_Source\PSoC4/CapSense_CSD.c ****     (uint8) CapSense_CSD_Sns__LinearSlider0_e11__LS__SHIFT, 
 126:.\Generated_Source\PSoC4/CapSense_CSD.c **** };
 127:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 128:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint8 CapSense_CSD_modulationIDAC[CapSense_CSD_TOTAL_SENSOR_COUNT];
 129:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint8 CapSense_CSD_compensationIDAC[CapSense_CSD_TOTAL_SENSOR_COUNT];
 130:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 131:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint32 CapSense_CSD_widgetResolution[CapSense_CSD_RESOLUTIONS_TBL_SIZE] = {
 132:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_RESOLUTION_12_BITS,
 133:.\Generated_Source\PSoC4/CapSense_CSD.c **** };
 134:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 135:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint8 CapSense_CSD_senseClkDividerVal[CapSense_CSD_TOTAL_SCANSLOT_COUNT];
 136:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint8 CapSense_CSD_sampleClkDividerVal[CapSense_CSD_TOTAL_SCANSLOT_COUNT];
 137:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 138:.\Generated_Source\PSoC4/CapSense_CSD.c **** const uint8 CapSense_CSD_widgetNumber[CapSense_CSD_TOTAL_SENSOR_COUNT] = {
 139:.\Generated_Source\PSoC4/CapSense_CSD.c ****     0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, /* LinearSlider0__LS */
 140:.\Generated_Source\PSoC4/CapSense_CSD.c **** };
 141:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 142:.\Generated_Source\PSoC4/CapSense_CSD.c **** reg32* const CapSense_CSD_prtSelTbl[CapSense_CSD_CFG_REG_TBL_SIZE] = {
 143:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL0),
 144:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL1),
 145:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL2),
 146:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL3),
 147:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ((reg32 *) CYREG_HSIOM_PORT_SEL4),
 148:.\Generated_Source\PSoC4/CapSense_CSD.c **** };
 149:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 150:.\Generated_Source\PSoC4/CapSense_CSD.c **** reg32* const CapSense_CSD_prtCfgTbl[CapSense_CSD_CFG_REG_TBL_SIZE] = {
 151:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ((reg32 *) CYREG_PRT0_PC),
 152:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ((reg32 *) CYREG_PRT1_PC),
 153:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ((reg32 *) CYREG_PRT2_PC),
 154:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ((reg32 *) CYREG_PRT3_PC),
 155:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ((reg32 *) CYREG_PRT4_PC),
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 7


 156:.\Generated_Source\PSoC4/CapSense_CSD.c **** };
 157:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 158:.\Generated_Source\PSoC4/CapSense_CSD.c **** reg32* const CapSense_CSD_prtDRTbl[CapSense_CSD_CFG_REG_TBL_SIZE] = {
 159:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ((reg32 *) CYREG_PRT0_DR),
 160:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ((reg32 *) CYREG_PRT1_DR),
 161:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ((reg32 *) CYREG_PRT2_DR),
 162:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ((reg32 *) CYREG_PRT3_DR),
 163:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ((reg32 *) CYREG_PRT4_DR),
 164:.\Generated_Source\PSoC4/CapSense_CSD.c **** };
 165:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 166:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 167:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 168:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 169:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_Init
 170:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 171:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 172:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 173:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  API initializes default CapSense configuration provided by the customizer that defines
 174:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  the mode of component operations and resets all the sensors to an inactive state.
 175:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 176:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 177:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 178:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 179:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 180:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 181:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 182:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 183:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_immunityIndex - defines immunity level.
 184:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 185:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 186:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 187:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 188:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 189:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_Init(void)
 190:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 182              		.loc 1 190 0
 183              		.cfi_startproc
 184 0000 80B5     		push	{r7, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 82B0     		sub	sp, sp, #8
 189              		.cfi_def_cfa_offset 16
 190 0004 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
 191:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 curSensor;
 192:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 193:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if(CapSense_CSD_IS_SHIELD_ENABLE)
 194:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 195:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #if((CapSense_CSD_CSH_TANK_PREGARGE_OPTION == CapSense_CSD__CAPPRIOBUF) || (0u != CapSense_
 196:.\Generated_Source\PSoC4/CapSense_CSD.c ****             uint32 newRegValue;
 197:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 198:.\Generated_Source\PSoC4/CapSense_CSD.c ****             newRegValue = CapSense_CSD_CTANK_CONNECTION_REG;
 199:.\Generated_Source\PSoC4/CapSense_CSD.c ****             newRegValue &= ~(CapSense_CSD_CSD_CTANK_CONNECTION_MASK);
 200:.\Generated_Source\PSoC4/CapSense_CSD.c ****             newRegValue |= CapSense_CSD_CSD_CTANK_TO_AMUXBUS_B;
 201:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_CTANK_CONNECTION_REG = newRegValue;
 202:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 8


 203:.\Generated_Source\PSoC4/CapSense_CSD.c ****             #if(CapSense_CSD_CSH_TANK_PREGARGE_OPTION == CapSense_CSD__CAPPRIOBUF)
 204:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 newRegValue = CapSense_CSD_CTANK_PORT_PC_REG;
 205:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 newRegValue &= ~(CapSense_CSD_CSD_CTANK_PC_MASK);
 206:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 newRegValue |= CapSense_CSD_CTANK_PC_STRONG_MODE;
 207:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 CapSense_CSD_CTANK_PORT_PC_REG = newRegValue;
 208:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 209:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 newRegValue = CapSense_CSD_CTANK_PORT_DR_REG;
 210:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 newRegValue &= ~(CapSense_CSD_CTANK_DR_MASK);
 211:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 newRegValue |= CapSense_CSD_CTANK_DR_CONFIG;
 212:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 CapSense_CSD_CTANK_PORT_DR_REG = newRegValue;
 213:.\Generated_Source\PSoC4/CapSense_CSD.c ****             #endif /* (CapSense_CSD_CSH_TANK_PREGARGE_OPTION == CapSense_CSD__CAPPRIOBUF) */
 214:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 215:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #endif /* ((CapSense_CSD_CSH_TANK_PREGARGE_OPTION == CapSense_CSD__CAPPRIOBUF) || (CapSense
 216:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 217:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_EnableShieldElectrode((uint32)CapSense_CSD_SHIELD_PIN_NUMBER, (uint32)CapSense
 218:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 219:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (CapSense_CSD_IS_SHIELD_ENABLE) */
 220:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 221:.\Generated_Source\PSoC4/CapSense_CSD.c ****     for(curSensor = 0u; curSensor < CapSense_CSD_TOTAL_SENSOR_COUNT; curSensor++)
 192              		.loc 1 221 0
 193 0006 0023     		mov	r3, #0
 194 0008 7B60     		str	r3, [r7, #4]
 195 000a 07E0     		b	.L2
 196              	.L3:
 222:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 223:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_SetUnscannedSensorState(curSensor, CapSense_CSD_CONNECT_INACTIVE_SNS);
 197              		.loc 1 223 0 discriminator 3
 198 000c 7B68     		ldr	r3, [r7, #4]
 199 000e 181C     		mov	r0, r3
 200 0010 0021     		mov	r1, #0
 201 0012 FFF7FEFF 		bl	CapSense_CSD_SetUnscannedSensorState
 221:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 202              		.loc 1 221 0 discriminator 3
 203 0016 7B68     		ldr	r3, [r7, #4]
 204 0018 0133     		add	r3, r3, #1
 205 001a 7B60     		str	r3, [r7, #4]
 206              	.L2:
 221:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 207              		.loc 1 221 0 is_stmt 0 discriminator 1
 208 001c 7B68     		ldr	r3, [r7, #4]
 209 001e 0B2B     		cmp	r3, #11
 210 0020 F4D9     		bls	.L3
 224:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 225:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 226:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CsdHwBlockInit();
 211              		.loc 1 226 0 is_stmt 1
 212 0022 FFF7FEFF 		bl	CapSense_CSD_CsdHwBlockInit
 227:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_SetShieldDelay(CapSense_CSD_SHIELD_DELAY );
 213              		.loc 1 227 0
 214 0026 0020     		mov	r0, #0
 215 0028 FFF7FEFF 		bl	CapSense_CSD_SetShieldDelay
 228:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 229:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Clear all sensors */
 230:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_ClearSensors();
 216              		.loc 1 230 0
 217 002c FFF7FEFF 		bl	CapSense_CSD_ClearSensors
 231:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 9


 218              		.loc 1 231 0
 219 0030 BD46     		mov	sp, r7
 220 0032 02B0     		add	sp, sp, #8
 221              		@ sp needed
 222 0034 80BD     		pop	{r7, pc}
 223              		.cfi_endproc
 224              	.LFE34:
 225              		.size	CapSense_CSD_Init, .-CapSense_CSD_Init
 226 0036 C046     		.section	.text.CapSense_CSD_CsdHwBlockInit,"ax",%progbits
 227              		.align	2
 228              		.global	CapSense_CSD_CsdHwBlockInit
 229              		.code	16
 230              		.thumb_func
 231              		.type	CapSense_CSD_CsdHwBlockInit, %function
 232              	CapSense_CSD_CsdHwBlockInit:
 233              	.LFB35:
 232:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 233:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 234:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_CsdHwBlockInit
 235:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 236:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 237:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 238:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Initialises the hardware parameters of the CSD block
 239:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 240:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 241:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 242:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 243:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 244:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 245:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 246:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 247:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_csdTrim1 - Contains IDAC trim register value for Sourcing Mode.
 248:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_csdTrim2 - Contains IDAC trim register value for Sinking Mode.
 249:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 250:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 251:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 252:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 253:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 254:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_CsdHwBlockInit(void)
 255:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 234              		.loc 1 255 0
 235              		.cfi_startproc
 236 0000 80B5     		push	{r7, lr}
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 7, -8
 239              		.cfi_offset 14, -4
 240 0002 82B0     		sub	sp, sp, #8
 241              		.cfi_def_cfa_offset 16
 242 0004 00AF     		add	r7, sp, #0
 243              		.cfi_def_cfa_register 7
 256:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 newRegValue;
 257:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 258:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Set trim registers for CSD Mode */
 259:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if (CapSense_CSD_IDAC1_POLARITY == CapSense_CSD__IDAC_SINK)
 260:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* iDAC1 Sinking Mode */
 261:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_csdTrim2 = (uint8)CapSense_CSD_CSD_TRIM2_REG;
 262:.\Generated_Source\PSoC4/CapSense_CSD.c ****         newRegValue = CapSense_CSD_csdTrim2;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 10


 263:.\Generated_Source\PSoC4/CapSense_CSD.c ****         newRegValue &= CapSense_CSD_CSD_IDAC1_TRIM_MASK;
 264:.\Generated_Source\PSoC4/CapSense_CSD.c ****         newRegValue |= (uint32)((uint32)CapSense_CSD_SFLASH_CSD_TRIM2_REG & (uint32)CapSense_CSD_CS
 265:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 266:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #if (CapSense_CSD_IDAC_CNT == 2u)
 267:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /* iDAC2 Sinking Mode */
 268:.\Generated_Source\PSoC4/CapSense_CSD.c ****             newRegValue &= CapSense_CSD_CSD_IDAC2_TRIM_MASK;
 269:.\Generated_Source\PSoC4/CapSense_CSD.c ****             newRegValue |= (uint32)((uint32)CapSense_CSD_SFLASH_CSD_TRIM2_REG & (uint32)CapSense_CS
 270:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #endif /* (CapSense_CSD_IDAC_CNT == 2u) */
 271:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_CSD_TRIM2_REG = newRegValue;
 272:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #else
 273:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* iDAC1 Sourcing Mode */
 274:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_csdTrim1 = (uint8)CapSense_CSD_CSD_TRIM1_REG;
 244              		.loc 1 274 0
 245 0006 244B     		ldr	r3, .L5
 246 0008 1B68     		ldr	r3, [r3]
 247 000a DAB2     		uxtb	r2, r3
 248 000c 234B     		ldr	r3, .L5+4
 249 000e 1A70     		strb	r2, [r3]
 275:.\Generated_Source\PSoC4/CapSense_CSD.c ****         newRegValue = CapSense_CSD_csdTrim1;
 250              		.loc 1 275 0
 251 0010 224B     		ldr	r3, .L5+4
 252 0012 1B78     		ldrb	r3, [r3]
 253 0014 7B60     		str	r3, [r7, #4]
 276:.\Generated_Source\PSoC4/CapSense_CSD.c ****         newRegValue &= CapSense_CSD_CSD_IDAC1_TRIM_MASK;
 254              		.loc 1 276 0
 255 0016 7B68     		ldr	r3, [r7, #4]
 256 0018 0F22     		mov	r2, #15
 257 001a 9343     		bic	r3, r2
 258 001c 7B60     		str	r3, [r7, #4]
 277:.\Generated_Source\PSoC4/CapSense_CSD.c ****         newRegValue |= (uint32)((uint32)CapSense_CSD_SFLASH_CSD_TRIM1_REG & (uint32)CapSense_CSD_CS
 259              		.loc 1 277 0
 260 001e 204B     		ldr	r3, .L5+8
 261 0020 1B78     		ldrb	r3, [r3]
 262 0022 DBB2     		uxtb	r3, r3
 263 0024 1A1C     		mov	r2, r3
 264 0026 0F23     		mov	r3, #15
 265 0028 1340     		and	r3, r2
 266 002a 7A68     		ldr	r2, [r7, #4]
 267 002c 1343     		orr	r3, r2
 268 002e 7B60     		str	r3, [r7, #4]
 278:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #if (CapSense_CSD_IDAC_CNT == 2u)
 279:.\Generated_Source\PSoC4/CapSense_CSD.c ****              /* iDAC2 Sourcing Mode */
 280:.\Generated_Source\PSoC4/CapSense_CSD.c ****             newRegValue &= CapSense_CSD_CSD_IDAC2_TRIM_MASK;
 269              		.loc 1 280 0
 270 0030 7B68     		ldr	r3, [r7, #4]
 271 0032 F022     		mov	r2, #240
 272 0034 9343     		bic	r3, r2
 273 0036 7B60     		str	r3, [r7, #4]
 281:.\Generated_Source\PSoC4/CapSense_CSD.c ****             newRegValue |= (uint32)((uint32)CapSense_CSD_SFLASH_CSD_TRIM1_REG & (uint32)CapSense_CS
 274              		.loc 1 281 0
 275 0038 194B     		ldr	r3, .L5+8
 276 003a 1B78     		ldrb	r3, [r3]
 277 003c DBB2     		uxtb	r3, r3
 278 003e 1A1C     		mov	r2, r3
 279 0040 F023     		mov	r3, #240
 280 0042 1340     		and	r3, r2
 281 0044 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 11


 282 0046 1343     		orr	r3, r2
 283 0048 7B60     		str	r3, [r7, #4]
 282:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #endif
 283:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_CSD_TRIM1_REG = newRegValue;
 284              		.loc 1 283 0
 285 004a 134B     		ldr	r3, .L5
 286 004c 7A68     		ldr	r2, [r7, #4]
 287 004e 1A60     		str	r2, [r3]
 284:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (CapSense_CSD_IDAC1_POLARITY == CapSense_CSD__IDAC_SINK) */
 285:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 286:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Configure CSD and IDAC */
 287:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if (CapSense_CSD_IDAC_CNT > 1u)
 288:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_CSD_IDAC_REG = CapSense_CSD_DEFAULT_CSD_IDAC_CONFIG;
 288              		.loc 1 288 0
 289 0050 144B     		ldr	r3, .L5+12
 290 0052 154A     		ldr	r2, .L5+16
 291 0054 1A60     		str	r2, [r3]
 289:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_CSD_CFG_REG = CapSense_CSD_DEFAULT_CSD_CONFIG;
 292              		.loc 1 289 0
 293 0056 154B     		ldr	r3, .L5+20
 294 0058 154A     		ldr	r2, .L5+24
 295 005a 1A60     		str	r2, [r3]
 290:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #else
 291:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_CSD_IDAC_REG &= ~(CapSense_CSD_CSD_IDAC1_MODE_MASK  | CapSense_CSD_CSD_IDAC1_D
 292:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_CSD_IDAC_REG |= CapSense_CSD_DEFAULT_CSD_IDAC_CONFIG;
 293:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 294:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_CSD_CFG_REG &= ~(CapSense_CSD_CSD_CONFIG_MASK);
 295:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_CSD_CFG_REG |= (CapSense_CSD_DEFAULT_CSD_CONFIG);
 296:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (CapSense_CSD_IDAC_CNT > 1u) */
 297:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 298:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 299:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Connect Cmod to AMUX bus */
 300:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue = CapSense_CSD_CMOD_CONNECTION_REG;
 296              		.loc 1 300 0
 297 005c 154B     		ldr	r3, .L5+28
 298 005e 1B68     		ldr	r3, [r3]
 299 0060 7B60     		str	r3, [r7, #4]
 301:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue &= ~(CapSense_CSD_CSD_CMOD_CONNECTION_MASK);
 300              		.loc 1 301 0
 301 0062 7B68     		ldr	r3, [r7, #4]
 302 0064 144A     		ldr	r2, .L5+32
 303 0066 1340     		and	r3, r2
 304 0068 7B60     		str	r3, [r7, #4]
 302:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue |= CapSense_CSD_CSD_CMOD_TO_AMUXBUS_A;
 305              		.loc 1 302 0
 306 006a 7B68     		ldr	r3, [r7, #4]
 307 006c C022     		mov	r2, #192
 308 006e D200     		lsl	r2, r2, #3
 309 0070 1343     		orr	r3, r2
 310 0072 7B60     		str	r3, [r7, #4]
 303:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CMOD_CONNECTION_REG = newRegValue;
 311              		.loc 1 303 0
 312 0074 0F4B     		ldr	r3, .L5+28
 313 0076 7A68     		ldr	r2, [r7, #4]
 314 0078 1A60     		str	r2, [r3]
 304:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 305:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Configure Dead Band PWM if it is enabled */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 12


 306:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if(CapSense_CSD_CSD_4B_PWM_MODE != CapSense_CSD__PWM_OFF)
 307:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_CSD_4B_PWM_REG = CapSense_CSD_DEFAULT_CSD_4B_PWM_CONFIG;
 308:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (CapSense_CSD_CSD_4B_PWM_MODE != CapSense_CSD__PWM_OFF) */
 309:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 310:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Setup ISR */
 311:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_ISR_NUMBER);
 315              		.loc 1 311 0
 316 007a 0F20     		mov	r0, #15
 317 007c FFF7FEFF 		bl	CyIntDisable
 312:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if !defined(CY_EXTERNAL_INTERRUPT_CONFIG)
 313:.\Generated_Source\PSoC4/CapSense_CSD.c ****         (void)CyIntSetVector(CapSense_CSD_ISR_NUMBER, &CapSense_CSD_ISR);
 318              		.loc 1 313 0
 319 0080 0E4B     		ldr	r3, .L5+36
 320 0082 0F20     		mov	r0, #15
 321 0084 191C     		mov	r1, r3
 322 0086 FFF7FEFF 		bl	CyIntSetVector
 314:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CyIntSetPriority(CapSense_CSD_ISR_NUMBER, CapSense_CSD_ISR_PRIORITY);
 323              		.loc 1 314 0
 324 008a 0F20     		mov	r0, #15
 325 008c 0321     		mov	r1, #3
 326 008e FFF7FEFF 		bl	CyIntSetPriority
 315:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (CY_EXTERNAL_INTERRUPT_CONFIG) */
 316:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 327              		.loc 1 316 0
 328 0092 BD46     		mov	sp, r7
 329 0094 02B0     		add	sp, sp, #8
 330              		@ sp needed
 331 0096 80BD     		pop	{r7, pc}
 332              	.L6:
 333              		.align	2
 334              	.L5:
 335 0098 00FF0840 		.word	1074331392
 336 009c 00000000 		.word	CapSense_CSD_csdTrim1
 337 00a0 62F1FF0F 		.word	268431714
 338 00a4 08000840 		.word	1074266120
 339 00a8 00020001 		.word	16777728
 340 00ac 04000840 		.word	1074266116
 341 00b0 C008A001 		.word	27265216
 342 00b4 10000140 		.word	1073807376
 343 00b8 FFF0FFFF 		.word	-3841
 344 00bc 00000000 		.word	CapSense_CSD_ISR
 345              		.cfi_endproc
 346              	.LFE35:
 347              		.size	CapSense_CSD_CsdHwBlockInit, .-CapSense_CSD_CsdHwBlockInit
 348              		.section	.text.CapSense_CSD_Enable,"ax",%progbits
 349              		.align	2
 350              		.global	CapSense_CSD_Enable
 351              		.code	16
 352              		.thumb_func
 353              		.type	CapSense_CSD_Enable, %function
 354              	CapSense_CSD_Enable:
 355              	.LFB36:
 317:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 318:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 319:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 320:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_Enable
 321:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 13


 322:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 323:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 324:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Enables the CSD block and related resources to an active mode.
 325:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 326:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 327:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 328:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 329:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 330:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 331:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 332:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 333:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None.
 334:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 335:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 336:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 337:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 338:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 339:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_Enable(void)
 340:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 356              		.loc 1 340 0
 357              		.cfi_startproc
 358 0000 80B5     		push	{r7, lr}
 359              		.cfi_def_cfa_offset 8
 360              		.cfi_offset 7, -8
 361              		.cfi_offset 14, -4
 362 0002 82B0     		sub	sp, sp, #8
 363              		.cfi_def_cfa_offset 16
 364 0004 00AF     		add	r7, sp, #0
 365              		.cfi_def_cfa_register 7
 341:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 newRegValue;
 342:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 343:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Enable Clocks */
 344:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_SenseClk_Stop();
 366              		.loc 1 344 0
 367 0006 FFF7FEFF 		bl	CapSense_CSD_SenseClk_Stop
 345:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_SampleClk_Stop();
 368              		.loc 1 345 0
 369 000a FFF7FEFF 		bl	CapSense_CSD_SampleClk_Stop
 346:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 347:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_SampleClk_SetDividerValue((uint16)CapSense_CSD_INITIAL_CLK_DIVIDER);
 370              		.loc 1 347 0
 371 000e 0020     		mov	r0, #0
 372 0010 0021     		mov	r1, #0
 373 0012 FFF7FEFF 		bl	CapSense_CSD_SampleClk_SetFractionalDividerRegister
 348:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_SenseClk_SetDividerValue((uint16)CapSense_CSD_INITIAL_CLK_DIVIDER);
 374              		.loc 1 348 0
 375 0016 0020     		mov	r0, #0
 376 0018 0021     		mov	r1, #0
 377 001a FFF7FEFF 		bl	CapSense_CSD_SenseClk_SetFractionalDividerRegister
 349:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 350:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if (0u == CapSense_CSD_IS_M0S8PERI_BLOCK)
 351:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_SenseClk_Start();
 378              		.loc 1 351 0
 379 001e FFF7FEFF 		bl	CapSense_CSD_SenseClk_Start
 352:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_SampleClk_Start();
 380              		.loc 1 352 0
 381 0022 FFF7FEFF 		bl	CapSense_CSD_SampleClk_Start
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 14


 353:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #else
 354:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_SampleClk_Start();
 355:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_SenseClk_StartEx(CapSense_CSD_SampleClk__DIV_ID);
 356:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (0u == CapSense_CSD_IS_M0S8PERI_BLOCK) */
 357:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 358:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Enable the CSD block */
 359:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue = CapSense_CSD_CSD_CFG_REG;
 382              		.loc 1 359 0
 383 0026 084B     		ldr	r3, .L8
 384 0028 1B68     		ldr	r3, [r3]
 385 002a 7B60     		str	r3, [r7, #4]
 360:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue |= (CapSense_CSD_CSD_CFG_ENABLE | CapSense_CSD_CSD_CFG_SENSE_COMP_EN
 386              		.loc 1 360 0
 387 002c 7B68     		ldr	r3, [r7, #4]
 388 002e 074A     		ldr	r2, .L8+4
 389 0030 1343     		orr	r3, r2
 390 0032 7B60     		str	r3, [r7, #4]
 361:.\Generated_Source\PSoC4/CapSense_CSD.c ****                                                    | CapSense_CSD_CSD_CFG_SENSE_EN);
 362:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CSD_CFG_REG = newRegValue;
 391              		.loc 1 362 0
 392 0034 044B     		ldr	r3, .L8
 393 0036 7A68     		ldr	r2, [r7, #4]
 394 0038 1A60     		str	r2, [r3]
 363:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 364:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Enable interrupt */
 365:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CyIntEnable(CapSense_CSD_ISR_NUMBER);
 395              		.loc 1 365 0
 396 003a 0F20     		mov	r0, #15
 397 003c FFF7FEFF 		bl	CyIntEnable
 366:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 398              		.loc 1 366 0
 399 0040 BD46     		mov	sp, r7
 400 0042 02B0     		add	sp, sp, #8
 401              		@ sp needed
 402 0044 80BD     		pop	{r7, pc}
 403              	.L9:
 404 0046 C046     		.align	2
 405              	.L8:
 406 0048 04000840 		.word	1074266116
 407 004c 00100880 		.word	-2146955264
 408              		.cfi_endproc
 409              	.LFE36:
 410              		.size	CapSense_CSD_Enable, .-CapSense_CSD_Enable
 411              		.section	.text.CapSense_CSD_Start,"ax",%progbits
 412              		.align	2
 413              		.global	CapSense_CSD_Start
 414              		.code	16
 415              		.thumb_func
 416              		.type	CapSense_CSD_Start, %function
 417              	CapSense_CSD_Start:
 418              	.LFB37:
 367:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 368:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 369:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 370:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_Start
 371:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 372:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 15


 373:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 374:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This is the preferred method to begin the component operation. CapSense_Start()
 375:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  calls the CapSense_Init() function, and then calls the CapSense_Enable()
 376:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  function. Initializes the registers and starts the CSD method of the CapSense
 377:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  component. Resets all the sensors to an inactive state. Enables interrupts for
 378:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensors scanning. When the SmartSense tuning mode is selected, the tuning procedure
 379:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  is applied for all the sensors. The CapSense_Start() routine must be called before
 380:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  any other API routines.
 381:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 382:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 383:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 384:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 385:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 386:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 387:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 388:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 389:.\Generated_Source\PSoC4/CapSense_CSD.c **** *   CapSense_CSD_initVar - used to check the initial configuration,
 390:.\Generated_Source\PSoC4/CapSense_CSD.c **** *   modified on the first function call.
 391:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_lowLevelTuningDone - Used to notify the Tuner GUI that
 392:.\Generated_Source\PSoC4/CapSense_CSD.c **** *   tuning of the scanning parameters is done.
 393:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 394:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 395:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 396:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 397:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 398:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_Start(void)
 399:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 419              		.loc 1 399 0
 420              		.cfi_startproc
 421 0000 80B5     		push	{r7, lr}
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 7, -8
 424              		.cfi_offset 14, -4
 425 0002 00AF     		add	r7, sp, #0
 426              		.cfi_def_cfa_register 7
 400:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 401:.\Generated_Source\PSoC4/CapSense_CSD.c ****     static uint8 CapSense_CSD_initVar = 0u;
 402:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 403:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if((0u != CapSense_CSD_AUTOCALIBRATION_ENABLE) && (CapSense_CSD_TUNING_METHOD != CapSense_CSD_
 404:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint32 curSensor;
 405:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint32 rawLevel;
 406:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint32 widget;
 407:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* ((0u != CapSense_CSD_AUTOCALIBRATION_ENABLE) && (CapSense_CSD_TUNING_METHOD != CapSen
 408:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 409:.\Generated_Source\PSoC4/CapSense_CSD.c ****     if (CapSense_CSD_initVar == 0u)
 427              		.loc 1 409 0
 428 0004 0C4B     		ldr	r3, .L12
 429 0006 1B78     		ldrb	r3, [r3]
 430 0008 002B     		cmp	r3, #0
 431 000a 04D1     		bne	.L11
 410:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 411:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_Init();
 432              		.loc 1 411 0
 433 000c FFF7FEFF 		bl	CapSense_CSD_Init
 412:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_initVar = 1u;
 434              		.loc 1 412 0
 435 0010 094B     		ldr	r3, .L12
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 16


 436 0012 0122     		mov	r2, #1
 437 0014 1A70     		strb	r2, [r3]
 438              	.L11:
 413:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 414:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_Enable();
 439              		.loc 1 414 0
 440 0016 FFF7FEFF 		bl	CapSense_CSD_Enable
 415:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 416:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* AutoTunning start */
 417:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if(CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 418:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #if(0u != CapSense_CSD_CSHL_API_GENERATE)
 419:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_AutoTune();
 441              		.loc 1 419 0
 442 001a FFF7FEFF 		bl	CapSense_CSD_AutoTune
 420:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_lowLevelTuningDone = 1u;
 443              		.loc 1 420 0
 444 001e 074B     		ldr	r3, .L12+4
 445 0020 0122     		mov	r2, #1
 446 0022 1A70     		strb	r2, [r3]
 421:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #endif /* (0u != CapSense_CSD_CSHL_API_GENERATE) */
 422:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #else
 423:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #if(0u != CapSense_CSD_AUTOCALIBRATION_ENABLE)
 424:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 425:.\Generated_Source\PSoC4/CapSense_CSD.c ****             #if(CapSense_CSD_IDAC_CNT > 1u)
 426:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 CapSense_CSD_CSD_IDAC_REG &= ~(CapSense_CSD_CSD_IDAC2_MODE_MASK);
 427:.\Generated_Source\PSoC4/CapSense_CSD.c ****             #endif /* (CapSense_CSD_IDAC_CNT > 1u) */
 428:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 429:.\Generated_Source\PSoC4/CapSense_CSD.c ****             for(curSensor = 0u; curSensor < CapSense_CSD_TOTAL_SCANSLOT_COUNT; curSensor++)
 430:.\Generated_Source\PSoC4/CapSense_CSD.c ****             {
 431:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 widget = CapSense_CSD_widgetNumber[curSensor];
 432:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 rawLevel = CapSense_CSD_widgetResolution[widget] >> CapSense_CSD_RESOLUTION_OFFSET;
 433:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 434:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 /* Calibration level should be equal to 85% from scanning resolution */
 435:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 rawLevel = (rawLevel * 85u) / 100u;
 436:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 437:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 CapSense_CSD_CalibrateSensor(curSensor, rawLevel, CapSense_CSD_modulationIDAC);
 438:.\Generated_Source\PSoC4/CapSense_CSD.c ****             }
 439:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 440:.\Generated_Source\PSoC4/CapSense_CSD.c ****             #if(0u != CapSense_CSD_TOTAL_CENTROIDS_COUNT)
 441:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 CapSense_CSD_NormalizeWidgets(CapSense_CSD_END_OF_WIDGETS_INDEX, CapSense_CSD_modul
 442:.\Generated_Source\PSoC4/CapSense_CSD.c ****             #endif /* (0u != CapSense_CSD_TOTAL_CENTROIDS_COUNT)  */
 443:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 444:.\Generated_Source\PSoC4/CapSense_CSD.c ****             #if(CapSense_CSD_IDAC_CNT > 1u)
 445:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 for(curSensor = 0u; curSensor < CapSense_CSD_TOTAL_SCANSLOT_COUNT; curSensor++)
 446:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 {
 447:.\Generated_Source\PSoC4/CapSense_CSD.c ****                     CapSense_CSD_compensationIDAC[curSensor] = CapSense_CSD_modulationIDAC[curSenso
 448:.\Generated_Source\PSoC4/CapSense_CSD.c ****                     CapSense_CSD_modulationIDAC[curSensor] = (CapSense_CSD_modulationIDAC[curSensor
 449:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 }
 450:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 CapSense_CSD_CSD_IDAC_REG |= CapSense_CSD_CSD_IDAC2_MODE_FIXED;
 451:.\Generated_Source\PSoC4/CapSense_CSD.c ****             #endif /* (CapSense_CSD_IDAC_CNT > 1u) */
 452:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 453:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #endif /* (0u != CapSense_CSD_AUTOCALIBRATION_ENABLE) */
 454:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 455:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 456:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 457:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Initialize Advanced Centroid */
 458:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if(CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 17


 459:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_AdvancedCentroidInit();
 460:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
 461:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 462:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Connect sense comparator input to AMUXA */
 463:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CSD_CFG_REG |= CapSense_CSD_CSD_CFG_SENSE_INSEL;
 447              		.loc 1 463 0
 448 0024 064B     		ldr	r3, .L12+8
 449 0026 064A     		ldr	r2, .L12+8
 450 0028 1268     		ldr	r2, [r2]
 451 002a 8021     		mov	r1, #128
 452 002c C903     		lsl	r1, r1, #15
 453 002e 0A43     		orr	r2, r1
 454 0030 1A60     		str	r2, [r3]
 464:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 455              		.loc 1 464 0
 456 0032 BD46     		mov	sp, r7
 457              		@ sp needed
 458 0034 80BD     		pop	{r7, pc}
 459              	.L13:
 460 0036 C046     		.align	2
 461              	.L12:
 462 0038 1C000000 		.word	CapSense_CSD_initVar.5266
 463 003c 00000000 		.word	CapSense_CSD_lowLevelTuningDone
 464 0040 04000840 		.word	1074266116
 465              		.cfi_endproc
 466              	.LFE37:
 467              		.size	CapSense_CSD_Start, .-CapSense_CSD_Start
 468              		.section	.text.CapSense_CSD_Stop,"ax",%progbits
 469              		.align	2
 470              		.global	CapSense_CSD_Stop
 471              		.code	16
 472              		.thumb_func
 473              		.type	CapSense_CSD_Stop, %function
 474              	CapSense_CSD_Stop:
 475              	.LFB38:
 465:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 466:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 467:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 468:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_Stop
 469:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 470:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 471:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 472:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Stops the sensor scanning, disables component interrupts, and resets all the
 473:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensors to an inactive state. Disables the Active mode power template bits for
 474:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  the subcomponents used within CapSense.
 475:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 476:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 477:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 478:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 479:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 480:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 481:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 482:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 483:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_csdTrim1 - Contains the IDAC trim register value for the Sourcing Mode.
 484:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_csdTrim2 - Contains the IDAC trim register value for vSinking Mode.
 485:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 486:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 18


 487:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This function should be called after scans are completed.
 488:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 489:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 490:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_Stop(void)
 491:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 476              		.loc 1 491 0
 477              		.cfi_startproc
 478 0000 80B5     		push	{r7, lr}
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 7, -8
 481              		.cfi_offset 14, -4
 482 0002 00AF     		add	r7, sp, #0
 483              		.cfi_def_cfa_register 7
 492:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Disable interrupt */
 493:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_ISR_NUMBER);
 484              		.loc 1 493 0
 485 0004 0F20     		mov	r0, #15
 486 0006 FFF7FEFF 		bl	CyIntDisable
 494:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 495:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CSD_CFG_REG &= ~(CapSense_CSD_CSD_CFG_SENSE_COMP_EN | CapSense_CSD_CSD_CFG_SENSE_E
 487              		.loc 1 495 0
 488 000a 094B     		ldr	r3, .L15
 489 000c 084A     		ldr	r2, .L15
 490 000e 1268     		ldr	r2, [r2]
 491 0010 0849     		ldr	r1, .L15+4
 492 0012 0A40     		and	r2, r1
 493 0014 1A60     		str	r2, [r3]
 496:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 497:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if(CapSense_CSD_IDAC_CNT == 2u)
 498:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_CSD_CFG_REG &= ~(CapSense_CSD_CSD_CFG_ENABLE);
 494              		.loc 1 498 0
 495 0016 064B     		ldr	r3, .L15
 496 0018 054A     		ldr	r2, .L15
 497 001a 1268     		ldr	r2, [r2]
 498 001c 5200     		lsl	r2, r2, #1
 499 001e 5208     		lsr	r2, r2, #1
 500 0020 1A60     		str	r2, [r3]
 499:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (CapSense_CSD_IDAC_CNT == 2u) */
 500:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 501:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Disable the Clocks */
 502:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_SenseClk_Stop();
 501              		.loc 1 502 0
 502 0022 FFF7FEFF 		bl	CapSense_CSD_SenseClk_Stop
 503:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_SampleClk_Stop();
 503              		.loc 1 503 0
 504 0026 FFF7FEFF 		bl	CapSense_CSD_SampleClk_Stop
 504:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 505              		.loc 1 504 0
 506 002a BD46     		mov	sp, r7
 507              		@ sp needed
 508 002c 80BD     		pop	{r7, pc}
 509              	.L16:
 510 002e C046     		.align	2
 511              	.L15:
 512 0030 04000840 		.word	1074266116
 513 0034 FFEFF7FF 		.word	-528385
 514              		.cfi_endproc
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 19


 515              	.LFE38:
 516              		.size	CapSense_CSD_Stop, .-CapSense_CSD_Stop
 517              		.section	.text.CapSense_CSD_FindNextSensor,"ax",%progbits
 518              		.align	2
 519              		.global	CapSense_CSD_FindNextSensor
 520              		.code	16
 521              		.thumb_func
 522              		.type	CapSense_CSD_FindNextSensor, %function
 523              	CapSense_CSD_FindNextSensor:
 524              	.LFB39:
 505:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 506:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 507:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 508:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_FindNextSensor
 509:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 510:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 511:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 512:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Finds the next sensor to scan.
 513:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 514:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 515:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  snsIndex:  Current index of sensor.
 516:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 517:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 518:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Returns the next sensor index to scan.
 519:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 520:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 521:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorEnableMask[] - used to store bit masks of the enabled sensors.
 522:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 523:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 524:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This function affects the  current scanning and should not
 525:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  be used outside the component.
 526:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 527:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 528:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint8 CapSense_CSD_FindNextSensor(uint8 snsIndex)
 529:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 525              		.loc 1 529 0
 526              		.cfi_startproc
 527 0000 80B5     		push	{r7, lr}
 528              		.cfi_def_cfa_offset 8
 529              		.cfi_offset 7, -8
 530              		.cfi_offset 14, -4
 531 0002 84B0     		sub	sp, sp, #16
 532              		.cfi_def_cfa_offset 24
 533 0004 00AF     		add	r7, sp, #0
 534              		.cfi_def_cfa_register 7
 535 0006 021C     		mov	r2, r0
 536 0008 FB1D     		add	r3, r7, #7
 537 000a 1A70     		strb	r2, [r3]
 538              	.L20:
 530:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 enableFlag;
 531:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 532:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Check if sensor enabled */
 533:.\Generated_Source\PSoC4/CapSense_CSD.c ****     do
 534:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 535:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Proceed with next sensor */
 536:.\Generated_Source\PSoC4/CapSense_CSD.c ****         snsIndex++;
 539              		.loc 1 536 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 20


 540 000c FB1D     		add	r3, r7, #7
 541 000e 1A78     		ldrb	r2, [r3]
 542 0010 FB1D     		add	r3, r7, #7
 543 0012 0132     		add	r2, r2, #1
 544 0014 1A70     		strb	r2, [r3]
 537:.\Generated_Source\PSoC4/CapSense_CSD.c ****         if(snsIndex == CapSense_CSD_TOTAL_SENSOR_COUNT)
 545              		.loc 1 537 0
 546 0016 FB1D     		add	r3, r7, #7
 547 0018 1B78     		ldrb	r3, [r3]
 548 001a 0C2B     		cmp	r3, #12
 549 001c 00D1     		bne	.L18
 538:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
 539:.\Generated_Source\PSoC4/CapSense_CSD.c ****             break;
 550              		.loc 1 539 0
 551 001e 0BE0     		b	.L19
 552              	.L18:
 540:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
 541:.\Generated_Source\PSoC4/CapSense_CSD.c ****         enableFlag = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, (uint32)snsIndex);
 553              		.loc 1 541 0
 554 0020 FB1D     		add	r3, r7, #7
 555 0022 1B78     		ldrb	r3, [r3]
 556 0024 074A     		ldr	r2, .L22
 557 0026 101C     		mov	r0, r2
 558 0028 191C     		mov	r1, r3
 559 002a FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 560 002e 031C     		mov	r3, r0
 561 0030 FB60     		str	r3, [r7, #12]
 542:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 543:.\Generated_Source\PSoC4/CapSense_CSD.c ****     while(enableFlag == 0u);
 562              		.loc 1 543 0
 563 0032 FB68     		ldr	r3, [r7, #12]
 564 0034 002B     		cmp	r3, #0
 565 0036 E9D0     		beq	.L20
 566              	.L19:
 544:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 545:.\Generated_Source\PSoC4/CapSense_CSD.c ****     return ((uint8)snsIndex);
 567              		.loc 1 545 0
 568 0038 FB1D     		add	r3, r7, #7
 569 003a 1B78     		ldrb	r3, [r3]
 546:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 570              		.loc 1 546 0
 571 003c 181C     		mov	r0, r3
 572 003e BD46     		mov	sp, r7
 573 0040 04B0     		add	sp, sp, #16
 574              		@ sp needed
 575 0042 80BD     		pop	{r7, pc}
 576              	.L23:
 577              		.align	2
 578              	.L22:
 579 0044 00000000 		.word	CapSense_CSD_sensorEnableMask
 580              		.cfi_endproc
 581              	.LFE39:
 582              		.size	CapSense_CSD_FindNextSensor, .-CapSense_CSD_FindNextSensor
 583              		.section	.text.CapSense_CSD_ScanSensor,"ax",%progbits
 584              		.align	2
 585              		.global	CapSense_CSD_ScanSensor
 586              		.code	16
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 21


 587              		.thumb_func
 588              		.type	CapSense_CSD_ScanSensor, %function
 589              	CapSense_CSD_ScanSensor:
 590              	.LFB40:
 547:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 548:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 549:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 550:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanSensor
 551:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 552:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 553:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 554:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Sets the scan settings and starts scanning a sensor. After scanning is complete,
 555:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  the ISR copies the measured sensor raw data to the global raw sensor array.
 556:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Use of the ISR ensures this function is non-blocking.
 557:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Each sensor has a unique number within the sensor array.
 558:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This number is assigned by the CapSense customizer in sequence.
 559:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 560:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 561:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor:  Sensor number.
 562:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 563:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 564:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 565:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 566:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 567:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_csdStatusVar - used to provide the status and mode of the scanning process.
 568:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Sets the busy status(scan in progress) and mode of scan as single scan.
 569:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store a sensor scanning sensor number.
 570:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Sets to the provided sensor argument.
 571:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 572:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 573:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 574:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 575:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 576:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_ScanSensor(uint32 sensor)
 577:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 591              		.loc 1 577 0
 592              		.cfi_startproc
 593 0000 80B5     		push	{r7, lr}
 594              		.cfi_def_cfa_offset 8
 595              		.cfi_offset 7, -8
 596              		.cfi_offset 14, -4
 597 0002 82B0     		sub	sp, sp, #8
 598              		.cfi_def_cfa_offset 16
 599 0004 00AF     		add	r7, sp, #0
 600              		.cfi_def_cfa_register 7
 601 0006 7860     		str	r0, [r7, #4]
 578:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
 579:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_csdStatusVar = 0u;
 602              		.loc 1 579 0
 603 0008 084B     		ldr	r3, .L25
 604 000a 0022     		mov	r2, #0
 605 000c 1A70     		strb	r2, [r3]
 580:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = (uint8)sensor;
 606              		.loc 1 580 0
 607 000e 7B68     		ldr	r3, [r7, #4]
 608 0010 DAB2     		uxtb	r2, r3
 609 0012 074B     		ldr	r3, .L25+4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 22


 610 0014 1A70     		strb	r2, [r3]
 581:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 582:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Start of sensor scan */
 583:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_csdStatusVar = (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_SINGLE_SCAN);
 611              		.loc 1 583 0
 612 0016 054B     		ldr	r3, .L25
 613 0018 8122     		mov	r2, #129
 614 001a 1A70     		strb	r2, [r3]
 584:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_PreScan(sensor);
 615              		.loc 1 584 0
 616 001c 7B68     		ldr	r3, [r7, #4]
 617 001e 181C     		mov	r0, r3
 618 0020 FFF7FEFF 		bl	CapSense_CSD_PreScan
 585:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 619              		.loc 1 585 0
 620 0024 BD46     		mov	sp, r7
 621 0026 02B0     		add	sp, sp, #8
 622              		@ sp needed
 623 0028 80BD     		pop	{r7, pc}
 624              	.L26:
 625 002a C046     		.align	2
 626              	.L25:
 627 002c 00000000 		.word	CapSense_CSD_csdStatusVar
 628 0030 00000000 		.word	CapSense_CSD_sensorIndex
 629              		.cfi_endproc
 630              	.LFE40:
 631              		.size	CapSense_CSD_ScanSensor, .-CapSense_CSD_ScanSensor
 632              		.section	.text.CapSense_CSD_ScanWidget,"ax",%progbits
 633              		.align	2
 634              		.global	CapSense_CSD_ScanWidget
 635              		.code	16
 636              		.thumb_func
 637              		.type	CapSense_CSD_ScanWidget, %function
 638              	CapSense_CSD_ScanWidget:
 639              	.LFB41:
 586:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 587:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 588:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if(0u != CapSense_CSD_CSHL_API_GENERATE)
 589:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 590:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanWidget
 591:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 592:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 593:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 594:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Sets the scan settings and starts scanning a widget.
 595:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 596:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 597:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  uint32 widget: Widget number.
 598:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 599:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 600:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 601:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 602:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 603:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_csdStatusVar - used to provide the status and mode of the scanning process.
 604:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Sets the busy status(scan in progress) and clears the single scan mode.
 605:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store a sensor scanning sensor number.
 606:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Sets to 0xFF and provided to function CapSense_CSD_FindNextSensor or
 607:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorEnableMask[] - used to store bit masks of the enabled sensors.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 23


 608:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorEnableMaskBackup[] - used to backup bit masks of the enabled
 609:.\Generated_Source\PSoC4/CapSense_CSD.c **** *   sensors.
 610:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 611:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 612:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 613:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 614:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 615:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_ScanWidget(uint32 widget)
 616:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 640              		.loc 1 616 0
 641              		.cfi_startproc
 642 0000 80B5     		push	{r7, lr}
 643              		.cfi_def_cfa_offset 8
 644              		.cfi_offset 7, -8
 645              		.cfi_offset 14, -4
 646 0002 86B0     		sub	sp, sp, #24
 647              		.cfi_def_cfa_offset 32
 648 0004 00AF     		add	r7, sp, #0
 649              		.cfi_def_cfa_register 7
 650 0006 7860     		str	r0, [r7, #4]
 617:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 sensorsPerWidget;
 618:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 lastSensor;
 619:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 snsIndex;
 620:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 621:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Get first sensor in widget */
 622:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = CapSense_CSD_rawDataIndex[widget];
 651              		.loc 1 622 0
 652 0008 2F4A     		ldr	r2, .L36
 653 000a 7B68     		ldr	r3, [r7, #4]
 654 000c D318     		add	r3, r2, r3
 655 000e 1A78     		ldrb	r2, [r3]
 656 0010 2E4B     		ldr	r3, .L36+4
 657 0012 1A70     		strb	r2, [r3]
 623:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 624:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Get number of sensors in widget */
 625:.\Generated_Source\PSoC4/CapSense_CSD.c ****     sensorsPerWidget = CapSense_CSD_numberOfSensors[widget];
 658              		.loc 1 625 0
 659 0014 2E4A     		ldr	r2, .L36+8
 660 0016 7B68     		ldr	r3, [r7, #4]
 661 0018 D318     		add	r3, r2, r3
 662 001a 1B78     		ldrb	r3, [r3]
 663 001c 7B61     		str	r3, [r7, #20]
 626:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 627:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Check if generic Sensor */
 628:.\Generated_Source\PSoC4/CapSense_CSD.c ****     if(sensorsPerWidget == 0u)
 664              		.loc 1 628 0
 665 001e 7B69     		ldr	r3, [r7, #20]
 666 0020 002B     		cmp	r3, #0
 667 0022 01D1     		bne	.L28
 629:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 630:.\Generated_Source\PSoC4/CapSense_CSD.c ****         sensorsPerWidget = 1u;
 668              		.loc 1 630 0
 669 0024 0123     		mov	r3, #1
 670 0026 7B61     		str	r3, [r7, #20]
 671              	.L28:
 631:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 632:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 24


 633:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Get last sensor in widget */
 634:.\Generated_Source\PSoC4/CapSense_CSD.c ****     lastSensor = (CapSense_CSD_rawDataIndex[widget] + sensorsPerWidget) - 1u;
 672              		.loc 1 634 0
 673 0028 274A     		ldr	r2, .L36
 674 002a 7B68     		ldr	r3, [r7, #4]
 675 002c D318     		add	r3, r2, r3
 676 002e 1B78     		ldrb	r3, [r3]
 677 0030 1A1C     		mov	r2, r3
 678 0032 7B69     		ldr	r3, [r7, #20]
 679 0034 D318     		add	r3, r2, r3
 680 0036 013B     		sub	r3, r3, #1
 681 0038 FB60     		str	r3, [r7, #12]
 635:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 636:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Backup sensorEnableMask array */
 637:.\Generated_Source\PSoC4/CapSense_CSD.c ****     for(snsIndex = 0u; snsIndex < CapSense_CSD_TOTAL_SENSOR_MASK; snsIndex++)
 682              		.loc 1 637 0
 683 003a 0023     		mov	r3, #0
 684 003c 3B61     		str	r3, [r7, #16]
 685 003e 0BE0     		b	.L29
 686              	.L30:
 638:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 639:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Backup sensorEnableMask array */
 640:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_sensorEnableMaskBackup[snsIndex] = CapSense_CSD_sensorEnableMask[snsIndex];
 687              		.loc 1 640 0 discriminator 3
 688 0040 244A     		ldr	r2, .L36+12
 689 0042 3B69     		ldr	r3, [r7, #16]
 690 0044 D318     		add	r3, r2, r3
 691 0046 1978     		ldrb	r1, [r3]
 692 0048 234A     		ldr	r2, .L36+16
 693 004a 3B69     		ldr	r3, [r7, #16]
 694 004c D318     		add	r3, r2, r3
 695 004e 0A1C     		add	r2, r1, #0
 696 0050 1A70     		strb	r2, [r3]
 637:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 697              		.loc 1 637 0 discriminator 3
 698 0052 3B69     		ldr	r3, [r7, #16]
 699 0054 0133     		add	r3, r3, #1
 700 0056 3B61     		str	r3, [r7, #16]
 701              	.L29:
 637:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 702              		.loc 1 637 0 is_stmt 0 discriminator 1
 703 0058 3B69     		ldr	r3, [r7, #16]
 704 005a 012B     		cmp	r3, #1
 705 005c F0D9     		bls	.L30
 641:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 642:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 643:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Update sensorEnableMask to scan the sensors that belong to widget */
 644:.\Generated_Source\PSoC4/CapSense_CSD.c ****     for(snsIndex = 0u; snsIndex < CapSense_CSD_TOTAL_SENSOR_COUNT; snsIndex++)
 706              		.loc 1 644 0 is_stmt 1
 707 005e 0023     		mov	r3, #0
 708 0060 3B61     		str	r3, [r7, #16]
 709 0062 1CE0     		b	.L31
 710              	.L34:
 645:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 646:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Update sensorEnableMask array bits to scan the widget only */
 647:.\Generated_Source\PSoC4/CapSense_CSD.c ****         if((snsIndex >= CapSense_CSD_sensorIndex) && (snsIndex <= lastSensor))
 711              		.loc 1 647 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 25


 712 0064 194B     		ldr	r3, .L36+4
 713 0066 1B78     		ldrb	r3, [r3]
 714 0068 DBB2     		uxtb	r3, r3
 715 006a 1A1E     		sub	r2, r3, #0
 716 006c 3B69     		ldr	r3, [r7, #16]
 717 006e 9A42     		cmp	r2, r3
 718 0070 0BD8     		bhi	.L32
 719              		.loc 1 647 0 is_stmt 0 discriminator 1
 720 0072 3A69     		ldr	r2, [r7, #16]
 721 0074 FB68     		ldr	r3, [r7, #12]
 722 0076 9A42     		cmp	r2, r3
 723 0078 07D8     		bhi	.L32
 648:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
 649:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /* Set sensor bit to scan */
 650:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, snsIndex, 1u);
 724              		.loc 1 650 0 is_stmt 1
 725 007a 164A     		ldr	r2, .L36+12
 726 007c 3B69     		ldr	r3, [r7, #16]
 727 007e 101C     		mov	r0, r2
 728 0080 191C     		mov	r1, r3
 729 0082 0122     		mov	r2, #1
 730 0084 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
 731 0088 06E0     		b	.L33
 732              	.L32:
 651:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
 652:.\Generated_Source\PSoC4/CapSense_CSD.c ****         else
 653:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
 654:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /* Reset sensor bit to do not scan */
 655:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, snsIndex, 0u);
 733              		.loc 1 655 0
 734 008a 124A     		ldr	r2, .L36+12
 735 008c 3B69     		ldr	r3, [r7, #16]
 736 008e 101C     		mov	r0, r2
 737 0090 191C     		mov	r1, r3
 738 0092 0022     		mov	r2, #0
 739 0094 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
 740              	.L33:
 644:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 741              		.loc 1 644 0 discriminator 2
 742 0098 3B69     		ldr	r3, [r7, #16]
 743 009a 0133     		add	r3, r3, #1
 744 009c 3B61     		str	r3, [r7, #16]
 745              	.L31:
 644:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 746              		.loc 1 644 0 is_stmt 0 discriminator 1
 747 009e 3B69     		ldr	r3, [r7, #16]
 748 00a0 0B2B     		cmp	r3, #11
 749 00a2 DFD9     		bls	.L34
 656:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
 657:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 658:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 659:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Check end of scan condition */
 660:.\Generated_Source\PSoC4/CapSense_CSD.c ****     if(CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT)
 750              		.loc 1 660 0 is_stmt 1
 751 00a4 094B     		ldr	r3, .L36+4
 752 00a6 1B78     		ldrb	r3, [r3]
 753 00a8 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 26


 754 00aa 0B2B     		cmp	r3, #11
 755 00ac 08D8     		bhi	.L27
 661:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 662:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Set widget busy bit in status/control variable*/
 663:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_csdStatusVar = (CapSense_CSD_SW_STS_BUSY | CapSense_CSD_SW_CTRL_WIDGET_SCAN);
 756              		.loc 1 663 0
 757 00ae 0B4B     		ldr	r3, .L36+20
 758 00b0 4122     		mov	r2, #65
 759 00b2 1A70     		strb	r2, [r3]
 664:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Scan first sensor of widget*/
 665:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_PreScan((uint32)CapSense_CSD_sensorIndex);
 760              		.loc 1 665 0
 761 00b4 054B     		ldr	r3, .L36+4
 762 00b6 1B78     		ldrb	r3, [r3]
 763 00b8 DBB2     		uxtb	r3, r3
 764 00ba 181C     		mov	r0, r3
 765 00bc FFF7FEFF 		bl	CapSense_CSD_PreScan
 766              	.L27:
 666:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 667:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 767              		.loc 1 667 0
 768 00c0 BD46     		mov	sp, r7
 769 00c2 06B0     		add	sp, sp, #24
 770              		@ sp needed
 771 00c4 80BD     		pop	{r7, pc}
 772              	.L37:
 773 00c6 C046     		.align	2
 774              	.L36:
 775 00c8 00000000 		.word	CapSense_CSD_rawDataIndex
 776 00cc 00000000 		.word	CapSense_CSD_sensorIndex
 777 00d0 00000000 		.word	CapSense_CSD_numberOfSensors
 778 00d4 00000000 		.word	CapSense_CSD_sensorEnableMask
 779 00d8 00000000 		.word	CapSense_CSD_sensorEnableMaskBackup
 780 00dc 00000000 		.word	CapSense_CSD_csdStatusVar
 781              		.cfi_endproc
 782              	.LFE41:
 783              		.size	CapSense_CSD_ScanWidget, .-CapSense_CSD_ScanWidget
 784              		.section	.text.CapSense_CSD_ScanEnabledWidgets,"ax",%progbits
 785              		.align	2
 786              		.global	CapSense_CSD_ScanEnabledWidgets
 787              		.code	16
 788              		.thumb_func
 789              		.type	CapSense_CSD_ScanEnabledWidgets, %function
 790              	CapSense_CSD_ScanEnabledWidgets:
 791              	.LFB42:
 668:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (0u != CapSense_CSD_CSHL_API_GENERATE) */
 669:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 670:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 671:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_ScanEnableWidgets
 673:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 674:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 675:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 676:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This is the preferred method to scan all of the enabled widgets.
 677:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  The API starts scanning a sensor within the enabled widgets.
 678:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  The ISR continues scanning the sensors until all the enabled widgets are scanned.
 679:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Use of the ISR ensures this function is non-blocking.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 27


 680:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  All the widgets are enabled by default except proximity widgets.
 681:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  The proximity widgets must be manually enabled as their long scan time
 682:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  is incompatible with a fast response required of other widget types.
 683:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 684:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 685:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 686:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 687:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 688:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 689:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 690:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 691:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_csdStatusVar - used to provide the status and mode of the scanning process.
 692:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Sets the busy status(scan in progress) and clears the single scan mode.
 693:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - used to store a sensor scanning sensor number.
 694:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Sets to 0xFF and provided to function CapSense_CSD_FindNextSensor or
 695:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 696:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 697:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 698:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 699:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 700:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_ScanEnabledWidgets(void)
 701:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 792              		.loc 1 701 0
 793              		.cfi_startproc
 794 0000 80B5     		push	{r7, lr}
 795              		.cfi_def_cfa_offset 8
 796              		.cfi_offset 7, -8
 797              		.cfi_offset 14, -4
 798 0002 00AF     		add	r7, sp, #0
 799              		.cfi_def_cfa_register 7
 702:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Clears status/control variable and set sensorIndex */
 703:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_csdStatusVar = 0u;
 800              		.loc 1 703 0
 801 0004 124B     		ldr	r3, .L40
 802 0006 0022     		mov	r2, #0
 803 0008 1A70     		strb	r2, [r3]
 704:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = 0xFFu;
 804              		.loc 1 704 0
 805 000a 124B     		ldr	r3, .L40+4
 806 000c FF22     		mov	r2, #255
 807 000e 1A70     		strb	r2, [r3]
 705:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 706:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Find next sensor */
 707:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_sensorIndex = (uint8)CapSense_CSD_FindNextSensor(CapSense_CSD_sensorIndex);
 808              		.loc 1 707 0
 809 0010 104B     		ldr	r3, .L40+4
 810 0012 1B78     		ldrb	r3, [r3]
 811 0014 DBB2     		uxtb	r3, r3
 812 0016 181C     		mov	r0, r3
 813 0018 FFF7FEFF 		bl	CapSense_CSD_FindNextSensor
 814 001c 031C     		mov	r3, r0
 815 001e 1A1C     		mov	r2, r3
 816 0020 0C4B     		ldr	r3, .L40+4
 817 0022 1A70     		strb	r2, [r3]
 708:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 709:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Check end of scan condition */
 710:.\Generated_Source\PSoC4/CapSense_CSD.c ****     if(CapSense_CSD_sensorIndex < CapSense_CSD_TOTAL_SENSOR_COUNT)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 28


 818              		.loc 1 710 0
 819 0024 0B4B     		ldr	r3, .L40+4
 820 0026 1B78     		ldrb	r3, [r3]
 821 0028 DBB2     		uxtb	r3, r3
 822 002a 0B2B     		cmp	r3, #11
 823 002c 0DD8     		bhi	.L38
 711:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 712:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_csdStatusVar |= CapSense_CSD_SW_STS_BUSY;
 824              		.loc 1 712 0
 825 002e 084B     		ldr	r3, .L40
 826 0030 1B78     		ldrb	r3, [r3]
 827 0032 DBB2     		uxtb	r3, r3
 828 0034 0122     		mov	r2, #1
 829 0036 1343     		orr	r3, r2
 830 0038 DAB2     		uxtb	r2, r3
 831 003a 054B     		ldr	r3, .L40
 832 003c 1A70     		strb	r2, [r3]
 713:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_PreScan((uint32)CapSense_CSD_sensorIndex);
 833              		.loc 1 713 0
 834 003e 054B     		ldr	r3, .L40+4
 835 0040 1B78     		ldrb	r3, [r3]
 836 0042 DBB2     		uxtb	r3, r3
 837 0044 181C     		mov	r0, r3
 838 0046 FFF7FEFF 		bl	CapSense_CSD_PreScan
 839              	.L38:
 714:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 715:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 840              		.loc 1 715 0
 841 004a BD46     		mov	sp, r7
 842              		@ sp needed
 843 004c 80BD     		pop	{r7, pc}
 844              	.L41:
 845 004e C046     		.align	2
 846              	.L40:
 847 0050 00000000 		.word	CapSense_CSD_csdStatusVar
 848 0054 00000000 		.word	CapSense_CSD_sensorIndex
 849              		.cfi_endproc
 850              	.LFE42:
 851              		.size	CapSense_CSD_ScanEnabledWidgets, .-CapSense_CSD_ScanEnabledWidgets
 852              		.section	.text.CapSense_CSD_IsBusy,"ax",%progbits
 853              		.align	2
 854              		.global	CapSense_CSD_IsBusy
 855              		.code	16
 856              		.thumb_func
 857              		.type	CapSense_CSD_IsBusy, %function
 858              	CapSense_CSD_IsBusy:
 859              	.LFB43:
 716:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 717:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 718:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 719:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_IsBusy
 720:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 721:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 722:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 723:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Returns the state of the CapSense component. 1 means that scanning in
 724:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  progress and 0 means that scanning is complete.
 725:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 29


 726:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 727:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 728:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 729:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 730:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning
 731:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  completed.
 732:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 733:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 734:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_csdStatusVar - used to provide the status and mode of the scanning process.
 735:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Checks the busy status.
 736:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 737:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 738:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 739:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 740:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 741:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint32 CapSense_CSD_IsBusy(void)
 742:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 860              		.loc 1 742 0
 861              		.cfi_startproc
 862 0000 80B5     		push	{r7, lr}
 863              		.cfi_def_cfa_offset 8
 864              		.cfi_offset 7, -8
 865              		.cfi_offset 14, -4
 866 0002 00AF     		add	r7, sp, #0
 867              		.cfi_def_cfa_register 7
 743:.\Generated_Source\PSoC4/CapSense_CSD.c ****     return ((uint32)((0u != (CapSense_CSD_csdStatusVar & CapSense_CSD_SW_STS_BUSY)) ? 1u : 0u));
 868              		.loc 1 743 0
 869 0004 044B     		ldr	r3, .L44
 870 0006 1B78     		ldrb	r3, [r3]
 871 0008 DBB2     		uxtb	r3, r3
 872 000a 1A1C     		mov	r2, r3
 873 000c 0123     		mov	r3, #1
 874 000e 1340     		and	r3, r2
 744:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 875              		.loc 1 744 0
 876 0010 181C     		mov	r0, r3
 877 0012 BD46     		mov	sp, r7
 878              		@ sp needed
 879 0014 80BD     		pop	{r7, pc}
 880              	.L45:
 881 0016 C046     		.align	2
 882              	.L44:
 883 0018 00000000 		.word	CapSense_CSD_csdStatusVar
 884              		.cfi_endproc
 885              	.LFE43:
 886              		.size	CapSense_CSD_IsBusy, .-CapSense_CSD_IsBusy
 887              		.section	.text.CapSense_CSD_ReadSensorRaw,"ax",%progbits
 888              		.align	2
 889              		.global	CapSense_CSD_ReadSensorRaw
 890              		.code	16
 891              		.thumb_func
 892              		.type	CapSense_CSD_ReadSensorRaw, %function
 893              	CapSense_CSD_ReadSensorRaw:
 894              	.LFB44:
 745:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 746:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 747:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 30


 748:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_ReadSensorRaw
 749:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 750:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 751:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 752:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Returns sensor raw data from the global CapSense_sensorRaw[ ] array.
 753:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Each scan sensor has a unique number within the sensor array.
 754:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This number is assigned by the CapSense customizer in sequence.
 755:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Raw data can be used to perform calculations outside of the CapSense
 756:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  provided framework.
 757:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 758:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 759:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor:  Sensor number.
 760:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 761:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 762:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Returns the current raw data value for a defined sensor number.
 763:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 764:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 765:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
 766:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 767:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 768:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 769:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 770:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 771:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint16 CapSense_CSD_ReadSensorRaw(uint32 sensor)
 772:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 895              		.loc 1 772 0
 896              		.cfi_startproc
 897 0000 80B5     		push	{r7, lr}
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 7, -8
 900              		.cfi_offset 14, -4
 901 0002 82B0     		sub	sp, sp, #8
 902              		.cfi_def_cfa_offset 16
 903 0004 00AF     		add	r7, sp, #0
 904              		.cfi_def_cfa_register 7
 905 0006 7860     		str	r0, [r7, #4]
 773:.\Generated_Source\PSoC4/CapSense_CSD.c ****     return CapSense_CSD_sensorRaw[sensor];
 906              		.loc 1 773 0
 907 0008 034B     		ldr	r3, .L48
 908 000a 7A68     		ldr	r2, [r7, #4]
 909 000c 5200     		lsl	r2, r2, #1
 910 000e D35A     		ldrh	r3, [r2, r3]
 774:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 911              		.loc 1 774 0
 912 0010 181C     		mov	r0, r3
 913 0012 BD46     		mov	sp, r7
 914 0014 02B0     		add	sp, sp, #8
 915              		@ sp needed
 916 0016 80BD     		pop	{r7, pc}
 917              	.L49:
 918              		.align	2
 919              	.L48:
 920 0018 00000000 		.word	CapSense_CSD_sensorRaw
 921              		.cfi_endproc
 922              	.LFE44:
 923              		.size	CapSense_CSD_ReadSensorRaw, .-CapSense_CSD_ReadSensorRaw
 924              		.section	.text.CapSense_CSD_WriteSensorRaw,"ax",%progbits
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 31


 925              		.align	2
 926              		.global	CapSense_CSD_WriteSensorRaw
 927              		.code	16
 928              		.thumb_func
 929              		.type	CapSense_CSD_WriteSensorRaw, %function
 930              	CapSense_CSD_WriteSensorRaw:
 931              	.LFB45:
 775:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 776:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 777:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 778:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_WriteSensorRaw
 779:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 780:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 781:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 782:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API writes the raw count value passed as an argument to the sensor Raw count array.
 783:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 784:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 785:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor:  Sensor number.
 786:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  value: Raw count value.
 787:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 788:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 789:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
 790:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 791:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 792:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 793:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 794:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 795:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 796:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 797:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 798:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_WriteSensorRaw(uint32 sensor, uint16 value)
 799:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 932              		.loc 1 799 0
 933              		.cfi_startproc
 934 0000 80B5     		push	{r7, lr}
 935              		.cfi_def_cfa_offset 8
 936              		.cfi_offset 7, -8
 937              		.cfi_offset 14, -4
 938 0002 82B0     		sub	sp, sp, #8
 939              		.cfi_def_cfa_offset 16
 940 0004 00AF     		add	r7, sp, #0
 941              		.cfi_def_cfa_register 7
 942 0006 7860     		str	r0, [r7, #4]
 943 0008 0A1C     		mov	r2, r1
 944 000a BB1C     		add	r3, r7, #2
 945 000c 1A80     		strh	r2, [r3]
 800:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_sensorRaw[sensor] = value;
 946              		.loc 1 800 0
 947 000e 044B     		ldr	r3, .L51
 948 0010 7A68     		ldr	r2, [r7, #4]
 949 0012 5200     		lsl	r2, r2, #1
 950 0014 B91C     		add	r1, r7, #2
 951 0016 0988     		ldrh	r1, [r1]
 952 0018 D152     		strh	r1, [r2, r3]
 801:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 953              		.loc 1 801 0
 954 001a BD46     		mov	sp, r7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 32


 955 001c 02B0     		add	sp, sp, #8
 956              		@ sp needed
 957 001e 80BD     		pop	{r7, pc}
 958              	.L52:
 959              		.align	2
 960              	.L51:
 961 0020 00000000 		.word	CapSense_CSD_sensorRaw
 962              		.cfi_endproc
 963              	.LFE45:
 964              		.size	CapSense_CSD_WriteSensorRaw, .-CapSense_CSD_WriteSensorRaw
 965              		.section	.text.CapSense_CSD_SetScanResolution,"ax",%progbits
 966              		.align	2
 967              		.global	CapSense_CSD_SetScanResolution
 968              		.code	16
 969              		.thumb_func
 970              		.type	CapSense_CSD_SetScanResolution, %function
 971              	CapSense_CSD_SetScanResolution:
 972              	.LFB46:
 802:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 803:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 804:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 805:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /*******************************************************************************
 806:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetScanResolution
 807:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ********************************************************************************
 808:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 809:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Summary:
 810:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  Sets a value of the sensor scan resolution for a widget.
 811:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  The MIN resolution can be set 8-bit. The MAX Resolution can be set 16 bit.
 812:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  This function is not available for the tuning mode "None".
 813:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 814:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Parameters:
 815:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  widget:     Widget index.
 816:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  resolution: Represents the resolution value. The following defines which are available in th
 817:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *              CapSense_CSD.h file should be used:
 818:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *              CapSense_CSD_RESOLUTION_6_BITS
 819:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *              CapSense_CSD_RESOLUTION_7_BITS
 820:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *              CapSense_CSD_RESOLUTION_8_BITS
 821:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *              CapSense_CSD_RESOLUTION_9_BITS
 822:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *              CapSense_CSD_RESOLUTION_10_BITS
 823:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *              CapSense_CSD_RESOLUTION_11_BITS
 824:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *              CapSense_CSD_RESOLUTION_12_BITS
 825:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *              CapSense_CSD_RESOLUTION_13_BITS
 826:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *              CapSense_CSD_RESOLUTION_14_BITS
 827:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *              CapSense_CSD_RESOLUTION_15_BITS
 828:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *              CapSense_CSD_RESOLUTION_16_BITS
 829:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 830:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Return:
 831:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None
 832:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 833:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Global Variables:
 834:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  CapSense_CSD_widgetResolution[] - used to store scan resolution of each widget.
 835:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 836:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Side Effects:
 837:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None
 838:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 839:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *******************************************************************************/
 840:.\Generated_Source\PSoC4/CapSense_CSD.c ****     void CapSense_CSD_SetScanResolution(uint32 widget, uint32 resolution)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 33


 841:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 973              		.loc 1 841 0
 974              		.cfi_startproc
 975 0000 80B5     		push	{r7, lr}
 976              		.cfi_def_cfa_offset 8
 977              		.cfi_offset 7, -8
 978              		.cfi_offset 14, -4
 979 0002 82B0     		sub	sp, sp, #8
 980              		.cfi_def_cfa_offset 16
 981 0004 00AF     		add	r7, sp, #0
 982              		.cfi_def_cfa_register 7
 983 0006 7860     		str	r0, [r7, #4]
 984 0008 3960     		str	r1, [r7]
 842:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_widgetResolution[widget] = resolution;
 985              		.loc 1 842 0
 986 000a 044B     		ldr	r3, .L54
 987 000c 7A68     		ldr	r2, [r7, #4]
 988 000e 9200     		lsl	r2, r2, #2
 989 0010 3968     		ldr	r1, [r7]
 990 0012 D150     		str	r1, [r2, r3]
 843:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 991              		.loc 1 843 0
 992 0014 BD46     		mov	sp, r7
 993 0016 02B0     		add	sp, sp, #8
 994              		@ sp needed
 995 0018 80BD     		pop	{r7, pc}
 996              	.L55:
 997 001a C046     		.align	2
 998              	.L54:
 999 001c 00000000 		.word	CapSense_CSD_widgetResolution
 1000              		.cfi_endproc
 1001              	.LFE46:
 1002              		.size	CapSense_CSD_SetScanResolution, .-CapSense_CSD_SetScanResolution
 1003              		.section	.text.CapSense_CSD_GetScanResolution,"ax",%progbits
 1004              		.align	2
 1005              		.global	CapSense_CSD_GetScanResolution
 1006              		.code	16
 1007              		.thumb_func
 1008              		.type	CapSense_CSD_GetScanResolution, %function
 1009              	CapSense_CSD_GetScanResolution:
 1010              	.LFB47:
 844:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 845:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 846:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 847:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 848:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_GetScanResolution
 849:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 850:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 851:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 852:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Returns the resolution value for the appropriate sensor.
 853:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This function is not available for tuning mode "None".
 854:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 855:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 856:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  widget:     Widget index.
 857:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 858:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 859:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  resolution: Returns the resolution value for the appropriate sensor.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 34


 860:.\Generated_Source\PSoC4/CapSense_CSD.c **** *              The resolution values are defined in the CapSense_CSD.h file
 861:.\Generated_Source\PSoC4/CapSense_CSD.c **** *              The defines are encountered below:
 862:.\Generated_Source\PSoC4/CapSense_CSD.c **** *              CapSense_CSD_RESOLUTION_6_BITS
 863:.\Generated_Source\PSoC4/CapSense_CSD.c **** *              CapSense_CSD_RESOLUTION_7_BITS
 864:.\Generated_Source\PSoC4/CapSense_CSD.c **** *              CapSense_CSD_RESOLUTION_8_BITS
 865:.\Generated_Source\PSoC4/CapSense_CSD.c **** *              CapSense_CSD_RESOLUTION_9_BITS
 866:.\Generated_Source\PSoC4/CapSense_CSD.c **** *              CapSense_CSD_RESOLUTION_10_BITS
 867:.\Generated_Source\PSoC4/CapSense_CSD.c **** *              CapSense_CSD_RESOLUTION_11_BITS
 868:.\Generated_Source\PSoC4/CapSense_CSD.c **** *              CapSense_CSD_RESOLUTION_12_BITS
 869:.\Generated_Source\PSoC4/CapSense_CSD.c **** *              CapSense_CSD_RESOLUTION_13_BITS
 870:.\Generated_Source\PSoC4/CapSense_CSD.c **** *              CapSense_CSD_RESOLUTION_14_BITS
 871:.\Generated_Source\PSoC4/CapSense_CSD.c **** *              CapSense_CSD_RESOLUTION_15_BITS
 872:.\Generated_Source\PSoC4/CapSense_CSD.c **** *              CapSense_CSD_RESOLUTION_16_BITS
 873:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 874:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 875:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_widgetResolution[] - used to store scan resolution of every widget.
 876:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 877:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 878:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 879:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 880:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 881:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint32 CapSense_CSD_GetScanResolution(uint32 widget)
 882:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1011              		.loc 1 882 0
 1012              		.cfi_startproc
 1013 0000 80B5     		push	{r7, lr}
 1014              		.cfi_def_cfa_offset 8
 1015              		.cfi_offset 7, -8
 1016              		.cfi_offset 14, -4
 1017 0002 82B0     		sub	sp, sp, #8
 1018              		.cfi_def_cfa_offset 16
 1019 0004 00AF     		add	r7, sp, #0
 1020              		.cfi_def_cfa_register 7
 1021 0006 7860     		str	r0, [r7, #4]
 883:.\Generated_Source\PSoC4/CapSense_CSD.c ****     return(CapSense_CSD_widgetResolution[widget]);
 1022              		.loc 1 883 0
 1023 0008 034B     		ldr	r3, .L58
 1024 000a 7A68     		ldr	r2, [r7, #4]
 1025 000c 9200     		lsl	r2, r2, #2
 1026 000e D358     		ldr	r3, [r2, r3]
 884:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1027              		.loc 1 884 0
 1028 0010 181C     		mov	r0, r3
 1029 0012 BD46     		mov	sp, r7
 1030 0014 02B0     		add	sp, sp, #8
 1031              		@ sp needed
 1032 0016 80BD     		pop	{r7, pc}
 1033              	.L59:
 1034              		.align	2
 1035              	.L58:
 1036 0018 00000000 		.word	CapSense_CSD_widgetResolution
 1037              		.cfi_endproc
 1038              	.LFE47:
 1039              		.size	CapSense_CSD_GetScanResolution, .-CapSense_CSD_GetScanResolution
 1040              		.section	.text.CapSense_CSD_ClearSensors,"ax",%progbits
 1041              		.align	2
 1042              		.global	CapSense_CSD_ClearSensors
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 35


 1043              		.code	16
 1044              		.thumb_func
 1045              		.type	CapSense_CSD_ClearSensors, %function
 1046              	CapSense_CSD_ClearSensors:
 1047              	.LFB48:
 885:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 886:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 887:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
 888:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_ClearSensors
 889:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
 890:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 891:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
 892:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Resets all the sensors to the non-sampling state by sequentially disconnecting
 893:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  all the sensors from Analog MUX Bus and putting them to an inactive state.
 894:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 895:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
 896:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 897:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 898:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
 899:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 900:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 901:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
 902:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 903:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 904:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
 905:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
 906:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
 907:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
 908:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_ClearSensors(void)
 909:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1048              		.loc 1 909 0
 1049              		.cfi_startproc
 1050 0000 80B5     		push	{r7, lr}
 1051              		.cfi_def_cfa_offset 8
 1052              		.cfi_offset 7, -8
 1053              		.cfi_offset 14, -4
 1054 0002 82B0     		sub	sp, sp, #8
 1055              		.cfi_def_cfa_offset 16
 1056 0004 00AF     		add	r7, sp, #0
 1057              		.cfi_def_cfa_register 7
 910:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 snsIndex;
 911:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 912:.\Generated_Source\PSoC4/CapSense_CSD.c ****     for (snsIndex = 0u; snsIndex < CapSense_CSD_TOTAL_SENSOR_COUNT; snsIndex++)
 1058              		.loc 1 912 0
 1059 0006 0023     		mov	r3, #0
 1060 0008 7B60     		str	r3, [r7, #4]
 1061 000a 06E0     		b	.L61
 1062              	.L62:
 913:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 914:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_DisableScanSlot(snsIndex);
 1063              		.loc 1 914 0 discriminator 3
 1064 000c 7B68     		ldr	r3, [r7, #4]
 1065 000e 181C     		mov	r0, r3
 1066 0010 FFF7FEFF 		bl	CapSense_CSD_DisableSensor
 912:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 1067              		.loc 1 912 0 discriminator 3
 1068 0014 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 36


 1069 0016 0133     		add	r3, r3, #1
 1070 0018 7B60     		str	r3, [r7, #4]
 1071              	.L61:
 912:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 1072              		.loc 1 912 0 is_stmt 0 discriminator 1
 1073 001a 7B68     		ldr	r3, [r7, #4]
 1074 001c 0B2B     		cmp	r3, #11
 1075 001e F5D9     		bls	.L62
 915:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 916:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1076              		.loc 1 916 0 is_stmt 1
 1077 0020 BD46     		mov	sp, r7
 1078 0022 02B0     		add	sp, sp, #8
 1079              		@ sp needed
 1080 0024 80BD     		pop	{r7, pc}
 1081              		.cfi_endproc
 1082              	.LFE48:
 1083              		.size	CapSense_CSD_ClearSensors, .-CapSense_CSD_ClearSensors
 1084 0026 C046     		.section	.text.CapSense_CSD_EnableSensor,"ax",%progbits
 1085              		.align	2
 1086              		.global	CapSense_CSD_EnableSensor
 1087              		.code	16
 1088              		.thumb_func
 1089              		.type	CapSense_CSD_EnableSensor, %function
 1090              	CapSense_CSD_EnableSensor:
 1091              	.LFB49:
 917:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 918:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 919:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
 920:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /*******************************************************************************
 921:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Function Name: CapSense_CSD_EnableScanSlot
 922:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ********************************************************************************
 923:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 924:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Summary:
 925:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  Configures the selected slot to measure during the next measurement
 926:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and
 927:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
 928:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 929:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Parameters:
 930:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  slot:  Slot number.
 931:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 932:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Return:
 933:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None
 934:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 935:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Global Constants:
 936:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin
 937:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  belongs to for each sensor.
 938:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for
 939:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  each sensor.
 940:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
 941:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  The offset and position in this array are stored in a port and mask table for
 942:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  complex sensors.
 943:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  Bit 7 (msb) is used to define the sensor type: single or complex.
 944:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 945:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Side Effects:
 946:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None
 947:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 37


 948:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *******************************************************************************/
 949:.\Generated_Source\PSoC4/CapSense_CSD.c ****     void CapSense_CSD_EnableScanSlot(uint32 slot)
 950:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 951:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 j;
 952:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 snsNumber;
 953:.\Generated_Source\PSoC4/CapSense_CSD.c ****         const uint8 *index;
 954:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Read sensor type: single or complex */
 955:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
 956:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 957:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Check if sensor is complex */
 958:.\Generated_Source\PSoC4/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
 959:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
 960:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /* Enable sensor (single) */
 961:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_EnableSensor(slot);
 962:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
 963:.\Generated_Source\PSoC4/CapSense_CSD.c ****         else
 964:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
 965:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /* Enable complex sensor */
 966:.\Generated_Source\PSoC4/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
 967:.\Generated_Source\PSoC4/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
 968:.\Generated_Source\PSoC4/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
 969:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 970:.\Generated_Source\PSoC4/CapSense_CSD.c ****             for (j = 0u; j < snsNumber; j++)
 971:.\Generated_Source\PSoC4/CapSense_CSD.c ****             {
 972:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 CapSense_CSD_EnableSensor(index[j]);
 973:.\Generated_Source\PSoC4/CapSense_CSD.c ****             }
 974:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
 975:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 976:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 977:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
 978:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /*******************************************************************************
 979:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Function Name: CapSense_CSD_DisableScanSlot
 980:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ********************************************************************************
 981:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 982:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Summary:
 983:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  Disables the selected slot. The corresponding pin/pins is/are disconnected
 984:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
 985:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 986:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Parameters:
 987:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  slot:  Slot number.
 988:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 989:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Return:
 990:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None
 991:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
 992:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Global Variables:
 993:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  CapSense_CSD_portTable[]  - used to store the port number that pin
 994:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  belongs to for each sensor.
 995:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  CapSense_CSD_maskTable[]  - used to store the pin within the port for
 996:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  each sensor.
 997:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  CapSense_CSD_indexTable[] - used to store indexes of complex sensors.
 998:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  The offset and position in this array are stored in a port and mask table for
 999:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  complex sensors.
1000:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  7bit(msb) is used to define the sensor type: single or complex.
1001:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1002:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Side Effects:
1003:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None
1004:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 38


1005:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *******************************************************************************/
1006:.\Generated_Source\PSoC4/CapSense_CSD.c ****     void CapSense_CSD_DisableScanSlot(uint32 slot)
1007:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
1008:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 j;
1009:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 snsNumber;
1010:.\Generated_Source\PSoC4/CapSense_CSD.c ****         const uint8 *index;
1011:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1012:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Read sensor type: single or complex */
1013:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 snsType = CapSense_CSD_portTable[slot];
1014:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1015:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Check if sensor is complex */
1016:.\Generated_Source\PSoC4/CapSense_CSD.c ****         if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1017:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
1018:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /* Disable sensor (single) */
1019:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_DisableSensor(slot);
1020:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
1021:.\Generated_Source\PSoC4/CapSense_CSD.c ****         else
1022:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
1023:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /* Disable complex sensor */
1024:.\Generated_Source\PSoC4/CapSense_CSD.c ****             snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1025:.\Generated_Source\PSoC4/CapSense_CSD.c ****             index = &CapSense_CSD_indexTable[snsType];
1026:.\Generated_Source\PSoC4/CapSense_CSD.c ****             snsNumber = CapSense_CSD_maskTable[slot];
1027:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1028:.\Generated_Source\PSoC4/CapSense_CSD.c ****             for (j=0; j < snsNumber; j++)
1029:.\Generated_Source\PSoC4/CapSense_CSD.c ****             {
1030:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 CapSense_CSD_DisableSensor(index[j]);
1031:.\Generated_Source\PSoC4/CapSense_CSD.c ****             }
1032:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
1033:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
1034:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1035:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1036:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1037:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1038:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_EnableSensor
1039:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1040:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1041:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1042:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1043:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1044:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Analog Mux Bus. This also enables the comparator function.
1045:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1046:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1047:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor:  Sensor number.
1048:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1049:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1050:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1051:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1052:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1053:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin
1054:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  belongs to for each sensor.
1055:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_pinShiftTbl[] - used to store position of pin that
1056:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  configured as sensor in port.
1057:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_prtSelTbl[] - Contains pointers to the HSIOM
1058:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  registers for each port.
1059:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_PrtCfgTb[] - Contains pointers to the port config
1060:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  registers for each port.
1061:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 39


1062:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1063:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1064:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1065:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1066:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_EnableSensor(uint32 sensor)
1067:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1092              		.loc 1 1067 0
 1093              		.cfi_startproc
 1094 0000 90B5     		push	{r4, r7, lr}
 1095              		.cfi_def_cfa_offset 12
 1096              		.cfi_offset 4, -12
 1097              		.cfi_offset 7, -8
 1098              		.cfi_offset 14, -4
 1099 0002 87B0     		sub	sp, sp, #28
 1100              		.cfi_def_cfa_offset 40
 1101 0004 00AF     		add	r7, sp, #0
 1102              		.cfi_def_cfa_register 7
 1103 0006 7860     		str	r0, [r7, #4]
1068:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8  pinModeShift;
1069:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8  pinHSIOMShift;
1070:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8 interruptState;
1071:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 newRegisterValue;
1072:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 port;
1073:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1074:.\Generated_Source\PSoC4/CapSense_CSD.c ****     port = (uint32) CapSense_CSD_portTable[sensor];
 1104              		.loc 1 1074 0
 1105 0008 2B4A     		ldr	r2, .L64
 1106 000a 7B68     		ldr	r3, [r7, #4]
 1107 000c D318     		add	r3, r2, r3
 1108 000e 1B78     		ldrb	r3, [r3]
 1109 0010 7B61     		str	r3, [r7, #20]
1075:.\Generated_Source\PSoC4/CapSense_CSD.c ****     pinModeShift = CapSense_CSD_pinShiftTbl[sensor]  * CapSense_CSD_PC_PIN_CFG_SIZE;
 1110              		.loc 1 1075 0
 1111 0012 2A4A     		ldr	r2, .L64+4
 1112 0014 7B68     		ldr	r3, [r7, #4]
 1113 0016 D318     		add	r3, r2, r3
 1114 0018 1B78     		ldrb	r3, [r3]
 1115 001a 1322     		mov	r2, #19
 1116 001c BA18     		add	r2, r7, r2
 1117 001e 191C     		add	r1, r3, #0
 1118 0020 0B1C     		add	r3, r1, #0
 1119 0022 DB18     		add	r3, r3, r3
 1120 0024 5B18     		add	r3, r3, r1
 1121 0026 1370     		strb	r3, [r2]
1076:.\Generated_Source\PSoC4/CapSense_CSD.c ****     pinHSIOMShift = CapSense_CSD_pinShiftTbl[sensor] * CapSense_CSD_HSIOM_PIN_CFG_SIZE;
 1122              		.loc 1 1076 0
 1123 0028 244A     		ldr	r2, .L64+4
 1124 002a 7B68     		ldr	r3, [r7, #4]
 1125 002c D318     		add	r3, r2, r3
 1126 002e 1A78     		ldrb	r2, [r3]
 1127 0030 1223     		mov	r3, #18
 1128 0032 FB18     		add	r3, r7, r3
 1129 0034 9200     		lsl	r2, r2, #2
 1130 0036 1A70     		strb	r2, [r3]
1077:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1078:.\Generated_Source\PSoC4/CapSense_CSD.c ****     interruptState = CyEnterCriticalSection();
 1131              		.loc 1 1078 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 40


 1132 0038 1123     		mov	r3, #17
 1133 003a FC18     		add	r4, r7, r3
 1134 003c FFF7FEFF 		bl	CyEnterCriticalSection
 1135 0040 031C     		mov	r3, r0
 1136 0042 2370     		strb	r3, [r4]
1079:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1080:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegisterValue = *CapSense_CSD_prtSelTbl[port];
 1137              		.loc 1 1080 0
 1138 0044 1E4B     		ldr	r3, .L64+8
 1139 0046 7A69     		ldr	r2, [r7, #20]
 1140 0048 9200     		lsl	r2, r2, #2
 1141 004a D358     		ldr	r3, [r2, r3]
 1142 004c 1B68     		ldr	r3, [r3]
 1143 004e FB60     		str	r3, [r7, #12]
1081:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegisterValue &= ~(CapSense_CSD_CSD_HSIOM_MASK << pinHSIOMShift);
 1144              		.loc 1 1081 0
 1145 0050 1223     		mov	r3, #18
 1146 0052 FB18     		add	r3, r7, r3
 1147 0054 1B78     		ldrb	r3, [r3]
 1148 0056 0F22     		mov	r2, #15
 1149 0058 9A40     		lsl	r2, r2, r3
 1150 005a 131C     		mov	r3, r2
 1151 005c DA43     		mvn	r2, r3
 1152 005e FB68     		ldr	r3, [r7, #12]
 1153 0060 1340     		and	r3, r2
 1154 0062 FB60     		str	r3, [r7, #12]
1082:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegisterValue |= (uint32)((uint32)CapSense_CSD_CSD_SENSE_PORT_MODE << pinHSIOMShift);
 1155              		.loc 1 1082 0
 1156 0064 1223     		mov	r3, #18
 1157 0066 FB18     		add	r3, r7, r3
 1158 0068 1B78     		ldrb	r3, [r3]
 1159 006a 0422     		mov	r2, #4
 1160 006c 9A40     		lsl	r2, r2, r3
 1161 006e 131C     		mov	r3, r2
 1162 0070 FA68     		ldr	r2, [r7, #12]
 1163 0072 1343     		orr	r3, r2
 1164 0074 FB60     		str	r3, [r7, #12]
1083:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1084:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *CapSense_CSD_prtCfgTbl[port] &= (uint32)~((uint32)CapSense_CSD_CSD_PIN_MODE_MASK << pinModeShi
 1165              		.loc 1 1084 0
 1166 0076 134B     		ldr	r3, .L64+12
 1167 0078 7A69     		ldr	r2, [r7, #20]
 1168 007a 9200     		lsl	r2, r2, #2
 1169 007c D358     		ldr	r3, [r2, r3]
 1170 007e 114A     		ldr	r2, .L64+12
 1171 0080 7969     		ldr	r1, [r7, #20]
 1172 0082 8900     		lsl	r1, r1, #2
 1173 0084 8A58     		ldr	r2, [r1, r2]
 1174 0086 1268     		ldr	r2, [r2]
 1175 0088 1321     		mov	r1, #19
 1176 008a 7918     		add	r1, r7, r1
 1177 008c 0978     		ldrb	r1, [r1]
 1178 008e 0720     		mov	r0, #7
 1179 0090 8840     		lsl	r0, r0, r1
 1180 0092 011C     		mov	r1, r0
 1181 0094 C943     		mvn	r1, r1
 1182 0096 0A40     		and	r2, r1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 41


 1183 0098 1A60     		str	r2, [r3]
1085:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *CapSense_CSD_prtSelTbl[port] = newRegisterValue;
 1184              		.loc 1 1085 0
 1185 009a 094B     		ldr	r3, .L64+8
 1186 009c 7A69     		ldr	r2, [r7, #20]
 1187 009e 9200     		lsl	r2, r2, #2
 1188 00a0 D358     		ldr	r3, [r2, r3]
 1189 00a2 FA68     		ldr	r2, [r7, #12]
 1190 00a4 1A60     		str	r2, [r3]
1086:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1087:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CyExitCriticalSection(interruptState);
 1191              		.loc 1 1087 0
 1192 00a6 1123     		mov	r3, #17
 1193 00a8 FB18     		add	r3, r7, r3
 1194 00aa 1B78     		ldrb	r3, [r3]
 1195 00ac 181C     		mov	r0, r3
 1196 00ae FFF7FEFF 		bl	CyExitCriticalSection
1088:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1197              		.loc 1 1088 0
 1198 00b2 BD46     		mov	sp, r7
 1199 00b4 07B0     		add	sp, sp, #28
 1200              		@ sp needed
 1201 00b6 90BD     		pop	{r4, r7, pc}
 1202              	.L65:
 1203              		.align	2
 1204              	.L64:
 1205 00b8 00000000 		.word	CapSense_CSD_portTable
 1206 00bc 00000000 		.word	CapSense_CSD_pinShiftTbl
 1207 00c0 00000000 		.word	CapSense_CSD_prtSelTbl
 1208 00c4 00000000 		.word	CapSense_CSD_prtCfgTbl
 1209              		.cfi_endproc
 1210              	.LFE49:
 1211              		.size	CapSense_CSD_EnableSensor, .-CapSense_CSD_EnableSensor
 1212              		.section	.text.CapSense_CSD_DisableSensor,"ax",%progbits
 1213              		.align	2
 1214              		.global	CapSense_CSD_DisableSensor
 1215              		.code	16
 1216              		.thumb_func
 1217              		.type	CapSense_CSD_DisableSensor, %function
 1218              	CapSense_CSD_DisableSensor:
 1219              	.LFB50:
1089:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1090:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1091:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1092:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_DisableSensor
1093:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1094:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1095:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1096:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1097:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1098:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1099:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1100:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor:  Sensor number
1101:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1102:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1103:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1104:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 42


1105:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1106:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin
1107:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  belongs to for each sensor.
1108:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_pinShiftTbl[] - used to store position of pin that
1109:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  configured as a sensor in the port.
1110:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_prtSelTbl[] - Contains pointers to the HSIOM
1111:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  registers for each port.
1112:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_PrtCfgTb[] - Contains pointers to the port config
1113:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  registers for each port.
1114:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1115:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1116:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1117:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1118:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1119:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_DisableSensor(uint32 sensor)
1120:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1220              		.loc 1 1120 0
 1221              		.cfi_startproc
 1222 0000 90B5     		push	{r4, r7, lr}
 1223              		.cfi_def_cfa_offset 12
 1224              		.cfi_offset 4, -12
 1225              		.cfi_offset 7, -8
 1226              		.cfi_offset 14, -4
 1227 0002 89B0     		sub	sp, sp, #36
 1228              		.cfi_def_cfa_offset 48
 1229 0004 00AF     		add	r7, sp, #0
 1230              		.cfi_def_cfa_register 7
 1231 0006 7860     		str	r0, [r7, #4]
1121:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8 interruptState;
1122:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 newRegisterValue;
1123:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1124:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 port = (uint32) CapSense_CSD_portTable[sensor];
 1232              		.loc 1 1124 0
 1233 0008 3D4A     		ldr	r2, .L69
 1234 000a 7B68     		ldr	r3, [r7, #4]
 1235 000c D318     		add	r3, r2, r3
 1236 000e 1B78     		ldrb	r3, [r3]
 1237 0010 7B61     		str	r3, [r7, #20]
1125:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8  pinHSIOMShift = CapSense_CSD_pinShiftTbl[sensor] * CapSense_CSD_HSIOM_PIN_CFG_SIZE;
 1238              		.loc 1 1125 0
 1239 0012 3C4A     		ldr	r2, .L69+4
 1240 0014 7B68     		ldr	r3, [r7, #4]
 1241 0016 D318     		add	r3, r2, r3
 1242 0018 1A78     		ldrb	r2, [r3]
 1243 001a 1323     		mov	r3, #19
 1244 001c FB18     		add	r3, r7, r3
 1245 001e 9200     		lsl	r2, r2, #2
 1246 0020 1A70     		strb	r2, [r3]
1126:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8  pinModeShift = CapSense_CSD_pinShiftTbl[sensor]  * CapSense_CSD_PC_PIN_CFG_SIZE;
 1247              		.loc 1 1126 0
 1248 0022 384A     		ldr	r2, .L69+4
 1249 0024 7B68     		ldr	r3, [r7, #4]
 1250 0026 D318     		add	r3, r2, r3
 1251 0028 1B78     		ldrb	r3, [r3]
 1252 002a 1222     		mov	r2, #18
 1253 002c BA18     		add	r2, r7, r2
 1254 002e 191C     		add	r1, r3, #0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 43


 1255 0030 0B1C     		add	r3, r1, #0
 1256 0032 DB18     		add	r3, r3, r3
 1257 0034 5B18     		add	r3, r3, r1
 1258 0036 1370     		strb	r3, [r2]
1127:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1128:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 inactiveConnect = CapSense_CSD_SNS_HIZANALOG_CONNECT;
 1259              		.loc 1 1128 0
 1260 0038 0023     		mov	r3, #0
 1261 003a FB61     		str	r3, [r7, #28]
1129:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 sensorState = CapSense_CSD_unscannedSnsDriveMode[sensor];
 1262              		.loc 1 1129 0
 1263 003c 324A     		ldr	r2, .L69+8
 1264 003e 7B68     		ldr	r3, [r7, #4]
 1265 0040 D318     		add	r3, r2, r3
 1266 0042 1B78     		ldrb	r3, [r3]
 1267 0044 BB61     		str	r3, [r7, #24]
1130:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1131:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *CapSense_CSD_prtSelTbl[port] &= ~(CapSense_CSD_CSD_HSIOM_MASK << pinHSIOMShift);
 1268              		.loc 1 1131 0
 1269 0046 314B     		ldr	r3, .L69+12
 1270 0048 7A69     		ldr	r2, [r7, #20]
 1271 004a 9200     		lsl	r2, r2, #2
 1272 004c D358     		ldr	r3, [r2, r3]
 1273 004e 2F4A     		ldr	r2, .L69+12
 1274 0050 7969     		ldr	r1, [r7, #20]
 1275 0052 8900     		lsl	r1, r1, #2
 1276 0054 8A58     		ldr	r2, [r1, r2]
 1277 0056 1268     		ldr	r2, [r2]
 1278 0058 1321     		mov	r1, #19
 1279 005a 7918     		add	r1, r7, r1
 1280 005c 0978     		ldrb	r1, [r1]
 1281 005e 0F20     		mov	r0, #15
 1282 0060 8840     		lsl	r0, r0, r1
 1283 0062 011C     		mov	r1, r0
 1284 0064 C943     		mvn	r1, r1
 1285 0066 0A40     		and	r2, r1
 1286 0068 1A60     		str	r2, [r3]
1132:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1133:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if(CapSense_CSD_IS_SHIELD_ENABLE != 0)
1134:.\Generated_Source\PSoC4/CapSense_CSD.c ****     if(sensorState != (uint32)CapSense_CSD__SHIELD)
1135:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
1136:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #else
1137:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Connected to Ground if shield is disabled */
1138:.\Generated_Source\PSoC4/CapSense_CSD.c ****         if(sensorState == (uint32)CapSense_CSD__SHIELD)
 1287              		.loc 1 1138 0
 1288 006a BB69     		ldr	r3, [r7, #24]
 1289 006c 022B     		cmp	r3, #2
 1290 006e 01D1     		bne	.L67
1139:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
1140:.\Generated_Source\PSoC4/CapSense_CSD.c ****             sensorState = (uint32)CapSense_CSD__GROUND;
 1291              		.loc 1 1140 0
 1292 0070 0023     		mov	r3, #0
 1293 0072 BB61     		str	r3, [r7, #24]
 1294              	.L67:
1141:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
1142:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (CapSense_CSD_IS_SHIELD_ENABLE) */
1143:.\Generated_Source\PSoC4/CapSense_CSD.c ****         if(sensorState != (uint32)CapSense_CSD__HIZ_ANALOG)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 44


 1295              		.loc 1 1143 0
 1296 0074 BB69     		ldr	r3, [r7, #24]
 1297 0076 012B     		cmp	r3, #1
 1298 0078 01D0     		beq	.L68
1144:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
1145:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /* Connected to Ground */
1146:.\Generated_Source\PSoC4/CapSense_CSD.c ****             inactiveConnect = (uint32)CapSense_CSD_SNS_GROUND_CONNECT;
 1299              		.loc 1 1146 0
 1300 007a 0623     		mov	r3, #6
 1301 007c FB61     		str	r3, [r7, #28]
 1302              	.L68:
1147:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
1148:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1149:.\Generated_Source\PSoC4/CapSense_CSD.c ****         interruptState = CyEnterCriticalSection();
 1303              		.loc 1 1149 0
 1304 007e 1123     		mov	r3, #17
 1305 0080 FC18     		add	r4, r7, r3
 1306 0082 FFF7FEFF 		bl	CyEnterCriticalSection
 1307 0086 031C     		mov	r3, r0
 1308 0088 2370     		strb	r3, [r4]
1150:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1151:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Set drive mode */
1152:.\Generated_Source\PSoC4/CapSense_CSD.c ****         newRegisterValue = *CapSense_CSD_prtCfgTbl[port];
 1309              		.loc 1 1152 0
 1310 008a 214B     		ldr	r3, .L69+16
 1311 008c 7A69     		ldr	r2, [r7, #20]
 1312 008e 9200     		lsl	r2, r2, #2
 1313 0090 D358     		ldr	r3, [r2, r3]
 1314 0092 1B68     		ldr	r3, [r3]
 1315 0094 FB60     		str	r3, [r7, #12]
1153:.\Generated_Source\PSoC4/CapSense_CSD.c ****         newRegisterValue &= ~(CapSense_CSD_CSD_PIN_MODE_MASK << pinModeShift);
 1316              		.loc 1 1153 0
 1317 0096 1223     		mov	r3, #18
 1318 0098 FB18     		add	r3, r7, r3
 1319 009a 1B78     		ldrb	r3, [r3]
 1320 009c 0722     		mov	r2, #7
 1321 009e 9A40     		lsl	r2, r2, r3
 1322 00a0 131C     		mov	r3, r2
 1323 00a2 DA43     		mvn	r2, r3
 1324 00a4 FB68     		ldr	r3, [r7, #12]
 1325 00a6 1340     		and	r3, r2
 1326 00a8 FB60     		str	r3, [r7, #12]
1154:.\Generated_Source\PSoC4/CapSense_CSD.c ****         newRegisterValue |=  (uint32)(inactiveConnect << pinModeShift);
 1327              		.loc 1 1154 0
 1328 00aa 1223     		mov	r3, #18
 1329 00ac FB18     		add	r3, r7, r3
 1330 00ae 1B78     		ldrb	r3, [r3]
 1331 00b0 FA69     		ldr	r2, [r7, #28]
 1332 00b2 9A40     		lsl	r2, r2, r3
 1333 00b4 131C     		mov	r3, r2
 1334 00b6 FA68     		ldr	r2, [r7, #12]
 1335 00b8 1343     		orr	r3, r2
 1336 00ba FB60     		str	r3, [r7, #12]
1155:.\Generated_Source\PSoC4/CapSense_CSD.c ****         *CapSense_CSD_prtCfgTbl[port] =  newRegisterValue;
 1337              		.loc 1 1155 0
 1338 00bc 144B     		ldr	r3, .L69+16
 1339 00be 7A69     		ldr	r2, [r7, #20]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 45


 1340 00c0 9200     		lsl	r2, r2, #2
 1341 00c2 D358     		ldr	r3, [r2, r3]
 1342 00c4 FA68     		ldr	r2, [r7, #12]
 1343 00c6 1A60     		str	r2, [r3]
1156:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1157:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CyExitCriticalSection(interruptState);
 1344              		.loc 1 1157 0
 1345 00c8 1123     		mov	r3, #17
 1346 00ca FB18     		add	r3, r7, r3
 1347 00cc 1B78     		ldrb	r3, [r3]
 1348 00ce 181C     		mov	r0, r3
 1349 00d0 FFF7FEFF 		bl	CyExitCriticalSection
1158:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1159:.\Generated_Source\PSoC4/CapSense_CSD.c ****         *CapSense_CSD_prtDRTbl[port]  &=  (uint32)~(uint32)((uint32)1u << CapSense_CSD_pinShiftTbl[
 1350              		.loc 1 1159 0
 1351 00d4 0F4B     		ldr	r3, .L69+20
 1352 00d6 7A69     		ldr	r2, [r7, #20]
 1353 00d8 9200     		lsl	r2, r2, #2
 1354 00da D358     		ldr	r3, [r2, r3]
 1355 00dc 0D4A     		ldr	r2, .L69+20
 1356 00de 7969     		ldr	r1, [r7, #20]
 1357 00e0 8900     		lsl	r1, r1, #2
 1358 00e2 8A58     		ldr	r2, [r1, r2]
 1359 00e4 1268     		ldr	r2, [r2]
 1360 00e6 0748     		ldr	r0, .L69+4
 1361 00e8 7968     		ldr	r1, [r7, #4]
 1362 00ea 4118     		add	r1, r0, r1
 1363 00ec 0978     		ldrb	r1, [r1]
 1364 00ee 081C     		mov	r0, r1
 1365 00f0 0121     		mov	r1, #1
 1366 00f2 8140     		lsl	r1, r1, r0
 1367 00f4 C943     		mvn	r1, r1
 1368 00f6 0A40     		and	r2, r1
 1369 00f8 1A60     		str	r2, [r3]
1160:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if(CapSense_CSD_IS_SHIELD_ENABLE != 0)
1161:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
1162:.\Generated_Source\PSoC4/CapSense_CSD.c ****     else
1163:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
1164:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Connect to Shield */
1165:.\Generated_Source\PSoC4/CapSense_CSD.c ****         *CapSense_CSD_prtSelTbl[port] |= (CapSense_CSD_CSD_SHIELD_PORT_MODE << pinHSIOMShift);
1166:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
1167:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (CapSense_CSD_IS_SHIELD_ENABLE) */
1168:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1370              		.loc 1 1168 0
 1371 00fa BD46     		mov	sp, r7
 1372 00fc 09B0     		add	sp, sp, #36
 1373              		@ sp needed
 1374 00fe 90BD     		pop	{r4, r7, pc}
 1375              	.L70:
 1376              		.align	2
 1377              	.L69:
 1378 0100 00000000 		.word	CapSense_CSD_portTable
 1379 0104 00000000 		.word	CapSense_CSD_pinShiftTbl
 1380 0108 00000000 		.word	CapSense_CSD_unscannedSnsDriveMode
 1381 010c 00000000 		.word	CapSense_CSD_prtSelTbl
 1382 0110 00000000 		.word	CapSense_CSD_prtCfgTbl
 1383 0114 00000000 		.word	CapSense_CSD_prtDRTbl
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 46


 1384              		.cfi_endproc
 1385              	.LFE50:
 1386              		.size	CapSense_CSD_DisableSensor, .-CapSense_CSD_DisableSensor
 1387              		.section	.text.CapSense_CSD_SetDriveModeAllPins,"ax",%progbits
 1388              		.align	2
 1389              		.global	CapSense_CSD_SetDriveModeAllPins
 1390              		.code	16
 1391              		.thumb_func
 1392              		.type	CapSense_CSD_SetDriveModeAllPins, %function
 1393              	CapSense_CSD_SetDriveModeAllPins:
 1394              	.LFB51:
1169:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1170:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1171:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1172:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetDriveModeAllPins
1173:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1174:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1175:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1176:.\Generated_Source\PSoC4/CapSense_CSD.c **** * This API sets the drive mode of port pins used by the CapSense
1177:.\Generated_Source\PSoC4/CapSense_CSD.c **** * component (sensors, guard, shield, shield tank and Cmod) to drive the
1178:.\Generated_Source\PSoC4/CapSense_CSD.c **** * mode specified by the argument.
1179:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1180:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1181:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  driveMode:  Drive mode definition.
1182:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1183:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1184:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1185:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1186:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1187:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_portTable[] - used to store the port number that pin
1188:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  belongs to for each sensor.
1189:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_pinShiftTbl[] - used to store position of pin that
1190:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  configured as a sensor in the port.
1191:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1192:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1193:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API shall be called only after CapSense component is stopped.
1194:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1195:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1196:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_SetDriveModeAllPins(uint32 driveMode)
1197:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1395              		.loc 1 1197 0
 1396              		.cfi_startproc
 1397 0000 80B5     		push	{r7, lr}
 1398              		.cfi_def_cfa_offset 8
 1399              		.cfi_offset 7, -8
 1400              		.cfi_offset 14, -4
 1401 0002 86B0     		sub	sp, sp, #24
 1402              		.cfi_def_cfa_offset 32
 1403 0004 00AF     		add	r7, sp, #0
 1404              		.cfi_def_cfa_register 7
 1405 0006 7860     		str	r0, [r7, #4]
1198:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8 curSensor;
1199:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1200:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 snsNumber;
1201:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 snsType;
1202:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1203:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 prtNumberTmp;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 47


1204:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 pinNumberTmp;
1205:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1206:.\Generated_Source\PSoC4/CapSense_CSD.c ****     for(curSensor = 0u; curSensor < CapSense_CSD_TOTAL_SENSOR_COUNT; curSensor++)
 1406              		.loc 1 1206 0
 1407 0008 1723     		mov	r3, #23
 1408 000a FB18     		add	r3, r7, r3
 1409 000c 0022     		mov	r2, #0
 1410 000e 1A70     		strb	r2, [r3]
 1411 0010 1AE0     		b	.L72
 1412              	.L73:
1207:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
1208:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #if (CapSense_CSD_IS_COMPLEX_SCANSLOTS)
1209:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /* Read sensor type: single or complex */
1210:.\Generated_Source\PSoC4/CapSense_CSD.c ****             snsType = CapSense_CSD_portTable[curSensor];
1211:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1212:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /* Check if sensor is complex */
1213:.\Generated_Source\PSoC4/CapSense_CSD.c ****             if ((snsType & CapSense_CSD_COMPLEX_SS_FLAG) == 0u)
1214:.\Generated_Source\PSoC4/CapSense_CSD.c ****             {
1215:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 /* The sensor is not complex */
1216:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 snsNumber = curSensor;
1217:.\Generated_Source\PSoC4/CapSense_CSD.c ****             }
1218:.\Generated_Source\PSoC4/CapSense_CSD.c ****             else
1219:.\Generated_Source\PSoC4/CapSense_CSD.c ****             {
1220:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 /* Get dedicated sensor ID of the complex sensor */
1221:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 snsType &= ~CapSense_CSD_COMPLEX_SS_FLAG;
1222:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 snsNumber = CapSense_CSD_indexTable[snsType];
1223:.\Generated_Source\PSoC4/CapSense_CSD.c ****             }
1224:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1225:.\Generated_Source\PSoC4/CapSense_CSD.c ****             prtNumberTmp = CapSense_CSD_portTable[snsNumber];
1226:.\Generated_Source\PSoC4/CapSense_CSD.c ****             pinNumberTmp = CapSense_CSD_pinShiftTbl[snsNumber];
1227:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #else
1228:.\Generated_Source\PSoC4/CapSense_CSD.c ****             prtNumberTmp = CapSense_CSD_portTable[curSensor];
 1413              		.loc 1 1228 0 discriminator 3
 1414 0012 1723     		mov	r3, #23
 1415 0014 FB18     		add	r3, r7, r3
 1416 0016 1B78     		ldrb	r3, [r3]
 1417 0018 124A     		ldr	r2, .L74
 1418 001a D35C     		ldrb	r3, [r2, r3]
 1419 001c 3B61     		str	r3, [r7, #16]
1229:.\Generated_Source\PSoC4/CapSense_CSD.c ****             pinNumberTmp = CapSense_CSD_pinShiftTbl[curSensor];
 1420              		.loc 1 1229 0 discriminator 3
 1421 001e 1723     		mov	r3, #23
 1422 0020 FB18     		add	r3, r7, r3
 1423 0022 1B78     		ldrb	r3, [r3]
 1424 0024 104A     		ldr	r2, .L74+4
 1425 0026 D35C     		ldrb	r3, [r2, r3]
 1426 0028 FB60     		str	r3, [r7, #12]
1230:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #endif  /* CapSense_CSD_IS_COMPLEX_SCANSLOTS */
1231:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1232:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_SetPinDriveMode(driveMode, pinNumberTmp, prtNumberTmp);
 1427              		.loc 1 1232 0 discriminator 3
 1428 002a 7968     		ldr	r1, [r7, #4]
 1429 002c FA68     		ldr	r2, [r7, #12]
 1430 002e 3B69     		ldr	r3, [r7, #16]
 1431 0030 081C     		mov	r0, r1
 1432 0032 111C     		mov	r1, r2
 1433 0034 1A1C     		mov	r2, r3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 48


 1434 0036 FFF7FEFF 		bl	CapSense_CSD_SetPinDriveMode
1206:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 1435              		.loc 1 1206 0 discriminator 3
 1436 003a 1723     		mov	r3, #23
 1437 003c FB18     		add	r3, r7, r3
 1438 003e 1A78     		ldrb	r2, [r3]
 1439 0040 1723     		mov	r3, #23
 1440 0042 FB18     		add	r3, r7, r3
 1441 0044 0132     		add	r2, r2, #1
 1442 0046 1A70     		strb	r2, [r3]
 1443              	.L72:
1206:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 1444              		.loc 1 1206 0 is_stmt 0 discriminator 1
 1445 0048 1723     		mov	r3, #23
 1446 004a FB18     		add	r3, r7, r3
 1447 004c 1B78     		ldrb	r3, [r3]
 1448 004e 0B2B     		cmp	r3, #11
 1449 0050 DFD9     		bls	.L73
1233:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
1234:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1235:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_SetPinDriveMode(driveMode, (uint32)CapSense_CSD_CMOD_PIN_NUMBER, (uint32)CapSense_
 1450              		.loc 1 1235 0 is_stmt 1
 1451 0052 7B68     		ldr	r3, [r7, #4]
 1452 0054 181C     		mov	r0, r3
 1453 0056 0221     		mov	r1, #2
 1454 0058 0422     		mov	r2, #4
 1455 005a FFF7FEFF 		bl	CapSense_CSD_SetPinDriveMode
1236:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1237:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if(0u != CapSense_CSD_CSH_TANK_ENABLE)
1238:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_SetPinDriveMode(driveMode, (uint32)CapSense_CSD_CTANK_PIN_NUMBER, (uint32)CapS
1239:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (0u != CapSense_CSD_CSH_TANK_ENABLE) */
1240:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1241:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if(0u != CapSense_CSD_IS_SHIELD_ENABLE)
1242:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_SetPinDriveMode(driveMode, (uint32)CapSense_CSD_SHIELD_PIN_NUMBER, (uint32)Cap
1243:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (0u != CapSense_CSD_IS_SHIELD_ENABLE) */
1244:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1456              		.loc 1 1244 0
 1457 005e BD46     		mov	sp, r7
 1458 0060 06B0     		add	sp, sp, #24
 1459              		@ sp needed
 1460 0062 80BD     		pop	{r7, pc}
 1461              	.L75:
 1462              		.align	2
 1463              	.L74:
 1464 0064 00000000 		.word	CapSense_CSD_portTable
 1465 0068 00000000 		.word	CapSense_CSD_pinShiftTbl
 1466              		.cfi_endproc
 1467              	.LFE51:
 1468              		.size	CapSense_CSD_SetDriveModeAllPins, .-CapSense_CSD_SetDriveModeAllPins
 1469              		.section	.text.CapSense_CSD_RestoreDriveModeAllPins,"ax",%progbits
 1470              		.align	2
 1471              		.global	CapSense_CSD_RestoreDriveModeAllPins
 1472              		.code	16
 1473              		.thumb_func
 1474              		.type	CapSense_CSD_RestoreDriveModeAllPins, %function
 1475              	CapSense_CSD_RestoreDriveModeAllPins:
 1476              	.LFB52:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 49


1245:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1246:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1247:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1248:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_RestoreDriveModeAllPins
1249:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1250:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1251:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1252:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API restores the drive for all the CapSense port pins to the original
1253:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  state.
1254:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1255:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1256:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1257:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1258:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1259:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1260:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1261:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1262:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_prtSelTbl[] - Contains pointers to the HSIOM
1263:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  registers for each port.
1264:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1265:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1266:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API is called only after the CapSense component is stopped.
1267:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1268:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1269:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_RestoreDriveModeAllPins(void)
1270:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1477              		.loc 1 1270 0
 1478              		.cfi_startproc
 1479 0000 80B5     		push	{r7, lr}
 1480              		.cfi_def_cfa_offset 8
 1481              		.cfi_offset 7, -8
 1482              		.cfi_offset 14, -4
 1483 0002 82B0     		sub	sp, sp, #8
 1484              		.cfi_def_cfa_offset 16
 1485 0004 00AF     		add	r7, sp, #0
 1486              		.cfi_def_cfa_register 7
1271:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 newRegisterValue;
1272:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1273:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_SetDriveModeAllPins(CY_SYS_PINS_DM_ALG_HIZ);
 1487              		.loc 1 1273 0
 1488 0006 0020     		mov	r0, #0
 1489 0008 FFF7FEFF 		bl	CapSense_CSD_SetDriveModeAllPins
1274:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1275:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegisterValue = CapSense_CSD_CMOD_CONNECTION_REG;
 1490              		.loc 1 1275 0
 1491 000c 084B     		ldr	r3, .L77
 1492 000e 1B68     		ldr	r3, [r3]
 1493 0010 7B60     		str	r3, [r7, #4]
1276:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegisterValue &= ~(CapSense_CSD_CSD_CMOD_CONNECTION_MASK);
 1494              		.loc 1 1276 0
 1495 0012 7B68     		ldr	r3, [r7, #4]
 1496 0014 074A     		ldr	r2, .L77+4
 1497 0016 1340     		and	r3, r2
 1498 0018 7B60     		str	r3, [r7, #4]
1277:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegisterValue |= CapSense_CSD_CSD_CMOD_TO_AMUXBUS_A;
 1499              		.loc 1 1277 0
 1500 001a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 50


 1501 001c C022     		mov	r2, #192
 1502 001e D200     		lsl	r2, r2, #3
 1503 0020 1343     		orr	r3, r2
 1504 0022 7B60     		str	r3, [r7, #4]
1278:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CMOD_CONNECTION_REG = newRegisterValue;
 1505              		.loc 1 1278 0
 1506 0024 024B     		ldr	r3, .L77
 1507 0026 7A68     		ldr	r2, [r7, #4]
 1508 0028 1A60     		str	r2, [r3]
1279:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1280:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if(0u != CapSense_CSD_CSH_TANK_ENABLE)
1281:.\Generated_Source\PSoC4/CapSense_CSD.c ****         newRegisterValue = CapSense_CSD_CTANK_CONNECTION_REG;
1282:.\Generated_Source\PSoC4/CapSense_CSD.c ****         newRegisterValue &= ~(CapSense_CSD_CSD_CTANK_CONNECTION_MASK);
1283:.\Generated_Source\PSoC4/CapSense_CSD.c ****         newRegisterValue |= CapSense_CSD_CSD_CTANK_TO_AMUXBUS_B;
1284:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_CTANK_CONNECTION_REG = newRegisterValue;
1285:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif/* (0u != CapSense_CSD_CSH_TANK_ENABLE) */
1286:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1287:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if(0u != CapSense_CSD_IS_SHIELD_ENABLE)
1288:.\Generated_Source\PSoC4/CapSense_CSD.c ****         newRegisterValue = *CapSense_CSD_prtSelTbl[CapSense_CSD_SHIELD_PORT_NUMBER];
1289:.\Generated_Source\PSoC4/CapSense_CSD.c ****         newRegisterValue &= ~(CapSense_CSD_CSD_HSIOM_MASK << ((uint32)CapSense_CSD_SHIELD_PIN_NUMBE
1290:.\Generated_Source\PSoC4/CapSense_CSD.c ****         newRegisterValue |= (CapSense_CSD_CSD_SHIELD_PORT_MODE << ((uint32)CapSense_CSD_SHIELD_PIN_
1291:.\Generated_Source\PSoC4/CapSense_CSD.c ****         *CapSense_CSD_prtSelTbl[CapSense_CSD_SHIELD_PORT_NUMBER] = newRegisterValue;
1292:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (0u != CapSense_CSD_IS_SHIELD_ENABLE) */
1293:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1509              		.loc 1 1293 0
 1510 002a BD46     		mov	sp, r7
 1511 002c 02B0     		add	sp, sp, #8
 1512              		@ sp needed
 1513 002e 80BD     		pop	{r7, pc}
 1514              	.L78:
 1515              		.align	2
 1516              	.L77:
 1517 0030 10000140 		.word	1073807376
 1518 0034 FFF0FFFF 		.word	-3841
 1519              		.cfi_endproc
 1520              	.LFE52:
 1521              		.size	CapSense_CSD_RestoreDriveModeAllPins, .-CapSense_CSD_RestoreDriveModeAllPins
 1522              		.section	.text.CapSense_CSD_SetPinDriveMode,"ax",%progbits
 1523              		.align	2
 1524              		.global	CapSense_CSD_SetPinDriveMode
 1525              		.code	16
 1526              		.thumb_func
 1527              		.type	CapSense_CSD_SetPinDriveMode, %function
 1528              	CapSense_CSD_SetPinDriveMode:
 1529              	.LFB53:
1294:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1295:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1296:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1297:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetPinDriveMode
1298:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1299:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1300:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1301:.\Generated_Source\PSoC4/CapSense_CSD.c **** * This API sets the drive mode for the appropriate port/pin.
1302:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1303:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1304:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  driveMode:  Drive mode definition.
1305:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  portNumber: contains port number (0, 1, 2).
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 51


1306:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  pinNumber: contains pin number (0, 1, 2, ... , 7).
1307:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1308:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1309:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1310:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1311:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1312:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_prtSelTbl[] - Contains pointers to the HSIOM
1313:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  registers for each port.
1314:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_prtCfgTb[] - Contains pointers to the port config
1315:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  registers for each port.
1316:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1317:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1318:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API is called only after CapSense component is stopped.
1319:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1320:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1321:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_SetPinDriveMode(uint32 driveMode, uint32 pinNumber, uint32 portNumber)
1322:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1530              		.loc 1 1322 0
 1531              		.cfi_startproc
 1532 0000 80B5     		push	{r7, lr}
 1533              		.cfi_def_cfa_offset 8
 1534              		.cfi_offset 7, -8
 1535              		.cfi_offset 14, -4
 1536 0002 86B0     		sub	sp, sp, #24
 1537              		.cfi_def_cfa_offset 32
 1538 0004 00AF     		add	r7, sp, #0
 1539              		.cfi_def_cfa_register 7
 1540 0006 F860     		str	r0, [r7, #12]
 1541 0008 B960     		str	r1, [r7, #8]
 1542 000a 7A60     		str	r2, [r7, #4]
1323:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32  pinModeShift;
1324:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 newRegisterValue;
1325:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1326:.\Generated_Source\PSoC4/CapSense_CSD.c ****     pinModeShift  = pinNumber * CapSense_CSD_PC_PIN_CFG_SIZE;
 1543              		.loc 1 1326 0
 1544 000c BA68     		ldr	r2, [r7, #8]
 1545 000e 131C     		mov	r3, r2
 1546 0010 5B00     		lsl	r3, r3, #1
 1547 0012 9B18     		add	r3, r3, r2
 1548 0014 7B61     		str	r3, [r7, #20]
1327:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1328:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegisterValue = *CapSense_CSD_prtCfgTbl[portNumber];
 1549              		.loc 1 1328 0
 1550 0016 0F4B     		ldr	r3, .L80
 1551 0018 7A68     		ldr	r2, [r7, #4]
 1552 001a 9200     		lsl	r2, r2, #2
 1553 001c D358     		ldr	r3, [r2, r3]
 1554 001e 1B68     		ldr	r3, [r3]
 1555 0020 3B61     		str	r3, [r7, #16]
1329:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegisterValue &= ~(CapSense_CSD_CSD_PIN_MODE_MASK << pinModeShift);
 1556              		.loc 1 1329 0
 1557 0022 7B69     		ldr	r3, [r7, #20]
 1558 0024 0722     		mov	r2, #7
 1559 0026 9A40     		lsl	r2, r2, r3
 1560 0028 131C     		mov	r3, r2
 1561 002a DA43     		mvn	r2, r3
 1562 002c 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 52


 1563 002e 1340     		and	r3, r2
 1564 0030 3B61     		str	r3, [r7, #16]
1330:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegisterValue |=  (uint32)((uint32)driveMode << pinModeShift);
 1565              		.loc 1 1330 0
 1566 0032 7B69     		ldr	r3, [r7, #20]
 1567 0034 FA68     		ldr	r2, [r7, #12]
 1568 0036 9A40     		lsl	r2, r2, r3
 1569 0038 131C     		mov	r3, r2
 1570 003a 3A69     		ldr	r2, [r7, #16]
 1571 003c 1343     		orr	r3, r2
 1572 003e 3B61     		str	r3, [r7, #16]
1331:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *CapSense_CSD_prtCfgTbl[portNumber] =  newRegisterValue;
 1573              		.loc 1 1331 0
 1574 0040 044B     		ldr	r3, .L80
 1575 0042 7A68     		ldr	r2, [r7, #4]
 1576 0044 9200     		lsl	r2, r2, #2
 1577 0046 D358     		ldr	r3, [r2, r3]
 1578 0048 3A69     		ldr	r2, [r7, #16]
 1579 004a 1A60     		str	r2, [r3]
1332:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1580              		.loc 1 1332 0
 1581 004c BD46     		mov	sp, r7
 1582 004e 06B0     		add	sp, sp, #24
 1583              		@ sp needed
 1584 0050 80BD     		pop	{r7, pc}
 1585              	.L81:
 1586 0052 C046     		.align	2
 1587              	.L80:
 1588 0054 00000000 		.word	CapSense_CSD_prtCfgTbl
 1589              		.cfi_endproc
 1590              	.LFE53:
 1591              		.size	CapSense_CSD_SetPinDriveMode, .-CapSense_CSD_SetPinDriveMode
 1592              		.section	.text.CapSense_CSD_PreScan,"ax",%progbits
 1593              		.align	2
 1594              		.global	CapSense_CSD_PreScan
 1595              		.code	16
 1596              		.thumb_func
 1597              		.type	CapSense_CSD_PreScan, %function
 1598              	CapSense_CSD_PreScan:
 1599              	.LFB54:
1333:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1334:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1335:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1336:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_PreScan
1337:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1338:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1339:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1340:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Sets required settings, enables a sensor, removes Vref from AMUX and starts the
1341:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  scanning process of the sensor.
1342:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1343:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1344:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor:  Sensor number.
1345:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1346:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1347:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1348:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1349:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 53


1350:.\Generated_Source\PSoC4/CapSense_CSD.c **** * CapSense_CSD_widgetNumber[] - This array contains numbers of widgets for each sensor.
1351:.\Generated_Source\PSoC4/CapSense_CSD.c **** * CapSense_CSD_widgetResolution[] - Contains the widget resolution.
1352:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1353:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1354:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1355:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1356:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1357:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_PreScan(uint32 sensor)
1358:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1600              		.loc 1 1358 0
 1601              		.cfi_startproc
 1602 0000 90B5     		push	{r4, r7, lr}
 1603              		.cfi_def_cfa_offset 12
 1604              		.cfi_offset 4, -12
 1605              		.cfi_offset 7, -8
 1606              		.cfi_offset 14, -4
 1607 0002 87B0     		sub	sp, sp, #28
 1608              		.cfi_def_cfa_offset 40
 1609 0004 00AF     		add	r7, sp, #0
 1610              		.cfi_def_cfa_register 7
 1611 0006 7860     		str	r0, [r7, #4]
1359:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8 widget;
1360:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8 interruptState;
1361:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 newRegValue;
1362:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 counterResolution;
1363:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1364:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if(CapSense_CSD_PRS_OPTIONS == CapSense_CSD__PRS_AUTO)
1365:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 senseClkDivMath;
1366:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 sampleClkDivMath;
1367:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (CapSense_CSD_PRS_OPTIONS == CapSense_CSD__PRS_AUTO) */
1368:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1369:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) &&\
1370:.\Generated_Source\PSoC4/CapSense_CSD.c ****          (0 != CapSense_CSD_IS_OVERSAMPLING_EN))
1371:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint32 oversamplingFactor;
1372:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) &&\
1373:.\Generated_Source\PSoC4/CapSense_CSD.c ****                (0 != CapSense_CSD_IS_OVERSAMPLING_EN)) */
1374:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1375:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Define widget sensor belongs to */
1376:.\Generated_Source\PSoC4/CapSense_CSD.c ****     widget = CapSense_CSD_widgetNumber[sensor];
 1612              		.loc 1 1376 0
 1613 0008 1723     		mov	r3, #23
 1614 000a FB18     		add	r3, r7, r3
 1615 000c 3D49     		ldr	r1, .L84
 1616 000e 7A68     		ldr	r2, [r7, #4]
 1617 0010 8A18     		add	r2, r1, r2
 1618 0012 1278     		ldrb	r2, [r2]
 1619 0014 1A70     		strb	r2, [r3]
1377:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1378:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Recalculate Counter Resolution to MSB 16 bits */
1379:.\Generated_Source\PSoC4/CapSense_CSD.c ****     counterResolution = CapSense_CSD_widgetResolution[widget];
 1620              		.loc 1 1379 0
 1621 0016 1723     		mov	r3, #23
 1622 0018 FB18     		add	r3, r7, r3
 1623 001a 1A78     		ldrb	r2, [r3]
 1624 001c 3A4B     		ldr	r3, .L84+4
 1625 001e 9200     		lsl	r2, r2, #2
 1626 0020 D358     		ldr	r3, [r2, r3]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 54


 1627 0022 3B61     		str	r3, [r7, #16]
1380:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1381:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) &&\
1382:.\Generated_Source\PSoC4/CapSense_CSD.c ****          (0 != CapSense_CSD_IS_OVERSAMPLING_EN))
1383:.\Generated_Source\PSoC4/CapSense_CSD.c ****         oversamplingFactor = CapSense_CSD_GetBitValue(CapSense_CSD_scanSpeedTbl, sensor);
1384:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1385:.\Generated_Source\PSoC4/CapSense_CSD.c ****         if(counterResolution < CapSense_CSD_RESOLUTION_16_BITS)
1386:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
1387:.\Generated_Source\PSoC4/CapSense_CSD.c ****             counterResolution <<= oversamplingFactor;
1388:.\Generated_Source\PSoC4/CapSense_CSD.c ****             counterResolution |= (uint32)(CapSense_CSD_RESOLUTION_8_BITS);
1389:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
1390:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) &&\
1391:.\Generated_Source\PSoC4/CapSense_CSD.c ****                (0 != CapSense_CSD_IS_OVERSAMPLING_EN)) */
1392:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1393:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if (0u != CapSense_CSD_IS_M0S8PERI_BLOCK)
1394:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_SenseClk_Stop();
1395:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_SampleClk_Stop();
1396:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (0u != CapSense_CSD_IS_M0S8PERI_BLOCK) */
1397:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1398:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if (0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET)
1399:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_SampleClk_SetDividerValue((uint16)CapSense_CSD_sampleClkDividerVal[sensor]);
 1628              		.loc 1 1399 0
 1629 0024 394A     		ldr	r2, .L84+8
 1630 0026 7B68     		ldr	r3, [r7, #4]
 1631 0028 D318     		add	r3, r2, r3
 1632 002a 1B78     		ldrb	r3, [r3]
 1633 002c 9BB2     		uxth	r3, r3
 1634 002e 013B     		sub	r3, r3, #1
 1635 0030 9BB2     		uxth	r3, r3
 1636 0032 181C     		mov	r0, r3
 1637 0034 0021     		mov	r1, #0
 1638 0036 FFF7FEFF 		bl	CapSense_CSD_SampleClk_SetFractionalDividerRegister
1400:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_SenseClk_SetDividerValue((uint16)CapSense_CSD_senseClkDividerVal[sensor]);
 1639              		.loc 1 1400 0
 1640 003a 354A     		ldr	r2, .L84+12
 1641 003c 7B68     		ldr	r3, [r7, #4]
 1642 003e D318     		add	r3, r2, r3
 1643 0040 1B78     		ldrb	r3, [r3]
 1644 0042 9BB2     		uxth	r3, r3
 1645 0044 013B     		sub	r3, r3, #1
 1646 0046 9BB2     		uxth	r3, r3
 1647 0048 181C     		mov	r0, r3
 1648 004a 0021     		mov	r1, #0
 1649 004c FFF7FEFF 		bl	CapSense_CSD_SenseClk_SetFractionalDividerRegister
1401:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #else
1402:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_SampleClk_SetDividerValue((uint16)CapSense_CSD_sampleClkDividerVal);
1403:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_SenseClk_SetDividerValue((uint16)CapSense_CSD_senseClkDividerVal);
1404:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET) */
1405:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1406:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if (0u != CapSense_CSD_IS_M0S8PERI_BLOCK)
1407:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_SampleClk_Start();
1408:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_SenseClk_StartEx(CapSense_CSD_SampleClk__DIV_ID);
1409:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1410:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #if(CapSense_CSD_PRS_OPTIONS == CapSense_CSD__PRS_NONE)
1411:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CyIntDisable(CapSense_CSD_ISR_NUMBER);
1412:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_CSD_CNT_REG = CapSense_CSD_ONE_CYCLE;
1413:.\Generated_Source\PSoC4/CapSense_CSD.c ****             while(0u != (CapSense_CSD_CSD_CNT_REG & CapSense_CSD_RESOLUTION_16_BITS))
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 55


1414:.\Generated_Source\PSoC4/CapSense_CSD.c ****             {
1415:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /* Wait until scanning is complete */
1416:.\Generated_Source\PSoC4/CapSense_CSD.c ****             }
1417:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_CSD_INTR_REG = 1u;
1418:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CyIntClearPending(CapSense_CSD_ISR_NUMBER);
1419:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CyIntEnable(CapSense_CSD_ISR_NUMBER);
1420:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #endif /* CapSense_CSD_PRS_OPTIONS == CapSense_CSD__PRS_NONE */
1421:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (0u != CapSense_CSD_IS_M0S8PERI_BLOCK) */
1422:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1423:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if(CapSense_CSD_PRS_OPTIONS != CapSense_CSD__PRS_NONE)
1424:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1425:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if(CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
1426:.\Generated_Source\PSoC4/CapSense_CSD.c ****         if(CapSense_CSD_prescalersTuningDone != 0u)
 1650              		.loc 1 1426 0
 1651 0050 304B     		ldr	r3, .L84+16
 1652 0052 1B78     		ldrb	r3, [r3]
 1653 0054 002B     		cmp	r3, #0
 1654 0056 0FD0     		beq	.L83
1427:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
1428:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
1429:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1430:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CyIntDisable(CapSense_CSD_ISR_NUMBER);
 1655              		.loc 1 1430 0
 1656 0058 0F20     		mov	r0, #15
 1657 005a FFF7FEFF 		bl	CyIntDisable
1431:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1432:.\Generated_Source\PSoC4/CapSense_CSD.c ****             newRegValue = CapSense_CSD_CSD_CFG_REG;
 1658              		.loc 1 1432 0
 1659 005e 2E4B     		ldr	r3, .L84+20
 1660 0060 1B68     		ldr	r3, [r3]
 1661 0062 FB60     		str	r3, [r7, #12]
1433:.\Generated_Source\PSoC4/CapSense_CSD.c ****             newRegValue |= CapSense_CSD_CSD_CFG_PRS_SELECT;
 1662              		.loc 1 1433 0
 1663 0064 FB68     		ldr	r3, [r7, #12]
 1664 0066 4022     		mov	r2, #64
 1665 0068 1343     		orr	r3, r2
 1666 006a FB60     		str	r3, [r7, #12]
1434:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1435:.\Generated_Source\PSoC4/CapSense_CSD.c ****             #if(CapSense_CSD_PRS_OPTIONS == CapSense_CSD__PRS_AUTO)
1436:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1437:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 newRegValue &= ~(CapSense_CSD_PRS_MODE_MASK);
1438:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1439:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 #if (0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET)
1440:.\Generated_Source\PSoC4/CapSense_CSD.c ****                     senseClkDivMath = CapSense_CSD_senseClkDividerVal[sensor];
1441:.\Generated_Source\PSoC4/CapSense_CSD.c ****                     sampleClkDivMath = CapSense_CSD_sampleClkDividerVal[sensor];
1442:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 #else
1443:.\Generated_Source\PSoC4/CapSense_CSD.c ****                     senseClkDivMath = CapSense_CSD_senseClkDividerVal;
1444:.\Generated_Source\PSoC4/CapSense_CSD.c ****                     sampleClkDivMath = CapSense_CSD_sampleClkDividerVal;
1445:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 #endif /* ( CapSense_CSD_MULTIPLE_FREQUENCY_SET) */
1446:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1447:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 #if(0u == CapSense_CSD_IS_M0S8PERI_BLOCK)
1448:.\Generated_Source\PSoC4/CapSense_CSD.c ****                     senseClkDivMath *= sampleClkDivMath;
1449:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 #endif /* (0u == CapSense_CSD_IS_M0S8PERI_BLOCK) */
1450:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1451:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 if((senseClkDivMath * CapSense_CSD_RESOLUTION_12_BITS) <
1452:.\Generated_Source\PSoC4/CapSense_CSD.c ****                    (sampleClkDivMath * CapSense_CSD_widgetResolution[widget]))
1453:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 56


1454:.\Generated_Source\PSoC4/CapSense_CSD.c ****                     newRegValue |= CapSense_CSD_CSD_PRS_12_BIT;
1455:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 }
1456:.\Generated_Source\PSoC4/CapSense_CSD.c ****             #endif /* (CapSense_CSD_PRS_OPTIONS == CapSense_CSD__PRS_AUTO) */
1457:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1458:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_CSD_CFG_REG = newRegValue;
 1667              		.loc 1 1458 0
 1668 006c 2A4B     		ldr	r3, .L84+20
 1669 006e FA68     		ldr	r2, [r7, #12]
 1670 0070 1A60     		str	r2, [r3]
1459:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1460:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CyIntEnable(CapSense_CSD_ISR_NUMBER);
 1671              		.loc 1 1460 0
 1672 0072 0F20     		mov	r0, #15
 1673 0074 FFF7FEFF 		bl	CyIntEnable
 1674              	.L83:
1461:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1462:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if(CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
1463:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
1464:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (CapSense_CSD_PRS_OPTIONS != CapSense_CSD__PRS_NONE) */
1465:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1466:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_PRS_OPTIONS == CapSense_CSD__PRS_NONE) */
1467:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1468:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Set Idac Value */
1469:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_ISR_NUMBER);
 1675              		.loc 1 1469 0
 1676 0078 0F20     		mov	r0, #15
 1677 007a FFF7FEFF 		bl	CyIntDisable
1470:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue = CapSense_CSD_CSD_IDAC_REG;
 1678              		.loc 1 1470 0
 1679 007e 274B     		ldr	r3, .L84+24
 1680 0080 1B68     		ldr	r3, [r3]
 1681 0082 FB60     		str	r3, [r7, #12]
1471:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1472:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_IDAC_CNT == 1u)
1473:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue &= ~(CapSense_CSD_CSD_IDAC1_DATA_MASK);
1474:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue |= CapSense_CSD_modulationIDAC[sensor];
1475:.\Generated_Source\PSoC4/CapSense_CSD.c **** #else
1476:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue &= ~(CapSense_CSD_CSD_IDAC1_DATA_MASK | CapSense_CSD_CSD_IDAC2_DATA_MASK);
 1682              		.loc 1 1476 0
 1683 0084 FB68     		ldr	r3, [r7, #12]
 1684 0086 264A     		ldr	r2, .L84+28
 1685 0088 1340     		and	r3, r2
 1686 008a FB60     		str	r3, [r7, #12]
1477:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue |= (CapSense_CSD_modulationIDAC[sensor] |
 1687              		.loc 1 1477 0
 1688 008c 254A     		ldr	r2, .L84+32
 1689 008e 7B68     		ldr	r3, [r7, #4]
 1690 0090 D318     		add	r3, r2, r3
 1691 0092 1B78     		ldrb	r3, [r3]
 1692 0094 191C     		mov	r1, r3
1478:.\Generated_Source\PSoC4/CapSense_CSD.c ****                             (uint32)((uint32)CapSense_CSD_compensationIDAC[sensor] <<
 1693              		.loc 1 1478 0
 1694 0096 244A     		ldr	r2, .L84+36
 1695 0098 7B68     		ldr	r3, [r7, #4]
 1696 009a D318     		add	r3, r2, r3
 1697 009c 1B78     		ldrb	r3, [r3]
 1698 009e 1B04     		lsl	r3, r3, #16
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 57


1477:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue |= (CapSense_CSD_modulationIDAC[sensor] |
 1699              		.loc 1 1477 0
 1700 00a0 0B43     		orr	r3, r1
 1701 00a2 FA68     		ldr	r2, [r7, #12]
 1702 00a4 1343     		orr	r3, r2
 1703 00a6 FB60     		str	r3, [r7, #12]
1479:.\Generated_Source\PSoC4/CapSense_CSD.c ****                             CapSense_CSD_CSD_IDAC2_DATA_OFFSET));
1480:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_IDAC_CNT == 1u) */
1481:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1482:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CSD_IDAC_REG = newRegValue;
 1704              		.loc 1 1482 0
 1705 00a8 1C4B     		ldr	r3, .L84+24
 1706 00aa FA68     		ldr	r2, [r7, #12]
 1707 00ac 1A60     		str	r2, [r3]
1483:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1484:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if(CapSense_CSD_CMOD_PREGARGE_OPTION == CapSense_CSD__CAPPRIOBUF)
1485:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue = CapSense_CSD_CMOD_CONNECTION_REG;
1486:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue &= ~(CapSense_CSD_CSD_CMOD_CONNECTION_MASK);
1487:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue |= CapSense_CSD_CSD_CMOD_TO_AMUXBUS_A;
1488:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CMOD_CONNECTION_REG = newRegValue;
1489:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1490:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue = CapSense_CSD_CMOD_PORT_PC_REG;
1491:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue &= ~(CapSense_CSD_CSD_CMOD_PC_MASK);
1492:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue |= CapSense_CSD_CMOD_PC_HIGH_Z_MODE;
1493:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CMOD_PORT_PC_REG = newRegValue;
1494:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_CMOD_PREGARGE_OPTION == CapSense_CSD__CAPPRIOBUF) */
1495:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1496:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Disconnect Vref Buffer from AMUX */
1497:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue = CapSense_CSD_CSD_CFG_REG;
 1708              		.loc 1 1497 0
 1709 00ae 1A4B     		ldr	r3, .L84+20
 1710 00b0 1B68     		ldr	r3, [r3]
 1711 00b2 FB60     		str	r3, [r7, #12]
1498:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue &= ~(CapSense_CSD_PRECHARGE_CONFIG_MASK);
 1712              		.loc 1 1498 0
 1713 00b4 FB68     		ldr	r3, [r7, #12]
 1714 00b6 1D4A     		ldr	r2, .L84+40
 1715 00b8 1340     		and	r3, r2
 1716 00ba FB60     		str	r3, [r7, #12]
1499:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue |= CapSense_CSD_CTANK_PRECHARGE_CONFIG;
 1717              		.loc 1 1499 0
 1718 00bc FB68     		ldr	r3, [r7, #12]
 1719 00be 1C4A     		ldr	r2, .L84+44
 1720 00c0 1343     		orr	r3, r2
 1721 00c2 FB60     		str	r3, [r7, #12]
1500:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1501:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CyIntEnable(CapSense_CSD_ISR_NUMBER);
 1722              		.loc 1 1501 0
 1723 00c4 0F20     		mov	r0, #15
 1724 00c6 FFF7FEFF 		bl	CyIntEnable
1502:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1503:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Enable Sensor */
1504:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_EnableScanSlot(sensor);
 1725              		.loc 1 1504 0
 1726 00ca 7B68     		ldr	r3, [r7, #4]
 1727 00cc 181C     		mov	r0, r3
 1728 00ce FFF7FEFF 		bl	CapSense_CSD_EnableSensor
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 58


1505:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1506:.\Generated_Source\PSoC4/CapSense_CSD.c ****     interruptState = CyEnterCriticalSection();
 1729              		.loc 1 1506 0
 1730 00d2 0B23     		mov	r3, #11
 1731 00d4 FC18     		add	r4, r7, r3
 1732 00d6 FFF7FEFF 		bl	CyEnterCriticalSection
 1733 00da 031C     		mov	r3, r0
 1734 00dc 2370     		strb	r3, [r4]
1507:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CSD_CFG_REG = newRegValue;
 1735              		.loc 1 1507 0
 1736 00de 0E4B     		ldr	r3, .L84+20
 1737 00e0 FA68     		ldr	r2, [r7, #12]
 1738 00e2 1A60     		str	r2, [r3]
1508:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1509:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* `#START CapSense_CSD_PreSettlingDelay_Debug` */
1510:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1511:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* `#END` */
1512:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1513:.\Generated_Source\PSoC4/CapSense_CSD.c **** #ifdef CapSense_CSD_PRE_SCAN_PRE_SETTLING_DELAY_DEBUG_CALLBACK
1514:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_PreScan_Pre_SettlingDelay_Debug_Callback();
1515:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* CapSense_CSD_PRE_SCAN_PRE_SETTLING_DELAY_DEBUG_CALLBACK */
1516:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1517:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CyDelayCycles(CapSense_CSD_GLITCH_ELIMINATION_CYCLES);
 1739              		.loc 1 1517 0
 1740 00e4 0020     		mov	r0, #0
 1741 00e6 FFF7FEFF 		bl	CyDelayCycles
1518:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1519:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* `#START CapSense_CSD_PreScan_Debug` */
1520:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1521:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* `#END` */
1522:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1523:.\Generated_Source\PSoC4/CapSense_CSD.c **** #ifdef CapSense_CSD_PRE_SCAN_DEBUG_CALLBACK
1524:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_PreScan_Debug_Callback();
1525:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* CapSense_CSD_PRE_SCAN_DEBUG_CALLBACK */
1526:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1527:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CSD_CNT_REG = counterResolution;
 1742              		.loc 1 1527 0
 1743 00ea 124B     		ldr	r3, .L84+48
 1744 00ec 3A69     		ldr	r2, [r7, #16]
 1745 00ee 1A60     		str	r2, [r3]
1528:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CyExitCriticalSection(interruptState);
 1746              		.loc 1 1528 0
 1747 00f0 0B23     		mov	r3, #11
 1748 00f2 FB18     		add	r3, r7, r3
 1749 00f4 1B78     		ldrb	r3, [r3]
 1750 00f6 181C     		mov	r0, r3
 1751 00f8 FFF7FEFF 		bl	CyExitCriticalSection
1529:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1752              		.loc 1 1529 0
 1753 00fc BD46     		mov	sp, r7
 1754 00fe 07B0     		add	sp, sp, #28
 1755              		@ sp needed
 1756 0100 90BD     		pop	{r4, r7, pc}
 1757              	.L85:
 1758 0102 C046     		.align	2
 1759              	.L84:
 1760 0104 00000000 		.word	CapSense_CSD_widgetNumber
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 59


 1761 0108 00000000 		.word	CapSense_CSD_widgetResolution
 1762 010c 00000000 		.word	CapSense_CSD_sampleClkDividerVal
 1763 0110 00000000 		.word	CapSense_CSD_senseClkDividerVal
 1764 0114 00000000 		.word	CapSense_CSD_prescalersTuningDone
 1765 0118 04000840 		.word	1074266116
 1766 011c 08000840 		.word	1074266120
 1767 0120 00FF80FF 		.word	-8323328
 1768 0124 00000000 		.word	CapSense_CSD_modulationIDAC
 1769 0128 00000000 		.word	CapSense_CSD_compensationIDAC
 1770 012c FF1FDFFF 		.word	-2154497
 1771 0130 20002000 		.word	2097184
 1772 0134 0C000840 		.word	1074266124
 1773              		.cfi_endproc
 1774              	.LFE54:
 1775              		.size	CapSense_CSD_PreScan, .-CapSense_CSD_PreScan
 1776              		.section	.text.CapSense_CSD_PostScan,"ax",%progbits
 1777              		.align	2
 1778              		.global	CapSense_CSD_PostScan
 1779              		.code	16
 1780              		.thumb_func
 1781              		.type	CapSense_CSD_PostScan, %function
 1782              	CapSense_CSD_PostScan:
 1783              	.LFB55:
1530:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1531:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1532:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1533:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_PostScan
1534:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1535:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1536:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1537:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Stores the results of measurement in the CapSense_CSD_sensorRaw[] array,
1538:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sets the scanning sensor in the non-sampling state, turns off Idac(Current Source IDAC),
1539:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  disconnects the IDAC(Sink mode), and applies Vref on AMUX.
1540:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1541:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1542:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor:  Sensor number.
1543:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1544:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1545:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1546:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1547:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1548:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorRaw[] - used to store sensors raw data.
1549:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1550:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1551:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1552:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1553:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1554:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_PostScan(uint32 sensor)
1555:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1784              		.loc 1 1555 0
 1785              		.cfi_startproc
 1786 0000 80B5     		push	{r7, lr}
 1787              		.cfi_def_cfa_offset 8
 1788              		.cfi_offset 7, -8
 1789              		.cfi_offset 14, -4
 1790 0002 84B0     		sub	sp, sp, #16
 1791              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 60


 1792 0004 00AF     		add	r7, sp, #0
 1793              		.cfi_def_cfa_register 7
 1794 0006 7860     		str	r0, [r7, #4]
1556:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 newRegValue;
1557:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) &&\
1558:.\Generated_Source\PSoC4/CapSense_CSD.c ****      (0 != CapSense_CSD_IS_OVERSAMPLING_EN))
1559:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 oversamplingFactor;
1560:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 widget;
1561:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) &&\
1562:.\Generated_Source\PSoC4/CapSense_CSD.c ****            (0 != CapSense_CSD_IS_OVERSAMPLING_EN)) */
1563:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1564:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* `#START CapSense_CSD_PostScan_Debug` */
1565:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1566:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* `#END` */
1567:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1568:.\Generated_Source\PSoC4/CapSense_CSD.c **** #ifdef CapSense_CSD_POST_SCAN_DEBUG_CALLBACK
1569:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_PostScan_Debug_Callback();
1570:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* CapSense_CSD_POST_SCAN_DEBUG_Callback */
1571:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1572:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Read SlotResult from Raw Counter */
1573:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_sensorRaw[sensor]  = (uint16)CapSense_CSD_CSD_CNT_REG;
 1795              		.loc 1 1573 0
 1796 0008 144B     		ldr	r3, .L87
 1797 000a 1B68     		ldr	r3, [r3]
 1798 000c 99B2     		uxth	r1, r3
 1799 000e 144B     		ldr	r3, .L87+4
 1800 0010 7A68     		ldr	r2, [r7, #4]
 1801 0012 5200     		lsl	r2, r2, #1
 1802 0014 D152     		strh	r1, [r2, r3]
1574:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1575:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) &&\
1576:.\Generated_Source\PSoC4/CapSense_CSD.c ****      (0 != CapSense_CSD_IS_OVERSAMPLING_EN))
1577:.\Generated_Source\PSoC4/CapSense_CSD.c ****     widget = CapSense_CSD_widgetNumber[sensor];
1578:.\Generated_Source\PSoC4/CapSense_CSD.c ****     if(CapSense_CSD_widgetResolution[widget] < CapSense_CSD_RESOLUTION_16_BITS)
1579:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
1580:.\Generated_Source\PSoC4/CapSense_CSD.c ****         oversamplingFactor = CapSense_CSD_GetBitValue(CapSense_CSD_scanSpeedTbl, sensor);
1581:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_sensorRaw[sensor] >>= oversamplingFactor;
1582:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
1583:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) &&\
1584:.\Generated_Source\PSoC4/CapSense_CSD.c ****            (0 != CapSense_CSD_IS_OVERSAMPLING_EN)) */
1585:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1586:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Disable Sensor */
1587:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_DisableScanSlot(sensor);
 1803              		.loc 1 1587 0
 1804 0016 7B68     		ldr	r3, [r7, #4]
 1805 0018 181C     		mov	r0, r3
 1806 001a FFF7FEFF 		bl	CapSense_CSD_DisableSensor
1588:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1589:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CyIntDisable(CapSense_CSD_ISR_NUMBER);
 1807              		.loc 1 1589 0
 1808 001e 0F20     		mov	r0, #15
 1809 0020 FFF7FEFF 		bl	CyIntDisable
1590:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1591:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if(CapSense_CSD_CMOD_PREGARGE_OPTION == CapSense_CSD__CAPPRIOBUF)
1592:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue = CapSense_CSD_CMOD_CONNECTION_REG;
1593:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue &= ~(CapSense_CSD_CSD_CMOD_CONNECTION_MASK);
1594:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue |= CapSense_CSD_CSD_CMOD_TO_AMUXBUS_B;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 61


1595:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CMOD_CONNECTION_REG = newRegValue;
1596:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1597:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue = CapSense_CSD_CMOD_PORT_PC_REG;
1598:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue &= ~(CapSense_CSD_CSD_CMOD_PC_MASK);
1599:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue |= CapSense_CSD_CMOD_PC_STRONG_MODE;
1600:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CMOD_PORT_PC_REG = newRegValue;
1601:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1602:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue = CapSense_CSD_CMOD_PORT_DR_REG;
1603:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue &= ~(CapSense_CSD_CMOD_DR_MASK);
1604:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue |= CapSense_CSD_CMOD_DR_CONFIG;
1605:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CMOD_PORT_DR_REG = newRegValue;
1606:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_CMOD_PREGARGE_OPTION == CapSense_CSD__CAPPRIOBUF) */
1607:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1608:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Connect Vref Buffer to AMUX bus  */
1609:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue = CapSense_CSD_CSD_CFG_REG;
 1810              		.loc 1 1609 0
 1811 0024 0F4B     		ldr	r3, .L87+8
 1812 0026 1B68     		ldr	r3, [r3]
 1813 0028 FB60     		str	r3, [r7, #12]
1610:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue &= ~(CapSense_CSD_PRECHARGE_CONFIG_MASK);
 1814              		.loc 1 1610 0
 1815 002a FB68     		ldr	r3, [r7, #12]
 1816 002c 0E4A     		ldr	r2, .L87+12
 1817 002e 1340     		and	r3, r2
 1818 0030 FB60     		str	r3, [r7, #12]
1611:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue |= CapSense_CSD_CMOD_PRECHARGE_CONFIG;
 1819              		.loc 1 1611 0
 1820 0032 FB68     		ldr	r3, [r7, #12]
 1821 0034 A022     		mov	r2, #160
 1822 0036 1202     		lsl	r2, r2, #8
 1823 0038 1343     		orr	r3, r2
 1824 003a FB60     		str	r3, [r7, #12]
1612:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CSD_CFG_REG = newRegValue;
 1825              		.loc 1 1612 0
 1826 003c 094B     		ldr	r3, .L87+8
 1827 003e FA68     		ldr	r2, [r7, #12]
 1828 0040 1A60     		str	r2, [r3]
1613:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1614:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* Set Idac Value = 0 */
1615:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_IDAC_CNT == 1u)
1616:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CSD_IDAC_REG &= ~(CapSense_CSD_CSD_IDAC1_DATA_MASK);
1617:.\Generated_Source\PSoC4/CapSense_CSD.c **** #else
1618:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CSD_IDAC_REG &= ~(CapSense_CSD_CSD_IDAC1_DATA_MASK | CapSense_CSD_CSD_IDAC2_DATA_M
 1829              		.loc 1 1618 0
 1830 0042 0A4B     		ldr	r3, .L87+16
 1831 0044 094A     		ldr	r2, .L87+16
 1832 0046 1268     		ldr	r2, [r2]
 1833 0048 0949     		ldr	r1, .L87+20
 1834 004a 0A40     		and	r2, r1
 1835 004c 1A60     		str	r2, [r3]
1619:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_IDAC_CNT == 1u) */
1620:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1621:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CyIntEnable(CapSense_CSD_ISR_NUMBER);
 1836              		.loc 1 1621 0
 1837 004e 0F20     		mov	r0, #15
 1838 0050 FFF7FEFF 		bl	CyIntEnable
1622:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 62


 1839              		.loc 1 1622 0
 1840 0054 BD46     		mov	sp, r7
 1841 0056 04B0     		add	sp, sp, #16
 1842              		@ sp needed
 1843 0058 80BD     		pop	{r7, pc}
 1844              	.L88:
 1845 005a C046     		.align	2
 1846              	.L87:
 1847 005c 0C000840 		.word	1074266124
 1848 0060 00000000 		.word	CapSense_CSD_sensorRaw
 1849 0064 04000840 		.word	1074266116
 1850 0068 FF1FDFFF 		.word	-2154497
 1851 006c 08000840 		.word	1074266120
 1852 0070 00FF80FF 		.word	-8323328
 1853              		.cfi_endproc
 1854              	.LFE55:
 1855              		.size	CapSense_CSD_PostScan, .-CapSense_CSD_PostScan
 1856              		.section	.text.CapSense_CSD_EnableShieldElectrode,"ax",%progbits
 1857              		.align	2
 1858              		.global	CapSense_CSD_EnableShieldElectrode
 1859              		.code	16
 1860              		.thumb_func
 1861              		.type	CapSense_CSD_EnableShieldElectrode, %function
 1862              	CapSense_CSD_EnableShieldElectrode:
 1863              	.LFB56:
1623:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1624:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1625:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1626:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_EnableShieldElectrode
1627:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1628:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1629:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1630:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API enables or disables the shield electrode on a specified port pin.
1631:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1632:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1633:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  portNumber: contains the shield electrode port number (0, 1, 2).
1634:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  pinNumber: contains the shield electrode pin number (0, 1, 2, ... , 7).
1635:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1636:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1637:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1638:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1639:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1640:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_prtCfgTbl[] - Contains pointers to the port config registers for each port.
1641:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_prtSelTbl[] - Contains pointers to the HSIOM registers for each port.
1642:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1643:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1644:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1645:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1646:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1647:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_EnableShieldElectrode(uint32 pinNumber, uint32 portNumber)
1648:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1864              		.loc 1 1648 0
 1865              		.cfi_startproc
 1866 0000 80B5     		push	{r7, lr}
 1867              		.cfi_def_cfa_offset 8
 1868              		.cfi_offset 7, -8
 1869              		.cfi_offset 14, -4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 63


 1870 0002 84B0     		sub	sp, sp, #16
 1871              		.cfi_def_cfa_offset 24
 1872 0004 00AF     		add	r7, sp, #0
 1873              		.cfi_def_cfa_register 7
 1874 0006 7860     		str	r0, [r7, #4]
 1875 0008 3960     		str	r1, [r7]
1649:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 newRegValue;
1650:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1651:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *CapSense_CSD_prtCfgTbl[portNumber] &= ~(CapSense_CSD_CSD_PIN_MODE_MASK << (pinNumber * CapSens
 1876              		.loc 1 1651 0
 1877 000a 194B     		ldr	r3, .L90
 1878 000c 3A68     		ldr	r2, [r7]
 1879 000e 9200     		lsl	r2, r2, #2
 1880 0010 D258     		ldr	r2, [r2, r3]
 1881 0012 174B     		ldr	r3, .L90
 1882 0014 3968     		ldr	r1, [r7]
 1883 0016 8900     		lsl	r1, r1, #2
 1884 0018 CB58     		ldr	r3, [r1, r3]
 1885 001a 1868     		ldr	r0, [r3]
 1886 001c 7968     		ldr	r1, [r7, #4]
 1887 001e 0B1C     		mov	r3, r1
 1888 0020 5B00     		lsl	r3, r3, #1
 1889 0022 5B18     		add	r3, r3, r1
 1890 0024 191C     		mov	r1, r3
 1891 0026 0723     		mov	r3, #7
 1892 0028 8B40     		lsl	r3, r3, r1
 1893 002a DB43     		mvn	r3, r3
 1894 002c 0340     		and	r3, r0
 1895 002e 1360     		str	r3, [r2]
1652:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue = *CapSense_CSD_prtSelTbl[portNumber];
 1896              		.loc 1 1652 0
 1897 0030 104B     		ldr	r3, .L90+4
 1898 0032 3A68     		ldr	r2, [r7]
 1899 0034 9200     		lsl	r2, r2, #2
 1900 0036 D358     		ldr	r3, [r2, r3]
 1901 0038 1B68     		ldr	r3, [r3]
 1902 003a FB60     		str	r3, [r7, #12]
1653:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue &= ~(CapSense_CSD_CSD_HSIOM_MASK << (pinNumber * CapSense_CSD_HSIOM_PIN_CFG_SIZE));
 1903              		.loc 1 1653 0
 1904 003c 7B68     		ldr	r3, [r7, #4]
 1905 003e 9B00     		lsl	r3, r3, #2
 1906 0040 1A1C     		mov	r2, r3
 1907 0042 0F23     		mov	r3, #15
 1908 0044 9340     		lsl	r3, r3, r2
 1909 0046 DA43     		mvn	r2, r3
 1910 0048 FB68     		ldr	r3, [r7, #12]
 1911 004a 1340     		and	r3, r2
 1912 004c FB60     		str	r3, [r7, #12]
1654:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue |= (CapSense_CSD_CSD_SHIELD_PORT_MODE << (pinNumber * CapSense_CSD_HSIOM_PIN_CFG_SI
 1913              		.loc 1 1654 0
 1914 004e 7B68     		ldr	r3, [r7, #4]
 1915 0050 9B00     		lsl	r3, r3, #2
 1916 0052 1A1C     		mov	r2, r3
 1917 0054 0523     		mov	r3, #5
 1918 0056 9340     		lsl	r3, r3, r2
 1919 0058 FA68     		ldr	r2, [r7, #12]
 1920 005a 1343     		orr	r3, r2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 64


 1921 005c FB60     		str	r3, [r7, #12]
1655:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *CapSense_CSD_prtSelTbl[portNumber] = newRegValue;
 1922              		.loc 1 1655 0
 1923 005e 054B     		ldr	r3, .L90+4
 1924 0060 3A68     		ldr	r2, [r7]
 1925 0062 9200     		lsl	r2, r2, #2
 1926 0064 D358     		ldr	r3, [r2, r3]
 1927 0066 FA68     		ldr	r2, [r7, #12]
 1928 0068 1A60     		str	r2, [r3]
1656:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1929              		.loc 1 1656 0
 1930 006a BD46     		mov	sp, r7
 1931 006c 04B0     		add	sp, sp, #16
 1932              		@ sp needed
 1933 006e 80BD     		pop	{r7, pc}
 1934              	.L91:
 1935              		.align	2
 1936              	.L90:
 1937 0070 00000000 		.word	CapSense_CSD_prtCfgTbl
 1938 0074 00000000 		.word	CapSense_CSD_prtSelTbl
 1939              		.cfi_endproc
 1940              	.LFE56:
 1941              		.size	CapSense_CSD_EnableShieldElectrode, .-CapSense_CSD_EnableShieldElectrode
 1942              		.section	.text.CapSense_CSD_SetShieldDelay,"ax",%progbits
 1943              		.align	2
 1944              		.global	CapSense_CSD_SetShieldDelay
 1945              		.code	16
 1946              		.thumb_func
 1947              		.type	CapSense_CSD_SetShieldDelay, %function
 1948              	CapSense_CSD_SetShieldDelay:
 1949              	.LFB57:
1657:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1658:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1659:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1660:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetShieldDelay
1661:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1662:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1663:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1664:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API sets a shield delay.
1665:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1666:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1667:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  delay:  shield delay value:
1668:.\Generated_Source\PSoC4/CapSense_CSD.c **** *                               0 - no delay
1669:.\Generated_Source\PSoC4/CapSense_CSD.c **** *                               1 - 1 cycle delay
1670:.\Generated_Source\PSoC4/CapSense_CSD.c **** *                               2 - 2 cycles delay
1671:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1672:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1673:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1674:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1675:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1676:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1677:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1678:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1679:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1680:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1681:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1682:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_SetShieldDelay(uint32 delay)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 65


1683:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 1950              		.loc 1 1683 0
 1951              		.cfi_startproc
 1952 0000 80B5     		push	{r7, lr}
 1953              		.cfi_def_cfa_offset 8
 1954              		.cfi_offset 7, -8
 1955              		.cfi_offset 14, -4
 1956 0002 84B0     		sub	sp, sp, #16
 1957              		.cfi_def_cfa_offset 24
 1958 0004 00AF     		add	r7, sp, #0
 1959              		.cfi_def_cfa_register 7
 1960 0006 7860     		str	r0, [r7, #4]
1684:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 newRegValue;
1685:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1686:.\Generated_Source\PSoC4/CapSense_CSD.c ****     delay &= 0x03u;
 1961              		.loc 1 1686 0
 1962 0008 7B68     		ldr	r3, [r7, #4]
 1963 000a 0322     		mov	r2, #3
 1964 000c 1340     		and	r3, r2
 1965 000e 7B60     		str	r3, [r7, #4]
1687:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1688:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue = CapSense_CSD_CSD_CFG_REG;
 1966              		.loc 1 1688 0
 1967 0010 064B     		ldr	r3, .L93
 1968 0012 1B68     		ldr	r3, [r3]
 1969 0014 FB60     		str	r3, [r7, #12]
1689:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue &= (uint32)(~(uint32)CapSense_CSD_SHIELD_DELAY);
1690:.\Generated_Source\PSoC4/CapSense_CSD.c ****     newRegValue |= (delay << CapSense_CSD_CSD_CFG_SHIELD_DELAY_POS);
 1970              		.loc 1 1690 0
 1971 0016 7B68     		ldr	r3, [r7, #4]
 1972 0018 5B02     		lsl	r3, r3, #9
 1973 001a FA68     		ldr	r2, [r7, #12]
 1974 001c 1343     		orr	r3, r2
 1975 001e FB60     		str	r3, [r7, #12]
1691:.\Generated_Source\PSoC4/CapSense_CSD.c ****     CapSense_CSD_CSD_CFG_REG = newRegValue;
 1976              		.loc 1 1691 0
 1977 0020 024B     		ldr	r3, .L93
 1978 0022 FA68     		ldr	r2, [r7, #12]
 1979 0024 1A60     		str	r2, [r3]
1692:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 1980              		.loc 1 1692 0
 1981 0026 BD46     		mov	sp, r7
 1982 0028 04B0     		add	sp, sp, #16
 1983              		@ sp needed
 1984 002a 80BD     		pop	{r7, pc}
 1985              	.L94:
 1986              		.align	2
 1987              	.L93:
 1988 002c 04000840 		.word	1074266116
 1989              		.cfi_endproc
 1990              	.LFE57:
 1991              		.size	CapSense_CSD_SetShieldDelay, .-CapSense_CSD_SetShieldDelay
 1992              		.section	.text.CapSense_CSD_ReadCurrentScanningSensor,"ax",%progbits
 1993              		.align	2
 1994              		.global	CapSense_CSD_ReadCurrentScanningSensor
 1995              		.code	16
 1996              		.thumb_func
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 66


 1997              		.type	CapSense_CSD_ReadCurrentScanningSensor, %function
 1998              	CapSense_CSD_ReadCurrentScanningSensor:
 1999              	.LFB58:
1693:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1694:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1695:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1696:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_ReadCurrentScanningSensor
1697:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1698:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1699:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1700:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API returns scanning sensor number when sensor scan is in progress.
1701:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  When sensor scan is completed the API returns
1702:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  $INSTANCE_NAME`_NOT_SENSOR (0xFFFFFFFF) (when no sensor is scanned).
1703:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1704:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1705:.\Generated_Source\PSoC4/CapSense_CSD.c **** *   None.
1706:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1707:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1708:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  Returns Sensor number if sensor is being scanned and
1709:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  $INSTANCE_NAME`_NOT_SENSOR (0xFFFFFFFF) if scanning is complete.
1710:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1711:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1712:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sensorIndex - the sensor number is being scanned.
1713:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1714:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1715:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1716:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1717:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1718:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint32 CapSense_CSD_ReadCurrentScanningSensor(void)
1719:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 2000              		.loc 1 1719 0
 2001              		.cfi_startproc
 2002 0000 80B5     		push	{r7, lr}
 2003              		.cfi_def_cfa_offset 8
 2004              		.cfi_offset 7, -8
 2005              		.cfi_offset 14, -4
 2006 0002 00AF     		add	r7, sp, #0
 2007              		.cfi_def_cfa_register 7
1720:.\Generated_Source\PSoC4/CapSense_CSD.c ****     return ((uint32)(( 0u != (CapSense_CSD_csdStatusVar & CapSense_CSD_SW_STS_BUSY)) ?
 2008              		.loc 1 1720 0
 2009 0004 074B     		ldr	r3, .L99
 2010 0006 1B78     		ldrb	r3, [r3]
 2011 0008 DBB2     		uxtb	r3, r3
 2012 000a 1A1C     		mov	r2, r3
 2013 000c 0123     		mov	r3, #1
 2014 000e 1340     		and	r3, r2
 2015 0010 03D0     		beq	.L96
 2016              		.loc 1 1720 0 is_stmt 0 discriminator 1
 2017 0012 054B     		ldr	r3, .L99+4
 2018 0014 1B78     		ldrb	r3, [r3]
 2019 0016 DBB2     		uxtb	r3, r3
 2020 0018 01E0     		b	.L97
 2021              	.L96:
 2022              		.loc 1 1720 0 discriminator 2
 2023 001a 0123     		mov	r3, #1
 2024 001c 5B42     		neg	r3, r3
 2025              	.L97:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 67


1721:.\Generated_Source\PSoC4/CapSense_CSD.c ****                      CapSense_CSD_sensorIndex : CapSense_CSD_NOT_SENSOR));
1722:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 2026              		.loc 1 1722 0 is_stmt 1 discriminator 4
 2027 001e 181C     		mov	r0, r3
 2028 0020 BD46     		mov	sp, r7
 2029              		@ sp needed
 2030 0022 80BD     		pop	{r7, pc}
 2031              	.L100:
 2032              		.align	2
 2033              	.L99:
 2034 0024 00000000 		.word	CapSense_CSD_csdStatusVar
 2035 0028 00000000 		.word	CapSense_CSD_sensorIndex
 2036              		.cfi_endproc
 2037              	.LFE58:
 2038              		.size	CapSense_CSD_ReadCurrentScanningSensor, .-CapSense_CSD_ReadCurrentScanningSensor
 2039              		.section	.text.CapSense_CSD_GetBitValue,"ax",%progbits
 2040              		.align	2
 2041              		.global	CapSense_CSD_GetBitValue
 2042              		.code	16
 2043              		.thumb_func
 2044              		.type	CapSense_CSD_GetBitValue, %function
 2045              	CapSense_CSD_GetBitValue:
 2046              	.LFB59:
1723:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1724:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1725:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1726:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_GetBitValue
1727:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1728:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1729:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1730:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  The API returns a bit status of the bit in the table array which contains the masks.
1731:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1732:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1733:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  table[] - array with bit masks.
1734:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  position - position of bit in the table[] array.
1735:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1736:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1737:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  0 - bit is not set; 1 - bit is set.
1738:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1739:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1740:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1741:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1742:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1743:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1744:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1745:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1746:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint32 CapSense_CSD_GetBitValue(const uint8 table[], uint32 position)
1747:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 2047              		.loc 1 1747 0
 2048              		.cfi_startproc
 2049 0000 80B5     		push	{r7, lr}
 2050              		.cfi_def_cfa_offset 8
 2051              		.cfi_offset 7, -8
 2052              		.cfi_offset 14, -4
 2053 0002 84B0     		sub	sp, sp, #16
 2054              		.cfi_def_cfa_offset 24
 2055 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 68


 2056              		.cfi_def_cfa_register 7
 2057 0006 7860     		str	r0, [r7, #4]
 2058 0008 3960     		str	r1, [r7]
1748:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 offset;
1749:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8 enMask;
1750:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1751:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* position is divided by 8 to calculate the element of the
1752:.\Generated_Source\PSoC4/CapSense_CSD.c ****        table[] array that contains the enable bit
1753:.\Generated_Source\PSoC4/CapSense_CSD.c ****        for an appropriate sensor.
1754:.\Generated_Source\PSoC4/CapSense_CSD.c ****     */
1755:.\Generated_Source\PSoC4/CapSense_CSD.c ****     offset = (position >> 3u);
 2059              		.loc 1 1755 0
 2060 000a 3B68     		ldr	r3, [r7]
 2061 000c DB08     		lsr	r3, r3, #3
 2062 000e FB60     		str	r3, [r7, #12]
1756:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1757:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* The enMask calculation for the appropriate sensor. Operation (position & 0x07u)
1758:.\Generated_Source\PSoC4/CapSense_CSD.c ****        intends to calculate the enable bit offset for the 8-bit element of the
1759:.\Generated_Source\PSoC4/CapSense_CSD.c ****        table[] array.
1760:.\Generated_Source\PSoC4/CapSense_CSD.c ****     */
1761:.\Generated_Source\PSoC4/CapSense_CSD.c ****     enMask = 0x01u << (position & 0x07u);
 2063              		.loc 1 1761 0
 2064 0010 3B68     		ldr	r3, [r7]
 2065 0012 0722     		mov	r2, #7
 2066 0014 1340     		and	r3, r2
 2067 0016 0122     		mov	r2, #1
 2068 0018 9A40     		lsl	r2, r2, r3
 2069 001a 0B23     		mov	r3, #11
 2070 001c FB18     		add	r3, r7, r3
 2071 001e 1A70     		strb	r2, [r3]
1762:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1763:.\Generated_Source\PSoC4/CapSense_CSD.c ****     return ((0u !=(table[offset] & enMask)) ? 1Lu : 0Lu);
 2072              		.loc 1 1763 0
 2073 0020 7A68     		ldr	r2, [r7, #4]
 2074 0022 FB68     		ldr	r3, [r7, #12]
 2075 0024 D318     		add	r3, r2, r3
 2076 0026 1B78     		ldrb	r3, [r3]
 2077 0028 0B22     		mov	r2, #11
 2078 002a BA18     		add	r2, r7, r2
 2079 002c 1278     		ldrb	r2, [r2]
 2080 002e 1340     		and	r3, r2
 2081 0030 DBB2     		uxtb	r3, r3
 2082 0032 002B     		cmp	r3, #0
 2083 0034 01D0     		beq	.L102
 2084              		.loc 1 1763 0 is_stmt 0 discriminator 1
 2085 0036 0123     		mov	r3, #1
 2086 0038 00E0     		b	.L103
 2087              	.L102:
 2088              		.loc 1 1763 0 discriminator 2
 2089 003a 0023     		mov	r3, #0
 2090              	.L103:
1764:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 2091              		.loc 1 1764 0 is_stmt 1 discriminator 4
 2092 003c 181C     		mov	r0, r3
 2093 003e BD46     		mov	sp, r7
 2094 0040 04B0     		add	sp, sp, #16
 2095              		@ sp needed
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 69


 2096 0042 80BD     		pop	{r7, pc}
 2097              		.cfi_endproc
 2098              	.LFE59:
 2099              		.size	CapSense_CSD_GetBitValue, .-CapSense_CSD_GetBitValue
 2100              		.section	.text.CapSense_CSD_SetBitValue,"ax",%progbits
 2101              		.align	2
 2102              		.global	CapSense_CSD_SetBitValue
 2103              		.code	16
 2104              		.thumb_func
 2105              		.type	CapSense_CSD_SetBitValue, %function
 2106              	CapSense_CSD_SetBitValue:
 2107              	.LFB60:
1765:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1766:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1767:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1768:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetBitValue
1769:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1770:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1771:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1772:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  The API sets a bit status of the bit in the table array which contains masks.
1773:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1774:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1775:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  table[] - array with bit masks.
1776:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  position - position of bit in the table[] array.
1777:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  value: 0 - bit is not set; 1 - bit is set.
1778:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1779:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1780:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1781:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1782:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1783:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1784:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1785:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1786:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1787:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1788:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1789:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_SetBitValue(uint8 table[], uint32 position, uint32 value)
1790:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 2108              		.loc 1 1790 0
 2109              		.cfi_startproc
 2110 0000 80B5     		push	{r7, lr}
 2111              		.cfi_def_cfa_offset 8
 2112              		.cfi_offset 7, -8
 2113              		.cfi_offset 14, -4
 2114 0002 86B0     		sub	sp, sp, #24
 2115              		.cfi_def_cfa_offset 32
 2116 0004 00AF     		add	r7, sp, #0
 2117              		.cfi_def_cfa_register 7
 2118 0006 F860     		str	r0, [r7, #12]
 2119 0008 B960     		str	r1, [r7, #8]
 2120 000a 7A60     		str	r2, [r7, #4]
1791:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 offset;
1792:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint8 enMask;
1793:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1794:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* position is divided by 8 to calculate the element of the
1795:.\Generated_Source\PSoC4/CapSense_CSD.c ****        table[] array that contains the enable bit
1796:.\Generated_Source\PSoC4/CapSense_CSD.c ****        for an appropriate sensor.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 70


1797:.\Generated_Source\PSoC4/CapSense_CSD.c ****     */
1798:.\Generated_Source\PSoC4/CapSense_CSD.c ****     offset = (position >> 3u);
 2121              		.loc 1 1798 0
 2122 000c BB68     		ldr	r3, [r7, #8]
 2123 000e DB08     		lsr	r3, r3, #3
 2124 0010 7B61     		str	r3, [r7, #20]
1799:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1800:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /* The enMask calculation for the appropriate sensor. Operation (position & 0x07u)
1801:.\Generated_Source\PSoC4/CapSense_CSD.c ****        intends to calculate the enable bit offset for the 8-bit element of the
1802:.\Generated_Source\PSoC4/CapSense_CSD.c ****        table[] array.
1803:.\Generated_Source\PSoC4/CapSense_CSD.c ****     */
1804:.\Generated_Source\PSoC4/CapSense_CSD.c ****     enMask = 0x01u << (position & 0x07u);
 2125              		.loc 1 1804 0
 2126 0012 BB68     		ldr	r3, [r7, #8]
 2127 0014 0722     		mov	r2, #7
 2128 0016 1340     		and	r3, r2
 2129 0018 0122     		mov	r2, #1
 2130 001a 9A40     		lsl	r2, r2, r3
 2131 001c 1323     		mov	r3, #19
 2132 001e FB18     		add	r3, r7, r3
 2133 0020 1A70     		strb	r2, [r3]
1805:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1806:.\Generated_Source\PSoC4/CapSense_CSD.c ****     if(0u != value)
 2134              		.loc 1 1806 0
 2135 0022 7B68     		ldr	r3, [r7, #4]
 2136 0024 002B     		cmp	r3, #0
 2137 0026 0DD0     		beq	.L106
1807:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
1808:.\Generated_Source\PSoC4/CapSense_CSD.c ****         table[offset] |= enMask;
 2138              		.loc 1 1808 0
 2139 0028 FA68     		ldr	r2, [r7, #12]
 2140 002a 7B69     		ldr	r3, [r7, #20]
 2141 002c D318     		add	r3, r2, r3
 2142 002e F968     		ldr	r1, [r7, #12]
 2143 0030 7A69     		ldr	r2, [r7, #20]
 2144 0032 8A18     		add	r2, r1, r2
 2145 0034 1178     		ldrb	r1, [r2]
 2146 0036 1322     		mov	r2, #19
 2147 0038 BA18     		add	r2, r7, r2
 2148 003a 1278     		ldrb	r2, [r2]
 2149 003c 0A43     		orr	r2, r1
 2150 003e D2B2     		uxtb	r2, r2
 2151 0040 1A70     		strb	r2, [r3]
 2152 0042 0EE0     		b	.L105
 2153              	.L106:
1809:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
1810:.\Generated_Source\PSoC4/CapSense_CSD.c ****     else
1811:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
1812:.\Generated_Source\PSoC4/CapSense_CSD.c ****         table[offset] &= (uint8)~(enMask);
 2154              		.loc 1 1812 0
 2155 0044 FA68     		ldr	r2, [r7, #12]
 2156 0046 7B69     		ldr	r3, [r7, #20]
 2157 0048 D318     		add	r3, r2, r3
 2158 004a F968     		ldr	r1, [r7, #12]
 2159 004c 7A69     		ldr	r2, [r7, #20]
 2160 004e 8A18     		add	r2, r1, r2
 2161 0050 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 71


 2162 0052 1321     		mov	r1, #19
 2163 0054 7918     		add	r1, r7, r1
 2164 0056 0978     		ldrb	r1, [r1]
 2165 0058 C943     		mvn	r1, r1
 2166 005a C9B2     		uxtb	r1, r1
 2167 005c 0A40     		and	r2, r1
 2168 005e D2B2     		uxtb	r2, r2
 2169 0060 1A70     		strb	r2, [r3]
 2170              	.L105:
1813:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
1814:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 2171              		.loc 1 1814 0
 2172 0062 BD46     		mov	sp, r7
 2173 0064 06B0     		add	sp, sp, #24
 2174              		@ sp needed
 2175 0066 80BD     		pop	{r7, pc}
 2176              		.cfi_endproc
 2177              	.LFE60:
 2178              		.size	CapSense_CSD_SetBitValue, .-CapSense_CSD_SetBitValue
 2179              		.section	.text.CapSense_CSD_GetSenseClkDivider,"ax",%progbits
 2180              		.align	2
 2181              		.global	CapSense_CSD_GetSenseClkDivider
 2182              		.code	16
 2183              		.thumb_func
 2184              		.type	CapSense_CSD_GetSenseClkDivider, %function
 2185              	CapSense_CSD_GetSenseClkDivider:
 2186              	.LFB61:
1815:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1816:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1817:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1818:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1819:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_GetSenseClkDivider
1820:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1821:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1822:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1823:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API returns a value of the sense clock divider for the  sensor.
1824:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1825:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1826:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor: sensor index. The index value can be
1827:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
1828:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1829:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1830:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API returns the sense clock divider of the sensor.
1831:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1832:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1833:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_senseClkDividerVal[] - stores the sense clock divider values.
1834:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1835:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1836:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1837:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1838:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1839:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint32 CapSense_CSD_GetSenseClkDivider(uint32 sensor)
1840:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 2187              		.loc 1 1840 0
 2188              		.cfi_startproc
 2189 0000 80B5     		push	{r7, lr}
 2190              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 72


 2191              		.cfi_offset 7, -8
 2192              		.cfi_offset 14, -4
 2193 0002 82B0     		sub	sp, sp, #8
 2194              		.cfi_def_cfa_offset 16
 2195 0004 00AF     		add	r7, sp, #0
 2196              		.cfi_def_cfa_register 7
 2197 0006 7860     		str	r0, [r7, #4]
1841:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if(0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET)
1842:.\Generated_Source\PSoC4/CapSense_CSD.c ****         return((uint32)CapSense_CSD_senseClkDividerVal[sensor]);
 2198              		.loc 1 1842 0
 2199 0008 034A     		ldr	r2, .L110
 2200 000a 7B68     		ldr	r3, [r7, #4]
 2201 000c D318     		add	r3, r2, r3
 2202 000e 1B78     		ldrb	r3, [r3]
1843:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #else
1844:.\Generated_Source\PSoC4/CapSense_CSD.c ****         return((uint32)CapSense_CSD_senseClkDividerVal);
1845:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET) */
1846:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 2203              		.loc 1 1846 0
 2204 0010 181C     		mov	r0, r3
 2205 0012 BD46     		mov	sp, r7
 2206 0014 02B0     		add	sp, sp, #8
 2207              		@ sp needed
 2208 0016 80BD     		pop	{r7, pc}
 2209              	.L111:
 2210              		.align	2
 2211              	.L110:
 2212 0018 00000000 		.word	CapSense_CSD_senseClkDividerVal
 2213              		.cfi_endproc
 2214              	.LFE61:
 2215              		.size	CapSense_CSD_GetSenseClkDivider, .-CapSense_CSD_GetSenseClkDivider
 2216              		.section	.text.CapSense_CSD_SetSenseClkDivider,"ax",%progbits
 2217              		.align	2
 2218              		.global	CapSense_CSD_SetSenseClkDivider
 2219              		.code	16
 2220              		.thumb_func
 2221              		.type	CapSense_CSD_SetSenseClkDivider, %function
 2222              	CapSense_CSD_SetSenseClkDivider:
 2223              	.LFB62:
1847:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1848:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
1849:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /*******************************************************************************
1850:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetSenseClkDivider
1851:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ********************************************************************************
1852:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1853:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Summary:
1854:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  This API sets a value of the sense clock divider for the  sensor.
1855:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1856:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Parameters:
1857:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  sensor:  Sensor index.
1858:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  senseClk: represents the sense clock value.
1859:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1860:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Return:
1861:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None.
1862:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1863:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Global Variables:
1864:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  CapSense_CSD_senseClkDividerVal[] - stores the sense clock divider values.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 73


1865:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1866:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Side Effects:
1867:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None
1868:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1869:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *******************************************************************************/
1870:.\Generated_Source\PSoC4/CapSense_CSD.c ****     void CapSense_CSD_SetSenseClkDivider(uint32 sensor, uint32 senseClk)
1871:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 2224              		.loc 1 1871 0
 2225              		.cfi_startproc
 2226 0000 80B5     		push	{r7, lr}
 2227              		.cfi_def_cfa_offset 8
 2228              		.cfi_offset 7, -8
 2229              		.cfi_offset 14, -4
 2230 0002 82B0     		sub	sp, sp, #8
 2231              		.cfi_def_cfa_offset 16
 2232 0004 00AF     		add	r7, sp, #0
 2233              		.cfi_def_cfa_register 7
 2234 0006 7860     		str	r0, [r7, #4]
 2235 0008 3960     		str	r1, [r7]
1872:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #if(0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET)
1873:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_senseClkDividerVal[sensor] = (uint8)senseClk;
 2236              		.loc 1 1873 0
 2237 000a 3B68     		ldr	r3, [r7]
 2238 000c D9B2     		uxtb	r1, r3
 2239 000e 044A     		ldr	r2, .L113
 2240 0010 7B68     		ldr	r3, [r7, #4]
 2241 0012 D318     		add	r3, r2, r3
 2242 0014 0A1C     		add	r2, r1, #0
 2243 0016 1A70     		strb	r2, [r3]
1874:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #else
1875:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_senseClkDividerVal = (uint8)senseClk;
1876:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #endif /* (0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET) */
1877:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 2244              		.loc 1 1877 0
 2245 0018 BD46     		mov	sp, r7
 2246 001a 02B0     		add	sp, sp, #8
 2247              		@ sp needed
 2248 001c 80BD     		pop	{r7, pc}
 2249              	.L114:
 2250 001e C046     		.align	2
 2251              	.L113:
 2252 0020 00000000 		.word	CapSense_CSD_senseClkDividerVal
 2253              		.cfi_endproc
 2254              	.LFE62:
 2255              		.size	CapSense_CSD_SetSenseClkDivider, .-CapSense_CSD_SetSenseClkDivider
 2256              		.section	.text.CapSense_CSD_GetModulatorClkDivider,"ax",%progbits
 2257              		.align	2
 2258              		.global	CapSense_CSD_GetModulatorClkDivider
 2259              		.code	16
 2260              		.thumb_func
 2261              		.type	CapSense_CSD_GetModulatorClkDivider, %function
 2262              	CapSense_CSD_GetModulatorClkDivider:
 2263              	.LFB63:
1878:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
1879:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1880:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1881:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 74


1882:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_GetModulatorClkDivider
1883:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1884:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1885:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1886:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API returns a value of the modulator sample clock divider for the  sensor.
1887:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1888:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1889:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor: sensor index. The value of index can be
1890:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
1891:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1892:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1893:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API returns the modulator sample clock divider for the  sensor.
1894:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1895:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1896:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_sampleClkDividerVal[] - stores the modulator sample divider values.
1897:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1898:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1899:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1900:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1901:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1902:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint32 CapSense_CSD_GetModulatorClkDivider(uint32 sensor)
1903:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 2264              		.loc 1 1903 0
 2265              		.cfi_startproc
 2266 0000 80B5     		push	{r7, lr}
 2267              		.cfi_def_cfa_offset 8
 2268              		.cfi_offset 7, -8
 2269              		.cfi_offset 14, -4
 2270 0002 82B0     		sub	sp, sp, #8
 2271              		.cfi_def_cfa_offset 16
 2272 0004 00AF     		add	r7, sp, #0
 2273              		.cfi_def_cfa_register 7
 2274 0006 7860     		str	r0, [r7, #4]
1904:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if(0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET)
1905:.\Generated_Source\PSoC4/CapSense_CSD.c ****         return((uint32)CapSense_CSD_sampleClkDividerVal[sensor]);
 2275              		.loc 1 1905 0
 2276 0008 034A     		ldr	r2, .L117
 2277 000a 7B68     		ldr	r3, [r7, #4]
 2278 000c D318     		add	r3, r2, r3
 2279 000e 1B78     		ldrb	r3, [r3]
1906:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #else
1907:.\Generated_Source\PSoC4/CapSense_CSD.c ****         return((uint32)CapSense_CSD_sampleClkDividerVal);
1908:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET) */
1909:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 2280              		.loc 1 1909 0
 2281 0010 181C     		mov	r0, r3
 2282 0012 BD46     		mov	sp, r7
 2283 0014 02B0     		add	sp, sp, #8
 2284              		@ sp needed
 2285 0016 80BD     		pop	{r7, pc}
 2286              	.L118:
 2287              		.align	2
 2288              	.L117:
 2289 0018 00000000 		.word	CapSense_CSD_sampleClkDividerVal
 2290              		.cfi_endproc
 2291              	.LFE63:
 2292              		.size	CapSense_CSD_GetModulatorClkDivider, .-CapSense_CSD_GetModulatorClkDivider
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 75


 2293              		.section	.text.CapSense_CSD_SetModulatorClkDivider,"ax",%progbits
 2294              		.align	2
 2295              		.global	CapSense_CSD_SetModulatorClkDivider
 2296              		.code	16
 2297              		.thumb_func
 2298              		.type	CapSense_CSD_SetModulatorClkDivider, %function
 2299              	CapSense_CSD_SetModulatorClkDivider:
 2300              	.LFB64:
1910:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1911:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
1912:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /*******************************************************************************
1913:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetModulatorClkDivider
1914:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ********************************************************************************
1915:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1916:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Summary:
1917:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  This API sets a value of the modulator sample clock divider for the  sensor.
1918:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1919:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Parameters:
1920:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  sensor:  Sensor index.
1921:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  modulatorClk: represents the modulator sample clock value.
1922:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1923:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Return:
1924:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None.
1925:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1926:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Global Variables:
1927:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  CapSense_CSD_sampleClkDividerVal[] - stores the modulator sample divider values.
1928:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1929:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Side Effects:
1930:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None
1931:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1932:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *******************************************************************************/
1933:.\Generated_Source\PSoC4/CapSense_CSD.c ****     void CapSense_CSD_SetModulatorClkDivider(uint32 sensor, uint32 modulatorClk)
1934:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 2301              		.loc 1 1934 0
 2302              		.cfi_startproc
 2303 0000 80B5     		push	{r7, lr}
 2304              		.cfi_def_cfa_offset 8
 2305              		.cfi_offset 7, -8
 2306              		.cfi_offset 14, -4
 2307 0002 82B0     		sub	sp, sp, #8
 2308              		.cfi_def_cfa_offset 16
 2309 0004 00AF     		add	r7, sp, #0
 2310              		.cfi_def_cfa_register 7
 2311 0006 7860     		str	r0, [r7, #4]
 2312 0008 3960     		str	r1, [r7]
1935:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #if(0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET)
1936:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_sampleClkDividerVal[sensor] = (uint8)modulatorClk;
 2313              		.loc 1 1936 0
 2314 000a 3B68     		ldr	r3, [r7]
 2315 000c D9B2     		uxtb	r1, r3
 2316 000e 044A     		ldr	r2, .L120
 2317 0010 7B68     		ldr	r3, [r7, #4]
 2318 0012 D318     		add	r3, r2, r3
 2319 0014 0A1C     		add	r2, r1, #0
 2320 0016 1A70     		strb	r2, [r3]
1937:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #else
1938:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_sampleClkDividerVal = (uint8)modulatorClk;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 76


1939:.\Generated_Source\PSoC4/CapSense_CSD.c ****         #endif /* (0u != CapSense_CSD_MULTIPLE_FREQUENCY_SET) */
1940:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 2321              		.loc 1 1940 0
 2322 0018 BD46     		mov	sp, r7
 2323 001a 02B0     		add	sp, sp, #8
 2324              		@ sp needed
 2325 001c 80BD     		pop	{r7, pc}
 2326              	.L121:
 2327 001e C046     		.align	2
 2328              	.L120:
 2329 0020 00000000 		.word	CapSense_CSD_sampleClkDividerVal
 2330              		.cfi_endproc
 2331              	.LFE64:
 2332              		.size	CapSense_CSD_SetModulatorClkDivider, .-CapSense_CSD_SetModulatorClkDivider
 2333              		.section	.text.CapSense_CSD_GetModulationIDAC,"ax",%progbits
 2334              		.align	2
 2335              		.global	CapSense_CSD_GetModulationIDAC
 2336              		.code	16
 2337              		.thumb_func
 2338              		.type	CapSense_CSD_GetModulationIDAC, %function
 2339              	CapSense_CSD_GetModulationIDAC:
 2340              	.LFB65:
1941:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
1942:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1943:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
1944:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_GetModulationIDAC
1945:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
1946:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1947:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
1948:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API returns a value of the modulation IDAC for the  sensor.
1949:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1950:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
1951:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor: sensor index. The index value can be
1952:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
1953:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1954:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
1955:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API returns the modulation IDAC of the sensor.
1956:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1957:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
1958:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_modulationIDAC[] - stores modulation IDAC values.
1959:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1960:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
1961:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
1962:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
1963:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
1964:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint32 CapSense_CSD_GetModulationIDAC(uint32 sensor)
1965:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 2341              		.loc 1 1965 0
 2342              		.cfi_startproc
 2343 0000 80B5     		push	{r7, lr}
 2344              		.cfi_def_cfa_offset 8
 2345              		.cfi_offset 7, -8
 2346              		.cfi_offset 14, -4
 2347 0002 82B0     		sub	sp, sp, #8
 2348              		.cfi_def_cfa_offset 16
 2349 0004 00AF     		add	r7, sp, #0
 2350              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 77


 2351 0006 7860     		str	r0, [r7, #4]
1966:.\Generated_Source\PSoC4/CapSense_CSD.c ****         return((uint32)CapSense_CSD_modulationIDAC[sensor]);
 2352              		.loc 1 1966 0
 2353 0008 034A     		ldr	r2, .L124
 2354 000a 7B68     		ldr	r3, [r7, #4]
 2355 000c D318     		add	r3, r2, r3
 2356 000e 1B78     		ldrb	r3, [r3]
1967:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 2357              		.loc 1 1967 0
 2358 0010 181C     		mov	r0, r3
 2359 0012 BD46     		mov	sp, r7
 2360 0014 02B0     		add	sp, sp, #8
 2361              		@ sp needed
 2362 0016 80BD     		pop	{r7, pc}
 2363              	.L125:
 2364              		.align	2
 2365              	.L124:
 2366 0018 00000000 		.word	CapSense_CSD_modulationIDAC
 2367              		.cfi_endproc
 2368              	.LFE65:
 2369              		.size	CapSense_CSD_GetModulationIDAC, .-CapSense_CSD_GetModulationIDAC
 2370              		.section	.text.CapSense_CSD_SetModulationIDAC,"ax",%progbits
 2371              		.align	2
 2372              		.global	CapSense_CSD_SetModulationIDAC
 2373              		.code	16
 2374              		.thumb_func
 2375              		.type	CapSense_CSD_SetModulationIDAC, %function
 2376              	CapSense_CSD_SetModulationIDAC:
 2377              	.LFB66:
1968:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1969:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
1970:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /*******************************************************************************
1971:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetModulationIDAC
1972:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ********************************************************************************
1973:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1974:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Summary:
1975:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  This API sets a value of the modulation IDAC for the  sensor.
1976:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1977:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Parameters:
1978:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  sensor:  Sensor index.
1979:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  compIdacValue: represents the modulation IDAC data register value.
1980:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1981:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Return:
1982:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None.
1983:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1984:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Global Variables:
1985:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  CapSense_CSD_modulationIDAC[] - array with modulation IDAC values
1986:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1987:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Side Effects:
1988:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None
1989:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
1990:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *******************************************************************************/
1991:.\Generated_Source\PSoC4/CapSense_CSD.c ****     void CapSense_CSD_SetModulationIDAC(uint32 sensor, uint32 modIdacValue)
1992:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 2378              		.loc 1 1992 0
 2379              		.cfi_startproc
 2380 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 78


 2381              		.cfi_def_cfa_offset 8
 2382              		.cfi_offset 7, -8
 2383              		.cfi_offset 14, -4
 2384 0002 82B0     		sub	sp, sp, #8
 2385              		.cfi_def_cfa_offset 16
 2386 0004 00AF     		add	r7, sp, #0
 2387              		.cfi_def_cfa_register 7
 2388 0006 7860     		str	r0, [r7, #4]
 2389 0008 3960     		str	r1, [r7]
1993:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_modulationIDAC[sensor] = (uint8)modIdacValue;
 2390              		.loc 1 1993 0
 2391 000a 3B68     		ldr	r3, [r7]
 2392 000c D9B2     		uxtb	r1, r3
 2393 000e 044A     		ldr	r2, .L127
 2394 0010 7B68     		ldr	r3, [r7, #4]
 2395 0012 D318     		add	r3, r2, r3
 2396 0014 0A1C     		add	r2, r1, #0
 2397 0016 1A70     		strb	r2, [r3]
1994:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 2398              		.loc 1 1994 0
 2399 0018 BD46     		mov	sp, r7
 2400 001a 02B0     		add	sp, sp, #8
 2401              		@ sp needed
 2402 001c 80BD     		pop	{r7, pc}
 2403              	.L128:
 2404 001e C046     		.align	2
 2405              	.L127:
 2406 0020 00000000 		.word	CapSense_CSD_modulationIDAC
 2407              		.cfi_endproc
 2408              	.LFE66:
 2409              		.size	CapSense_CSD_SetModulationIDAC, .-CapSense_CSD_SetModulationIDAC
 2410              		.section	.text.CapSense_CSD_GetCompensationIDAC,"ax",%progbits
 2411              		.align	2
 2412              		.global	CapSense_CSD_GetCompensationIDAC
 2413              		.code	16
 2414              		.thumb_func
 2415              		.type	CapSense_CSD_GetCompensationIDAC, %function
 2416              	CapSense_CSD_GetCompensationIDAC:
 2417              	.LFB67:
1995:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
1996:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1997:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
1998:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if(CapSense_CSD_IDAC_CNT > 1u)
1999:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /*******************************************************************************
2000:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Function Name: CapSense_CSD_GetCompensationIDAC
2001:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ********************************************************************************
2002:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2003:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Summary:
2004:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  This API returns a value of the compensation IDAC for the  sensor.
2005:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2006:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Parameters:
2007:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  sensor: sensor index. The index value can be
2008:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2009:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2010:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Return:
2011:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  This API returns the compensation IDAC of the sensor.
2012:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 79


2013:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Global Variables:
2014:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  CapSense_CSD_compensationIDAC[] - stores the compensation IDAC values.
2015:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2016:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Side Effects:
2017:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None
2018:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2019:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *******************************************************************************/
2020:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 CapSense_CSD_GetCompensationIDAC(uint32 sensor)
2021:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 2418              		.loc 1 2021 0
 2419              		.cfi_startproc
 2420 0000 80B5     		push	{r7, lr}
 2421              		.cfi_def_cfa_offset 8
 2422              		.cfi_offset 7, -8
 2423              		.cfi_offset 14, -4
 2424 0002 82B0     		sub	sp, sp, #8
 2425              		.cfi_def_cfa_offset 16
 2426 0004 00AF     		add	r7, sp, #0
 2427              		.cfi_def_cfa_register 7
 2428 0006 7860     		str	r0, [r7, #4]
2022:.\Generated_Source\PSoC4/CapSense_CSD.c ****         return((uint32)CapSense_CSD_compensationIDAC[sensor]);
 2429              		.loc 1 2022 0
 2430 0008 034A     		ldr	r2, .L131
 2431 000a 7B68     		ldr	r3, [r7, #4]
 2432 000c D318     		add	r3, r2, r3
 2433 000e 1B78     		ldrb	r3, [r3]
2023:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 2434              		.loc 1 2023 0
 2435 0010 181C     		mov	r0, r3
 2436 0012 BD46     		mov	sp, r7
 2437 0014 02B0     		add	sp, sp, #8
 2438              		@ sp needed
 2439 0016 80BD     		pop	{r7, pc}
 2440              	.L132:
 2441              		.align	2
 2442              	.L131:
 2443 0018 00000000 		.word	CapSense_CSD_compensationIDAC
 2444              		.cfi_endproc
 2445              	.LFE67:
 2446              		.size	CapSense_CSD_GetCompensationIDAC, .-CapSense_CSD_GetCompensationIDAC
 2447              		.section	.text.CapSense_CSD_SetCompensationIDAC,"ax",%progbits
 2448              		.align	2
 2449              		.global	CapSense_CSD_SetCompensationIDAC
 2450              		.code	16
 2451              		.thumb_func
 2452              		.type	CapSense_CSD_SetCompensationIDAC, %function
 2453              	CapSense_CSD_SetCompensationIDAC:
 2454              	.LFB68:
2024:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_IDAC_CNT > 1u) */
2025:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2026:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2027:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if((CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) && (CapSense_CSD_IDAC_CNT > 1u))
2028:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /*******************************************************************************
2029:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetCompensationIDAC
2030:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ********************************************************************************
2031:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2032:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Summary:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 80


2033:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  This API sets a value of compensation IDAC for the  sensor.
2034:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2035:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Parameters:
2036:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  sensor:  Sensor index.
2037:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  compIdacValue: represents the compensation IDAC data register value.
2038:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2039:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Return:
2040:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None.
2041:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2042:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Global Variables:
2043:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  CapSense_CSD_compensationIDAC[] - an array with compensation IDAC values
2044:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2045:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Side Effects:
2046:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None
2047:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2048:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *******************************************************************************/
2049:.\Generated_Source\PSoC4/CapSense_CSD.c ****     void CapSense_CSD_SetCompensationIDAC(uint32 sensor, uint32 compIdacValue)
2050:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 2455              		.loc 1 2050 0
 2456              		.cfi_startproc
 2457 0000 80B5     		push	{r7, lr}
 2458              		.cfi_def_cfa_offset 8
 2459              		.cfi_offset 7, -8
 2460              		.cfi_offset 14, -4
 2461 0002 82B0     		sub	sp, sp, #8
 2462              		.cfi_def_cfa_offset 16
 2463 0004 00AF     		add	r7, sp, #0
 2464              		.cfi_def_cfa_register 7
 2465 0006 7860     		str	r0, [r7, #4]
 2466 0008 3960     		str	r1, [r7]
2051:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_compensationIDAC[sensor] = (uint8)compIdacValue;
 2467              		.loc 1 2051 0
 2468 000a 3B68     		ldr	r3, [r7]
 2469 000c D9B2     		uxtb	r1, r3
 2470 000e 044A     		ldr	r2, .L134
 2471 0010 7B68     		ldr	r3, [r7, #4]
 2472 0012 D318     		add	r3, r2, r3
 2473 0014 0A1C     		add	r2, r1, #0
 2474 0016 1A70     		strb	r2, [r3]
2052:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 2475              		.loc 1 2052 0
 2476 0018 BD46     		mov	sp, r7
 2477 001a 02B0     		add	sp, sp, #8
 2478              		@ sp needed
 2479 001c 80BD     		pop	{r7, pc}
 2480              	.L135:
 2481 001e C046     		.align	2
 2482              	.L134:
 2483 0020 00000000 		.word	CapSense_CSD_compensationIDAC
 2484              		.cfi_endproc
 2485              	.LFE68:
 2486              		.size	CapSense_CSD_SetCompensationIDAC, .-CapSense_CSD_SetCompensationIDAC
 2487              		.section	.text.CapSense_CSD_GetIDACRange,"ax",%progbits
 2488              		.align	2
 2489              		.global	CapSense_CSD_GetIDACRange
 2490              		.code	16
 2491              		.thumb_func
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 81


 2492              		.type	CapSense_CSD_GetIDACRange, %function
 2493              	CapSense_CSD_GetIDACRange:
 2494              	.LFB69:
2053:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* ((CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) && (CapSense_CSD_IDAC_CNT > 1u
2054:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2055:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
2056:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_GetIDACRange
2057:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
2058:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2059:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
2060:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API returns a value that indicates the IDAC range used by the
2061:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  component to scan sensors. The IDAC range is common for all the sensors.
2062:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2063:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
2064:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
2065:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2066:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
2067:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API Returns a value that indicates the IDAC range:
2068:.\Generated_Source\PSoC4/CapSense_CSD.c **** *      0 - IDAC range set to 4x
2069:.\Generated_Source\PSoC4/CapSense_CSD.c **** *      1 - IDAC range set to 8x
2070:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2071:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
2072:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
2073:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2074:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
2075:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
2076:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2077:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
2078:.\Generated_Source\PSoC4/CapSense_CSD.c **** uint32 CapSense_CSD_GetIDACRange(void)
2079:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 2495              		.loc 1 2079 0
 2496              		.cfi_startproc
 2497 0000 80B5     		push	{r7, lr}
 2498              		.cfi_def_cfa_offset 8
 2499              		.cfi_offset 7, -8
 2500              		.cfi_offset 14, -4
 2501 0002 00AF     		add	r7, sp, #0
 2502              		.cfi_def_cfa_register 7
2080:.\Generated_Source\PSoC4/CapSense_CSD.c ****     return((0u != (CapSense_CSD_CSD_IDAC_REG & CapSense_CSD_CSD_IDAC1_RANGE_8X)) ? 1uL : 0uL);
 2503              		.loc 1 2080 0
 2504 0004 054B     		ldr	r3, .L140
 2505 0006 1A68     		ldr	r2, [r3]
 2506 0008 8023     		mov	r3, #128
 2507 000a DB00     		lsl	r3, r3, #3
 2508 000c 1340     		and	r3, r2
 2509 000e 01D0     		beq	.L137
 2510              		.loc 1 2080 0 is_stmt 0 discriminator 1
 2511 0010 0123     		mov	r3, #1
 2512 0012 00E0     		b	.L138
 2513              	.L137:
 2514              		.loc 1 2080 0 discriminator 2
 2515 0014 0023     		mov	r3, #0
 2516              	.L138:
2081:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 2517              		.loc 1 2081 0 is_stmt 1 discriminator 4
 2518 0016 181C     		mov	r0, r3
 2519 0018 BD46     		mov	sp, r7
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 82


 2520              		@ sp needed
 2521 001a 80BD     		pop	{r7, pc}
 2522              	.L141:
 2523              		.align	2
 2524              	.L140:
 2525 001c 08000840 		.word	1074266120
 2526              		.cfi_endproc
 2527              	.LFE69:
 2528              		.size	CapSense_CSD_GetIDACRange, .-CapSense_CSD_GetIDACRange
 2529              		.section	.text.CapSense_CSD_SetIDACRange,"ax",%progbits
 2530              		.align	2
 2531              		.global	CapSense_CSD_SetIDACRange
 2532              		.code	16
 2533              		.thumb_func
 2534              		.type	CapSense_CSD_SetIDACRange, %function
 2535              	CapSense_CSD_SetIDACRange:
 2536              	.LFB70:
2082:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2083:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
2084:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /*******************************************************************************
2085:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Function Name: CapSense_CSD_SetIDACRange
2086:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ********************************************************************************
2087:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2088:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Summary:
2089:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  This API sets the IDAC range to the 4x (1.2uA/bit) or 8x (2.4uA/bit) mode.
2090:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  The IDAC range is common for all the sensors and common for the modulation and
2091:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  compensation IDACs.
2092:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2093:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Parameters:
2094:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  iDacRange:  represents value for IDAC range
2095:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  0 -  IDAC range set to 4x (1.2uA/bit)
2096:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  1 or >1 - IDAC range set to 8x (2.4uA/bit)
2097:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2098:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Return:
2099:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None.
2100:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2101:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Global Variables:
2102:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None
2103:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2104:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Side Effects:
2105:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None
2106:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2107:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *******************************************************************************/
2108:.\Generated_Source\PSoC4/CapSense_CSD.c ****     void CapSense_CSD_SetIDACRange(uint32 iDacRange)
2109:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 2537              		.loc 1 2109 0
 2538              		.cfi_startproc
 2539 0000 80B5     		push	{r7, lr}
 2540              		.cfi_def_cfa_offset 8
 2541              		.cfi_offset 7, -8
 2542              		.cfi_offset 14, -4
 2543 0002 82B0     		sub	sp, sp, #8
 2544              		.cfi_def_cfa_offset 16
 2545 0004 00AF     		add	r7, sp, #0
 2546              		.cfi_def_cfa_register 7
 2547 0006 7860     		str	r0, [r7, #4]
2110:.\Generated_Source\PSoC4/CapSense_CSD.c ****         if(iDacRange != 0u)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 83


 2548              		.loc 1 2110 0
 2549 0008 7B68     		ldr	r3, [r7, #4]
 2550 000a 002B     		cmp	r3, #0
 2551 000c 06D0     		beq	.L143
2111:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
2112:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /*  IDAC range = 8x (2.4uA/bit) */
2113:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_CSD_IDAC_REG |= (CapSense_CSD_CSD_IDAC1_RANGE_8X |\
 2552              		.loc 1 2113 0
 2553 000e 084B     		ldr	r3, .L145
 2554 0010 074A     		ldr	r2, .L145
 2555 0012 1268     		ldr	r2, [r2]
 2556 0014 0749     		ldr	r1, .L145+4
 2557 0016 0A43     		orr	r2, r1
 2558 0018 1A60     		str	r2, [r3]
 2559 001a 05E0     		b	.L142
 2560              	.L143:
2114:.\Generated_Source\PSoC4/CapSense_CSD.c ****                                               CapSense_CSD_CSD_IDAC2_RANGE_8X);
2115:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
2116:.\Generated_Source\PSoC4/CapSense_CSD.c ****         else
2117:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
2118:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /*  IDAC range = 4x (1.2uA/bit) */
2119:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /*  IDAC range = 8x (2.4uA/bit) */
2120:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_CSD_IDAC_REG &= ~(CapSense_CSD_CSD_IDAC1_RANGE_8X |\
 2561              		.loc 1 2120 0
 2562 001c 044B     		ldr	r3, .L145
 2563 001e 044A     		ldr	r2, .L145
 2564 0020 1268     		ldr	r2, [r2]
 2565 0022 0549     		ldr	r1, .L145+8
 2566 0024 0A40     		and	r2, r1
 2567 0026 1A60     		str	r2, [r3]
 2568              	.L142:
2121:.\Generated_Source\PSoC4/CapSense_CSD.c ****                                                CapSense_CSD_CSD_IDAC2_RANGE_8X);
2122:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
2123:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 2569              		.loc 1 2123 0
 2570 0028 BD46     		mov	sp, r7
 2571 002a 02B0     		add	sp, sp, #8
 2572              		@ sp needed
 2573 002c 80BD     		pop	{r7, pc}
 2574              	.L146:
 2575 002e C046     		.align	2
 2576              	.L145:
 2577 0030 08000840 		.word	1074266120
 2578 0034 00040004 		.word	67109888
 2579 0038 FFFBFFFB 		.word	-67109889
 2580              		.cfi_endproc
 2581              	.LFE70:
 2582              		.size	CapSense_CSD_SetIDACRange, .-CapSense_CSD_SetIDACRange
 2583              		.section	.text.CapSense_CSD_GetSensorRaw,"ax",%progbits
 2584              		.align	2
 2585              		.global	CapSense_CSD_GetSensorRaw
 2586              		.code	16
 2587              		.thumb_func
 2588              		.type	CapSense_CSD_GetSensorRaw, %function
 2589              	CapSense_CSD_GetSensorRaw:
 2590              	.LFB71:
2124:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 84


2125:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2126:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2127:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if((0u != CapSense_CSD_AUTOCALIBRATION_ENABLE) || (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUN
2128:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /*******************************************************************************
2129:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Function Name: CapSense_CSD_GetSensorRaw
2130:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ********************************************************************************
2131:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2132:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Summary:
2133:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  The API updates and gets uprated raw data from the sensor.
2134:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2135:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Parameters:
2136:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  sensor - Sensor number.
2137:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2138:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Return:
2139:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  Returns the current raw data value for a defined sensor number.
2140:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2141:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Global Variables:
2142:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None
2143:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2144:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Side Effects:
2145:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None
2146:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2147:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *******************************************************************************/
2148:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint16  CapSense_CSD_GetSensorRaw(uint32 sensor)
2149:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 2591              		.loc 1 2149 0
 2592              		.cfi_startproc
 2593 0000 80B5     		push	{r7, lr}
 2594              		.cfi_def_cfa_offset 8
 2595              		.cfi_offset 7, -8
 2596              		.cfi_offset 14, -4
 2597 0002 84B0     		sub	sp, sp, #16
 2598              		.cfi_def_cfa_offset 24
 2599 0004 00AF     		add	r7, sp, #0
 2600              		.cfi_def_cfa_register 7
 2601 0006 7860     		str	r0, [r7, #4]
2150:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint32 curSample;
2151:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint32 avgVal = 0u;
 2602              		.loc 1 2151 0
 2603 0008 0023     		mov	r3, #0
 2604 000a BB60     		str	r3, [r7, #8]
2152:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2153:.\Generated_Source\PSoC4/CapSense_CSD.c ****         for(curSample = 0u; curSample < CapSense_CSD_AVG_SAMPLES_NUM; curSample++)
 2605              		.loc 1 2153 0
 2606 000c 0023     		mov	r3, #0
 2607 000e FB60     		str	r3, [r7, #12]
 2608 0010 15E0     		b	.L148
 2609              	.L150:
2154:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
2155:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2156:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_ScanSensor((uint32)sensor);
 2610              		.loc 1 2156 0
 2611 0012 7B68     		ldr	r3, [r7, #4]
 2612 0014 181C     		mov	r0, r3
 2613 0016 FFF7FEFF 		bl	CapSense_CSD_ScanSensor
2157:.\Generated_Source\PSoC4/CapSense_CSD.c ****             while(CapSense_CSD_IsBusy() == 1u)
 2614              		.loc 1 2157 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 85


 2615 001a C046     		mov	r8, r8
 2616              	.L149:
 2617              		.loc 1 2157 0 is_stmt 0 discriminator 1
 2618 001c FFF7FEFF 		bl	CapSense_CSD_IsBusy
 2619 0020 031E     		sub	r3, r0, #0
 2620 0022 012B     		cmp	r3, #1
 2621 0024 FAD0     		beq	.L149
2158:.\Generated_Source\PSoC4/CapSense_CSD.c ****             {
2159:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 /* Wait while sensor is busy */
2160:.\Generated_Source\PSoC4/CapSense_CSD.c ****             }
2161:.\Generated_Source\PSoC4/CapSense_CSD.c ****             avgVal += CapSense_CSD_ReadSensorRaw((uint32)sensor);
 2622              		.loc 1 2161 0 is_stmt 1 discriminator 2
 2623 0026 7B68     		ldr	r3, [r7, #4]
 2624 0028 181C     		mov	r0, r3
 2625 002a FFF7FEFF 		bl	CapSense_CSD_ReadSensorRaw
 2626 002e 031C     		mov	r3, r0
 2627 0030 1A1C     		mov	r2, r3
 2628 0032 BB68     		ldr	r3, [r7, #8]
 2629 0034 9B18     		add	r3, r3, r2
 2630 0036 BB60     		str	r3, [r7, #8]
2153:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
 2631              		.loc 1 2153 0 discriminator 2
 2632 0038 FB68     		ldr	r3, [r7, #12]
 2633 003a 0133     		add	r3, r3, #1
 2634 003c FB60     		str	r3, [r7, #12]
 2635              	.L148:
2153:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
 2636              		.loc 1 2153 0 is_stmt 0 discriminator 1
 2637 003e FB68     		ldr	r3, [r7, #12]
 2638 0040 002B     		cmp	r3, #0
 2639 0042 E6D0     		beq	.L150
2162:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
2163:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2164:.\Generated_Source\PSoC4/CapSense_CSD.c ****         return((uint16)(avgVal / CapSense_CSD_AVG_SAMPLES_NUM));
 2640              		.loc 1 2164 0 is_stmt 1
 2641 0044 BB68     		ldr	r3, [r7, #8]
 2642 0046 9BB2     		uxth	r3, r3
2165:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
 2643              		.loc 1 2165 0
 2644 0048 181C     		mov	r0, r3
 2645 004a BD46     		mov	sp, r7
 2646 004c 04B0     		add	sp, sp, #16
 2647              		@ sp needed
 2648 004e 80BD     		pop	{r7, pc}
 2649              		.cfi_endproc
 2650              	.LFE71:
 2651              		.size	CapSense_CSD_GetSensorRaw, .-CapSense_CSD_GetSensorRaw
 2652              		.section	.text.CapSense_CSD_SetUnscannedSensorState,"ax",%progbits
 2653              		.align	2
 2654              		.global	CapSense_CSD_SetUnscannedSensorState
 2655              		.code	16
 2656              		.thumb_func
 2657              		.type	CapSense_CSD_SetUnscannedSensorState, %function
 2658              	CapSense_CSD_SetUnscannedSensorState:
 2659              	.LFB72:
2166:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* ((0u != CapSense_CSD_AUTOCALIBRATION_ENABLE) && (CapSense_CSD_TUNING_METHOD == CapSense_C
2167:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 86


2168:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2169:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if((0u != CapSense_CSD_AUTOCALIBRATION_ENABLE) && (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUN
2170:.\Generated_Source\PSoC4/CapSense_CSD.c ****     /*******************************************************************************
2171:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Function Name: CapSense_CSD_CalibrateSensor
2172:.\Generated_Source\PSoC4/CapSense_CSD.c ****     ********************************************************************************
2173:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2174:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Summary:
2175:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  Computes the one sensor IDAC value, which provides the raw signal on
2176:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  a specified level, with a specified prescaler, speed, and resolution.
2177:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2178:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Parameters:
2179:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  sensor - Sensor Number.
2180:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2181:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  rawLevel -  Raw data level which should be reached during the calibration
2182:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *              procedure.
2183:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2184:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  idacLevelsTbl - Pointer to the modulatorIdac data register configuration table.
2185:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2186:.\Generated_Source\PSoC4/CapSense_CSD.c ****     * Return:
2187:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *  None
2188:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *
2189:.\Generated_Source\PSoC4/CapSense_CSD.c ****     *******************************************************************************/
2190:.\Generated_Source\PSoC4/CapSense_CSD.c ****     void CapSense_CSD_CalibrateSensor(uint32 sensor, uint32 rawLevel, uint8 idacLevelsTbl[])
2191:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
2192:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 mask;
2193:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint16 rawData;
2194:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2195:.\Generated_Source\PSoC4/CapSense_CSD.c ****         rawData = 0u;
2196:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2197:.\Generated_Source\PSoC4/CapSense_CSD.c ****         mask = 0x80u;
2198:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Init IDAC for null Channel */
2199:.\Generated_Source\PSoC4/CapSense_CSD.c ****         idacLevelsTbl[sensor] = 0x00u;
2200:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2201:.\Generated_Source\PSoC4/CapSense_CSD.c ****         do
2202:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
2203:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /* Set bit for null Channel */
2204:.\Generated_Source\PSoC4/CapSense_CSD.c ****             idacLevelsTbl[sensor] |= mask;
2205:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2206:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /* Scan null Channel and get Rawdata */
2207:.\Generated_Source\PSoC4/CapSense_CSD.c ****             rawData = CapSense_CSD_GetSensorRaw(sensor);
2208:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2209:.\Generated_Source\PSoC4/CapSense_CSD.c ****             /* Decrease IDAC until Rawdata reaches rawLevel */
2210:.\Generated_Source\PSoC4/CapSense_CSD.c ****             if(rawData < rawLevel)
2211:.\Generated_Source\PSoC4/CapSense_CSD.c ****             {
2212:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 /* Reset bit for null Channel  */
2213:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 idacLevelsTbl[sensor] &= (uint8)~mask;
2214:.\Generated_Source\PSoC4/CapSense_CSD.c ****             }
2215:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2216:.\Generated_Source\PSoC4/CapSense_CSD.c ****             mask >>= 1u;
2217:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
2218:.\Generated_Source\PSoC4/CapSense_CSD.c ****         while(mask > 0u);
2219:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2220:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
2221:.\Generated_Source\PSoC4/CapSense_CSD.c **** #endif /* ((0u != CapSense_CSD_AUTOCALIBRATION_ENABLE) && (CapSense_CSD_TUNING_METHOD != CapSense_C
2222:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2223:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2224:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 87


2225:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_SetUnscannedSensorState
2226:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
2227:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2228:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
2229:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API sets a state for un-scanned sensors.
2230:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  It is possible to set the state to Ground, High-Z, or the shield electrode.
2231:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  The un-scanned sensor can be connected to a shield electrode only if the shield is
2232:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  enabled. If the shield is disabled and this API is called with the parameter which
2233:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  indicates the shield state, the un-scanned sensor will be connected to Ground.
2234:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2235:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
2236:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensor - Sensor Number.
2237:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  sensorState: This parameter indicates un-scanned sensor state:
2238:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2239:.\Generated_Source\PSoC4/CapSense_CSD.c **** *     CapSense_CSD__GROUND 0
2240:.\Generated_Source\PSoC4/CapSense_CSD.c **** *     CapSense_CSD__HIZ_ANALOG 1
2241:.\Generated_Source\PSoC4/CapSense_CSD.c **** *     CapSense_CSD__SHIELD 2
2242:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2243:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
2244:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None.
2245:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2246:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
2247:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_unscannedSnsDriveMode[] - used to store the state for
2248:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  un-scanned sensors.
2249:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2250:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
2251:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
2252:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2253:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
2254:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_SetUnscannedSensorState(uint32 sensor, uint32 sensorState)
2255:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 2660              		.loc 1 2255 0
 2661              		.cfi_startproc
 2662 0000 80B5     		push	{r7, lr}
 2663              		.cfi_def_cfa_offset 8
 2664              		.cfi_offset 7, -8
 2665              		.cfi_offset 14, -4
 2666 0002 82B0     		sub	sp, sp, #8
 2667              		.cfi_def_cfa_offset 16
 2668 0004 00AF     		add	r7, sp, #0
 2669              		.cfi_def_cfa_register 7
 2670 0006 7860     		str	r0, [r7, #4]
 2671 0008 3960     		str	r1, [r7]
2256:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #if(CapSense_CSD_IS_COMPLEX_SCANSLOTS)
2257:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 snsType;
2258:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint8 curSensor;
2259:.\Generated_Source\PSoC4/CapSense_CSD.c ****         uint16 snsNumber;
2260:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2261:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Read sensor type: single or complex */
2262:.\Generated_Source\PSoC4/CapSense_CSD.c ****         snsType = CapSense_CSD_portTable[sensor];
2263:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2264:.\Generated_Source\PSoC4/CapSense_CSD.c ****         /* Check if sensor is complex */
2265:.\Generated_Source\PSoC4/CapSense_CSD.c ****         if(0u != (snsType & CapSense_CSD_COMPLEX_SS_FLAG))
2266:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
2267:.\Generated_Source\PSoC4/CapSense_CSD.c ****             snsType &= (uint8)~CapSense_CSD_COMPLEX_SS_FLAG;
2268:.\Generated_Source\PSoC4/CapSense_CSD.c ****             snsNumber = (uint16)CapSense_CSD_maskTable[sensor];
2269:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 88


2270:.\Generated_Source\PSoC4/CapSense_CSD.c ****             for (curSensor=0u; curSensor < snsNumber; curSensor++)
2271:.\Generated_Source\PSoC4/CapSense_CSD.c ****             {
2272:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 sensor = CapSense_CSD_indexTable[snsType + curSensor];
2273:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 CapSense_CSD_unscannedSnsDriveMode[sensor] = (uint8)sensorState;
2274:.\Generated_Source\PSoC4/CapSense_CSD.c ****             }
2275:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
2276:.\Generated_Source\PSoC4/CapSense_CSD.c ****         else
2277:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
2278:.\Generated_Source\PSoC4/CapSense_CSD.c ****             CapSense_CSD_unscannedSnsDriveMode[sensor] = (uint8)sensorState;
2279:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
2280:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #else
2281:.\Generated_Source\PSoC4/CapSense_CSD.c ****         CapSense_CSD_unscannedSnsDriveMode[sensor] = (uint8)sensorState;
 2672              		.loc 1 2281 0
 2673 000a 3B68     		ldr	r3, [r7]
 2674 000c D9B2     		uxtb	r1, r3
 2675 000e 044A     		ldr	r2, .L153
 2676 0010 7B68     		ldr	r3, [r7, #4]
 2677 0012 D318     		add	r3, r2, r3
 2678 0014 0A1C     		add	r2, r1, #0
 2679 0016 1A70     		strb	r2, [r3]
2282:.\Generated_Source\PSoC4/CapSense_CSD.c ****     #endif /* (CapSense_CSD_IS_COMPLEX_SCANSLOTS) */
2283:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 2680              		.loc 1 2283 0
 2681 0018 BD46     		mov	sp, r7
 2682 001a 02B0     		add	sp, sp, #8
 2683              		@ sp needed
 2684 001c 80BD     		pop	{r7, pc}
 2685              	.L154:
 2686 001e C046     		.align	2
 2687              	.L153:
 2688 0020 00000000 		.word	CapSense_CSD_unscannedSnsDriveMode
 2689              		.cfi_endproc
 2690              	.LFE72:
 2691              		.size	CapSense_CSD_SetUnscannedSensorState, .-CapSense_CSD_SetUnscannedSensorState
 2692              		.section	.text.CapSense_CSD_NormalizeWidgets,"ax",%progbits
 2693              		.align	2
 2694              		.global	CapSense_CSD_NormalizeWidgets
 2695              		.code	16
 2696              		.thumb_func
 2697              		.type	CapSense_CSD_NormalizeWidgets, %function
 2698              	CapSense_CSD_NormalizeWidgets:
 2699              	.LFB73:
2284:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2285:.\Generated_Source\PSoC4/CapSense_CSD.c **** #if(0u != CapSense_CSD_TOTAL_CENTROIDS_COUNT)
2286:.\Generated_Source\PSoC4/CapSense_CSD.c **** /*******************************************************************************
2287:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Function Name: CapSense_CSD_NormalizeWidgets
2288:.\Generated_Source\PSoC4/CapSense_CSD.c **** ********************************************************************************
2289:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2290:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Summary:
2291:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  This API aligns all the parameters of the widget to the maximum parameter.
2292:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2293:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Parameters:
2294:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  uint32 widgetsNum: Number of widgets.
2295:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  uint8 *dataPrt: pointer to array with widget parameters.
2296:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2297:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Return:
2298:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 89


2299:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2300:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Global Variables:
2301:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_numberOfSensors[] - Number of sensors in the widget.
2302:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  CapSense_CSD_rawDataIndex[currentWidget] - Contains the  1st sensor
2303:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  position in the widget.
2304:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2305:.\Generated_Source\PSoC4/CapSense_CSD.c **** * Side Effects:
2306:.\Generated_Source\PSoC4/CapSense_CSD.c **** *  None
2307:.\Generated_Source\PSoC4/CapSense_CSD.c **** *
2308:.\Generated_Source\PSoC4/CapSense_CSD.c **** *******************************************************************************/
2309:.\Generated_Source\PSoC4/CapSense_CSD.c **** void CapSense_CSD_NormalizeWidgets(uint32 widgetsNum, uint8 dataPtr[])
2310:.\Generated_Source\PSoC4/CapSense_CSD.c **** {
 2700              		.loc 1 2310 0
 2701              		.cfi_startproc
 2702 0000 80B5     		push	{r7, lr}
 2703              		.cfi_def_cfa_offset 8
 2704              		.cfi_offset 7, -8
 2705              		.cfi_offset 14, -4
 2706 0002 88B0     		sub	sp, sp, #32
 2707              		.cfi_def_cfa_offset 40
 2708 0004 00AF     		add	r7, sp, #0
 2709              		.cfi_def_cfa_register 7
 2710 0006 7860     		str	r0, [r7, #4]
 2711 0008 3960     		str	r1, [r7]
2311:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 currentWidget;
2312:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 currentSensor;
2313:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 lastSensor;
2314:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 sensorsPerWidget;
2315:.\Generated_Source\PSoC4/CapSense_CSD.c ****     uint32 maxPerWidget;
2316:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2317:.\Generated_Source\PSoC4/CapSense_CSD.c ****     for(currentWidget = 0u; currentWidget < widgetsNum; currentWidget++)
 2712              		.loc 1 2317 0
 2713 000a 0023     		mov	r3, #0
 2714 000c FB61     		str	r3, [r7, #28]
 2715 000e 3AE0     		b	.L156
 2716              	.L162:
2318:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
2319:.\Generated_Source\PSoC4/CapSense_CSD.c ****         maxPerWidget = 0u;
 2717              		.loc 1 2319 0
 2718 0010 0023     		mov	r3, #0
 2719 0012 7B61     		str	r3, [r7, #20]
2320:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2321:.\Generated_Source\PSoC4/CapSense_CSD.c ****         sensorsPerWidget = CapSense_CSD_numberOfSensors[currentWidget];
 2720              		.loc 1 2321 0
 2721 0014 1F4A     		ldr	r2, .L163
 2722 0016 FB69     		ldr	r3, [r7, #28]
 2723 0018 D318     		add	r3, r2, r3
 2724 001a 1B78     		ldrb	r3, [r3]
 2725 001c 3B61     		str	r3, [r7, #16]
2322:.\Generated_Source\PSoC4/CapSense_CSD.c ****         currentSensor = CapSense_CSD_rawDataIndex[currentWidget];
 2726              		.loc 1 2322 0
 2727 001e 1E4A     		ldr	r2, .L163+4
 2728 0020 FB69     		ldr	r3, [r7, #28]
 2729 0022 D318     		add	r3, r2, r3
 2730 0024 1B78     		ldrb	r3, [r3]
 2731 0026 BB61     		str	r3, [r7, #24]
2323:.\Generated_Source\PSoC4/CapSense_CSD.c ****         lastSensor = currentSensor + sensorsPerWidget;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 90


 2732              		.loc 1 2323 0
 2733 0028 BA69     		ldr	r2, [r7, #24]
 2734 002a 3B69     		ldr	r3, [r7, #16]
 2735 002c D318     		add	r3, r2, r3
 2736 002e FB60     		str	r3, [r7, #12]
2324:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2325:.\Generated_Source\PSoC4/CapSense_CSD.c ****         while(currentSensor < lastSensor)
 2737              		.loc 1 2325 0
 2738 0030 0FE0     		b	.L157
 2739              	.L159:
2326:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
2327:.\Generated_Source\PSoC4/CapSense_CSD.c ****             if(maxPerWidget < dataPtr[currentSensor])
 2740              		.loc 1 2327 0
 2741 0032 3A68     		ldr	r2, [r7]
 2742 0034 BB69     		ldr	r3, [r7, #24]
 2743 0036 D318     		add	r3, r2, r3
 2744 0038 1B78     		ldrb	r3, [r3]
 2745 003a 1A1E     		sub	r2, r3, #0
 2746 003c 7B69     		ldr	r3, [r7, #20]
 2747 003e 9A42     		cmp	r2, r3
 2748 0040 04D9     		bls	.L158
2328:.\Generated_Source\PSoC4/CapSense_CSD.c ****             {
2329:.\Generated_Source\PSoC4/CapSense_CSD.c ****                 maxPerWidget = dataPtr[currentSensor];
 2749              		.loc 1 2329 0
 2750 0042 3A68     		ldr	r2, [r7]
 2751 0044 BB69     		ldr	r3, [r7, #24]
 2752 0046 D318     		add	r3, r2, r3
 2753 0048 1B78     		ldrb	r3, [r3]
 2754 004a 7B61     		str	r3, [r7, #20]
 2755              	.L158:
2330:.\Generated_Source\PSoC4/CapSense_CSD.c ****             }
2331:.\Generated_Source\PSoC4/CapSense_CSD.c ****             currentSensor++;
 2756              		.loc 1 2331 0
 2757 004c BB69     		ldr	r3, [r7, #24]
 2758 004e 0133     		add	r3, r3, #1
 2759 0050 BB61     		str	r3, [r7, #24]
 2760              	.L157:
2325:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
 2761              		.loc 1 2325 0
 2762 0052 BA69     		ldr	r2, [r7, #24]
 2763 0054 FB68     		ldr	r3, [r7, #12]
 2764 0056 9A42     		cmp	r2, r3
 2765 0058 EBD3     		bcc	.L159
2332:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
2333:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2334:.\Generated_Source\PSoC4/CapSense_CSD.c ****         currentSensor = CapSense_CSD_rawDataIndex[currentWidget];
 2766              		.loc 1 2334 0
 2767 005a 0F4A     		ldr	r2, .L163+4
 2768 005c FB69     		ldr	r3, [r7, #28]
 2769 005e D318     		add	r3, r2, r3
 2770 0060 1B78     		ldrb	r3, [r3]
 2771 0062 BB61     		str	r3, [r7, #24]
2335:.\Generated_Source\PSoC4/CapSense_CSD.c **** 
2336:.\Generated_Source\PSoC4/CapSense_CSD.c ****         while(currentSensor < lastSensor)
 2772              		.loc 1 2336 0
 2773 0064 08E0     		b	.L160
 2774              	.L161:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 91


2337:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
2338:.\Generated_Source\PSoC4/CapSense_CSD.c ****             dataPtr[currentSensor] = (uint8)maxPerWidget;
 2775              		.loc 1 2338 0
 2776 0066 3A68     		ldr	r2, [r7]
 2777 0068 BB69     		ldr	r3, [r7, #24]
 2778 006a D318     		add	r3, r2, r3
 2779 006c 7A69     		ldr	r2, [r7, #20]
 2780 006e D2B2     		uxtb	r2, r2
 2781 0070 1A70     		strb	r2, [r3]
2339:.\Generated_Source\PSoC4/CapSense_CSD.c ****             currentSensor++;
 2782              		.loc 1 2339 0
 2783 0072 BB69     		ldr	r3, [r7, #24]
 2784 0074 0133     		add	r3, r3, #1
 2785 0076 BB61     		str	r3, [r7, #24]
 2786              	.L160:
2336:.\Generated_Source\PSoC4/CapSense_CSD.c ****         {
 2787              		.loc 1 2336 0
 2788 0078 BA69     		ldr	r2, [r7, #24]
 2789 007a FB68     		ldr	r3, [r7, #12]
 2790 007c 9A42     		cmp	r2, r3
 2791 007e F2D3     		bcc	.L161
2317:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 2792              		.loc 1 2317 0 discriminator 2
 2793 0080 FB69     		ldr	r3, [r7, #28]
 2794 0082 0133     		add	r3, r3, #1
 2795 0084 FB61     		str	r3, [r7, #28]
 2796              	.L156:
2317:.\Generated_Source\PSoC4/CapSense_CSD.c ****     {
 2797              		.loc 1 2317 0 is_stmt 0 discriminator 1
 2798 0086 FA69     		ldr	r2, [r7, #28]
 2799 0088 7B68     		ldr	r3, [r7, #4]
 2800 008a 9A42     		cmp	r2, r3
 2801 008c C0D3     		bcc	.L162
2340:.\Generated_Source\PSoC4/CapSense_CSD.c ****         }
2341:.\Generated_Source\PSoC4/CapSense_CSD.c ****     }
2342:.\Generated_Source\PSoC4/CapSense_CSD.c **** }
 2802              		.loc 1 2342 0 is_stmt 1
 2803 008e BD46     		mov	sp, r7
 2804 0090 08B0     		add	sp, sp, #32
 2805              		@ sp needed
 2806 0092 80BD     		pop	{r7, pc}
 2807              	.L164:
 2808              		.align	2
 2809              	.L163:
 2810 0094 00000000 		.word	CapSense_CSD_numberOfSensors
 2811 0098 00000000 		.word	CapSense_CSD_rawDataIndex
 2812              		.cfi_endproc
 2813              	.LFE73:
 2814              		.size	CapSense_CSD_NormalizeWidgets, .-CapSense_CSD_NormalizeWidgets
 2815              		.bss
 2816              	CapSense_CSD_initVar.5266:
 2817 001c 00       		.space	1
 2818 001d 000000   		.text
 2819              	.Letext0:
 2820              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2821              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_CSD_CSHL.h"
 2822              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 92


 2823              	.Ldebug_info0:
 2824 0000 090C0000 		.4byte	0xc09
 2825 0004 0400     		.2byte	0x4
 2826 0006 00000000 		.4byte	.Ldebug_abbrev0
 2827 000a 04       		.byte	0x4
 2828 000b 01       		.uleb128 0x1
 2829 000c D9040000 		.4byte	.LASF124
 2830 0010 01       		.byte	0x1
 2831 0011 C3060000 		.4byte	.LASF125
 2832 0015 A3000000 		.4byte	.LASF126
 2833 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2834 001d 00000000 		.4byte	0
 2835 0021 00000000 		.4byte	.Ldebug_line0
 2836 0025 02       		.uleb128 0x2
 2837 0026 01       		.byte	0x1
 2838 0027 06       		.byte	0x6
 2839 0028 A1090000 		.4byte	.LASF0
 2840 002c 02       		.uleb128 0x2
 2841 002d 01       		.byte	0x1
 2842 002e 08       		.byte	0x8
 2843 002f C6080000 		.4byte	.LASF1
 2844 0033 02       		.uleb128 0x2
 2845 0034 02       		.byte	0x2
 2846 0035 05       		.byte	0x5
 2847 0036 64060000 		.4byte	.LASF2
 2848 003a 02       		.uleb128 0x2
 2849 003b 02       		.byte	0x2
 2850 003c 07       		.byte	0x7
 2851 003d B5090000 		.4byte	.LASF3
 2852 0041 02       		.uleb128 0x2
 2853 0042 04       		.byte	0x4
 2854 0043 05       		.byte	0x5
 2855 0044 8C060000 		.4byte	.LASF4
 2856 0048 02       		.uleb128 0x2
 2857 0049 04       		.byte	0x4
 2858 004a 07       		.byte	0x7
 2859 004b 3A080000 		.4byte	.LASF5
 2860 004f 02       		.uleb128 0x2
 2861 0050 08       		.byte	0x8
 2862 0051 05       		.byte	0x5
 2863 0052 62040000 		.4byte	.LASF6
 2864 0056 02       		.uleb128 0x2
 2865 0057 08       		.byte	0x8
 2866 0058 07       		.byte	0x7
 2867 0059 89020000 		.4byte	.LASF7
 2868 005d 03       		.uleb128 0x3
 2869 005e 04       		.byte	0x4
 2870 005f 05       		.byte	0x5
 2871 0060 696E7400 		.ascii	"int\000"
 2872 0064 02       		.uleb128 0x2
 2873 0065 04       		.byte	0x4
 2874 0066 07       		.byte	0x7
 2875 0067 96000000 		.4byte	.LASF8
 2876 006b 04       		.uleb128 0x4
 2877 006c 2E0A0000 		.4byte	.LASF9
 2878 0070 02       		.byte	0x2
 2879 0071 3801     		.2byte	0x138
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 93


 2880 0073 2C000000 		.4byte	0x2c
 2881 0077 04       		.uleb128 0x4
 2882 0078 43040000 		.4byte	.LASF10
 2883 007c 02       		.byte	0x2
 2884 007d 3901     		.2byte	0x139
 2885 007f 3A000000 		.4byte	0x3a
 2886 0083 04       		.uleb128 0x4
 2887 0084 7A050000 		.4byte	.LASF11
 2888 0088 02       		.byte	0x2
 2889 0089 3A01     		.2byte	0x13a
 2890 008b 48000000 		.4byte	0x48
 2891 008f 02       		.uleb128 0x2
 2892 0090 04       		.byte	0x4
 2893 0091 04       		.byte	0x4
 2894 0092 71020000 		.4byte	.LASF12
 2895 0096 02       		.uleb128 0x2
 2896 0097 08       		.byte	0x8
 2897 0098 04       		.byte	0x4
 2898 0099 340A0000 		.4byte	.LASF13
 2899 009d 02       		.uleb128 0x2
 2900 009e 01       		.byte	0x1
 2901 009f 08       		.byte	0x8
 2902 00a0 11040000 		.4byte	.LASF14
 2903 00a4 04       		.uleb128 0x4
 2904 00a5 85010000 		.4byte	.LASF15
 2905 00a9 02       		.byte	0x2
 2906 00aa E201     		.2byte	0x1e2
 2907 00ac B0000000 		.4byte	0xb0
 2908 00b0 05       		.uleb128 0x5
 2909 00b1 6B000000 		.4byte	0x6b
 2910 00b5 04       		.uleb128 0x4
 2911 00b6 04060000 		.4byte	.LASF16
 2912 00ba 02       		.byte	0x2
 2913 00bb E401     		.2byte	0x1e4
 2914 00bd C1000000 		.4byte	0xc1
 2915 00c1 05       		.uleb128 0x5
 2916 00c2 83000000 		.4byte	0x83
 2917 00c6 02       		.uleb128 0x2
 2918 00c7 04       		.byte	0x4
 2919 00c8 07       		.byte	0x7
 2920 00c9 31080000 		.4byte	.LASF17
 2921 00cd 06       		.uleb128 0x6
 2922 00ce 04       		.byte	0x4
 2923 00cf 6B000000 		.4byte	0x6b
 2924 00d3 06       		.uleb128 0x6
 2925 00d4 04       		.byte	0x4
 2926 00d5 D9000000 		.4byte	0xd9
 2927 00d9 07       		.uleb128 0x7
 2928 00da 6B000000 		.4byte	0x6b
 2929 00de 08       		.uleb128 0x8
 2930 00df 95060000 		.4byte	.LASF18
 2931 00e3 01       		.byte	0x1
 2932 00e4 BD       		.byte	0xbd
 2933 00e5 00000000 		.4byte	.LFB34
 2934 00e9 36000000 		.4byte	.LFE34-.LFB34
 2935 00ed 01       		.uleb128 0x1
 2936 00ee 9C       		.byte	0x9c
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 94


 2937 00ef 02010000 		.4byte	0x102
 2938 00f3 09       		.uleb128 0x9
 2939 00f4 520A0000 		.4byte	.LASF20
 2940 00f8 01       		.byte	0x1
 2941 00f9 BF       		.byte	0xbf
 2942 00fa 83000000 		.4byte	0x83
 2943 00fe 02       		.uleb128 0x2
 2944 00ff 91       		.byte	0x91
 2945 0100 74       		.sleb128 -12
 2946 0101 00       		.byte	0
 2947 0102 08       		.uleb128 0x8
 2948 0103 D4080000 		.4byte	.LASF19
 2949 0107 01       		.byte	0x1
 2950 0108 FE       		.byte	0xfe
 2951 0109 00000000 		.4byte	.LFB35
 2952 010d C0000000 		.4byte	.LFE35-.LFB35
 2953 0111 01       		.uleb128 0x1
 2954 0112 9C       		.byte	0x9c
 2955 0113 27010000 		.4byte	0x127
 2956 0117 0A       		.uleb128 0xa
 2957 0118 010A0000 		.4byte	.LASF21
 2958 011c 01       		.byte	0x1
 2959 011d 0001     		.2byte	0x100
 2960 011f 83000000 		.4byte	0x83
 2961 0123 02       		.uleb128 0x2
 2962 0124 91       		.byte	0x91
 2963 0125 74       		.sleb128 -12
 2964 0126 00       		.byte	0
 2965 0127 0B       		.uleb128 0xb
 2966 0128 A50A0000 		.4byte	.LASF22
 2967 012c 01       		.byte	0x1
 2968 012d 5301     		.2byte	0x153
 2969 012f 00000000 		.4byte	.LFB36
 2970 0133 50000000 		.4byte	.LFE36-.LFB36
 2971 0137 01       		.uleb128 0x1
 2972 0138 9C       		.byte	0x9c
 2973 0139 4D010000 		.4byte	0x14d
 2974 013d 0A       		.uleb128 0xa
 2975 013e 010A0000 		.4byte	.LASF21
 2976 0142 01       		.byte	0x1
 2977 0143 5501     		.2byte	0x155
 2978 0145 83000000 		.4byte	0x83
 2979 0149 02       		.uleb128 0x2
 2980 014a 91       		.byte	0x91
 2981 014b 74       		.sleb128 -12
 2982 014c 00       		.byte	0
 2983 014d 0B       		.uleb128 0xb
 2984 014e 67050000 		.4byte	.LASF23
 2985 0152 01       		.byte	0x1
 2986 0153 8E01     		.2byte	0x18e
 2987 0155 00000000 		.4byte	.LFB37
 2988 0159 44000000 		.4byte	.LFE37-.LFB37
 2989 015d 01       		.uleb128 0x1
 2990 015e 9C       		.byte	0x9c
 2991 015f 76010000 		.4byte	0x176
 2992 0163 0A       		.uleb128 0xa
 2993 0164 3C070000 		.4byte	.LASF24
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 95


 2994 0168 01       		.byte	0x1
 2995 0169 9101     		.2byte	0x191
 2996 016b 6B000000 		.4byte	0x6b
 2997 016f 05       		.uleb128 0x5
 2998 0170 03       		.byte	0x3
 2999 0171 1C000000 		.4byte	CapSense_CSD_initVar.5266
 3000 0175 00       		.byte	0
 3001 0176 0C       		.uleb128 0xc
 3002 0177 77020000 		.4byte	.LASF33
 3003 017b 01       		.byte	0x1
 3004 017c EA01     		.2byte	0x1ea
 3005 017e 00000000 		.4byte	.LFB38
 3006 0182 38000000 		.4byte	.LFE38-.LFB38
 3007 0186 01       		.uleb128 0x1
 3008 0187 9C       		.byte	0x9c
 3009 0188 0D       		.uleb128 0xd
 3010 0189 27010000 		.4byte	.LASF35
 3011 018d 01       		.byte	0x1
 3012 018e 1002     		.2byte	0x210
 3013 0190 6B000000 		.4byte	0x6b
 3014 0194 00000000 		.4byte	.LFB39
 3015 0198 48000000 		.4byte	.LFE39-.LFB39
 3016 019c 01       		.uleb128 0x1
 3017 019d 9C       		.byte	0x9c
 3018 019e C1010000 		.4byte	0x1c1
 3019 01a2 0E       		.uleb128 0xe
 3020 01a3 D8050000 		.4byte	.LASF27
 3021 01a7 01       		.byte	0x1
 3022 01a8 1002     		.2byte	0x210
 3023 01aa 6B000000 		.4byte	0x6b
 3024 01ae 02       		.uleb128 0x2
 3025 01af 91       		.byte	0x91
 3026 01b0 6F       		.sleb128 -17
 3027 01b1 0A       		.uleb128 0xa
 3028 01b2 87040000 		.4byte	.LASF25
 3029 01b6 01       		.byte	0x1
 3030 01b7 1202     		.2byte	0x212
 3031 01b9 83000000 		.4byte	0x83
 3032 01bd 02       		.uleb128 0x2
 3033 01be 91       		.byte	0x91
 3034 01bf 74       		.sleb128 -12
 3035 01c0 00       		.byte	0
 3036 01c1 0B       		.uleb128 0xb
 3037 01c2 A1070000 		.4byte	.LASF26
 3038 01c6 01       		.byte	0x1
 3039 01c7 4002     		.2byte	0x240
 3040 01c9 00000000 		.4byte	.LFB40
 3041 01cd 34000000 		.4byte	.LFE40-.LFB40
 3042 01d1 01       		.uleb128 0x1
 3043 01d2 9C       		.byte	0x9c
 3044 01d3 E7010000 		.4byte	0x1e7
 3045 01d7 0E       		.uleb128 0xe
 3046 01d8 D6030000 		.4byte	.LASF28
 3047 01dc 01       		.byte	0x1
 3048 01dd 4002     		.2byte	0x240
 3049 01df 83000000 		.4byte	0x83
 3050 01e3 02       		.uleb128 0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 96


 3051 01e4 91       		.byte	0x91
 3052 01e5 74       		.sleb128 -12
 3053 01e6 00       		.byte	0
 3054 01e7 0B       		.uleb128 0xb
 3055 01e8 E1050000 		.4byte	.LASF29
 3056 01ec 01       		.byte	0x1
 3057 01ed 6702     		.2byte	0x267
 3058 01ef 00000000 		.4byte	.LFB41
 3059 01f3 E0000000 		.4byte	.LFE41-.LFB41
 3060 01f7 01       		.uleb128 0x1
 3061 01f8 9C       		.byte	0x9c
 3062 01f9 3A020000 		.4byte	0x23a
 3063 01fd 0E       		.uleb128 0xe
 3064 01fe A0020000 		.4byte	.LASF30
 3065 0202 01       		.byte	0x1
 3066 0203 6702     		.2byte	0x267
 3067 0205 83000000 		.4byte	0x83
 3068 0209 02       		.uleb128 0x2
 3069 020a 91       		.byte	0x91
 3070 020b 64       		.sleb128 -28
 3071 020c 0A       		.uleb128 0xa
 3072 020d 5B030000 		.4byte	.LASF31
 3073 0211 01       		.byte	0x1
 3074 0212 6902     		.2byte	0x269
 3075 0214 83000000 		.4byte	0x83
 3076 0218 02       		.uleb128 0x2
 3077 0219 91       		.byte	0x91
 3078 021a 74       		.sleb128 -12
 3079 021b 0A       		.uleb128 0xa
 3080 021c F9050000 		.4byte	.LASF32
 3081 0220 01       		.byte	0x1
 3082 0221 6A02     		.2byte	0x26a
 3083 0223 83000000 		.4byte	0x83
 3084 0227 02       		.uleb128 0x2
 3085 0228 91       		.byte	0x91
 3086 0229 6C       		.sleb128 -20
 3087 022a 0A       		.uleb128 0xa
 3088 022b D8050000 		.4byte	.LASF27
 3089 022f 01       		.byte	0x1
 3090 0230 6B02     		.2byte	0x26b
 3091 0232 83000000 		.4byte	0x83
 3092 0236 02       		.uleb128 0x2
 3093 0237 91       		.byte	0x91
 3094 0238 70       		.sleb128 -16
 3095 0239 00       		.byte	0
 3096 023a 0C       		.uleb128 0xc
 3097 023b 8B030000 		.4byte	.LASF34
 3098 023f 01       		.byte	0x1
 3099 0240 BC02     		.2byte	0x2bc
 3100 0242 00000000 		.4byte	.LFB42
 3101 0246 58000000 		.4byte	.LFE42-.LFB42
 3102 024a 01       		.uleb128 0x1
 3103 024b 9C       		.byte	0x9c
 3104 024c 0F       		.uleb128 0xf
 3105 024d B2080000 		.4byte	.LASF66
 3106 0251 01       		.byte	0x1
 3107 0252 E502     		.2byte	0x2e5
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 97


 3108 0254 83000000 		.4byte	0x83
 3109 0258 00000000 		.4byte	.LFB43
 3110 025c 1C000000 		.4byte	.LFE43-.LFB43
 3111 0260 01       		.uleb128 0x1
 3112 0261 9C       		.byte	0x9c
 3113 0262 10       		.uleb128 0x10
 3114 0263 33030000 		.4byte	.LASF36
 3115 0267 01       		.byte	0x1
 3116 0268 0303     		.2byte	0x303
 3117 026a 77000000 		.4byte	0x77
 3118 026e 00000000 		.4byte	.LFB44
 3119 0272 1C000000 		.4byte	.LFE44-.LFB44
 3120 0276 01       		.uleb128 0x1
 3121 0277 9C       		.byte	0x9c
 3122 0278 8C020000 		.4byte	0x28c
 3123 027c 0E       		.uleb128 0xe
 3124 027d D6030000 		.4byte	.LASF28
 3125 0281 01       		.byte	0x1
 3126 0282 0303     		.2byte	0x303
 3127 0284 83000000 		.4byte	0x83
 3128 0288 02       		.uleb128 0x2
 3129 0289 91       		.byte	0x91
 3130 028a 74       		.sleb128 -12
 3131 028b 00       		.byte	0
 3132 028c 11       		.uleb128 0x11
 3133 028d 5C0A0000 		.4byte	.LASF37
 3134 0291 01       		.byte	0x1
 3135 0292 1E03     		.2byte	0x31e
 3136 0294 00000000 		.4byte	.LFB45
 3137 0298 24000000 		.4byte	.LFE45-.LFB45
 3138 029c 01       		.uleb128 0x1
 3139 029d 9C       		.byte	0x9c
 3140 029e C1020000 		.4byte	0x2c1
 3141 02a2 0E       		.uleb128 0xe
 3142 02a3 D6030000 		.4byte	.LASF28
 3143 02a7 01       		.byte	0x1
 3144 02a8 1E03     		.2byte	0x31e
 3145 02aa 83000000 		.4byte	0x83
 3146 02ae 02       		.uleb128 0x2
 3147 02af 91       		.byte	0x91
 3148 02b0 74       		.sleb128 -12
 3149 02b1 0E       		.uleb128 0xe
 3150 02b2 C7020000 		.4byte	.LASF38
 3151 02b6 01       		.byte	0x1
 3152 02b7 1E03     		.2byte	0x31e
 3153 02b9 77000000 		.4byte	0x77
 3154 02bd 02       		.uleb128 0x2
 3155 02be 91       		.byte	0x91
 3156 02bf 72       		.sleb128 -14
 3157 02c0 00       		.byte	0
 3158 02c1 11       		.uleb128 0x11
 3159 02c2 01030000 		.4byte	.LASF39
 3160 02c6 01       		.byte	0x1
 3161 02c7 4803     		.2byte	0x348
 3162 02c9 00000000 		.4byte	.LFB46
 3163 02cd 20000000 		.4byte	.LFE46-.LFB46
 3164 02d1 01       		.uleb128 0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 98


 3165 02d2 9C       		.byte	0x9c
 3166 02d3 F6020000 		.4byte	0x2f6
 3167 02d7 0E       		.uleb128 0xe
 3168 02d8 A0020000 		.4byte	.LASF30
 3169 02dc 01       		.byte	0x1
 3170 02dd 4803     		.2byte	0x348
 3171 02df 83000000 		.4byte	0x83
 3172 02e3 02       		.uleb128 0x2
 3173 02e4 91       		.byte	0x91
 3174 02e5 74       		.sleb128 -12
 3175 02e6 0E       		.uleb128 0xe
 3176 02e7 4A040000 		.4byte	.LASF40
 3177 02eb 01       		.byte	0x1
 3178 02ec 4803     		.2byte	0x348
 3179 02ee 83000000 		.4byte	0x83
 3180 02f2 02       		.uleb128 0x2
 3181 02f3 91       		.byte	0x91
 3182 02f4 70       		.sleb128 -16
 3183 02f5 00       		.byte	0
 3184 02f6 10       		.uleb128 0x10
 3185 02f7 6C030000 		.4byte	.LASF41
 3186 02fb 01       		.byte	0x1
 3187 02fc 7103     		.2byte	0x371
 3188 02fe 83000000 		.4byte	0x83
 3189 0302 00000000 		.4byte	.LFB47
 3190 0306 1C000000 		.4byte	.LFE47-.LFB47
 3191 030a 01       		.uleb128 0x1
 3192 030b 9C       		.byte	0x9c
 3193 030c 20030000 		.4byte	0x320
 3194 0310 0E       		.uleb128 0xe
 3195 0311 A0020000 		.4byte	.LASF30
 3196 0315 01       		.byte	0x1
 3197 0316 7103     		.2byte	0x371
 3198 0318 83000000 		.4byte	0x83
 3199 031c 02       		.uleb128 0x2
 3200 031d 91       		.byte	0x91
 3201 031e 74       		.sleb128 -12
 3202 031f 00       		.byte	0
 3203 0320 0B       		.uleb128 0xb
 3204 0321 B9070000 		.4byte	.LASF42
 3205 0325 01       		.byte	0x1
 3206 0326 8C03     		.2byte	0x38c
 3207 0328 00000000 		.4byte	.LFB48
 3208 032c 26000000 		.4byte	.LFE48-.LFB48
 3209 0330 01       		.uleb128 0x1
 3210 0331 9C       		.byte	0x9c
 3211 0332 46030000 		.4byte	0x346
 3212 0336 0A       		.uleb128 0xa
 3213 0337 D8050000 		.4byte	.LASF27
 3214 033b 01       		.byte	0x1
 3215 033c 8E03     		.2byte	0x38e
 3216 033e 83000000 		.4byte	0x83
 3217 0342 02       		.uleb128 0x2
 3218 0343 91       		.byte	0x91
 3219 0344 74       		.sleb128 -12
 3220 0345 00       		.byte	0
 3221 0346 0B       		.uleb128 0xb
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 99


 3222 0347 820A0000 		.4byte	.LASF43
 3223 034b 01       		.byte	0x1
 3224 034c 2A04     		.2byte	0x42a
 3225 034e 00000000 		.4byte	.LFB49
 3226 0352 C8000000 		.4byte	.LFE49-.LFB49
 3227 0356 01       		.uleb128 0x1
 3228 0357 9C       		.byte	0x9c
 3229 0358 B7030000 		.4byte	0x3b7
 3230 035c 0E       		.uleb128 0xe
 3231 035d D6030000 		.4byte	.LASF28
 3232 0361 01       		.byte	0x1
 3233 0362 2A04     		.2byte	0x42a
 3234 0364 83000000 		.4byte	0x83
 3235 0368 02       		.uleb128 0x2
 3236 0369 91       		.byte	0x91
 3237 036a 5C       		.sleb128 -36
 3238 036b 0A       		.uleb128 0xa
 3239 036c 0A020000 		.4byte	.LASF44
 3240 0370 01       		.byte	0x1
 3241 0371 2C04     		.2byte	0x42c
 3242 0373 6B000000 		.4byte	0x6b
 3243 0377 02       		.uleb128 0x2
 3244 0378 91       		.byte	0x91
 3245 0379 6B       		.sleb128 -21
 3246 037a 0A       		.uleb128 0xa
 3247 037b AF010000 		.4byte	.LASF45
 3248 037f 01       		.byte	0x1
 3249 0380 2D04     		.2byte	0x42d
 3250 0382 6B000000 		.4byte	0x6b
 3251 0386 02       		.uleb128 0x2
 3252 0387 91       		.byte	0x91
 3253 0388 6A       		.sleb128 -22
 3254 0389 0A       		.uleb128 0xa
 3255 038a 76010000 		.4byte	.LASF46
 3256 038e 01       		.byte	0x1
 3257 038f 2E04     		.2byte	0x42e
 3258 0391 6B000000 		.4byte	0x6b
 3259 0395 02       		.uleb128 0x2
 3260 0396 91       		.byte	0x91
 3261 0397 69       		.sleb128 -23
 3262 0398 0A       		.uleb128 0xa
 3263 0399 F0020000 		.4byte	.LASF47
 3264 039d 01       		.byte	0x1
 3265 039e 2F04     		.2byte	0x42f
 3266 03a0 83000000 		.4byte	0x83
 3267 03a4 02       		.uleb128 0x2
 3268 03a5 91       		.byte	0x91
 3269 03a6 64       		.sleb128 -28
 3270 03a7 0A       		.uleb128 0xa
 3271 03a8 66080000 		.4byte	.LASF48
 3272 03ac 01       		.byte	0x1
 3273 03ad 3004     		.2byte	0x430
 3274 03af 83000000 		.4byte	0x83
 3275 03b3 02       		.uleb128 0x2
 3276 03b4 91       		.byte	0x91
 3277 03b5 6C       		.sleb128 -20
 3278 03b6 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 100


 3279 03b7 0B       		.uleb128 0xb
 3280 03b8 49060000 		.4byte	.LASF49
 3281 03bc 01       		.byte	0x1
 3282 03bd 5F04     		.2byte	0x45f
 3283 03bf 00000000 		.4byte	.LFB50
 3284 03c3 18010000 		.4byte	.LFE50-.LFB50
 3285 03c7 01       		.uleb128 0x1
 3286 03c8 9C       		.byte	0x9c
 3287 03c9 46040000 		.4byte	0x446
 3288 03cd 0E       		.uleb128 0xe
 3289 03ce D6030000 		.4byte	.LASF28
 3290 03d2 01       		.byte	0x1
 3291 03d3 5F04     		.2byte	0x45f
 3292 03d5 83000000 		.4byte	0x83
 3293 03d9 02       		.uleb128 0x2
 3294 03da 91       		.byte	0x91
 3295 03db 54       		.sleb128 -44
 3296 03dc 0A       		.uleb128 0xa
 3297 03dd 76010000 		.4byte	.LASF46
 3298 03e1 01       		.byte	0x1
 3299 03e2 6104     		.2byte	0x461
 3300 03e4 6B000000 		.4byte	0x6b
 3301 03e8 02       		.uleb128 0x2
 3302 03e9 91       		.byte	0x91
 3303 03ea 61       		.sleb128 -31
 3304 03eb 0A       		.uleb128 0xa
 3305 03ec F0020000 		.4byte	.LASF47
 3306 03f0 01       		.byte	0x1
 3307 03f1 6204     		.2byte	0x462
 3308 03f3 83000000 		.4byte	0x83
 3309 03f7 02       		.uleb128 0x2
 3310 03f8 91       		.byte	0x91
 3311 03f9 5C       		.sleb128 -36
 3312 03fa 0A       		.uleb128 0xa
 3313 03fb 66080000 		.4byte	.LASF48
 3314 03ff 01       		.byte	0x1
 3315 0400 6404     		.2byte	0x464
 3316 0402 83000000 		.4byte	0x83
 3317 0406 02       		.uleb128 0x2
 3318 0407 91       		.byte	0x91
 3319 0408 64       		.sleb128 -28
 3320 0409 0A       		.uleb128 0xa
 3321 040a AF010000 		.4byte	.LASF45
 3322 040e 01       		.byte	0x1
 3323 040f 6504     		.2byte	0x465
 3324 0411 6B000000 		.4byte	0x6b
 3325 0415 02       		.uleb128 0x2
 3326 0416 91       		.byte	0x91
 3327 0417 63       		.sleb128 -29
 3328 0418 0A       		.uleb128 0xa
 3329 0419 0A020000 		.4byte	.LASF44
 3330 041d 01       		.byte	0x1
 3331 041e 6604     		.2byte	0x466
 3332 0420 6B000000 		.4byte	0x6b
 3333 0424 02       		.uleb128 0x2
 3334 0425 91       		.byte	0x91
 3335 0426 62       		.sleb128 -30
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 101


 3336 0427 0A       		.uleb128 0xa
 3337 0428 2E020000 		.4byte	.LASF50
 3338 042c 01       		.byte	0x1
 3339 042d 6804     		.2byte	0x468
 3340 042f 83000000 		.4byte	0x83
 3341 0433 02       		.uleb128 0x2
 3342 0434 91       		.byte	0x91
 3343 0435 6C       		.sleb128 -20
 3344 0436 0A       		.uleb128 0xa
 3345 0437 20030000 		.4byte	.LASF51
 3346 043b 01       		.byte	0x1
 3347 043c 6904     		.2byte	0x469
 3348 043e 83000000 		.4byte	0x83
 3349 0442 02       		.uleb128 0x2
 3350 0443 91       		.byte	0x91
 3351 0444 68       		.sleb128 -24
 3352 0445 00       		.byte	0
 3353 0446 0B       		.uleb128 0xb
 3354 0447 0D0A0000 		.4byte	.LASF52
 3355 044b 01       		.byte	0x1
 3356 044c AC04     		.2byte	0x4ac
 3357 044e 00000000 		.4byte	.LFB51
 3358 0452 6C000000 		.4byte	.LFE51-.LFB51
 3359 0456 01       		.uleb128 0x1
 3360 0457 9C       		.byte	0x9c
 3361 0458 99040000 		.4byte	0x499
 3362 045c 0E       		.uleb128 0xe
 3363 045d 780A0000 		.4byte	.LASF53
 3364 0461 01       		.byte	0x1
 3365 0462 AC04     		.2byte	0x4ac
 3366 0464 83000000 		.4byte	0x83
 3367 0468 02       		.uleb128 0x2
 3368 0469 91       		.byte	0x91
 3369 046a 64       		.sleb128 -28
 3370 046b 0A       		.uleb128 0xa
 3371 046c 520A0000 		.4byte	.LASF20
 3372 0470 01       		.byte	0x1
 3373 0471 AE04     		.2byte	0x4ae
 3374 0473 6B000000 		.4byte	0x6b
 3375 0477 02       		.uleb128 0x2
 3376 0478 91       		.byte	0x91
 3377 0479 77       		.sleb128 -9
 3378 047a 0A       		.uleb128 0xa
 3379 047b 4E030000 		.4byte	.LASF54
 3380 047f 01       		.byte	0x1
 3381 0480 B304     		.2byte	0x4b3
 3382 0482 83000000 		.4byte	0x83
 3383 0486 02       		.uleb128 0x2
 3384 0487 91       		.byte	0x91
 3385 0488 70       		.sleb128 -16
 3386 0489 0A       		.uleb128 0xa
 3387 048a 55040000 		.4byte	.LASF55
 3388 048e 01       		.byte	0x1
 3389 048f B404     		.2byte	0x4b4
 3390 0491 83000000 		.4byte	0x83
 3391 0495 02       		.uleb128 0x2
 3392 0496 91       		.byte	0x91
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 102


 3393 0497 6C       		.sleb128 -20
 3394 0498 00       		.byte	0
 3395 0499 0B       		.uleb128 0xb
 3396 049a 55000000 		.4byte	.LASF56
 3397 049e 01       		.byte	0x1
 3398 049f F504     		.2byte	0x4f5
 3399 04a1 00000000 		.4byte	.LFB52
 3400 04a5 38000000 		.4byte	.LFE52-.LFB52
 3401 04a9 01       		.uleb128 0x1
 3402 04aa 9C       		.byte	0x9c
 3403 04ab BF040000 		.4byte	0x4bf
 3404 04af 0A       		.uleb128 0xa
 3405 04b0 F0020000 		.4byte	.LASF47
 3406 04b4 01       		.byte	0x1
 3407 04b5 F704     		.2byte	0x4f7
 3408 04b7 83000000 		.4byte	0x83
 3409 04bb 02       		.uleb128 0x2
 3410 04bc 91       		.byte	0x91
 3411 04bd 74       		.sleb128 -12
 3412 04be 00       		.byte	0
 3413 04bf 11       		.uleb128 0x11
 3414 04c0 1F070000 		.4byte	.LASF57
 3415 04c4 01       		.byte	0x1
 3416 04c5 2905     		.2byte	0x529
 3417 04c7 00000000 		.4byte	.LFB53
 3418 04cb 58000000 		.4byte	.LFE53-.LFB53
 3419 04cf 01       		.uleb128 0x1
 3420 04d0 9C       		.byte	0x9c
 3421 04d1 21050000 		.4byte	0x521
 3422 04d5 0E       		.uleb128 0xe
 3423 04d6 780A0000 		.4byte	.LASF53
 3424 04da 01       		.byte	0x1
 3425 04db 2905     		.2byte	0x529
 3426 04dd 83000000 		.4byte	0x83
 3427 04e1 02       		.uleb128 0x2
 3428 04e2 91       		.byte	0x91
 3429 04e3 6C       		.sleb128 -20
 3430 04e4 0E       		.uleb128 0xe
 3431 04e5 CE050000 		.4byte	.LASF58
 3432 04e9 01       		.byte	0x1
 3433 04ea 2905     		.2byte	0x529
 3434 04ec 83000000 		.4byte	0x83
 3435 04f0 02       		.uleb128 0x2
 3436 04f1 91       		.byte	0x91
 3437 04f2 68       		.sleb128 -24
 3438 04f3 0E       		.uleb128 0xe
 3439 04f4 0A060000 		.4byte	.LASF59
 3440 04f8 01       		.byte	0x1
 3441 04f9 2905     		.2byte	0x529
 3442 04fb 83000000 		.4byte	0x83
 3443 04ff 02       		.uleb128 0x2
 3444 0500 91       		.byte	0x91
 3445 0501 64       		.sleb128 -28
 3446 0502 0A       		.uleb128 0xa
 3447 0503 0A020000 		.4byte	.LASF44
 3448 0507 01       		.byte	0x1
 3449 0508 2B05     		.2byte	0x52b
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 103


 3450 050a 83000000 		.4byte	0x83
 3451 050e 02       		.uleb128 0x2
 3452 050f 91       		.byte	0x91
 3453 0510 74       		.sleb128 -12
 3454 0511 0A       		.uleb128 0xa
 3455 0512 F0020000 		.4byte	.LASF47
 3456 0516 01       		.byte	0x1
 3457 0517 2C05     		.2byte	0x52c
 3458 0519 83000000 		.4byte	0x83
 3459 051d 02       		.uleb128 0x2
 3460 051e 91       		.byte	0x91
 3461 051f 70       		.sleb128 -16
 3462 0520 00       		.byte	0
 3463 0521 0B       		.uleb128 0xb
 3464 0522 1C080000 		.4byte	.LASF60
 3465 0526 01       		.byte	0x1
 3466 0527 4D05     		.2byte	0x54d
 3467 0529 00000000 		.4byte	.LFB54
 3468 052d 38010000 		.4byte	.LFE54-.LFB54
 3469 0531 01       		.uleb128 0x1
 3470 0532 9C       		.byte	0x9c
 3471 0533 83050000 		.4byte	0x583
 3472 0537 0E       		.uleb128 0xe
 3473 0538 D6030000 		.4byte	.LASF28
 3474 053c 01       		.byte	0x1
 3475 053d 4D05     		.2byte	0x54d
 3476 053f 83000000 		.4byte	0x83
 3477 0543 02       		.uleb128 0x2
 3478 0544 91       		.byte	0x91
 3479 0545 5C       		.sleb128 -36
 3480 0546 0A       		.uleb128 0xa
 3481 0547 A0020000 		.4byte	.LASF30
 3482 054b 01       		.byte	0x1
 3483 054c 4F05     		.2byte	0x54f
 3484 054e 6B000000 		.4byte	0x6b
 3485 0552 02       		.uleb128 0x2
 3486 0553 91       		.byte	0x91
 3487 0554 6F       		.sleb128 -17
 3488 0555 0A       		.uleb128 0xa
 3489 0556 76010000 		.4byte	.LASF46
 3490 055a 01       		.byte	0x1
 3491 055b 5005     		.2byte	0x550
 3492 055d 6B000000 		.4byte	0x6b
 3493 0561 02       		.uleb128 0x2
 3494 0562 91       		.byte	0x91
 3495 0563 63       		.sleb128 -29
 3496 0564 0A       		.uleb128 0xa
 3497 0565 010A0000 		.4byte	.LASF21
 3498 0569 01       		.byte	0x1
 3499 056a 5105     		.2byte	0x551
 3500 056c 83000000 		.4byte	0x83
 3501 0570 02       		.uleb128 0x2
 3502 0571 91       		.byte	0x91
 3503 0572 64       		.sleb128 -28
 3504 0573 0A       		.uleb128 0xa
 3505 0574 F0080000 		.4byte	.LASF61
 3506 0578 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 104


 3507 0579 5205     		.2byte	0x552
 3508 057b 83000000 		.4byte	0x83
 3509 057f 02       		.uleb128 0x2
 3510 0580 91       		.byte	0x91
 3511 0581 68       		.sleb128 -24
 3512 0582 00       		.byte	0
 3513 0583 0B       		.uleb128 0xb
 3514 0584 92040000 		.4byte	.LASF62
 3515 0588 01       		.byte	0x1
 3516 0589 1206     		.2byte	0x612
 3517 058b 00000000 		.4byte	.LFB55
 3518 058f 74000000 		.4byte	.LFE55-.LFB55
 3519 0593 01       		.uleb128 0x1
 3520 0594 9C       		.byte	0x9c
 3521 0595 B8050000 		.4byte	0x5b8
 3522 0599 0E       		.uleb128 0xe
 3523 059a D6030000 		.4byte	.LASF28
 3524 059e 01       		.byte	0x1
 3525 059f 1206     		.2byte	0x612
 3526 05a1 83000000 		.4byte	0x83
 3527 05a5 02       		.uleb128 0x2
 3528 05a6 91       		.byte	0x91
 3529 05a7 6C       		.sleb128 -20
 3530 05a8 0A       		.uleb128 0xa
 3531 05a9 010A0000 		.4byte	.LASF21
 3532 05ad 01       		.byte	0x1
 3533 05ae 1406     		.2byte	0x614
 3534 05b0 83000000 		.4byte	0x83
 3535 05b4 02       		.uleb128 0x2
 3536 05b5 91       		.byte	0x91
 3537 05b6 74       		.sleb128 -12
 3538 05b7 00       		.byte	0
 3539 05b8 11       		.uleb128 0x11
 3540 05b9 CD020000 		.4byte	.LASF63
 3541 05bd 01       		.byte	0x1
 3542 05be 6F06     		.2byte	0x66f
 3543 05c0 00000000 		.4byte	.LFB56
 3544 05c4 78000000 		.4byte	.LFE56-.LFB56
 3545 05c8 01       		.uleb128 0x1
 3546 05c9 9C       		.byte	0x9c
 3547 05ca FC050000 		.4byte	0x5fc
 3548 05ce 0E       		.uleb128 0xe
 3549 05cf CE050000 		.4byte	.LASF58
 3550 05d3 01       		.byte	0x1
 3551 05d4 6F06     		.2byte	0x66f
 3552 05d6 83000000 		.4byte	0x83
 3553 05da 02       		.uleb128 0x2
 3554 05db 91       		.byte	0x91
 3555 05dc 6C       		.sleb128 -20
 3556 05dd 0E       		.uleb128 0xe
 3557 05de 0A060000 		.4byte	.LASF59
 3558 05e2 01       		.byte	0x1
 3559 05e3 6F06     		.2byte	0x66f
 3560 05e5 83000000 		.4byte	0x83
 3561 05e9 02       		.uleb128 0x2
 3562 05ea 91       		.byte	0x91
 3563 05eb 68       		.sleb128 -24
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 105


 3564 05ec 0A       		.uleb128 0xa
 3565 05ed 010A0000 		.4byte	.LASF21
 3566 05f1 01       		.byte	0x1
 3567 05f2 7106     		.2byte	0x671
 3568 05f4 83000000 		.4byte	0x83
 3569 05f8 02       		.uleb128 0x2
 3570 05f9 91       		.byte	0x91
 3571 05fa 74       		.sleb128 -12
 3572 05fb 00       		.byte	0
 3573 05fc 11       		.uleb128 0x11
 3574 05fd 72080000 		.4byte	.LASF64
 3575 0601 01       		.byte	0x1
 3576 0602 9206     		.2byte	0x692
 3577 0604 00000000 		.4byte	.LFB57
 3578 0608 30000000 		.4byte	.LFE57-.LFB57
 3579 060c 01       		.uleb128 0x1
 3580 060d 9C       		.byte	0x9c
 3581 060e 31060000 		.4byte	0x631
 3582 0612 0E       		.uleb128 0xe
 3583 0613 BD060000 		.4byte	.LASF65
 3584 0617 01       		.byte	0x1
 3585 0618 9206     		.2byte	0x692
 3586 061a 83000000 		.4byte	0x83
 3587 061e 02       		.uleb128 0x2
 3588 061f 91       		.byte	0x91
 3589 0620 6C       		.sleb128 -20
 3590 0621 0A       		.uleb128 0xa
 3591 0622 010A0000 		.4byte	.LASF21
 3592 0626 01       		.byte	0x1
 3593 0627 9406     		.2byte	0x694
 3594 0629 83000000 		.4byte	0x83
 3595 062d 02       		.uleb128 0x2
 3596 062e 91       		.byte	0x91
 3597 062f 74       		.sleb128 -12
 3598 0630 00       		.byte	0
 3599 0631 0F       		.uleb128 0xf
 3600 0632 16040000 		.4byte	.LASF67
 3601 0636 01       		.byte	0x1
 3602 0637 B606     		.2byte	0x6b6
 3603 0639 83000000 		.4byte	0x83
 3604 063d 00000000 		.4byte	.LFB58
 3605 0641 2C000000 		.4byte	.LFE58-.LFB58
 3606 0645 01       		.uleb128 0x1
 3607 0646 9C       		.byte	0x9c
 3608 0647 10       		.uleb128 0x10
 3609 0648 58020000 		.4byte	.LASF68
 3610 064c 01       		.byte	0x1
 3611 064d D206     		.2byte	0x6d2
 3612 064f 83000000 		.4byte	0x83
 3613 0653 00000000 		.4byte	.LFB59
 3614 0657 44000000 		.4byte	.LFE59-.LFB59
 3615 065b 01       		.uleb128 0x1
 3616 065c 9C       		.byte	0x9c
 3617 065d 9E060000 		.4byte	0x69e
 3618 0661 0E       		.uleb128 0xe
 3619 0662 3D040000 		.4byte	.LASF69
 3620 0666 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 106


 3621 0667 D206     		.2byte	0x6d2
 3622 0669 D3000000 		.4byte	0xd3
 3623 066d 02       		.uleb128 0x2
 3624 066e 91       		.byte	0x91
 3625 066f 6C       		.sleb128 -20
 3626 0670 0E       		.uleb128 0xe
 3627 0671 9C0A0000 		.4byte	.LASF70
 3628 0675 01       		.byte	0x1
 3629 0676 D206     		.2byte	0x6d2
 3630 0678 83000000 		.4byte	0x83
 3631 067c 02       		.uleb128 0x2
 3632 067d 91       		.byte	0x91
 3633 067e 68       		.sleb128 -24
 3634 067f 0A       		.uleb128 0xa
 3635 0680 2C030000 		.4byte	.LASF71
 3636 0684 01       		.byte	0x1
 3637 0685 D406     		.2byte	0x6d4
 3638 0687 83000000 		.4byte	0x83
 3639 068b 02       		.uleb128 0x2
 3640 068c 91       		.byte	0x91
 3641 068d 74       		.sleb128 -12
 3642 068e 0A       		.uleb128 0xa
 3643 068f 6B080000 		.4byte	.LASF72
 3644 0693 01       		.byte	0x1
 3645 0694 D506     		.2byte	0x6d5
 3646 0696 6B000000 		.4byte	0x6b
 3647 069a 02       		.uleb128 0x2
 3648 069b 91       		.byte	0x91
 3649 069c 73       		.sleb128 -13
 3650 069d 00       		.byte	0
 3651 069e 11       		.uleb128 0x11
 3652 069f 43010000 		.4byte	.LASF73
 3653 06a3 01       		.byte	0x1
 3654 06a4 FD06     		.2byte	0x6fd
 3655 06a6 00000000 		.4byte	.LFB60
 3656 06aa 68000000 		.4byte	.LFE60-.LFB60
 3657 06ae 01       		.uleb128 0x1
 3658 06af 9C       		.byte	0x9c
 3659 06b0 00070000 		.4byte	0x700
 3660 06b4 0E       		.uleb128 0xe
 3661 06b5 3D040000 		.4byte	.LASF69
 3662 06b9 01       		.byte	0x1
 3663 06ba FD06     		.2byte	0x6fd
 3664 06bc CD000000 		.4byte	0xcd
 3665 06c0 02       		.uleb128 0x2
 3666 06c1 91       		.byte	0x91
 3667 06c2 6C       		.sleb128 -20
 3668 06c3 0E       		.uleb128 0xe
 3669 06c4 9C0A0000 		.4byte	.LASF70
 3670 06c8 01       		.byte	0x1
 3671 06c9 FD06     		.2byte	0x6fd
 3672 06cb 83000000 		.4byte	0x83
 3673 06cf 02       		.uleb128 0x2
 3674 06d0 91       		.byte	0x91
 3675 06d1 68       		.sleb128 -24
 3676 06d2 0E       		.uleb128 0xe
 3677 06d3 C7020000 		.4byte	.LASF38
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 107


 3678 06d7 01       		.byte	0x1
 3679 06d8 FD06     		.2byte	0x6fd
 3680 06da 83000000 		.4byte	0x83
 3681 06de 02       		.uleb128 0x2
 3682 06df 91       		.byte	0x91
 3683 06e0 64       		.sleb128 -28
 3684 06e1 0A       		.uleb128 0xa
 3685 06e2 2C030000 		.4byte	.LASF71
 3686 06e6 01       		.byte	0x1
 3687 06e7 FF06     		.2byte	0x6ff
 3688 06e9 83000000 		.4byte	0x83
 3689 06ed 02       		.uleb128 0x2
 3690 06ee 91       		.byte	0x91
 3691 06ef 74       		.sleb128 -12
 3692 06f0 0A       		.uleb128 0xa
 3693 06f1 6B080000 		.4byte	.LASF72
 3694 06f5 01       		.byte	0x1
 3695 06f6 0007     		.2byte	0x700
 3696 06f8 6B000000 		.4byte	0x6b
 3697 06fc 02       		.uleb128 0x2
 3698 06fd 91       		.byte	0x91
 3699 06fe 73       		.sleb128 -13
 3700 06ff 00       		.byte	0
 3701 0700 10       		.uleb128 0x10
 3702 0701 A7020000 		.4byte	.LASF74
 3703 0705 01       		.byte	0x1
 3704 0706 2F07     		.2byte	0x72f
 3705 0708 83000000 		.4byte	0x83
 3706 070c 00000000 		.4byte	.LFB61
 3707 0710 1C000000 		.4byte	.LFE61-.LFB61
 3708 0714 01       		.uleb128 0x1
 3709 0715 9C       		.byte	0x9c
 3710 0716 2A070000 		.4byte	0x72a
 3711 071a 0E       		.uleb128 0xe
 3712 071b D6030000 		.4byte	.LASF28
 3713 071f 01       		.byte	0x1
 3714 0720 2F07     		.2byte	0x72f
 3715 0722 83000000 		.4byte	0x83
 3716 0726 02       		.uleb128 0x2
 3717 0727 91       		.byte	0x91
 3718 0728 74       		.sleb128 -12
 3719 0729 00       		.byte	0
 3720 072a 11       		.uleb128 0x11
 3721 072b 00000000 		.4byte	.LASF75
 3722 072f 01       		.byte	0x1
 3723 0730 4E07     		.2byte	0x74e
 3724 0732 00000000 		.4byte	.LFB62
 3725 0736 24000000 		.4byte	.LFE62-.LFB62
 3726 073a 01       		.uleb128 0x1
 3727 073b 9C       		.byte	0x9c
 3728 073c 5F070000 		.4byte	0x75f
 3729 0740 0E       		.uleb128 0xe
 3730 0741 D6030000 		.4byte	.LASF28
 3731 0745 01       		.byte	0x1
 3732 0746 4E07     		.2byte	0x74e
 3733 0748 83000000 		.4byte	0x83
 3734 074c 02       		.uleb128 0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 108


 3735 074d 91       		.byte	0x91
 3736 074e 74       		.sleb128 -12
 3737 074f 0E       		.uleb128 0xe
 3738 0750 40060000 		.4byte	.LASF76
 3739 0754 01       		.byte	0x1
 3740 0755 4E07     		.2byte	0x74e
 3741 0757 83000000 		.4byte	0x83
 3742 075b 02       		.uleb128 0x2
 3743 075c 91       		.byte	0x91
 3744 075d 70       		.sleb128 -16
 3745 075e 00       		.byte	0
 3746 075f 10       		.uleb128 0x10
 3747 0760 8E080000 		.4byte	.LASF77
 3748 0764 01       		.byte	0x1
 3749 0765 6E07     		.2byte	0x76e
 3750 0767 83000000 		.4byte	0x83
 3751 076b 00000000 		.4byte	.LFB63
 3752 076f 1C000000 		.4byte	.LFE63-.LFB63
 3753 0773 01       		.uleb128 0x1
 3754 0774 9C       		.byte	0x9c
 3755 0775 89070000 		.4byte	0x789
 3756 0779 0E       		.uleb128 0xe
 3757 077a D6030000 		.4byte	.LASF28
 3758 077e 01       		.byte	0x1
 3759 077f 6E07     		.2byte	0x76e
 3760 0781 83000000 		.4byte	0x83
 3761 0785 02       		.uleb128 0x2
 3762 0786 91       		.byte	0x91
 3763 0787 74       		.sleb128 -12
 3764 0788 00       		.byte	0
 3765 0789 11       		.uleb128 0x11
 3766 078a 73070000 		.4byte	.LASF78
 3767 078e 01       		.byte	0x1
 3768 078f 8D07     		.2byte	0x78d
 3769 0791 00000000 		.4byte	.LFB64
 3770 0795 24000000 		.4byte	.LFE64-.LFB64
 3771 0799 01       		.uleb128 0x1
 3772 079a 9C       		.byte	0x9c
 3773 079b BE070000 		.4byte	0x7be
 3774 079f 0E       		.uleb128 0xe
 3775 07a0 D6030000 		.4byte	.LASF28
 3776 07a4 01       		.byte	0x1
 3777 07a5 8D07     		.2byte	0x78d
 3778 07a7 83000000 		.4byte	0x83
 3779 07ab 02       		.uleb128 0x2
 3780 07ac 91       		.byte	0x91
 3781 07ad 74       		.sleb128 -12
 3782 07ae 0E       		.uleb128 0xe
 3783 07af 1B090000 		.4byte	.LASF79
 3784 07b3 01       		.byte	0x1
 3785 07b4 8D07     		.2byte	0x78d
 3786 07b6 83000000 		.4byte	0x83
 3787 07ba 02       		.uleb128 0x2
 3788 07bb 91       		.byte	0x91
 3789 07bc 70       		.sleb128 -16
 3790 07bd 00       		.byte	0
 3791 07be 10       		.uleb128 0x10
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 109


 3792 07bf 28090000 		.4byte	.LASF80
 3793 07c3 01       		.byte	0x1
 3794 07c4 AC07     		.2byte	0x7ac
 3795 07c6 83000000 		.4byte	0x83
 3796 07ca 00000000 		.4byte	.LFB65
 3797 07ce 1C000000 		.4byte	.LFE65-.LFB65
 3798 07d2 01       		.uleb128 0x1
 3799 07d3 9C       		.byte	0x9c
 3800 07d4 E8070000 		.4byte	0x7e8
 3801 07d8 0E       		.uleb128 0xe
 3802 07d9 D6030000 		.4byte	.LASF28
 3803 07dd 01       		.byte	0x1
 3804 07de AC07     		.2byte	0x7ac
 3805 07e0 83000000 		.4byte	0x83
 3806 07e4 02       		.uleb128 0x2
 3807 07e5 91       		.byte	0x91
 3808 07e6 74       		.sleb128 -12
 3809 07e7 00       		.byte	0
 3810 07e8 11       		.uleb128 0x11
 3811 07e9 E2090000 		.4byte	.LASF81
 3812 07ed 01       		.byte	0x1
 3813 07ee C707     		.2byte	0x7c7
 3814 07f0 00000000 		.4byte	.LFB66
 3815 07f4 24000000 		.4byte	.LFE66-.LFB66
 3816 07f8 01       		.uleb128 0x1
 3817 07f9 9C       		.byte	0x9c
 3818 07fa 1D080000 		.4byte	0x81d
 3819 07fe 0E       		.uleb128 0xe
 3820 07ff D6030000 		.4byte	.LASF28
 3821 0803 01       		.byte	0x1
 3822 0804 C707     		.2byte	0x7c7
 3823 0806 83000000 		.4byte	0x83
 3824 080a 02       		.uleb128 0x2
 3825 080b 91       		.byte	0x91
 3826 080c 74       		.sleb128 -12
 3827 080d 0E       		.uleb128 0xe
 3828 080e 0F080000 		.4byte	.LASF82
 3829 0812 01       		.byte	0x1
 3830 0813 C707     		.2byte	0x7c7
 3831 0815 83000000 		.4byte	0x83
 3832 0819 02       		.uleb128 0x2
 3833 081a 91       		.byte	0x91
 3834 081b 70       		.sleb128 -16
 3835 081c 00       		.byte	0
 3836 081d 10       		.uleb128 0x10
 3837 081e 5C090000 		.4byte	.LASF83
 3838 0822 01       		.byte	0x1
 3839 0823 E407     		.2byte	0x7e4
 3840 0825 83000000 		.4byte	0x83
 3841 0829 00000000 		.4byte	.LFB67
 3842 082d 1C000000 		.4byte	.LFE67-.LFB67
 3843 0831 01       		.uleb128 0x1
 3844 0832 9C       		.byte	0x9c
 3845 0833 47080000 		.4byte	0x847
 3846 0837 0E       		.uleb128 0xe
 3847 0838 D6030000 		.4byte	.LASF28
 3848 083c 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 110


 3849 083d E407     		.2byte	0x7e4
 3850 083f 83000000 		.4byte	0x83
 3851 0843 02       		.uleb128 0x2
 3852 0844 91       		.byte	0x91
 3853 0845 74       		.sleb128 -12
 3854 0846 00       		.byte	0
 3855 0847 11       		.uleb128 0x11
 3856 0848 B5030000 		.4byte	.LASF84
 3857 084c 01       		.byte	0x1
 3858 084d 0108     		.2byte	0x801
 3859 084f 00000000 		.4byte	.LFB68
 3860 0853 24000000 		.4byte	.LFE68-.LFB68
 3861 0857 01       		.uleb128 0x1
 3862 0858 9C       		.byte	0x9c
 3863 0859 7C080000 		.4byte	0x87c
 3864 085d 0E       		.uleb128 0xe
 3865 085e D6030000 		.4byte	.LASF28
 3866 0862 01       		.byte	0x1
 3867 0863 0108     		.2byte	0x801
 3868 0865 83000000 		.4byte	0x83
 3869 0869 02       		.uleb128 0x2
 3870 086a 91       		.byte	0x91
 3871 086b 74       		.sleb128 -12
 3872 086c 0E       		.uleb128 0xe
 3873 086d E1070000 		.4byte	.LASF85
 3874 0871 01       		.byte	0x1
 3875 0872 0108     		.2byte	0x801
 3876 0874 83000000 		.4byte	0x83
 3877 0878 02       		.uleb128 0x2
 3878 0879 91       		.byte	0x91
 3879 087a 70       		.sleb128 -16
 3880 087b 00       		.byte	0
 3881 087c 0F       		.uleb128 0xf
 3882 087d C8090000 		.4byte	.LASF86
 3883 0881 01       		.byte	0x1
 3884 0882 1E08     		.2byte	0x81e
 3885 0884 83000000 		.4byte	0x83
 3886 0888 00000000 		.4byte	.LFB69
 3887 088c 20000000 		.4byte	.LFE69-.LFB69
 3888 0890 01       		.uleb128 0x1
 3889 0891 9C       		.byte	0x9c
 3890 0892 11       		.uleb128 0x11
 3891 0893 3E020000 		.4byte	.LASF87
 3892 0897 01       		.byte	0x1
 3893 0898 3C08     		.2byte	0x83c
 3894 089a 00000000 		.4byte	.LFB70
 3895 089e 3C000000 		.4byte	.LFE70-.LFB70
 3896 08a2 01       		.uleb128 0x1
 3897 08a3 9C       		.byte	0x9c
 3898 08a4 B8080000 		.4byte	0x8b8
 3899 08a8 0E       		.uleb128 0xe
 3900 08a9 97070000 		.4byte	.LASF88
 3901 08ad 01       		.byte	0x1
 3902 08ae 3C08     		.2byte	0x83c
 3903 08b0 83000000 		.4byte	0x83
 3904 08b4 02       		.uleb128 0x2
 3905 08b5 91       		.byte	0x91
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 111


 3906 08b6 74       		.sleb128 -12
 3907 08b7 00       		.byte	0
 3908 08b8 0D       		.uleb128 0xd
 3909 08b9 5C010000 		.4byte	.LASF89
 3910 08bd 01       		.byte	0x1
 3911 08be 6408     		.2byte	0x864
 3912 08c0 77000000 		.4byte	0x77
 3913 08c4 00000000 		.4byte	.LFB71
 3914 08c8 50000000 		.4byte	.LFE71-.LFB71
 3915 08cc 01       		.uleb128 0x1
 3916 08cd 9C       		.byte	0x9c
 3917 08ce 00090000 		.4byte	0x900
 3918 08d2 0E       		.uleb128 0xe
 3919 08d3 D6030000 		.4byte	.LASF28
 3920 08d7 01       		.byte	0x1
 3921 08d8 6408     		.2byte	0x864
 3922 08da 83000000 		.4byte	0x83
 3923 08de 02       		.uleb128 0x2
 3924 08df 91       		.byte	0x91
 3925 08e0 6C       		.sleb128 -20
 3926 08e1 0A       		.uleb128 0xa
 3927 08e2 AB030000 		.4byte	.LASF90
 3928 08e6 01       		.byte	0x1
 3929 08e7 6608     		.2byte	0x866
 3930 08e9 83000000 		.4byte	0x83
 3931 08ed 02       		.uleb128 0x2
 3932 08ee 91       		.byte	0x91
 3933 08ef 74       		.sleb128 -12
 3934 08f0 0A       		.uleb128 0xa
 3935 08f1 03020000 		.4byte	.LASF91
 3936 08f5 01       		.byte	0x1
 3937 08f6 6708     		.2byte	0x867
 3938 08f8 83000000 		.4byte	0x83
 3939 08fc 02       		.uleb128 0x2
 3940 08fd 91       		.byte	0x91
 3941 08fe 70       		.sleb128 -16
 3942 08ff 00       		.byte	0
 3943 0900 11       		.uleb128 0x11
 3944 0901 DE010000 		.4byte	.LASF92
 3945 0905 01       		.byte	0x1
 3946 0906 CE08     		.2byte	0x8ce
 3947 0908 00000000 		.4byte	.LFB72
 3948 090c 24000000 		.4byte	.LFE72-.LFB72
 3949 0910 01       		.uleb128 0x1
 3950 0911 9C       		.byte	0x9c
 3951 0912 35090000 		.4byte	0x935
 3952 0916 0E       		.uleb128 0xe
 3953 0917 D6030000 		.4byte	.LASF28
 3954 091b 01       		.byte	0x1
 3955 091c CE08     		.2byte	0x8ce
 3956 091e 83000000 		.4byte	0x83
 3957 0922 02       		.uleb128 0x2
 3958 0923 91       		.byte	0x91
 3959 0924 74       		.sleb128 -12
 3960 0925 0E       		.uleb128 0xe
 3961 0926 20030000 		.4byte	.LASF51
 3962 092a 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 112


 3963 092b CE08     		.2byte	0x8ce
 3964 092d 83000000 		.4byte	0x83
 3965 0931 02       		.uleb128 0x2
 3966 0932 91       		.byte	0x91
 3967 0933 70       		.sleb128 -16
 3968 0934 00       		.byte	0
 3969 0935 11       		.uleb128 0x11
 3970 0936 EB060000 		.4byte	.LASF93
 3971 093a 01       		.byte	0x1
 3972 093b 0509     		.2byte	0x905
 3973 093d 00000000 		.4byte	.LFB73
 3974 0941 9C000000 		.4byte	.LFE73-.LFB73
 3975 0945 01       		.uleb128 0x1
 3976 0946 9C       		.byte	0x9c
 3977 0947 B5090000 		.4byte	0x9b5
 3978 094b 0E       		.uleb128 0xe
 3979 094c 8A010000 		.4byte	.LASF94
 3980 0950 01       		.byte	0x1
 3981 0951 0509     		.2byte	0x905
 3982 0953 83000000 		.4byte	0x83
 3983 0957 02       		.uleb128 0x2
 3984 0958 91       		.byte	0x91
 3985 0959 5C       		.sleb128 -36
 3986 095a 0E       		.uleb128 0xe
 3987 095b AD090000 		.4byte	.LASF95
 3988 095f 01       		.byte	0x1
 3989 0960 0509     		.2byte	0x905
 3990 0962 CD000000 		.4byte	0xcd
 3991 0966 02       		.uleb128 0x2
 3992 0967 91       		.byte	0x91
 3993 0968 58       		.sleb128 -40
 3994 0969 0A       		.uleb128 0xa
 3995 096a A8040000 		.4byte	.LASF96
 3996 096e 01       		.byte	0x1
 3997 096f 0709     		.2byte	0x907
 3998 0971 83000000 		.4byte	0x83
 3999 0975 02       		.uleb128 0x2
 4000 0976 91       		.byte	0x91
 4001 0977 74       		.sleb128 -12
 4002 0978 0A       		.uleb128 0xa
 4003 0979 D3070000 		.4byte	.LASF97
 4004 097d 01       		.byte	0x1
 4005 097e 0809     		.2byte	0x908
 4006 0980 83000000 		.4byte	0x83
 4007 0984 02       		.uleb128 0x2
 4008 0985 91       		.byte	0x91
 4009 0986 70       		.sleb128 -16
 4010 0987 0A       		.uleb128 0xa
 4011 0988 F9050000 		.4byte	.LASF32
 4012 098c 01       		.byte	0x1
 4013 098d 0909     		.2byte	0x909
 4014 098f 83000000 		.4byte	0x83
 4015 0993 02       		.uleb128 0x2
 4016 0994 91       		.byte	0x91
 4017 0995 64       		.sleb128 -28
 4018 0996 0A       		.uleb128 0xa
 4019 0997 5B030000 		.4byte	.LASF31
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 113


 4020 099b 01       		.byte	0x1
 4021 099c 0A09     		.2byte	0x90a
 4022 099e 83000000 		.4byte	0x83
 4023 09a2 02       		.uleb128 0x2
 4024 09a3 91       		.byte	0x91
 4025 09a4 68       		.sleb128 -24
 4026 09a5 0A       		.uleb128 0xa
 4027 09a6 15060000 		.4byte	.LASF98
 4028 09aa 01       		.byte	0x1
 4029 09ab 0B09     		.2byte	0x90b
 4030 09ad 83000000 		.4byte	0x83
 4031 09b1 02       		.uleb128 0x2
 4032 09b2 91       		.byte	0x91
 4033 09b3 6C       		.sleb128 -20
 4034 09b4 00       		.byte	0
 4035 09b5 12       		.uleb128 0x12
 4036 09b6 EF070000 		.4byte	.LASF99
 4037 09ba 01       		.byte	0x1
 4038 09bb 24       		.byte	0x24
 4039 09bc 6B000000 		.4byte	0x6b
 4040 09c0 05       		.uleb128 0x5
 4041 09c1 03       		.byte	0x3
 4042 09c2 00000000 		.4byte	CapSense_CSD_lowLevelTuningDone
 4043 09c6 13       		.uleb128 0x13
 4044 09c7 6B000000 		.4byte	0x6b
 4045 09cb D6090000 		.4byte	0x9d6
 4046 09cf 14       		.uleb128 0x14
 4047 09d0 C6000000 		.4byte	0xc6
 4048 09d4 01       		.byte	0x1
 4049 09d5 00       		.byte	0
 4050 09d6 12       		.uleb128 0x12
 4051 09d7 81050000 		.4byte	.LASF100
 4052 09db 01       		.byte	0x1
 4053 09dc 25       		.byte	0x25
 4054 09dd C6090000 		.4byte	0x9c6
 4055 09e1 05       		.uleb128 0x5
 4056 09e2 03       		.byte	0x3
 4057 09e3 00000000 		.4byte	CapSense_CSD_scanSpeedTbl
 4058 09e7 12       		.uleb128 0x12
 4059 09e8 51070000 		.4byte	.LASF101
 4060 09ec 01       		.byte	0x1
 4061 09ed 29       		.byte	0x29
 4062 09ee 6B000000 		.4byte	0x6b
 4063 09f2 05       		.uleb128 0x5
 4064 09f3 03       		.byte	0x3
 4065 09f4 00000000 		.4byte	CapSense_CSD_prescalersTuningDone
 4066 09f8 12       		.uleb128 0x12
 4067 09f9 B4050000 		.4byte	.LASF102
 4068 09fd 01       		.byte	0x1
 4069 09fe 2D       		.byte	0x2d
 4070 09ff B0000000 		.4byte	0xb0
 4071 0a03 05       		.uleb128 0x5
 4072 0a04 03       		.byte	0x3
 4073 0a05 00000000 		.4byte	CapSense_CSD_csdStatusVar
 4074 0a09 12       		.uleb128 0x12
 4075 0a0a 9B050000 		.4byte	.LASF103
 4076 0a0e 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 114


 4077 0a0f 2E       		.byte	0x2e
 4078 0a10 B0000000 		.4byte	0xb0
 4079 0a14 05       		.uleb128 0x5
 4080 0a15 03       		.byte	0x3
 4081 0a16 00000000 		.4byte	CapSense_CSD_sensorIndex
 4082 0a1a 13       		.uleb128 0x13
 4083 0a1b 77000000 		.4byte	0x77
 4084 0a1f 2A0A0000 		.4byte	0xa2a
 4085 0a23 14       		.uleb128 0x14
 4086 0a24 C6000000 		.4byte	0xc6
 4087 0a28 0B       		.byte	0xb
 4088 0a29 00       		.byte	0
 4089 0a2a 12       		.uleb128 0x12
 4090 0a2b 17020000 		.4byte	.LASF104
 4091 0a2f 01       		.byte	0x1
 4092 0a30 31       		.byte	0x31
 4093 0a31 1A0A0000 		.4byte	0xa1a
 4094 0a35 05       		.uleb128 0x5
 4095 0a36 03       		.byte	0x3
 4096 0a37 00000000 		.4byte	CapSense_CSD_sensorRaw
 4097 0a3b 13       		.uleb128 0x13
 4098 0a3c 6B000000 		.4byte	0x6b
 4099 0a40 4B0A0000 		.4byte	0xa4b
 4100 0a44 14       		.uleb128 0x14
 4101 0a45 C6000000 		.4byte	0xc6
 4102 0a49 0B       		.byte	0xb
 4103 0a4a 00       		.byte	0
 4104 0a4b 12       		.uleb128 0x12
 4105 0a4c B6040000 		.4byte	.LASF105
 4106 0a50 01       		.byte	0x1
 4107 0a51 3B       		.byte	0x3b
 4108 0a52 3B0A0000 		.4byte	0xa3b
 4109 0a56 05       		.uleb128 0x5
 4110 0a57 03       		.byte	0x3
 4111 0a58 00000000 		.4byte	CapSense_CSD_unscannedSnsDriveMode
 4112 0a5c 12       		.uleb128 0x12
 4113 0a5d 7D090000 		.4byte	.LASF106
 4114 0a61 01       		.byte	0x1
 4115 0a62 3E       		.byte	0x3e
 4116 0a63 C6090000 		.4byte	0x9c6
 4117 0a67 05       		.uleb128 0x5
 4118 0a68 03       		.byte	0x3
 4119 0a69 00000000 		.4byte	CapSense_CSD_sensorEnableMaskBackup
 4120 0a6d 12       		.uleb128 0x12
 4121 0a6e 22060000 		.4byte	.LASF107
 4122 0a72 01       		.byte	0x1
 4123 0a73 41       		.byte	0x41
 4124 0a74 C6090000 		.4byte	0x9c6
 4125 0a78 05       		.uleb128 0x5
 4126 0a79 03       		.byte	0x3
 4127 0a7a 00000000 		.4byte	CapSense_CSD_sensorEnableMask
 4128 0a7e 12       		.uleb128 0x12
 4129 0a7f 7A000000 		.4byte	.LASF108
 4130 0a83 01       		.byte	0x1
 4131 0a84 80       		.byte	0x80
 4132 0a85 3B0A0000 		.4byte	0xa3b
 4133 0a89 05       		.uleb128 0x5
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 115


 4134 0a8a 03       		.byte	0x3
 4135 0a8b 00000000 		.4byte	CapSense_CSD_modulationIDAC
 4136 0a8f 12       		.uleb128 0x12
 4137 0a90 6E060000 		.4byte	.LASF109
 4138 0a94 01       		.byte	0x1
 4139 0a95 81       		.byte	0x81
 4140 0a96 3B0A0000 		.4byte	0xa3b
 4141 0a9a 05       		.uleb128 0x5
 4142 0a9b 03       		.byte	0x3
 4143 0a9c 00000000 		.4byte	CapSense_CSD_compensationIDAC
 4144 0aa0 13       		.uleb128 0x13
 4145 0aa1 83000000 		.4byte	0x83
 4146 0aa5 B00A0000 		.4byte	0xab0
 4147 0aa9 14       		.uleb128 0x14
 4148 0aaa C6000000 		.4byte	0xc6
 4149 0aae 00       		.byte	0
 4150 0aaf 00       		.byte	0
 4151 0ab0 12       		.uleb128 0x12
 4152 0ab1 37000000 		.4byte	.LASF110
 4153 0ab5 01       		.byte	0x1
 4154 0ab6 83       		.byte	0x83
 4155 0ab7 A00A0000 		.4byte	0xaa0
 4156 0abb 05       		.uleb128 0x5
 4157 0abc 03       		.byte	0x3
 4158 0abd 00000000 		.4byte	CapSense_CSD_widgetResolution
 4159 0ac1 12       		.uleb128 0x12
 4160 0ac2 07010000 		.4byte	.LASF111
 4161 0ac6 01       		.byte	0x1
 4162 0ac7 87       		.byte	0x87
 4163 0ac8 3B0A0000 		.4byte	0xa3b
 4164 0acc 05       		.uleb128 0x5
 4165 0acd 03       		.byte	0x3
 4166 0ace 00000000 		.4byte	CapSense_CSD_senseClkDividerVal
 4167 0ad2 12       		.uleb128 0x12
 4168 0ad3 BD010000 		.4byte	.LASF112
 4169 0ad7 01       		.byte	0x1
 4170 0ad8 88       		.byte	0x88
 4171 0ad9 3B0A0000 		.4byte	0xa3b
 4172 0add 05       		.uleb128 0x5
 4173 0ade 03       		.byte	0x3
 4174 0adf 00000000 		.4byte	CapSense_CSD_sampleClkDividerVal
 4175 0ae3 12       		.uleb128 0x12
 4176 0ae4 95010000 		.4byte	.LASF113
 4177 0ae8 01       		.byte	0x1
 4178 0ae9 8A       		.byte	0x8a
 4179 0aea F40A0000 		.4byte	0xaf4
 4180 0aee 05       		.uleb128 0x5
 4181 0aef 03       		.byte	0x3
 4182 0af0 00000000 		.4byte	CapSense_CSD_widgetNumber
 4183 0af4 07       		.uleb128 0x7
 4184 0af5 3B0A0000 		.4byte	0xa3b
 4185 0af9 13       		.uleb128 0x13
 4186 0afa 090B0000 		.4byte	0xb09
 4187 0afe 090B0000 		.4byte	0xb09
 4188 0b02 14       		.uleb128 0x14
 4189 0b03 C6000000 		.4byte	0xc6
 4190 0b07 04       		.byte	0x4
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 116


 4191 0b08 00       		.byte	0
 4192 0b09 06       		.uleb128 0x6
 4193 0b0a 04       		.byte	0x4
 4194 0b0b 0F0B0000 		.4byte	0xb0f
 4195 0b0f 05       		.uleb128 0x5
 4196 0b10 48000000 		.4byte	0x48
 4197 0b14 12       		.uleb128 0x12
 4198 0b15 3B0A0000 		.4byte	.LASF114
 4199 0b19 01       		.byte	0x1
 4200 0b1a 8E       		.byte	0x8e
 4201 0b1b 250B0000 		.4byte	0xb25
 4202 0b1f 05       		.uleb128 0x5
 4203 0b20 03       		.byte	0x3
 4204 0b21 00000000 		.4byte	CapSense_CSD_prtSelTbl
 4205 0b25 07       		.uleb128 0x7
 4206 0b26 F90A0000 		.4byte	0xaf9
 4207 0b2a 12       		.uleb128 0x12
 4208 0b2b 20000000 		.4byte	.LASF115
 4209 0b2f 01       		.byte	0x1
 4210 0b30 96       		.byte	0x96
 4211 0b31 3B0B0000 		.4byte	0xb3b
 4212 0b35 05       		.uleb128 0x5
 4213 0b36 03       		.byte	0x3
 4214 0b37 00000000 		.4byte	CapSense_CSD_prtCfgTbl
 4215 0b3b 07       		.uleb128 0x7
 4216 0b3c F90A0000 		.4byte	0xaf9
 4217 0b40 12       		.uleb128 0x12
 4218 0b41 09070000 		.4byte	.LASF116
 4219 0b45 01       		.byte	0x1
 4220 0b46 9E       		.byte	0x9e
 4221 0b47 510B0000 		.4byte	0xb51
 4222 0b4b 05       		.uleb128 0x5
 4223 0b4c 03       		.byte	0x3
 4224 0b4d 00000000 		.4byte	CapSense_CSD_prtDRTbl
 4225 0b51 07       		.uleb128 0x7
 4226 0b52 F90A0000 		.4byte	0xaf9
 4227 0b56 13       		.uleb128 0x13
 4228 0b57 090B0000 		.4byte	0xb09
 4229 0b5b 660B0000 		.4byte	0xb66
 4230 0b5f 14       		.uleb128 0x14
 4231 0b60 C6000000 		.4byte	0xc6
 4232 0b64 0B       		.byte	0xb
 4233 0b65 00       		.byte	0
 4234 0b66 12       		.uleb128 0x12
 4235 0b67 47090000 		.4byte	.LASF117
 4236 0b6b 01       		.byte	0x1
 4237 0b6c 44       		.byte	0x44
 4238 0b6d 560B0000 		.4byte	0xb56
 4239 0b71 05       		.uleb128 0x5
 4240 0b72 03       		.byte	0x3
 4241 0b73 00000000 		.4byte	CapSense_CSD_pcTable
 4242 0b77 12       		.uleb128 0x12
 4243 0b78 70040000 		.4byte	.LASF118
 4244 0b7c 01       		.byte	0x1
 4245 0b7d 53       		.byte	0x53
 4246 0b7e 880B0000 		.4byte	0xb88
 4247 0b82 05       		.uleb128 0x5
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 117


 4248 0b83 03       		.byte	0x3
 4249 0b84 00000000 		.4byte	CapSense_CSD_portTable
 4250 0b88 07       		.uleb128 0x7
 4251 0b89 3B0A0000 		.4byte	0xa3b
 4252 0b8d 13       		.uleb128 0x13
 4253 0b8e 83000000 		.4byte	0x83
 4254 0b92 9D0B0000 		.4byte	0xb9d
 4255 0b96 14       		.uleb128 0x14
 4256 0b97 C6000000 		.4byte	0xc6
 4257 0b9b 0B       		.byte	0xb
 4258 0b9c 00       		.byte	0
 4259 0b9d 12       		.uleb128 0x12
 4260 0b9e DD030000 		.4byte	.LASF119
 4261 0ba2 01       		.byte	0x1
 4262 0ba3 62       		.byte	0x62
 4263 0ba4 AE0B0000 		.4byte	0xbae
 4264 0ba8 05       		.uleb128 0x5
 4265 0ba9 03       		.byte	0x3
 4266 0baa 00000000 		.4byte	CapSense_CSD_maskTable
 4267 0bae 07       		.uleb128 0x7
 4268 0baf 8D0B0000 		.4byte	0xb8d
 4269 0bb3 12       		.uleb128 0x12
 4270 0bb4 02090000 		.4byte	.LASF120
 4271 0bb8 01       		.byte	0x1
 4272 0bb9 71       		.byte	0x71
 4273 0bba C40B0000 		.4byte	0xbc4
 4274 0bbe 05       		.uleb128 0x5
 4275 0bbf 03       		.byte	0x3
 4276 0bc0 00000000 		.4byte	CapSense_CSD_pinShiftTbl
 4277 0bc4 07       		.uleb128 0x7
 4278 0bc5 3B0A0000 		.4byte	0xa3b
 4279 0bc9 13       		.uleb128 0x13
 4280 0bca 6B000000 		.4byte	0x6b
 4281 0bce D90B0000 		.4byte	0xbd9
 4282 0bd2 14       		.uleb128 0x14
 4283 0bd3 C6000000 		.4byte	0xc6
 4284 0bd7 00       		.byte	0
 4285 0bd8 00       		.byte	0
 4286 0bd9 15       		.uleb128 0x15
 4287 0bda 4C080000 		.4byte	.LASF121
 4288 0bde 03       		.byte	0x3
 4289 0bdf 3A01     		.2byte	0x13a
 4290 0be1 E50B0000 		.4byte	0xbe5
 4291 0be5 07       		.uleb128 0x7
 4292 0be6 C90B0000 		.4byte	0xbc9
 4293 0bea 15       		.uleb128 0x15
 4294 0beb F4030000 		.4byte	.LASF122
 4295 0bef 03       		.byte	0x3
 4296 0bf0 3B01     		.2byte	0x13b
 4297 0bf2 F60B0000 		.4byte	0xbf6
 4298 0bf6 07       		.uleb128 0x7
 4299 0bf7 C90B0000 		.4byte	0xbc9
 4300 0bfb 12       		.uleb128 0x12
 4301 0bfc A7060000 		.4byte	.LASF123
 4302 0c00 01       		.byte	0x1
 4303 0c01 37       		.byte	0x37
 4304 0c02 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 118


 4305 0c06 05       		.uleb128 0x5
 4306 0c07 03       		.byte	0x3
 4307 0c08 00000000 		.4byte	CapSense_CSD_csdTrim1
 4308 0c0c 00       		.byte	0
 4309              		.section	.debug_abbrev,"",%progbits
 4310              	.Ldebug_abbrev0:
 4311 0000 01       		.uleb128 0x1
 4312 0001 11       		.uleb128 0x11
 4313 0002 01       		.byte	0x1
 4314 0003 25       		.uleb128 0x25
 4315 0004 0E       		.uleb128 0xe
 4316 0005 13       		.uleb128 0x13
 4317 0006 0B       		.uleb128 0xb
 4318 0007 03       		.uleb128 0x3
 4319 0008 0E       		.uleb128 0xe
 4320 0009 1B       		.uleb128 0x1b
 4321 000a 0E       		.uleb128 0xe
 4322 000b 55       		.uleb128 0x55
 4323 000c 17       		.uleb128 0x17
 4324 000d 11       		.uleb128 0x11
 4325 000e 01       		.uleb128 0x1
 4326 000f 10       		.uleb128 0x10
 4327 0010 17       		.uleb128 0x17
 4328 0011 00       		.byte	0
 4329 0012 00       		.byte	0
 4330 0013 02       		.uleb128 0x2
 4331 0014 24       		.uleb128 0x24
 4332 0015 00       		.byte	0
 4333 0016 0B       		.uleb128 0xb
 4334 0017 0B       		.uleb128 0xb
 4335 0018 3E       		.uleb128 0x3e
 4336 0019 0B       		.uleb128 0xb
 4337 001a 03       		.uleb128 0x3
 4338 001b 0E       		.uleb128 0xe
 4339 001c 00       		.byte	0
 4340 001d 00       		.byte	0
 4341 001e 03       		.uleb128 0x3
 4342 001f 24       		.uleb128 0x24
 4343 0020 00       		.byte	0
 4344 0021 0B       		.uleb128 0xb
 4345 0022 0B       		.uleb128 0xb
 4346 0023 3E       		.uleb128 0x3e
 4347 0024 0B       		.uleb128 0xb
 4348 0025 03       		.uleb128 0x3
 4349 0026 08       		.uleb128 0x8
 4350 0027 00       		.byte	0
 4351 0028 00       		.byte	0
 4352 0029 04       		.uleb128 0x4
 4353 002a 16       		.uleb128 0x16
 4354 002b 00       		.byte	0
 4355 002c 03       		.uleb128 0x3
 4356 002d 0E       		.uleb128 0xe
 4357 002e 3A       		.uleb128 0x3a
 4358 002f 0B       		.uleb128 0xb
 4359 0030 3B       		.uleb128 0x3b
 4360 0031 05       		.uleb128 0x5
 4361 0032 49       		.uleb128 0x49
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 119


 4362 0033 13       		.uleb128 0x13
 4363 0034 00       		.byte	0
 4364 0035 00       		.byte	0
 4365 0036 05       		.uleb128 0x5
 4366 0037 35       		.uleb128 0x35
 4367 0038 00       		.byte	0
 4368 0039 49       		.uleb128 0x49
 4369 003a 13       		.uleb128 0x13
 4370 003b 00       		.byte	0
 4371 003c 00       		.byte	0
 4372 003d 06       		.uleb128 0x6
 4373 003e 0F       		.uleb128 0xf
 4374 003f 00       		.byte	0
 4375 0040 0B       		.uleb128 0xb
 4376 0041 0B       		.uleb128 0xb
 4377 0042 49       		.uleb128 0x49
 4378 0043 13       		.uleb128 0x13
 4379 0044 00       		.byte	0
 4380 0045 00       		.byte	0
 4381 0046 07       		.uleb128 0x7
 4382 0047 26       		.uleb128 0x26
 4383 0048 00       		.byte	0
 4384 0049 49       		.uleb128 0x49
 4385 004a 13       		.uleb128 0x13
 4386 004b 00       		.byte	0
 4387 004c 00       		.byte	0
 4388 004d 08       		.uleb128 0x8
 4389 004e 2E       		.uleb128 0x2e
 4390 004f 01       		.byte	0x1
 4391 0050 3F       		.uleb128 0x3f
 4392 0051 19       		.uleb128 0x19
 4393 0052 03       		.uleb128 0x3
 4394 0053 0E       		.uleb128 0xe
 4395 0054 3A       		.uleb128 0x3a
 4396 0055 0B       		.uleb128 0xb
 4397 0056 3B       		.uleb128 0x3b
 4398 0057 0B       		.uleb128 0xb
 4399 0058 27       		.uleb128 0x27
 4400 0059 19       		.uleb128 0x19
 4401 005a 11       		.uleb128 0x11
 4402 005b 01       		.uleb128 0x1
 4403 005c 12       		.uleb128 0x12
 4404 005d 06       		.uleb128 0x6
 4405 005e 40       		.uleb128 0x40
 4406 005f 18       		.uleb128 0x18
 4407 0060 9642     		.uleb128 0x2116
 4408 0062 19       		.uleb128 0x19
 4409 0063 01       		.uleb128 0x1
 4410 0064 13       		.uleb128 0x13
 4411 0065 00       		.byte	0
 4412 0066 00       		.byte	0
 4413 0067 09       		.uleb128 0x9
 4414 0068 34       		.uleb128 0x34
 4415 0069 00       		.byte	0
 4416 006a 03       		.uleb128 0x3
 4417 006b 0E       		.uleb128 0xe
 4418 006c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 120


 4419 006d 0B       		.uleb128 0xb
 4420 006e 3B       		.uleb128 0x3b
 4421 006f 0B       		.uleb128 0xb
 4422 0070 49       		.uleb128 0x49
 4423 0071 13       		.uleb128 0x13
 4424 0072 02       		.uleb128 0x2
 4425 0073 18       		.uleb128 0x18
 4426 0074 00       		.byte	0
 4427 0075 00       		.byte	0
 4428 0076 0A       		.uleb128 0xa
 4429 0077 34       		.uleb128 0x34
 4430 0078 00       		.byte	0
 4431 0079 03       		.uleb128 0x3
 4432 007a 0E       		.uleb128 0xe
 4433 007b 3A       		.uleb128 0x3a
 4434 007c 0B       		.uleb128 0xb
 4435 007d 3B       		.uleb128 0x3b
 4436 007e 05       		.uleb128 0x5
 4437 007f 49       		.uleb128 0x49
 4438 0080 13       		.uleb128 0x13
 4439 0081 02       		.uleb128 0x2
 4440 0082 18       		.uleb128 0x18
 4441 0083 00       		.byte	0
 4442 0084 00       		.byte	0
 4443 0085 0B       		.uleb128 0xb
 4444 0086 2E       		.uleb128 0x2e
 4445 0087 01       		.byte	0x1
 4446 0088 3F       		.uleb128 0x3f
 4447 0089 19       		.uleb128 0x19
 4448 008a 03       		.uleb128 0x3
 4449 008b 0E       		.uleb128 0xe
 4450 008c 3A       		.uleb128 0x3a
 4451 008d 0B       		.uleb128 0xb
 4452 008e 3B       		.uleb128 0x3b
 4453 008f 05       		.uleb128 0x5
 4454 0090 27       		.uleb128 0x27
 4455 0091 19       		.uleb128 0x19
 4456 0092 11       		.uleb128 0x11
 4457 0093 01       		.uleb128 0x1
 4458 0094 12       		.uleb128 0x12
 4459 0095 06       		.uleb128 0x6
 4460 0096 40       		.uleb128 0x40
 4461 0097 18       		.uleb128 0x18
 4462 0098 9642     		.uleb128 0x2116
 4463 009a 19       		.uleb128 0x19
 4464 009b 01       		.uleb128 0x1
 4465 009c 13       		.uleb128 0x13
 4466 009d 00       		.byte	0
 4467 009e 00       		.byte	0
 4468 009f 0C       		.uleb128 0xc
 4469 00a0 2E       		.uleb128 0x2e
 4470 00a1 00       		.byte	0
 4471 00a2 3F       		.uleb128 0x3f
 4472 00a3 19       		.uleb128 0x19
 4473 00a4 03       		.uleb128 0x3
 4474 00a5 0E       		.uleb128 0xe
 4475 00a6 3A       		.uleb128 0x3a
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 121


 4476 00a7 0B       		.uleb128 0xb
 4477 00a8 3B       		.uleb128 0x3b
 4478 00a9 05       		.uleb128 0x5
 4479 00aa 27       		.uleb128 0x27
 4480 00ab 19       		.uleb128 0x19
 4481 00ac 11       		.uleb128 0x11
 4482 00ad 01       		.uleb128 0x1
 4483 00ae 12       		.uleb128 0x12
 4484 00af 06       		.uleb128 0x6
 4485 00b0 40       		.uleb128 0x40
 4486 00b1 18       		.uleb128 0x18
 4487 00b2 9642     		.uleb128 0x2116
 4488 00b4 19       		.uleb128 0x19
 4489 00b5 00       		.byte	0
 4490 00b6 00       		.byte	0
 4491 00b7 0D       		.uleb128 0xd
 4492 00b8 2E       		.uleb128 0x2e
 4493 00b9 01       		.byte	0x1
 4494 00ba 3F       		.uleb128 0x3f
 4495 00bb 19       		.uleb128 0x19
 4496 00bc 03       		.uleb128 0x3
 4497 00bd 0E       		.uleb128 0xe
 4498 00be 3A       		.uleb128 0x3a
 4499 00bf 0B       		.uleb128 0xb
 4500 00c0 3B       		.uleb128 0x3b
 4501 00c1 05       		.uleb128 0x5
 4502 00c2 27       		.uleb128 0x27
 4503 00c3 19       		.uleb128 0x19
 4504 00c4 49       		.uleb128 0x49
 4505 00c5 13       		.uleb128 0x13
 4506 00c6 11       		.uleb128 0x11
 4507 00c7 01       		.uleb128 0x1
 4508 00c8 12       		.uleb128 0x12
 4509 00c9 06       		.uleb128 0x6
 4510 00ca 40       		.uleb128 0x40
 4511 00cb 18       		.uleb128 0x18
 4512 00cc 9642     		.uleb128 0x2116
 4513 00ce 19       		.uleb128 0x19
 4514 00cf 01       		.uleb128 0x1
 4515 00d0 13       		.uleb128 0x13
 4516 00d1 00       		.byte	0
 4517 00d2 00       		.byte	0
 4518 00d3 0E       		.uleb128 0xe
 4519 00d4 05       		.uleb128 0x5
 4520 00d5 00       		.byte	0
 4521 00d6 03       		.uleb128 0x3
 4522 00d7 0E       		.uleb128 0xe
 4523 00d8 3A       		.uleb128 0x3a
 4524 00d9 0B       		.uleb128 0xb
 4525 00da 3B       		.uleb128 0x3b
 4526 00db 05       		.uleb128 0x5
 4527 00dc 49       		.uleb128 0x49
 4528 00dd 13       		.uleb128 0x13
 4529 00de 02       		.uleb128 0x2
 4530 00df 18       		.uleb128 0x18
 4531 00e0 00       		.byte	0
 4532 00e1 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 122


 4533 00e2 0F       		.uleb128 0xf
 4534 00e3 2E       		.uleb128 0x2e
 4535 00e4 00       		.byte	0
 4536 00e5 3F       		.uleb128 0x3f
 4537 00e6 19       		.uleb128 0x19
 4538 00e7 03       		.uleb128 0x3
 4539 00e8 0E       		.uleb128 0xe
 4540 00e9 3A       		.uleb128 0x3a
 4541 00ea 0B       		.uleb128 0xb
 4542 00eb 3B       		.uleb128 0x3b
 4543 00ec 05       		.uleb128 0x5
 4544 00ed 27       		.uleb128 0x27
 4545 00ee 19       		.uleb128 0x19
 4546 00ef 49       		.uleb128 0x49
 4547 00f0 13       		.uleb128 0x13
 4548 00f1 11       		.uleb128 0x11
 4549 00f2 01       		.uleb128 0x1
 4550 00f3 12       		.uleb128 0x12
 4551 00f4 06       		.uleb128 0x6
 4552 00f5 40       		.uleb128 0x40
 4553 00f6 18       		.uleb128 0x18
 4554 00f7 9742     		.uleb128 0x2117
 4555 00f9 19       		.uleb128 0x19
 4556 00fa 00       		.byte	0
 4557 00fb 00       		.byte	0
 4558 00fc 10       		.uleb128 0x10
 4559 00fd 2E       		.uleb128 0x2e
 4560 00fe 01       		.byte	0x1
 4561 00ff 3F       		.uleb128 0x3f
 4562 0100 19       		.uleb128 0x19
 4563 0101 03       		.uleb128 0x3
 4564 0102 0E       		.uleb128 0xe
 4565 0103 3A       		.uleb128 0x3a
 4566 0104 0B       		.uleb128 0xb
 4567 0105 3B       		.uleb128 0x3b
 4568 0106 05       		.uleb128 0x5
 4569 0107 27       		.uleb128 0x27
 4570 0108 19       		.uleb128 0x19
 4571 0109 49       		.uleb128 0x49
 4572 010a 13       		.uleb128 0x13
 4573 010b 11       		.uleb128 0x11
 4574 010c 01       		.uleb128 0x1
 4575 010d 12       		.uleb128 0x12
 4576 010e 06       		.uleb128 0x6
 4577 010f 40       		.uleb128 0x40
 4578 0110 18       		.uleb128 0x18
 4579 0111 9742     		.uleb128 0x2117
 4580 0113 19       		.uleb128 0x19
 4581 0114 01       		.uleb128 0x1
 4582 0115 13       		.uleb128 0x13
 4583 0116 00       		.byte	0
 4584 0117 00       		.byte	0
 4585 0118 11       		.uleb128 0x11
 4586 0119 2E       		.uleb128 0x2e
 4587 011a 01       		.byte	0x1
 4588 011b 3F       		.uleb128 0x3f
 4589 011c 19       		.uleb128 0x19
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 123


 4590 011d 03       		.uleb128 0x3
 4591 011e 0E       		.uleb128 0xe
 4592 011f 3A       		.uleb128 0x3a
 4593 0120 0B       		.uleb128 0xb
 4594 0121 3B       		.uleb128 0x3b
 4595 0122 05       		.uleb128 0x5
 4596 0123 27       		.uleb128 0x27
 4597 0124 19       		.uleb128 0x19
 4598 0125 11       		.uleb128 0x11
 4599 0126 01       		.uleb128 0x1
 4600 0127 12       		.uleb128 0x12
 4601 0128 06       		.uleb128 0x6
 4602 0129 40       		.uleb128 0x40
 4603 012a 18       		.uleb128 0x18
 4604 012b 9742     		.uleb128 0x2117
 4605 012d 19       		.uleb128 0x19
 4606 012e 01       		.uleb128 0x1
 4607 012f 13       		.uleb128 0x13
 4608 0130 00       		.byte	0
 4609 0131 00       		.byte	0
 4610 0132 12       		.uleb128 0x12
 4611 0133 34       		.uleb128 0x34
 4612 0134 00       		.byte	0
 4613 0135 03       		.uleb128 0x3
 4614 0136 0E       		.uleb128 0xe
 4615 0137 3A       		.uleb128 0x3a
 4616 0138 0B       		.uleb128 0xb
 4617 0139 3B       		.uleb128 0x3b
 4618 013a 0B       		.uleb128 0xb
 4619 013b 49       		.uleb128 0x49
 4620 013c 13       		.uleb128 0x13
 4621 013d 3F       		.uleb128 0x3f
 4622 013e 19       		.uleb128 0x19
 4623 013f 02       		.uleb128 0x2
 4624 0140 18       		.uleb128 0x18
 4625 0141 00       		.byte	0
 4626 0142 00       		.byte	0
 4627 0143 13       		.uleb128 0x13
 4628 0144 01       		.uleb128 0x1
 4629 0145 01       		.byte	0x1
 4630 0146 49       		.uleb128 0x49
 4631 0147 13       		.uleb128 0x13
 4632 0148 01       		.uleb128 0x1
 4633 0149 13       		.uleb128 0x13
 4634 014a 00       		.byte	0
 4635 014b 00       		.byte	0
 4636 014c 14       		.uleb128 0x14
 4637 014d 21       		.uleb128 0x21
 4638 014e 00       		.byte	0
 4639 014f 49       		.uleb128 0x49
 4640 0150 13       		.uleb128 0x13
 4641 0151 2F       		.uleb128 0x2f
 4642 0152 0B       		.uleb128 0xb
 4643 0153 00       		.byte	0
 4644 0154 00       		.byte	0
 4645 0155 15       		.uleb128 0x15
 4646 0156 34       		.uleb128 0x34
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 124


 4647 0157 00       		.byte	0
 4648 0158 03       		.uleb128 0x3
 4649 0159 0E       		.uleb128 0xe
 4650 015a 3A       		.uleb128 0x3a
 4651 015b 0B       		.uleb128 0xb
 4652 015c 3B       		.uleb128 0x3b
 4653 015d 05       		.uleb128 0x5
 4654 015e 49       		.uleb128 0x49
 4655 015f 13       		.uleb128 0x13
 4656 0160 3F       		.uleb128 0x3f
 4657 0161 19       		.uleb128 0x19
 4658 0162 3C       		.uleb128 0x3c
 4659 0163 19       		.uleb128 0x19
 4660 0164 00       		.byte	0
 4661 0165 00       		.byte	0
 4662 0166 00       		.byte	0
 4663              		.section	.debug_aranges,"",%progbits
 4664 0000 54010000 		.4byte	0x154
 4665 0004 0200     		.2byte	0x2
 4666 0006 00000000 		.4byte	.Ldebug_info0
 4667 000a 04       		.byte	0x4
 4668 000b 00       		.byte	0
 4669 000c 0000     		.2byte	0
 4670 000e 0000     		.2byte	0
 4671 0010 00000000 		.4byte	.LFB34
 4672 0014 36000000 		.4byte	.LFE34-.LFB34
 4673 0018 00000000 		.4byte	.LFB35
 4674 001c C0000000 		.4byte	.LFE35-.LFB35
 4675 0020 00000000 		.4byte	.LFB36
 4676 0024 50000000 		.4byte	.LFE36-.LFB36
 4677 0028 00000000 		.4byte	.LFB37
 4678 002c 44000000 		.4byte	.LFE37-.LFB37
 4679 0030 00000000 		.4byte	.LFB38
 4680 0034 38000000 		.4byte	.LFE38-.LFB38
 4681 0038 00000000 		.4byte	.LFB39
 4682 003c 48000000 		.4byte	.LFE39-.LFB39
 4683 0040 00000000 		.4byte	.LFB40
 4684 0044 34000000 		.4byte	.LFE40-.LFB40
 4685 0048 00000000 		.4byte	.LFB41
 4686 004c E0000000 		.4byte	.LFE41-.LFB41
 4687 0050 00000000 		.4byte	.LFB42
 4688 0054 58000000 		.4byte	.LFE42-.LFB42
 4689 0058 00000000 		.4byte	.LFB43
 4690 005c 1C000000 		.4byte	.LFE43-.LFB43
 4691 0060 00000000 		.4byte	.LFB44
 4692 0064 1C000000 		.4byte	.LFE44-.LFB44
 4693 0068 00000000 		.4byte	.LFB45
 4694 006c 24000000 		.4byte	.LFE45-.LFB45
 4695 0070 00000000 		.4byte	.LFB46
 4696 0074 20000000 		.4byte	.LFE46-.LFB46
 4697 0078 00000000 		.4byte	.LFB47
 4698 007c 1C000000 		.4byte	.LFE47-.LFB47
 4699 0080 00000000 		.4byte	.LFB48
 4700 0084 26000000 		.4byte	.LFE48-.LFB48
 4701 0088 00000000 		.4byte	.LFB49
 4702 008c C8000000 		.4byte	.LFE49-.LFB49
 4703 0090 00000000 		.4byte	.LFB50
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 125


 4704 0094 18010000 		.4byte	.LFE50-.LFB50
 4705 0098 00000000 		.4byte	.LFB51
 4706 009c 6C000000 		.4byte	.LFE51-.LFB51
 4707 00a0 00000000 		.4byte	.LFB52
 4708 00a4 38000000 		.4byte	.LFE52-.LFB52
 4709 00a8 00000000 		.4byte	.LFB53
 4710 00ac 58000000 		.4byte	.LFE53-.LFB53
 4711 00b0 00000000 		.4byte	.LFB54
 4712 00b4 38010000 		.4byte	.LFE54-.LFB54
 4713 00b8 00000000 		.4byte	.LFB55
 4714 00bc 74000000 		.4byte	.LFE55-.LFB55
 4715 00c0 00000000 		.4byte	.LFB56
 4716 00c4 78000000 		.4byte	.LFE56-.LFB56
 4717 00c8 00000000 		.4byte	.LFB57
 4718 00cc 30000000 		.4byte	.LFE57-.LFB57
 4719 00d0 00000000 		.4byte	.LFB58
 4720 00d4 2C000000 		.4byte	.LFE58-.LFB58
 4721 00d8 00000000 		.4byte	.LFB59
 4722 00dc 44000000 		.4byte	.LFE59-.LFB59
 4723 00e0 00000000 		.4byte	.LFB60
 4724 00e4 68000000 		.4byte	.LFE60-.LFB60
 4725 00e8 00000000 		.4byte	.LFB61
 4726 00ec 1C000000 		.4byte	.LFE61-.LFB61
 4727 00f0 00000000 		.4byte	.LFB62
 4728 00f4 24000000 		.4byte	.LFE62-.LFB62
 4729 00f8 00000000 		.4byte	.LFB63
 4730 00fc 1C000000 		.4byte	.LFE63-.LFB63
 4731 0100 00000000 		.4byte	.LFB64
 4732 0104 24000000 		.4byte	.LFE64-.LFB64
 4733 0108 00000000 		.4byte	.LFB65
 4734 010c 1C000000 		.4byte	.LFE65-.LFB65
 4735 0110 00000000 		.4byte	.LFB66
 4736 0114 24000000 		.4byte	.LFE66-.LFB66
 4737 0118 00000000 		.4byte	.LFB67
 4738 011c 1C000000 		.4byte	.LFE67-.LFB67
 4739 0120 00000000 		.4byte	.LFB68
 4740 0124 24000000 		.4byte	.LFE68-.LFB68
 4741 0128 00000000 		.4byte	.LFB69
 4742 012c 20000000 		.4byte	.LFE69-.LFB69
 4743 0130 00000000 		.4byte	.LFB70
 4744 0134 3C000000 		.4byte	.LFE70-.LFB70
 4745 0138 00000000 		.4byte	.LFB71
 4746 013c 50000000 		.4byte	.LFE71-.LFB71
 4747 0140 00000000 		.4byte	.LFB72
 4748 0144 24000000 		.4byte	.LFE72-.LFB72
 4749 0148 00000000 		.4byte	.LFB73
 4750 014c 9C000000 		.4byte	.LFE73-.LFB73
 4751 0150 00000000 		.4byte	0
 4752 0154 00000000 		.4byte	0
 4753              		.section	.debug_ranges,"",%progbits
 4754              	.Ldebug_ranges0:
 4755 0000 00000000 		.4byte	.LFB34
 4756 0004 36000000 		.4byte	.LFE34
 4757 0008 00000000 		.4byte	.LFB35
 4758 000c C0000000 		.4byte	.LFE35
 4759 0010 00000000 		.4byte	.LFB36
 4760 0014 50000000 		.4byte	.LFE36
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 126


 4761 0018 00000000 		.4byte	.LFB37
 4762 001c 44000000 		.4byte	.LFE37
 4763 0020 00000000 		.4byte	.LFB38
 4764 0024 38000000 		.4byte	.LFE38
 4765 0028 00000000 		.4byte	.LFB39
 4766 002c 48000000 		.4byte	.LFE39
 4767 0030 00000000 		.4byte	.LFB40
 4768 0034 34000000 		.4byte	.LFE40
 4769 0038 00000000 		.4byte	.LFB41
 4770 003c E0000000 		.4byte	.LFE41
 4771 0040 00000000 		.4byte	.LFB42
 4772 0044 58000000 		.4byte	.LFE42
 4773 0048 00000000 		.4byte	.LFB43
 4774 004c 1C000000 		.4byte	.LFE43
 4775 0050 00000000 		.4byte	.LFB44
 4776 0054 1C000000 		.4byte	.LFE44
 4777 0058 00000000 		.4byte	.LFB45
 4778 005c 24000000 		.4byte	.LFE45
 4779 0060 00000000 		.4byte	.LFB46
 4780 0064 20000000 		.4byte	.LFE46
 4781 0068 00000000 		.4byte	.LFB47
 4782 006c 1C000000 		.4byte	.LFE47
 4783 0070 00000000 		.4byte	.LFB48
 4784 0074 26000000 		.4byte	.LFE48
 4785 0078 00000000 		.4byte	.LFB49
 4786 007c C8000000 		.4byte	.LFE49
 4787 0080 00000000 		.4byte	.LFB50
 4788 0084 18010000 		.4byte	.LFE50
 4789 0088 00000000 		.4byte	.LFB51
 4790 008c 6C000000 		.4byte	.LFE51
 4791 0090 00000000 		.4byte	.LFB52
 4792 0094 38000000 		.4byte	.LFE52
 4793 0098 00000000 		.4byte	.LFB53
 4794 009c 58000000 		.4byte	.LFE53
 4795 00a0 00000000 		.4byte	.LFB54
 4796 00a4 38010000 		.4byte	.LFE54
 4797 00a8 00000000 		.4byte	.LFB55
 4798 00ac 74000000 		.4byte	.LFE55
 4799 00b0 00000000 		.4byte	.LFB56
 4800 00b4 78000000 		.4byte	.LFE56
 4801 00b8 00000000 		.4byte	.LFB57
 4802 00bc 30000000 		.4byte	.LFE57
 4803 00c0 00000000 		.4byte	.LFB58
 4804 00c4 2C000000 		.4byte	.LFE58
 4805 00c8 00000000 		.4byte	.LFB59
 4806 00cc 44000000 		.4byte	.LFE59
 4807 00d0 00000000 		.4byte	.LFB60
 4808 00d4 68000000 		.4byte	.LFE60
 4809 00d8 00000000 		.4byte	.LFB61
 4810 00dc 1C000000 		.4byte	.LFE61
 4811 00e0 00000000 		.4byte	.LFB62
 4812 00e4 24000000 		.4byte	.LFE62
 4813 00e8 00000000 		.4byte	.LFB63
 4814 00ec 1C000000 		.4byte	.LFE63
 4815 00f0 00000000 		.4byte	.LFB64
 4816 00f4 24000000 		.4byte	.LFE64
 4817 00f8 00000000 		.4byte	.LFB65
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 127


 4818 00fc 1C000000 		.4byte	.LFE65
 4819 0100 00000000 		.4byte	.LFB66
 4820 0104 24000000 		.4byte	.LFE66
 4821 0108 00000000 		.4byte	.LFB67
 4822 010c 1C000000 		.4byte	.LFE67
 4823 0110 00000000 		.4byte	.LFB68
 4824 0114 24000000 		.4byte	.LFE68
 4825 0118 00000000 		.4byte	.LFB69
 4826 011c 20000000 		.4byte	.LFE69
 4827 0120 00000000 		.4byte	.LFB70
 4828 0124 3C000000 		.4byte	.LFE70
 4829 0128 00000000 		.4byte	.LFB71
 4830 012c 50000000 		.4byte	.LFE71
 4831 0130 00000000 		.4byte	.LFB72
 4832 0134 24000000 		.4byte	.LFE72
 4833 0138 00000000 		.4byte	.LFB73
 4834 013c 9C000000 		.4byte	.LFE73
 4835 0140 00000000 		.4byte	0
 4836 0144 00000000 		.4byte	0
 4837              		.section	.debug_line,"",%progbits
 4838              	.Ldebug_line0:
 4839 0000 D4040000 		.section	.debug_str,"MS",%progbits,1
 4839      02006200 
 4839      00000201 
 4839      FB0E0D00 
 4839      01010101 
 4840              	.LASF75:
 4841 0000 43617053 		.ascii	"CapSense_CSD_SetSenseClkDivider\000"
 4841      656E7365 
 4841      5F435344 
 4841      5F536574 
 4841      53656E73 
 4842              	.LASF115:
 4843 0020 43617053 		.ascii	"CapSense_CSD_prtCfgTbl\000"
 4843      656E7365 
 4843      5F435344 
 4843      5F707274 
 4843      43666754 
 4844              	.LASF110:
 4845 0037 43617053 		.ascii	"CapSense_CSD_widgetResolution\000"
 4845      656E7365 
 4845      5F435344 
 4845      5F776964 
 4845      67657452 
 4846              	.LASF56:
 4847 0055 43617053 		.ascii	"CapSense_CSD_RestoreDriveModeAllPins\000"
 4847      656E7365 
 4847      5F435344 
 4847      5F526573 
 4847      746F7265 
 4848              	.LASF108:
 4849 007a 43617053 		.ascii	"CapSense_CSD_modulationIDAC\000"
 4849      656E7365 
 4849      5F435344 
 4849      5F6D6F64 
 4849      756C6174 
 4850              	.LASF8:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 128


 4851 0096 756E7369 		.ascii	"unsigned int\000"
 4851      676E6564 
 4851      20696E74 
 4851      00
 4852              	.LASF126:
 4853 00a3 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\Daten\\Prog"
 4853      73657273 
 4853      5C4C756B 
 4853      61732043 
 4853      72657574 
 4854 00d1 72616D6D 		.ascii	"rammierprojekte\\GitHub\\freeDSPPSoC-I2C\\CapSense."
 4854      69657270 
 4854      726F6A65 
 4854      6B74655C 
 4854      47697448 
 4855 0101 63796473 		.ascii	"cydsn\000"
 4855      6E00
 4856              	.LASF111:
 4857 0107 43617053 		.ascii	"CapSense_CSD_senseClkDividerVal\000"
 4857      656E7365 
 4857      5F435344 
 4857      5F73656E 
 4857      7365436C 
 4858              	.LASF35:
 4859 0127 43617053 		.ascii	"CapSense_CSD_FindNextSensor\000"
 4859      656E7365 
 4859      5F435344 
 4859      5F46696E 
 4859      644E6578 
 4860              	.LASF73:
 4861 0143 43617053 		.ascii	"CapSense_CSD_SetBitValue\000"
 4861      656E7365 
 4861      5F435344 
 4861      5F536574 
 4861      42697456 
 4862              	.LASF89:
 4863 015c 43617053 		.ascii	"CapSense_CSD_GetSensorRaw\000"
 4863      656E7365 
 4863      5F435344 
 4863      5F476574 
 4863      53656E73 
 4864              	.LASF46:
 4865 0176 696E7465 		.ascii	"interruptState\000"
 4865      72727570 
 4865      74537461 
 4865      746500
 4866              	.LASF15:
 4867 0185 72656738 		.ascii	"reg8\000"
 4867      00
 4868              	.LASF94:
 4869 018a 77696467 		.ascii	"widgetsNum\000"
 4869      6574734E 
 4869      756D00
 4870              	.LASF113:
 4871 0195 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 4871      656E7365 
 4871      5F435344 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 129


 4871      5F776964 
 4871      6765744E 
 4872              	.LASF45:
 4873 01af 70696E48 		.ascii	"pinHSIOMShift\000"
 4873      53494F4D 
 4873      53686966 
 4873      7400
 4874              	.LASF112:
 4875 01bd 43617053 		.ascii	"CapSense_CSD_sampleClkDividerVal\000"
 4875      656E7365 
 4875      5F435344 
 4875      5F73616D 
 4875      706C6543 
 4876              	.LASF92:
 4877 01de 43617053 		.ascii	"CapSense_CSD_SetUnscannedSensorState\000"
 4877      656E7365 
 4877      5F435344 
 4877      5F536574 
 4877      556E7363 
 4878              	.LASF91:
 4879 0203 61766756 		.ascii	"avgVal\000"
 4879      616C00
 4880              	.LASF44:
 4881 020a 70696E4D 		.ascii	"pinModeShift\000"
 4881      6F646553 
 4881      68696674 
 4881      00
 4882              	.LASF104:
 4883 0217 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 4883      656E7365 
 4883      5F435344 
 4883      5F73656E 
 4883      736F7252 
 4884              	.LASF50:
 4885 022e 696E6163 		.ascii	"inactiveConnect\000"
 4885      74697665 
 4885      436F6E6E 
 4885      65637400 
 4886              	.LASF87:
 4887 023e 43617053 		.ascii	"CapSense_CSD_SetIDACRange\000"
 4887      656E7365 
 4887      5F435344 
 4887      5F536574 
 4887      49444143 
 4888              	.LASF68:
 4889 0258 43617053 		.ascii	"CapSense_CSD_GetBitValue\000"
 4889      656E7365 
 4889      5F435344 
 4889      5F476574 
 4889      42697456 
 4890              	.LASF12:
 4891 0271 666C6F61 		.ascii	"float\000"
 4891      7400
 4892              	.LASF33:
 4893 0277 43617053 		.ascii	"CapSense_CSD_Stop\000"
 4893      656E7365 
 4893      5F435344 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 130


 4893      5F53746F 
 4893      7000
 4894              	.LASF7:
 4895 0289 6C6F6E67 		.ascii	"long long unsigned int\000"
 4895      206C6F6E 
 4895      6720756E 
 4895      7369676E 
 4895      65642069 
 4896              	.LASF30:
 4897 02a0 77696467 		.ascii	"widget\000"
 4897      657400
 4898              	.LASF74:
 4899 02a7 43617053 		.ascii	"CapSense_CSD_GetSenseClkDivider\000"
 4899      656E7365 
 4899      5F435344 
 4899      5F476574 
 4899      53656E73 
 4900              	.LASF38:
 4901 02c7 76616C75 		.ascii	"value\000"
 4901      6500
 4902              	.LASF63:
 4903 02cd 43617053 		.ascii	"CapSense_CSD_EnableShieldElectrode\000"
 4903      656E7365 
 4903      5F435344 
 4903      5F456E61 
 4903      626C6553 
 4904              	.LASF47:
 4905 02f0 6E657752 		.ascii	"newRegisterValue\000"
 4905      65676973 
 4905      74657256 
 4905      616C7565 
 4905      00
 4906              	.LASF39:
 4907 0301 43617053 		.ascii	"CapSense_CSD_SetScanResolution\000"
 4907      656E7365 
 4907      5F435344 
 4907      5F536574 
 4907      5363616E 
 4908              	.LASF51:
 4909 0320 73656E73 		.ascii	"sensorState\000"
 4909      6F725374 
 4909      61746500 
 4910              	.LASF71:
 4911 032c 6F666673 		.ascii	"offset\000"
 4911      657400
 4912              	.LASF36:
 4913 0333 43617053 		.ascii	"CapSense_CSD_ReadSensorRaw\000"
 4913      656E7365 
 4913      5F435344 
 4913      5F526561 
 4913      6453656E 
 4914              	.LASF54:
 4915 034e 7072744E 		.ascii	"prtNumberTmp\000"
 4915      756D6265 
 4915      72546D70 
 4915      00
 4916              	.LASF31:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 131


 4917 035b 73656E73 		.ascii	"sensorsPerWidget\000"
 4917      6F727350 
 4917      65725769 
 4917      64676574 
 4917      00
 4918              	.LASF41:
 4919 036c 43617053 		.ascii	"CapSense_CSD_GetScanResolution\000"
 4919      656E7365 
 4919      5F435344 
 4919      5F476574 
 4919      5363616E 
 4920              	.LASF34:
 4921 038b 43617053 		.ascii	"CapSense_CSD_ScanEnabledWidgets\000"
 4921      656E7365 
 4921      5F435344 
 4921      5F536361 
 4921      6E456E61 
 4922              	.LASF90:
 4923 03ab 63757253 		.ascii	"curSample\000"
 4923      616D706C 
 4923      6500
 4924              	.LASF84:
 4925 03b5 43617053 		.ascii	"CapSense_CSD_SetCompensationIDAC\000"
 4925      656E7365 
 4925      5F435344 
 4925      5F536574 
 4925      436F6D70 
 4926              	.LASF28:
 4927 03d6 73656E73 		.ascii	"sensor\000"
 4927      6F7200
 4928              	.LASF119:
 4929 03dd 43617053 		.ascii	"CapSense_CSD_maskTable\000"
 4929      656E7365 
 4929      5F435344 
 4929      5F6D6173 
 4929      6B546162 
 4930              	.LASF122:
 4931 03f4 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 4931      656E7365 
 4931      5F435344 
 4931      5F6E756D 
 4931      6265724F 
 4932              	.LASF14:
 4933 0411 63686172 		.ascii	"char\000"
 4933      00
 4934              	.LASF67:
 4935 0416 43617053 		.ascii	"CapSense_CSD_ReadCurrentScanningSensor\000"
 4935      656E7365 
 4935      5F435344 
 4935      5F526561 
 4935      64437572 
 4936              	.LASF69:
 4937 043d 7461626C 		.ascii	"table\000"
 4937      6500
 4938              	.LASF10:
 4939 0443 75696E74 		.ascii	"uint16\000"
 4939      313600
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 132


 4940              	.LASF40:
 4941 044a 7265736F 		.ascii	"resolution\000"
 4941      6C757469 
 4941      6F6E00
 4942              	.LASF55:
 4943 0455 70696E4E 		.ascii	"pinNumberTmp\000"
 4943      756D6265 
 4943      72546D70 
 4943      00
 4944              	.LASF6:
 4945 0462 6C6F6E67 		.ascii	"long long int\000"
 4945      206C6F6E 
 4945      6720696E 
 4945      7400
 4946              	.LASF118:
 4947 0470 43617053 		.ascii	"CapSense_CSD_portTable\000"
 4947      656E7365 
 4947      5F435344 
 4947      5F706F72 
 4947      74546162 
 4948              	.LASF25:
 4949 0487 656E6162 		.ascii	"enableFlag\000"
 4949      6C65466C 
 4949      616700
 4950              	.LASF62:
 4951 0492 43617053 		.ascii	"CapSense_CSD_PostScan\000"
 4951      656E7365 
 4951      5F435344 
 4951      5F506F73 
 4951      74536361 
 4952              	.LASF96:
 4953 04a8 63757272 		.ascii	"currentWidget\000"
 4953      656E7457 
 4953      69646765 
 4953      7400
 4954              	.LASF105:
 4955 04b6 43617053 		.ascii	"CapSense_CSD_unscannedSnsDriveMode\000"
 4955      656E7365 
 4955      5F435344 
 4955      5F756E73 
 4955      63616E6E 
 4956              	.LASF124:
 4957 04d9 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4957      4320342E 
 4957      392E3320 
 4957      32303135 
 4957      30333033 
 4958 050c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 4958      20726576 
 4958      6973696F 
 4958      6E203232 
 4958      31323230 
 4959 053f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4959      66756E63 
 4959      74696F6E 
 4959      2D736563 
 4959      74696F6E 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 133


 4960              	.LASF23:
 4961 0567 43617053 		.ascii	"CapSense_CSD_Start\000"
 4961      656E7365 
 4961      5F435344 
 4961      5F537461 
 4961      727400
 4962              	.LASF11:
 4963 057a 75696E74 		.ascii	"uint32\000"
 4963      333200
 4964              	.LASF100:
 4965 0581 43617053 		.ascii	"CapSense_CSD_scanSpeedTbl\000"
 4965      656E7365 
 4965      5F435344 
 4965      5F736361 
 4965      6E537065 
 4966              	.LASF103:
 4967 059b 43617053 		.ascii	"CapSense_CSD_sensorIndex\000"
 4967      656E7365 
 4967      5F435344 
 4967      5F73656E 
 4967      736F7249 
 4968              	.LASF102:
 4969 05b4 43617053 		.ascii	"CapSense_CSD_csdStatusVar\000"
 4969      656E7365 
 4969      5F435344 
 4969      5F637364 
 4969      53746174 
 4970              	.LASF58:
 4971 05ce 70696E4E 		.ascii	"pinNumber\000"
 4971      756D6265 
 4971      7200
 4972              	.LASF27:
 4973 05d8 736E7349 		.ascii	"snsIndex\000"
 4973      6E646578 
 4973      00
 4974              	.LASF29:
 4975 05e1 43617053 		.ascii	"CapSense_CSD_ScanWidget\000"
 4975      656E7365 
 4975      5F435344 
 4975      5F536361 
 4975      6E576964 
 4976              	.LASF32:
 4977 05f9 6C617374 		.ascii	"lastSensor\000"
 4977      53656E73 
 4977      6F7200
 4978              	.LASF16:
 4979 0604 72656733 		.ascii	"reg32\000"
 4979      3200
 4980              	.LASF59:
 4981 060a 706F7274 		.ascii	"portNumber\000"
 4981      4E756D62 
 4981      657200
 4982              	.LASF98:
 4983 0615 6D617850 		.ascii	"maxPerWidget\000"
 4983      65725769 
 4983      64676574 
 4983      00
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 134


 4984              	.LASF107:
 4985 0622 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 4985      656E7365 
 4985      5F435344 
 4985      5F73656E 
 4985      736F7245 
 4986              	.LASF76:
 4987 0640 73656E73 		.ascii	"senseClk\000"
 4987      65436C6B 
 4987      00
 4988              	.LASF49:
 4989 0649 43617053 		.ascii	"CapSense_CSD_DisableSensor\000"
 4989      656E7365 
 4989      5F435344 
 4989      5F446973 
 4989      61626C65 
 4990              	.LASF2:
 4991 0664 73686F72 		.ascii	"short int\000"
 4991      7420696E 
 4991      7400
 4992              	.LASF109:
 4993 066e 43617053 		.ascii	"CapSense_CSD_compensationIDAC\000"
 4993      656E7365 
 4993      5F435344 
 4993      5F636F6D 
 4993      70656E73 
 4994              	.LASF4:
 4995 068c 6C6F6E67 		.ascii	"long int\000"
 4995      20696E74 
 4995      00
 4996              	.LASF18:
 4997 0695 43617053 		.ascii	"CapSense_CSD_Init\000"
 4997      656E7365 
 4997      5F435344 
 4997      5F496E69 
 4997      7400
 4998              	.LASF123:
 4999 06a7 43617053 		.ascii	"CapSense_CSD_csdTrim1\000"
 4999      656E7365 
 4999      5F435344 
 4999      5F637364 
 4999      5472696D 
 5000              	.LASF65:
 5001 06bd 64656C61 		.ascii	"delay\000"
 5001      7900
 5002              	.LASF125:
 5003 06c3 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSD.c\000"
 5003      6E657261 
 5003      7465645F 
 5003      536F7572 
 5003      63655C50 
 5004              	.LASF93:
 5005 06eb 43617053 		.ascii	"CapSense_CSD_NormalizeWidgets\000"
 5005      656E7365 
 5005      5F435344 
 5005      5F4E6F72 
 5005      6D616C69 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 135


 5006              	.LASF116:
 5007 0709 43617053 		.ascii	"CapSense_CSD_prtDRTbl\000"
 5007      656E7365 
 5007      5F435344 
 5007      5F707274 
 5007      44525462 
 5008              	.LASF57:
 5009 071f 43617053 		.ascii	"CapSense_CSD_SetPinDriveMode\000"
 5009      656E7365 
 5009      5F435344 
 5009      5F536574 
 5009      50696E44 
 5010              	.LASF24:
 5011 073c 43617053 		.ascii	"CapSense_CSD_initVar\000"
 5011      656E7365 
 5011      5F435344 
 5011      5F696E69 
 5011      74566172 
 5012              	.LASF101:
 5013 0751 43617053 		.ascii	"CapSense_CSD_prescalersTuningDone\000"
 5013      656E7365 
 5013      5F435344 
 5013      5F707265 
 5013      7363616C 
 5014              	.LASF78:
 5015 0773 43617053 		.ascii	"CapSense_CSD_SetModulatorClkDivider\000"
 5015      656E7365 
 5015      5F435344 
 5015      5F536574 
 5015      4D6F6475 
 5016              	.LASF88:
 5017 0797 69446163 		.ascii	"iDacRange\000"
 5017      52616E67 
 5017      6500
 5018              	.LASF26:
 5019 07a1 43617053 		.ascii	"CapSense_CSD_ScanSensor\000"
 5019      656E7365 
 5019      5F435344 
 5019      5F536361 
 5019      6E53656E 
 5020              	.LASF42:
 5021 07b9 43617053 		.ascii	"CapSense_CSD_ClearSensors\000"
 5021      656E7365 
 5021      5F435344 
 5021      5F436C65 
 5021      61725365 
 5022              	.LASF97:
 5023 07d3 63757272 		.ascii	"currentSensor\000"
 5023      656E7453 
 5023      656E736F 
 5023      7200
 5024              	.LASF85:
 5025 07e1 636F6D70 		.ascii	"compIdacValue\000"
 5025      49646163 
 5025      56616C75 
 5025      6500
 5026              	.LASF99:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 136


 5027 07ef 43617053 		.ascii	"CapSense_CSD_lowLevelTuningDone\000"
 5027      656E7365 
 5027      5F435344 
 5027      5F6C6F77 
 5027      4C657665 
 5028              	.LASF82:
 5029 080f 6D6F6449 		.ascii	"modIdacValue\000"
 5029      64616356 
 5029      616C7565 
 5029      00
 5030              	.LASF60:
 5031 081c 43617053 		.ascii	"CapSense_CSD_PreScan\000"
 5031      656E7365 
 5031      5F435344 
 5031      5F507265 
 5031      5363616E 
 5032              	.LASF17:
 5033 0831 73697A65 		.ascii	"sizetype\000"
 5033      74797065 
 5033      00
 5034              	.LASF5:
 5035 083a 6C6F6E67 		.ascii	"long unsigned int\000"
 5035      20756E73 
 5035      69676E65 
 5035      6420696E 
 5035      7400
 5036              	.LASF121:
 5037 084c 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 5037      656E7365 
 5037      5F435344 
 5037      5F726177 
 5037      44617461 
 5038              	.LASF48:
 5039 0866 706F7274 		.ascii	"port\000"
 5039      00
 5040              	.LASF72:
 5041 086b 656E4D61 		.ascii	"enMask\000"
 5041      736B00
 5042              	.LASF64:
 5043 0872 43617053 		.ascii	"CapSense_CSD_SetShieldDelay\000"
 5043      656E7365 
 5043      5F435344 
 5043      5F536574 
 5043      53686965 
 5044              	.LASF77:
 5045 088e 43617053 		.ascii	"CapSense_CSD_GetModulatorClkDivider\000"
 5045      656E7365 
 5045      5F435344 
 5045      5F476574 
 5045      4D6F6475 
 5046              	.LASF66:
 5047 08b2 43617053 		.ascii	"CapSense_CSD_IsBusy\000"
 5047      656E7365 
 5047      5F435344 
 5047      5F497342 
 5047      75737900 
 5048              	.LASF1:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 137


 5049 08c6 756E7369 		.ascii	"unsigned char\000"
 5049      676E6564 
 5049      20636861 
 5049      7200
 5050              	.LASF19:
 5051 08d4 43617053 		.ascii	"CapSense_CSD_CsdHwBlockInit\000"
 5051      656E7365 
 5051      5F435344 
 5051      5F437364 
 5051      4877426C 
 5052              	.LASF61:
 5053 08f0 636F756E 		.ascii	"counterResolution\000"
 5053      74657252 
 5053      65736F6C 
 5053      7574696F 
 5053      6E00
 5054              	.LASF120:
 5055 0902 43617053 		.ascii	"CapSense_CSD_pinShiftTbl\000"
 5055      656E7365 
 5055      5F435344 
 5055      5F70696E 
 5055      53686966 
 5056              	.LASF79:
 5057 091b 6D6F6475 		.ascii	"modulatorClk\000"
 5057      6C61746F 
 5057      72436C6B 
 5057      00
 5058              	.LASF80:
 5059 0928 43617053 		.ascii	"CapSense_CSD_GetModulationIDAC\000"
 5059      656E7365 
 5059      5F435344 
 5059      5F476574 
 5059      4D6F6475 
 5060              	.LASF117:
 5061 0947 43617053 		.ascii	"CapSense_CSD_pcTable\000"
 5061      656E7365 
 5061      5F435344 
 5061      5F706354 
 5061      61626C65 
 5062              	.LASF83:
 5063 095c 43617053 		.ascii	"CapSense_CSD_GetCompensationIDAC\000"
 5063      656E7365 
 5063      5F435344 
 5063      5F476574 
 5063      436F6D70 
 5064              	.LASF106:
 5065 097d 43617053 		.ascii	"CapSense_CSD_sensorEnableMaskBackup\000"
 5065      656E7365 
 5065      5F435344 
 5065      5F73656E 
 5065      736F7245 
 5066              	.LASF0:
 5067 09a1 7369676E 		.ascii	"signed char\000"
 5067      65642063 
 5067      68617200 
 5068              	.LASF95:
 5069 09ad 64617461 		.ascii	"dataPtr\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 138


 5069      50747200 
 5070              	.LASF3:
 5071 09b5 73686F72 		.ascii	"short unsigned int\000"
 5071      7420756E 
 5071      7369676E 
 5071      65642069 
 5071      6E7400
 5072              	.LASF86:
 5073 09c8 43617053 		.ascii	"CapSense_CSD_GetIDACRange\000"
 5073      656E7365 
 5073      5F435344 
 5073      5F476574 
 5073      49444143 
 5074              	.LASF81:
 5075 09e2 43617053 		.ascii	"CapSense_CSD_SetModulationIDAC\000"
 5075      656E7365 
 5075      5F435344 
 5075      5F536574 
 5075      4D6F6475 
 5076              	.LASF21:
 5077 0a01 6E657752 		.ascii	"newRegValue\000"
 5077      65675661 
 5077      6C756500 
 5078              	.LASF52:
 5079 0a0d 43617053 		.ascii	"CapSense_CSD_SetDriveModeAllPins\000"
 5079      656E7365 
 5079      5F435344 
 5079      5F536574 
 5079      44726976 
 5080              	.LASF9:
 5081 0a2e 75696E74 		.ascii	"uint8\000"
 5081      3800
 5082              	.LASF13:
 5083 0a34 646F7562 		.ascii	"double\000"
 5083      6C6500
 5084              	.LASF114:
 5085 0a3b 43617053 		.ascii	"CapSense_CSD_prtSelTbl\000"
 5085      656E7365 
 5085      5F435344 
 5085      5F707274 
 5085      53656C54 
 5086              	.LASF20:
 5087 0a52 63757253 		.ascii	"curSensor\000"
 5087      656E736F 
 5087      7200
 5088              	.LASF37:
 5089 0a5c 43617053 		.ascii	"CapSense_CSD_WriteSensorRaw\000"
 5089      656E7365 
 5089      5F435344 
 5089      5F577269 
 5089      74655365 
 5090              	.LASF53:
 5091 0a78 64726976 		.ascii	"driveMode\000"
 5091      654D6F64 
 5091      6500
 5092              	.LASF43:
 5093 0a82 43617053 		.ascii	"CapSense_CSD_EnableSensor\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2XPShQ.s 			page 139


 5093      656E7365 
 5093      5F435344 
 5093      5F456E61 
 5093      626C6553 
 5094              	.LASF70:
 5095 0a9c 706F7369 		.ascii	"position\000"
 5095      74696F6E 
 5095      00
 5096              	.LASF22:
 5097 0aa5 43617053 		.ascii	"CapSense_CSD_Enable\000"
 5097      656E7365 
 5097      5F435344 
 5097      5F456E61 
 5097      626C6500 
 5098              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
