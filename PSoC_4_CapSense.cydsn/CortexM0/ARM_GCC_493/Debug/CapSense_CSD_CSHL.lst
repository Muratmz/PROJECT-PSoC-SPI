ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CapSense_CSD_CSHL.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	CapSense_CSD_rawFilterData1,24,4
  18              		.global	CapSense_CSD_sensorBaseline
  19              		.bss
  20              		.align	2
  21              		.type	CapSense_CSD_sensorBaseline, %object
  22              		.size	CapSense_CSD_sensorBaseline, 24
  23              	CapSense_CSD_sensorBaseline:
  24 0000 00000000 		.space	24
  24      00000000 
  24      00000000 
  24      00000000 
  24      00000000 
  25              		.global	CapSense_CSD_sensorBaselineLow
  26              		.align	2
  27              		.type	CapSense_CSD_sensorBaselineLow, %object
  28              		.size	CapSense_CSD_sensorBaselineLow, 12
  29              	CapSense_CSD_sensorBaselineLow:
  30 0018 00000000 		.space	12
  30      00000000 
  30      00000000 
  31              		.global	CapSense_CSD_sensorSignal
  32              		.align	2
  33              		.type	CapSense_CSD_sensorSignal, %object
  34              		.size	CapSense_CSD_sensorSignal, 12
  35              	CapSense_CSD_sensorSignal:
  36 0024 00000000 		.space	12
  36      00000000 
  36      00000000 
  37              		.global	CapSense_CSD_sensorOnMask
  38              		.align	2
  39              		.type	CapSense_CSD_sensorOnMask, %object
  40              		.size	CapSense_CSD_sensorOnMask, 2
  41              	CapSense_CSD_sensorOnMask:
  42 0030 0000     		.space	2
  43              		.comm	CapSense_CSD_lowBaselineResetCnt,12,4
  44              		.global	CapSense_CSD_lowBaselineReset
  45              		.data
  46              		.align	2
  47              		.type	CapSense_CSD_lowBaselineReset, %object
  48              		.size	CapSense_CSD_lowBaselineReset, 12
  49              	CapSense_CSD_lowBaselineReset:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 2


  50 0000 1E       		.byte	30
  51 0001 1E       		.byte	30
  52 0002 1E       		.byte	30
  53 0003 1E       		.byte	30
  54 0004 1E       		.byte	30
  55 0005 1E       		.byte	30
  56 0006 1E       		.byte	30
  57 0007 1E       		.byte	30
  58 0008 1E       		.byte	30
  59 0009 1E       		.byte	30
  60 000a 1E       		.byte	30
  61 000b 1E       		.byte	30
  62              		.global	CapSense_CSD_enableRawFilters
  63              		.type	CapSense_CSD_enableRawFilters, %object
  64              		.size	CapSense_CSD_enableRawFilters, 1
  65              	CapSense_CSD_enableRawFilters:
  66 000c 01       		.byte	1
  67              		.comm	CapSense_CSD_fingerThreshold,1,4
  68              		.comm	CapSense_CSD_noiseThreshold,1,4
  69              		.comm	CapSense_CSD_negativeNoiseThreshold,1,4
  70              		.comm	CapSense_CSD_hysteresis,1,4
  71              		.global	CapSense_CSD_debounce
  72 000d 000000   		.align	2
  73              		.type	CapSense_CSD_debounce, %object
  74              		.size	CapSense_CSD_debounce, 1
  75              	CapSense_CSD_debounce:
  76 0010 01       		.byte	1
  77              		.global	CapSense_CSD_rawDataIndex
  78              		.section	.rodata
  79              		.align	2
  80              		.type	CapSense_CSD_rawDataIndex, %object
  81              		.size	CapSense_CSD_rawDataIndex, 1
  82              	CapSense_CSD_rawDataIndex:
  83 0000 00       		.space	1
  84              		.global	CapSense_CSD_numberOfSensors
  85 0001 000000   		.align	2
  86              		.type	CapSense_CSD_numberOfSensors, %object
  87              		.size	CapSense_CSD_numberOfSensors, 1
  88              	CapSense_CSD_numberOfSensors:
  89 0004 0C       		.byte	12
  90 0005 000000   		.align	2
  91              		.type	CapSense_CSD_centroidMult, %object
  92              		.size	CapSense_CSD_centroidMult, 2
  93              	CapSense_CSD_centroidMult:
  94 0008 8B0B     		.short	2955
  95 000a 0000     		.data
  96 0011 000000   		.align	2
  97              		.type	CapSense_CSD_posFiltersMask, %object
  98              		.size	CapSense_CSD_posFiltersMask, 1
  99              	CapSense_CSD_posFiltersMask:
 100 0014 10       		.byte	16
 101 0015 000000   		.align	2
 102              		.type	CapSense_CSD_posFiltersData, %object
 103              		.size	CapSense_CSD_posFiltersData, 3
 104              	CapSense_CSD_posFiltersData:
 105 0018 01       		.byte	1
 106 0019 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 3


 107 001a 00       		.byte	0
 108 001b 00       		.section	.text.CapSense_CSD_BaseInit,"ax",%progbits
 109              		.align	2
 110              		.global	CapSense_CSD_BaseInit
 111              		.code	16
 112              		.thumb_func
 113              		.type	CapSense_CSD_BaseInit, %function
 114              	CapSense_CSD_BaseInit:
 115              	.LFB34:
 116              		.file 1 ".\\Generated_Source\\PSoC4\\CapSense_CSD_CSHL.c"
   1:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * File Name: CapSense_CSD_CSHL.c
   3:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Version 2.40
   4:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
   5:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Description:
   6:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CSD component.
   8:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
   9:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Note:
  10:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
  11:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  18:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_CSHL.h"
  19:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #include "CapSense_CSD_PVT.h"
  20:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  21:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* SmartSense functions */
  22:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  23:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern void CapSense_CSD_UpdateThresholds(uint32 sensor);
  24:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  25:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  26:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* Storage of filters data */
  27:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
  28:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)) )
  29:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  30:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  31:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData2[CapSense_CSD_TOTAL_SENSOR_COUNT];
  32:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  33:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #elif ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER))   || \
  34:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER))   || \
  35:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
  36:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER))   || \
  37:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)) )
  38:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  39:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_rawFilterData1[CapSense_CSD_TOTAL_SENSOR_COUNT];
  40:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* ( (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
  41:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         *    (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) )
  42:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         */
  43:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  44:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern uint16 CapSense_CSD_sensorRaw[CapSense_CSD_TOTAL_SENSOR_COUNT];
  45:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern uint8 CapSense_CSD_sensorEnableMask[CapSense_CSD_TOTAL_SENSOR_MASK];
  46:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** extern const uint8 CapSense_CSD_widgetNumber[CapSense_CSD_TOTAL_SENSOR_COUNT];
  47:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 4


  48:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
  49:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern uint32 CapSense_CSD_widgetResolution[CapSense_CSD_RESOLUTIONS_TBL_SIZE];
  50:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
  51:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  52:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_sensorBaseline[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  53:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorBaselineLow[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  54:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorSignal[CapSense_CSD_TOTAL_SENSOR_COUNT] = {0u};
  55:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_sensorOnMask[CapSense_CSD_TOTAL_SENSOR_MASK] = {0u};
  56:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  57:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineResetCnt[CapSense_CSD_TOTAL_SENSOR_COUNT];
  58:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_lowBaselineReset[CapSense_CSD_TOTAL_SENSOR_COUNT] = {
  59:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 
  60:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  61:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  62:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  63:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  64:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
  65:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     extern CapSense_CSD_CONFIG_TYPE_P4_v2_40 CapSense_CSD_config;
  66:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
  67:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  68:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
  69:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_ENABLED;
  70:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif  /* (CapSense_CSD_RAW_FILTER_MASK != 0u) */
  71:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  72:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /* Generated by Customizer */
  73:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_fingerThreshold[CapSense_CSD_THRESHOLD_TBL_SIZE];
  74:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  75:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_noiseThreshold[CapSense_CSD_THRESHOLD_TBL_SIZE];
  76:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  77:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_negativeNoiseThreshold[CapSense_CSD_THRESHOLD_TBL_SIZE];
  78:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  79:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_hysteresis[CapSense_CSD_WIDGET_PARAM_TBL_SIZE];
  80:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  81:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_debounce[] = {
  82:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, 
  83:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  84:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  85:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_rawDataIndex[] = {
  86:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0u, /* LinearSlider0__LS */
  87:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  88:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  89:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** const uint8 CapSense_CSD_numberOfSensors[] = {
  90:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     12u, /* LinearSlider0__LS */
  91:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  92:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  93:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** static const uint16 CapSense_CSD_centroidMult[] = {
  94:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     2955u, 
  95:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
  96:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
  97:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** static uint8 CapSense_CSD_posFiltersMask[] = {
  98:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0x10u, 
  99:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
 100:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 101:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** static uint8 CapSense_CSD_posFiltersData[] = {
 102:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     1u, 0u, 0u, 
 103:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
 104:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 5


 105:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 106:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 107:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 108:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 109:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_BaseInit
 110:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 111:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 112:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 113:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an
 114:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value which is equal to the raw count value.
 115:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Resets to zero CapSense_CSD_sensorBaselineLow[sensor] and
 116:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[sensor] array element.
 117:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_rawFilterData2[sensor] and
 118:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[sensor] array element with an
 119:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value which is equal to the raw count value if the raw data filter is enabled.
 120:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 121:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 122:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 123:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 124:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 125:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 126:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 127:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 128:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store the baseline value.
 129:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store the fraction byte of
 130:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the baseline value.
 131:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store a difference between
 132:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the current value of raw data and the previous value of the baseline.
 133:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store a previous sample of
 134:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 135:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before a previous sample
 136:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of the enabled raw data filter. Required only for median or average filters.
 137:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 138:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 139:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 140:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 141:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 142:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_BaseInit(uint32 sensor)
 143:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 117              		.loc 1 143 0
 118              		.cfi_startproc
 119 0000 80B5     		push	{r7, lr}
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 82B0     		sub	sp, sp, #8
 124              		.cfi_def_cfa_offset 16
 125 0004 00AF     		add	r7, sp, #0
 126              		.cfi_def_cfa_register 7
 127 0006 7860     		str	r0, [r7, #4]
 144:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if ((CapSense_CSD_TOTAL_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || \
 145:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****          (CapSense_CSD_TOTAL_GENERICS_COUNT))
 146:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 widget = CapSense_CSD_widgetNumber[sensor];
 147:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* ((CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUN
 148:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 149:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)
 150:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 debounceIndex;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 6


 151:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT) */
 152:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 153:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 154:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 155:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 156:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 157:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 158:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 159:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Initialize Baseline */
 160:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = CapSense_CSD_sensorRaw[sensor];
 128              		.loc 1 160 0
 129 0008 0E4B     		ldr	r3, .L2
 130 000a 7A68     		ldr	r2, [r7, #4]
 131 000c 5200     		lsl	r2, r2, #1
 132 000e D15A     		ldrh	r1, [r2, r3]
 133 0010 0D4B     		ldr	r3, .L2+4
 134 0012 7A68     		ldr	r2, [r7, #4]
 135 0014 5200     		lsl	r2, r2, #1
 136 0016 D152     		strh	r1, [r2, r3]
 161:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaselineLow[sensor] = 0u;
 137              		.loc 1 161 0
 138 0018 0C4A     		ldr	r2, .L2+8
 139 001a 7B68     		ldr	r3, [r7, #4]
 140 001c D318     		add	r3, r2, r3
 141 001e 0022     		mov	r2, #0
 142 0020 1A70     		strb	r2, [r3]
 162:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = 0u;
 143              		.loc 1 162 0
 144 0022 0B4A     		ldr	r2, .L2+12
 145 0024 7B68     		ldr	r3, [r7, #4]
 146 0026 D318     		add	r3, r2, r3
 147 0028 0022     		mov	r2, #0
 148 002a 1A70     		strb	r2, [r3]
 163:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 164:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 165:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 166:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if ((0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) ||\
 167:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****          (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)))
 168:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 169:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 170:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_sensorRaw[sensor];
 171:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 172:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #elif ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER) ||\
 173:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER) ||\
 174:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER) ||\
 175:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER) ||\
 176:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****            (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
 177:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 178:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_rawFilterData1[sensor] = CapSense_CSD_sensorRaw[sensor];
 149              		.loc 1 178 0
 150 002c 054B     		ldr	r3, .L2
 151 002e 7A68     		ldr	r2, [r7, #4]
 152 0030 5200     		lsl	r2, r2, #1
 153 0032 D15A     		ldrh	r1, [r2, r3]
 154 0034 074B     		ldr	r3, .L2+16
 155 0036 7A68     		ldr	r2, [r7, #4]
 156 0038 5200     		lsl	r2, r2, #1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 7


 157 003a D152     		strh	r1, [r2, r3]
 179:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 180:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
 181:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* No Raw filters */
 182:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* ((CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) || \
 183:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             *   (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER))
 184:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             */
 185:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 186:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 187:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 188:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 189:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 190:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 158              		.loc 1 190 0
 159 003c BD46     		mov	sp, r7
 160 003e 02B0     		add	sp, sp, #8
 161              		@ sp needed
 162 0040 80BD     		pop	{r7, pc}
 163              	.L3:
 164 0042 C046     		.align	2
 165              	.L2:
 166 0044 00000000 		.word	CapSense_CSD_sensorRaw
 167 0048 00000000 		.word	CapSense_CSD_sensorBaseline
 168 004c 00000000 		.word	CapSense_CSD_sensorBaselineLow
 169 0050 00000000 		.word	CapSense_CSD_sensorSignal
 170 0054 00000000 		.word	CapSense_CSD_rawFilterData1
 171              		.cfi_endproc
 172              	.LFE34:
 173              		.size	CapSense_CSD_BaseInit, .-CapSense_CSD_BaseInit
 174              		.section	.text.CapSense_CSD_InitializeSensorBaseline,"ax",%progbits
 175              		.align	2
 176              		.global	CapSense_CSD_InitializeSensorBaseline
 177              		.code	16
 178              		.thumb_func
 179              		.type	CapSense_CSD_InitializeSensorBaseline, %function
 180              	CapSense_CSD_InitializeSensorBaseline:
 181              	.LFB35:
 191:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 192:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 193:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 194:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeSensorBaseline
 195:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 196:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 197:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 198:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Loads the CapSense_CSD_sensorBaseline[sensor] array element with an
 199:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or a pair
 200:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the
 201:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if
 202:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  enabled.
 203:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 204:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 205:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 206:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 207:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 208:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 209:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 210:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 8


 211:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 212:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 213:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 214:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 215:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 216:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 217:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeSensorBaseline(uint32 sensor)
 218:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 182              		.loc 1 218 0
 183              		.cfi_startproc
 184 0000 80B5     		push	{r7, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 82B0     		sub	sp, sp, #8
 189              		.cfi_def_cfa_offset 16
 190 0004 00AF     		add	r7, sp, #0
 191              		.cfi_def_cfa_register 7
 192 0006 7860     		str	r0, [r7, #4]
 219:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Scan sensor */
 220:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanSensor(sensor);
 193              		.loc 1 220 0
 194 0008 7B68     		ldr	r3, [r7, #4]
 195 000a 181C     		mov	r0, r3
 196 000c FFF7FEFF 		bl	CapSense_CSD_ScanSensor
 221:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 197              		.loc 1 221 0
 198 0010 C046     		mov	r8, r8
 199              	.L5:
 200              		.loc 1 221 0 is_stmt 0 discriminator 1
 201 0012 FFF7FEFF 		bl	CapSense_CSD_IsBusy
 202 0016 031E     		sub	r3, r0, #0
 203 0018 FBD1     		bne	.L5
 222:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 223:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Wait while sensor is busy */
 224:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 225:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 226:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Initialize Baseline, Signal and debounce counters */
 227:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_BaseInit(sensor);
 204              		.loc 1 227 0 is_stmt 1
 205 001a 7B68     		ldr	r3, [r7, #4]
 206 001c 181C     		mov	r0, r3
 207 001e FFF7FEFF 		bl	CapSense_CSD_BaseInit
 228:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 208              		.loc 1 228 0
 209 0022 BD46     		mov	sp, r7
 210 0024 02B0     		add	sp, sp, #8
 211              		@ sp needed
 212 0026 80BD     		pop	{r7, pc}
 213              		.cfi_endproc
 214              	.LFE35:
 215              		.size	CapSense_CSD_InitializeSensorBaseline, .-CapSense_CSD_InitializeSensorBaseline
 216              		.section	.text.CapSense_CSD_InitializeAllBaselines,"ax",%progbits
 217              		.align	2
 218              		.global	CapSense_CSD_InitializeAllBaselines
 219              		.code	16
 220              		.thumb_func
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 9


 221              		.type	CapSense_CSD_InitializeAllBaselines, %function
 222              	CapSense_CSD_InitializeAllBaselines:
 223              	.LFB36:
 229:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 230:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 231:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 232:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeAllBaselines
 233:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 234:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 235:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 236:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Uses the CapSense_CSD_InitializeSensorBaseline function to load the
 237:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] array with an initial values by scanning
 238:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  all the sensors. The raw count values are copied into the baseline array for
 239:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  all the sensors. The raw data filters are initialized if enabled.
 240:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 241:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 242:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 243:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 244:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 245:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 246:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 247:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 248:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 249:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 250:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 251:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 252:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 253:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 254:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeAllBaselines(void)
 255:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 224              		.loc 1 255 0
 225              		.cfi_startproc
 226 0000 80B5     		push	{r7, lr}
 227              		.cfi_def_cfa_offset 8
 228              		.cfi_offset 7, -8
 229              		.cfi_offset 14, -4
 230 0002 82B0     		sub	sp, sp, #8
 231              		.cfi_def_cfa_offset 16
 232 0004 00AF     		add	r7, sp, #0
 233              		.cfi_def_cfa_register 7
 256:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 257:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 258:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SCANSLOT_COUNT; i++)
 234              		.loc 1 258 0
 235 0006 0023     		mov	r3, #0
 236 0008 7B60     		str	r3, [r7, #4]
 237 000a 06E0     		b	.L7
 238              	.L8:
 259:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 260:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_InitializeSensorBaseline(i);
 239              		.loc 1 260 0 discriminator 3
 240 000c 7B68     		ldr	r3, [r7, #4]
 241 000e 181C     		mov	r0, r3
 242 0010 FFF7FEFF 		bl	CapSense_CSD_InitializeSensorBaseline
 258:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 243              		.loc 1 258 0 discriminator 3
 244 0014 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 10


 245 0016 0133     		add	r3, r3, #1
 246 0018 7B60     		str	r3, [r7, #4]
 247              	.L7:
 258:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 248              		.loc 1 258 0 is_stmt 0 discriminator 1
 249 001a 7B68     		ldr	r3, [r7, #4]
 250 001c 0B2B     		cmp	r3, #11
 251 001e F5D9     		bls	.L8
 261:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 262:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 252              		.loc 1 262 0 is_stmt 1
 253 0020 BD46     		mov	sp, r7
 254 0022 02B0     		add	sp, sp, #8
 255              		@ sp needed
 256 0024 80BD     		pop	{r7, pc}
 257              		.cfi_endproc
 258              	.LFE36:
 259              		.size	CapSense_CSD_InitializeAllBaselines, .-CapSense_CSD_InitializeAllBaselines
 260 0026 C046     		.section	.text.CapSense_CSD_InitializeEnabledBaselines,"ax",%progbits
 261              		.align	2
 262              		.global	CapSense_CSD_InitializeEnabledBaselines
 263              		.code	16
 264              		.thumb_func
 265              		.type	CapSense_CSD_InitializeEnabledBaselines, %function
 266              	CapSense_CSD_InitializeEnabledBaselines:
 267              	.LFB37:
 263:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 264:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 265:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 266:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_InitializeEnabledBaselines
 267:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 268:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 269:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 270:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Scans all the enabled widgets and the raw count values are copied into the
 271:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline array for all the sensors enabled in the scanning process. The baselines
 272:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  are initialized with zero values for sensors disabled from the scanning process.
 273:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  The raw data filters are initialized if enabled.
 274:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 275:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 276:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 277:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 278:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 279:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 280:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 281:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 282:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorRaw[] - used to store the sensors raw data.
 283:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[ ] - used to store bit masks of the enabled sensors.
 284:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 285:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 286:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 287:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 288:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 289:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_InitializeEnabledBaselines(void)
 290:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 268              		.loc 1 290 0
 269              		.cfi_startproc
 270 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 11


 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 7, -8
 273              		.cfi_offset 14, -4
 274 0002 82B0     		sub	sp, sp, #8
 275              		.cfi_def_cfa_offset 16
 276 0004 00AF     		add	r7, sp, #0
 277              		.cfi_def_cfa_register 7
 291:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 292:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 293:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 294:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_ScanEnabledWidgets();
 278              		.loc 1 294 0
 279 0006 FFF7FEFF 		bl	CapSense_CSD_ScanEnabledWidgets
 295:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(CapSense_CSD_IsBusy() != 0u)
 280              		.loc 1 295 0
 281 000a C046     		mov	r8, r8
 282              	.L10:
 283              		.loc 1 295 0 is_stmt 0 discriminator 1
 284 000c FFF7FEFF 		bl	CapSense_CSD_IsBusy
 285 0010 031E     		sub	r3, r0, #0
 286 0012 FBD1     		bne	.L10
 296:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 297:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Wait while sensor is busy */
 298:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 299:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 300:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 287              		.loc 1 300 0 is_stmt 1
 288 0014 0023     		mov	r3, #0
 289 0016 7B60     		str	r3, [r7, #4]
 290 0018 11E0     		b	.L11
 291              	.L13:
 301:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 302:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 292              		.loc 1 302 0
 293 001a 0C4A     		ldr	r2, .L14
 294 001c 7B68     		ldr	r3, [r7, #4]
 295 001e 101C     		mov	r0, r2
 296 0020 191C     		mov	r1, r3
 297 0022 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 298 0026 031C     		mov	r3, r0
 299 0028 3B60     		str	r3, [r7]
 303:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 304:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 305:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(isSensorEnabled != 0u)
 300              		.loc 1 305 0
 301 002a 3B68     		ldr	r3, [r7]
 302 002c 002B     		cmp	r3, #0
 303 002e 03D0     		beq	.L12
 306:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 307:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Initialize baselines */
 308:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(i);
 304              		.loc 1 308 0
 305 0030 7B68     		ldr	r3, [r7, #4]
 306 0032 181C     		mov	r0, r3
 307 0034 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 308              	.L12:
 300:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 12


 309              		.loc 1 300 0 discriminator 2
 310 0038 7B68     		ldr	r3, [r7, #4]
 311 003a 0133     		add	r3, r3, #1
 312 003c 7B60     		str	r3, [r7, #4]
 313              	.L11:
 300:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 314              		.loc 1 300 0 is_stmt 0 discriminator 1
 315 003e 7B68     		ldr	r3, [r7, #4]
 316 0040 0B2B     		cmp	r3, #11
 317 0042 EAD9     		bls	.L13
 309:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 310:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 311:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 318              		.loc 1 311 0 is_stmt 1
 319 0044 BD46     		mov	sp, r7
 320 0046 02B0     		add	sp, sp, #8
 321              		@ sp needed
 322 0048 80BD     		pop	{r7, pc}
 323              	.L15:
 324 004a C046     		.align	2
 325              	.L14:
 326 004c 00000000 		.word	CapSense_CSD_sensorEnableMask
 327              		.cfi_endproc
 328              	.LFE37:
 329              		.size	CapSense_CSD_InitializeEnabledBaselines, .-CapSense_CSD_InitializeEnabledBaselines
 330              		.section	.text.CapSense_CSD_UpdateBaselineNoThreshold,"ax",%progbits
 331              		.align	2
 332              		.global	CapSense_CSD_UpdateBaselineNoThreshold
 333              		.code	16
 334              		.thumb_func
 335              		.type	CapSense_CSD_UpdateBaselineNoThreshold, %function
 336              	CapSense_CSD_UpdateBaselineNoThreshold:
 337              	.LFB38:
 312:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 313:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 314:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateBaselineNoThreshold
 316:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 317:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 318:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 319:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the
 320:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 321:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 322:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_sensorSignal[sensor].
 323:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 324:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating; baseline is loaded
 325:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  with a raw count value if a signal is greater than zero and if signal is less
 326:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  than noise threshold.
 327:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 328:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  calculation.
 329:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 330:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API does not update the thresholds in the Smartsense Mode.
 331:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 332:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 333:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 334:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 335:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 13


 336:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 337:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 338:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 339:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
 340:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[]    - used to store baseline value.
 341:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaselineLow[] - used to store fraction byte of
 342:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  baseline value.
 343:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[]      - used to store difference between
 344:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  current value of raw data and previous value of baseline.
 345:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData1[]    - used to store previous sample of
 346:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  any enabled raw data filter.
 347:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_rawFilterData2[]    - used to store before previous sample
 348:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 349:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 350:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 351:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 352:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 353:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 354:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_UpdateBaselineNoThreshold(uint32 sensor)
 355:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 338              		.loc 1 355 0
 339              		.cfi_startproc
 340 0000 90B5     		push	{r4, r7, lr}
 341              		.cfi_def_cfa_offset 12
 342              		.cfi_offset 4, -12
 343              		.cfi_offset 7, -8
 344              		.cfi_offset 14, -4
 345 0002 87B0     		sub	sp, sp, #28
 346              		.cfi_def_cfa_offset 40
 347 0004 00AF     		add	r7, sp, #0
 348              		.cfi_def_cfa_register 7
 349 0006 7860     		str	r0, [r7, #4]
 356:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 calc;
 357:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 sign;
 358:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 tempRaw;
 359:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 filteredRawData;
 360:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 widget = CapSense_CSD_widgetNumber[sensor];
 350              		.loc 1 360 0
 351 0008 0F23     		mov	r3, #15
 352 000a FB18     		add	r3, r7, r3
 353 000c 7E49     		ldr	r1, .L29
 354 000e 7A68     		ldr	r2, [r7, #4]
 355 0010 8A18     		add	r2, r1, r2
 356 0012 1278     		ldrb	r2, [r2]
 357 0014 1A70     		strb	r2, [r3]
 361:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 noiseThreshold;
 362:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 363:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 364:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 365:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 366:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 367:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 368:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 369:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     noiseThreshold = CapSense_CSD_noiseThreshold[widget];
 358              		.loc 1 369 0
 359 0016 0F23     		mov	r3, #15
 360 0018 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 14


 361 001a 1A78     		ldrb	r2, [r3]
 362 001c 0E23     		mov	r3, #14
 363 001e FB18     		add	r3, r7, r3
 364 0020 7A49     		ldr	r1, .L29+4
 365 0022 8A5C     		ldrb	r2, [r1, r2]
 366 0024 1A70     		strb	r2, [r3]
 370:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     filteredRawData = CapSense_CSD_sensorRaw[sensor];
 367              		.loc 1 370 0
 368 0026 1023     		mov	r3, #16
 369 0028 FB18     		add	r3, r7, r3
 370 002a 794A     		ldr	r2, .L29+8
 371 002c 7968     		ldr	r1, [r7, #4]
 372 002e 4900     		lsl	r1, r1, #1
 373 0030 8A5A     		ldrh	r2, [r1, r2]
 374 0032 1A80     		strh	r2, [r3]
 371:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 372:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
 373:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if(CapSense_CSD_enableRawFilters != 0u)
 375              		.loc 1 373 0
 376 0034 774B     		ldr	r3, .L29+12
 377 0036 1B78     		ldrb	r3, [r3]
 378 0038 002B     		cmp	r3, #0
 379 003a 15D0     		beq	.L17
 374:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 375:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)
 376:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tempRaw = filteredRawData;
 377:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_MedianFilter(filteredRawData, CapSense_CSD_rawFilterData
 378:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                             CapSense_CSD_rawFilterData2[sensor]);
 379:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 380:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 381:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 382:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)
 383:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tempRaw = filteredRawData;
 384:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_AveragingFilter(filteredRawData, CapSense_CSD_rawFilterD
 385:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                CapSense_CSD_rawFilterData2[sensor])
 386:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData2[sensor] = CapSense_CSD_rawFilterData1[sensor];
 387:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = tempRaw;
 388:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 389:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)
 390:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR2Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 391:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 392:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 393:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)
 394:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR4Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 380              		.loc 1 394 0
 381 003c 764B     		ldr	r3, .L29+16
 382 003e 7A68     		ldr	r2, [r7, #4]
 383 0040 5200     		lsl	r2, r2, #1
 384 0042 D25A     		ldrh	r2, [r2, r3]
 385 0044 1023     		mov	r3, #16
 386 0046 FC18     		add	r4, r7, r3
 387 0048 1023     		mov	r3, #16
 388 004a FB18     		add	r3, r7, r3
 389 004c 1B88     		ldrh	r3, [r3]
 390 004e 181C     		mov	r0, r3
 391 0050 111C     		mov	r1, r2
 392 0052 FFF7FEFF 		bl	CapSense_CSD_IIR4Filter
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 15


 393 0056 031C     		mov	r3, r0
 394 0058 2380     		strh	r3, [r4]
 395:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 395              		.loc 1 395 0
 396 005a 6F4B     		ldr	r3, .L29+16
 397 005c 7A68     		ldr	r2, [r7, #4]
 398 005e 5200     		lsl	r2, r2, #1
 399 0060 1021     		mov	r1, #16
 400 0062 7918     		add	r1, r7, r1
 401 0064 0988     		ldrh	r1, [r1]
 402 0066 D152     		strh	r1, [r2, r3]
 403              	.L17:
 396:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 397:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)
 398:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_JitterFilter(filteredRawData, CapSense_CSD_rawFilterData
 399:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 400:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 401:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)
 402:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR8Filter(filteredRawData, CapSense_CSD_rawFilterData1[
 403:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 404:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 405:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #elif (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER)
 406:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             filteredRawData = CapSense_CSD_IIR16Filter(filteredRawData, CapSense_CSD_rawFilterData1
 407:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_rawFilterData1[sensor] = filteredRawData;
 408:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 409:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 410:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* No Raw filters */
 411:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER) */
 412:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 413:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* (CapSense_CSD_RAW_FILTER_MASK != 0u) */
 414:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 415:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 416:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         MeasureNoiseEnvelope_P4_v2_40(&CapSense_CSD_config, (uint8)sensor, CapSense_CSD_sensorRaw);
 404              		.loc 1 416 0
 405 0068 7B68     		ldr	r3, [r7, #4]
 406 006a DAB2     		uxtb	r2, r3
 407 006c 6B49     		ldr	r1, .L29+20
 408 006e 684B     		ldr	r3, .L29+8
 409 0070 081C     		mov	r0, r1
 410 0072 111C     		mov	r1, r2
 411 0074 1A1C     		mov	r2, r3
 412 0076 FFF7FEFF 		bl	MeasureNoiseEnvelope_P4_v2_40
 417:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 418:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 419:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Baseline calculation */
 420:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 421:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if(filteredRawData >= CapSense_CSD_sensorBaseline[sensor])
 413              		.loc 1 421 0
 414 007a 694B     		ldr	r3, .L29+24
 415 007c 7A68     		ldr	r2, [r7, #4]
 416 007e 5200     		lsl	r2, r2, #1
 417 0080 D35A     		ldrh	r3, [r2, r3]
 418 0082 1022     		mov	r2, #16
 419 0084 BA18     		add	r2, r7, r2
 420 0086 1288     		ldrh	r2, [r2]
 421 0088 9A42     		cmp	r2, r3
 422 008a 12D3     		bcc	.L18
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 16


 422:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 423:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 423              		.loc 1 423 0
 424 008c 654A     		ldr	r2, .L29+28
 425 008e 7B68     		ldr	r3, [r7, #4]
 426 0090 D318     		add	r3, r2, r3
 427 0092 0022     		mov	r2, #0
 428 0094 1A70     		strb	r2, [r3]
 424:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = filteredRawData - CapSense_CSD_sensorBaseline[sensor];
 429              		.loc 1 424 0
 430 0096 624B     		ldr	r3, .L29+24
 431 0098 7A68     		ldr	r2, [r7, #4]
 432 009a 5200     		lsl	r2, r2, #1
 433 009c D25A     		ldrh	r2, [r2, r3]
 434 009e 1223     		mov	r3, #18
 435 00a0 FB18     		add	r3, r7, r3
 436 00a2 1021     		mov	r1, #16
 437 00a4 7918     		add	r1, r7, r1
 438 00a6 0988     		ldrh	r1, [r1]
 439 00a8 8A1A     		sub	r2, r1, r2
 440 00aa 1A80     		strh	r2, [r3]
 425:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 1u;    /* Positive difference - Calculate the Signal */
 441              		.loc 1 425 0
 442 00ac 0123     		mov	r3, #1
 443 00ae 7B61     		str	r3, [r7, #20]
 444 00b0 0CE0     		b	.L19
 445              	.L18:
 426:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 427:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 428:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 429:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tempRaw = CapSense_CSD_sensorBaseline[sensor] - filteredRawData;
 446              		.loc 1 429 0
 447 00b2 5B4B     		ldr	r3, .L29+24
 448 00b4 7A68     		ldr	r2, [r7, #4]
 449 00b6 5200     		lsl	r2, r2, #1
 450 00b8 D15A     		ldrh	r1, [r2, r3]
 451 00ba 1223     		mov	r3, #18
 452 00bc FB18     		add	r3, r7, r3
 453 00be 1022     		mov	r2, #16
 454 00c0 BA18     		add	r2, r7, r2
 455 00c2 1288     		ldrh	r2, [r2]
 456 00c4 8A1A     		sub	r2, r1, r2
 457 00c6 1A80     		strh	r2, [r3]
 430:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         sign = 0u;    /* Negative difference - Do NOT calculate the Signal */
 458              		.loc 1 430 0
 459 00c8 0023     		mov	r3, #0
 460 00ca 7B61     		str	r3, [r7, #20]
 461              	.L19:
 431:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 432:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 433:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 434:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_CSD_negativeNoiseThreshold[widget]))
 462              		.loc 1 434 0
 463 00cc 7B69     		ldr	r3, [r7, #20]
 464 00ce 002B     		cmp	r3, #0
 465 00d0 2AD1     		bne	.L20
 466              		.loc 1 434 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 17


 467 00d2 0F23     		mov	r3, #15
 468 00d4 FB18     		add	r3, r7, r3
 469 00d6 1B78     		ldrb	r3, [r3]
 470 00d8 534A     		ldr	r2, .L29+32
 471 00da D35C     		ldrb	r3, [r2, r3]
 472 00dc 9BB2     		uxth	r3, r3
 473 00de 1222     		mov	r2, #18
 474 00e0 BA18     		add	r2, r7, r2
 475 00e2 1288     		ldrh	r2, [r2]
 476 00e4 9A42     		cmp	r2, r3
 477 00e6 1FD9     		bls	.L20
 435:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
 436:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((sign == 0u) && (tempRaw > (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD))
 437:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 438:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 439:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_lowBaselineResetCnt[sensor] >= CapSense_CSD_lowBaselineReset[sensor])
 478              		.loc 1 439 0 is_stmt 1
 479 00e8 4E4A     		ldr	r2, .L29+28
 480 00ea 7B68     		ldr	r3, [r7, #4]
 481 00ec D318     		add	r3, r2, r3
 482 00ee 1A78     		ldrb	r2, [r3]
 483 00f0 4E49     		ldr	r1, .L29+36
 484 00f2 7B68     		ldr	r3, [r7, #4]
 485 00f4 CB18     		add	r3, r1, r3
 486 00f6 1B78     		ldrb	r3, [r3]
 487 00f8 9A42     		cmp	r2, r3
 488 00fa 09D3     		bcc	.L21
 440:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 441:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_BaseInit(sensor);
 489              		.loc 1 441 0
 490 00fc 7B68     		ldr	r3, [r7, #4]
 491 00fe 181C     		mov	r0, r3
 492 0100 FFF7FEFF 		bl	CapSense_CSD_BaseInit
 442:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 493              		.loc 1 442 0
 494 0104 474A     		ldr	r2, .L29+28
 495 0106 7B68     		ldr	r3, [r7, #4]
 496 0108 D318     		add	r3, r2, r3
 497 010a 0022     		mov	r2, #0
 498 010c 1A70     		strb	r2, [r3]
 439:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 499              		.loc 1 439 0
 500 010e 51E0     		b	.L23
 501              	.L21:
 443:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 444:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
 445:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 446:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_lowBaselineResetCnt[sensor]++;
 502              		.loc 1 446 0
 503 0110 444A     		ldr	r2, .L29+28
 504 0112 7B68     		ldr	r3, [r7, #4]
 505 0114 D318     		add	r3, r2, r3
 506 0116 1B78     		ldrb	r3, [r3]
 507 0118 0133     		add	r3, r3, #1
 508 011a D9B2     		uxtb	r1, r3
 509 011c 414A     		ldr	r2, .L29+28
 510 011e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 18


 511 0120 D318     		add	r3, r2, r3
 512 0122 0A1C     		add	r2, r1, #0
 513 0124 1A70     		strb	r2, [r3]
 439:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 514              		.loc 1 439 0
 515 0126 45E0     		b	.L23
 516              	.L20:
 447:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 448:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 449:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 450:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 451:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 452:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 453:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 454:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 517              		.loc 1 454 0
 518 0128 0E23     		mov	r3, #14
 519 012a FB18     		add	r3, r7, r3
 520 012c 1B78     		ldrb	r3, [r3]
 521 012e 9BB2     		uxth	r3, r3
 522 0130 1222     		mov	r2, #18
 523 0132 BA18     		add	r2, r7, r2
 524 0134 1288     		ldrh	r2, [r2]
 525 0136 9A42     		cmp	r2, r3
 526 0138 0DD9     		bls	.L24
 455:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              ((tempRaw < (uint16) CapSense_CSD_negativeNoiseThreshold[widget])
 527              		.loc 1 455 0 discriminator 1
 528 013a 0F23     		mov	r3, #15
 529 013c FB18     		add	r3, r7, r3
 530 013e 1B78     		ldrb	r3, [r3]
 531 0140 394A     		ldr	r2, .L29+32
 532 0142 D35C     		ldrb	r3, [r2, r3]
 533 0144 9BB2     		uxth	r3, r3
 454:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              ((tempRaw < (uint16) CapSense_CSD_negativeNoiseThreshold[widget])
 534              		.loc 1 454 0 discriminator 1
 535 0146 1222     		mov	r2, #18
 536 0148 BA18     		add	r2, r7, r2
 537 014a 1288     		ldrh	r2, [r2]
 538 014c 9A42     		cmp	r2, r3
 539 014e 31D2     		bcs	.L23
 456:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                && (sign == 0u)))
 540              		.loc 1 456 0
 541 0150 7B69     		ldr	r3, [r7, #20]
 542 0152 002B     		cmp	r3, #0
 543 0154 2ED1     		bne	.L23
 544              	.L24:
 457:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 458:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 459:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Update Baseline if lower than noiseThreshold */
 460:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if ( (tempRaw <= noiseThreshold) ||
 461:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  ((tempRaw < (uint16) CapSense_CSD_NEGATIVE_NOISE_THRESHOLD)
 462:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                    && (sign == 0u)))
 463:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 464:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 465:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 466:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Make full Baseline 23 bits */
 467:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc = (uint32) CapSense_CSD_sensorBaseline[sensor] << 8u;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 19


 545              		.loc 1 467 0
 546 0156 324B     		ldr	r3, .L29+24
 547 0158 7A68     		ldr	r2, [r7, #4]
 548 015a 5200     		lsl	r2, r2, #1
 549 015c D35A     		ldrh	r3, [r2, r3]
 550 015e 1B02     		lsl	r3, r3, #8
 551 0160 BB60     		str	r3, [r7, #8]
 468:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc |= (uint32) CapSense_CSD_sensorBaselineLow[sensor];
 552              		.loc 1 468 0
 553 0162 334A     		ldr	r2, .L29+40
 554 0164 7B68     		ldr	r3, [r7, #4]
 555 0166 D318     		add	r3, r2, r3
 556 0168 1B78     		ldrb	r3, [r3]
 557 016a 1A1C     		mov	r2, r3
 558 016c BB68     		ldr	r3, [r7, #8]
 559 016e 1343     		orr	r3, r2
 560 0170 BB60     		str	r3, [r7, #8]
 469:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 470:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Add Raw Data to Baseline */
 471:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc += filteredRawData;
 561              		.loc 1 471 0
 562 0172 1023     		mov	r3, #16
 563 0174 FB18     		add	r3, r7, r3
 564 0176 1B88     		ldrh	r3, [r3]
 565 0178 BA68     		ldr	r2, [r7, #8]
 566 017a D318     		add	r3, r2, r3
 567 017c BB60     		str	r3, [r7, #8]
 472:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 473:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Sub the high Baseline */
 474:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 calc -= CapSense_CSD_sensorBaseline[sensor];
 568              		.loc 1 474 0
 569 017e 284B     		ldr	r3, .L29+24
 570 0180 7A68     		ldr	r2, [r7, #4]
 571 0182 5200     		lsl	r2, r2, #1
 572 0184 D35A     		ldrh	r3, [r2, r3]
 573 0186 1A1C     		mov	r2, r3
 574 0188 BB68     		ldr	r3, [r7, #8]
 575 018a 9B1A     		sub	r3, r3, r2
 576 018c BB60     		str	r3, [r7, #8]
 475:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 476:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Put Baseline and BaselineLow */
 477:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 577              		.loc 1 477 0
 578 018e BB68     		ldr	r3, [r7, #8]
 579 0190 1B0A     		lsr	r3, r3, #8
 580 0192 99B2     		uxth	r1, r3
 581 0194 224B     		ldr	r3, .L29+24
 582 0196 7A68     		ldr	r2, [r7, #4]
 583 0198 5200     		lsl	r2, r2, #1
 584 019a D152     		strh	r1, [r2, r3]
 478:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorBaselineLow[sensor] = ((uint8) calc);
 585              		.loc 1 478 0
 586 019c BB68     		ldr	r3, [r7, #8]
 587 019e D9B2     		uxtb	r1, r3
 588 01a0 234A     		ldr	r2, .L29+40
 589 01a2 7B68     		ldr	r3, [r7, #4]
 590 01a4 D318     		add	r3, r2, r3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 20


 591 01a6 0A1C     		add	r2, r1, #0
 592 01a8 1A70     		strb	r2, [r3]
 479:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 480:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_lowBaselineResetCnt[sensor] = 0u;
 593              		.loc 1 480 0
 594 01aa 1E4A     		ldr	r2, .L29+28
 595 01ac 7B68     		ldr	r3, [r7, #4]
 596 01ae D318     		add	r3, r2, r3
 597 01b0 0022     		mov	r2, #0
 598 01b2 1A70     		strb	r2, [r3]
 599              	.L23:
 481:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE)
 482:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 483:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 484:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 485:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 486:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Calculate Signal if positive difference > noiseThreshold */
 487:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (sign != 0u))
 600              		.loc 1 487 0
 601 01b4 0E23     		mov	r3, #14
 602 01b6 FB18     		add	r3, r7, r3
 603 01b8 1B78     		ldrb	r3, [r3]
 604 01ba 9BB2     		uxth	r3, r3
 605 01bc 1222     		mov	r2, #18
 606 01be BA18     		add	r2, r7, r2
 607 01c0 1288     		ldrh	r2, [r2]
 608 01c2 9A42     		cmp	r2, r3
 609 01c4 17D9     		bls	.L25
 610              		.loc 1 487 0 is_stmt 0 discriminator 1
 611 01c6 7B69     		ldr	r3, [r7, #20]
 612 01c8 002B     		cmp	r3, #0
 613 01ca 14D0     		beq	.L25
 488:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 489:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8)
 490:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Over flow defence for uint8 */
 491:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (tempRaw > 0xFFu)
 614              		.loc 1 491 0 is_stmt 1
 615 01cc 1223     		mov	r3, #18
 616 01ce FB18     		add	r3, r7, r3
 617 01d0 1B88     		ldrh	r3, [r3]
 618 01d2 FF2B     		cmp	r3, #255
 619 01d4 05D9     		bls	.L26
 492:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 493:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = 0xFFu;
 620              		.loc 1 493 0
 621 01d6 174A     		ldr	r2, .L29+44
 622 01d8 7B68     		ldr	r3, [r7, #4]
 623 01da D318     		add	r3, r2, r3
 624 01dc FF22     		mov	r2, #255
 625 01de 1A70     		strb	r2, [r3]
 491:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 626              		.loc 1 491 0
 627 01e0 0EE0     		b	.L16
 628              	.L26:
 494:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 495:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
 496:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 21


 497:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_sensorSignal[sensor] = ((uint8) tempRaw);
 629              		.loc 1 497 0
 630 01e2 1223     		mov	r3, #18
 631 01e4 FB18     		add	r3, r7, r3
 632 01e6 1B88     		ldrh	r3, [r3]
 633 01e8 D9B2     		uxtb	r1, r3
 634 01ea 124A     		ldr	r2, .L29+44
 635 01ec 7B68     		ldr	r3, [r7, #4]
 636 01ee D318     		add	r3, r2, r3
 637 01f0 0A1C     		add	r2, r1, #0
 638 01f2 1A70     		strb	r2, [r3]
 491:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 639              		.loc 1 491 0
 640 01f4 04E0     		b	.L16
 641              	.L25:
 498:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
 499:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
 500:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_sensorSignal[sensor] = ((uint16) tempRaw);
 501:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_SIGNAL_SIZE == CapSense_CSD_SIGNAL_SIZE_UINT8) */
 502:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 503:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else
 504:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 505:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Signal is zero */
 506:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_sensorSignal[sensor] = 0u;
 642              		.loc 1 506 0
 643 01f6 0F4A     		ldr	r2, .L29+44
 644 01f8 7B68     		ldr	r3, [r7, #4]
 645 01fa D318     		add	r3, r2, r3
 646 01fc 0022     		mov	r2, #0
 647 01fe 1A70     		strb	r2, [r3]
 648              	.L16:
 507:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 508:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 509:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 510:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 511:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 512:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 513:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 649              		.loc 1 513 0
 650 0200 BD46     		mov	sp, r7
 651 0202 07B0     		add	sp, sp, #28
 652              		@ sp needed
 653 0204 90BD     		pop	{r4, r7, pc}
 654              	.L30:
 655 0206 C046     		.align	2
 656              	.L29:
 657 0208 00000000 		.word	CapSense_CSD_widgetNumber
 658 020c 00000000 		.word	CapSense_CSD_noiseThreshold
 659 0210 00000000 		.word	CapSense_CSD_sensorRaw
 660 0214 00000000 		.word	CapSense_CSD_enableRawFilters
 661 0218 00000000 		.word	CapSense_CSD_rawFilterData1
 662 021c 00000000 		.word	CapSense_CSD_config
 663 0220 00000000 		.word	CapSense_CSD_sensorBaseline
 664 0224 00000000 		.word	CapSense_CSD_lowBaselineResetCnt
 665 0228 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 666 022c 00000000 		.word	CapSense_CSD_lowBaselineReset
 667 0230 00000000 		.word	CapSense_CSD_sensorBaselineLow
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 22


 668 0234 00000000 		.word	CapSense_CSD_sensorSignal
 669              		.cfi_endproc
 670              	.LFE38:
 671              		.size	CapSense_CSD_UpdateBaselineNoThreshold, .-CapSense_CSD_UpdateBaselineNoThreshold
 672              		.section	.text.CapSense_CSD_UpdateSensorBaseline,"ax",%progbits
 673              		.align	2
 674              		.global	CapSense_CSD_UpdateSensorBaseline
 675              		.code	16
 676              		.thumb_func
 677              		.type	CapSense_CSD_UpdateSensorBaseline, %function
 678              	CapSense_CSD_UpdateSensorBaseline:
 679              	.LFB39:
 514:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 515:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 516:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 517:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateSensorBaseline
 518:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 519:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 520:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 521:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Updates the CapSense_CSD_sensorBaseline[sensor] array element using the
 522:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by
 523:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 524:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  it in CapSense_CSD_sensorSignal[sensor].
 525:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is enabled, the baseline updated regards the noise threshold.
 526:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the auto reset option is disabled, the baseline stops updating.
 527:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Baseline is loaded with raw count value if a signal is greater than zero and
 528:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  if signal is less than noise threshold.
 529:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline
 530:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  calculation.
 531:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API updates the thresholds in the Smartsense Mode.
 532:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 533:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 534:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 535:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 536:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 537:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 538:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 539:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 540:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
 541:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 542:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 543:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 544:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 545:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 546:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateSensorBaseline(uint32 sensor)
 547:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 680              		.loc 1 547 0
 681              		.cfi_startproc
 682 0000 80B5     		push	{r7, lr}
 683              		.cfi_def_cfa_offset 8
 684              		.cfi_offset 7, -8
 685              		.cfi_offset 14, -4
 686 0002 82B0     		sub	sp, sp, #8
 687              		.cfi_def_cfa_offset 16
 688 0004 00AF     		add	r7, sp, #0
 689              		.cfi_def_cfa_register 7
 690 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 23


 548:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 549:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 widget;
 550:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 551:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         widget = CapSense_CSD_widgetNumber[sensor];
 552:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 553:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 554:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(widget < CapSense_CSD_END_OF_WIDGETS_INDEX)
 555:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 556:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 557:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 558:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)
 559:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_UpdateThresholds(sensor);
 691              		.loc 1 559 0
 692 0008 7B68     		ldr	r3, [r7, #4]
 693 000a 181C     		mov	r0, r3
 694 000c FFF7FEFF 		bl	CapSense_CSD_UpdateThresholds
 560:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO) */
 561:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 562:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_UpdateBaselineNoThreshold(sensor);
 695              		.loc 1 562 0
 696 0010 7B68     		ldr	r3, [r7, #4]
 697 0012 181C     		mov	r0, r3
 698 0014 FFF7FEFF 		bl	CapSense_CSD_UpdateBaselineNoThreshold
 563:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 564:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_TOTAL_GENERICS_COUNT)
 565:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Exclude generic widget */
 566:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 567:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif  /* CapSense_CSD_TOTAL_GENERICS_COUNT */
 568:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 699              		.loc 1 568 0
 700 0018 BD46     		mov	sp, r7
 701 001a 02B0     		add	sp, sp, #8
 702              		@ sp needed
 703 001c 80BD     		pop	{r7, pc}
 704              		.cfi_endproc
 705              	.LFE39:
 706              		.size	CapSense_CSD_UpdateSensorBaseline, .-CapSense_CSD_UpdateSensorBaseline
 707 001e C046     		.section	.text.CapSense_CSD_UpdateEnabledBaselines,"ax",%progbits
 708              		.align	2
 709              		.global	CapSense_CSD_UpdateEnabledBaselines
 710              		.code	16
 711              		.thumb_func
 712              		.type	CapSense_CSD_UpdateEnabledBaselines, %function
 713              	CapSense_CSD_UpdateEnabledBaselines:
 714              	.LFB40:
 569:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 570:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 571:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 572:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateEnabledBaselines
 573:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 574:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 575:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 576:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the
 577:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines
 578:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for the enabled sensors.
 579:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 580:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 24


 581:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 582:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 583:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 584:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 585:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 586:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 587:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
 588:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
 589:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
 590:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 591:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
 592:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 593:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 594:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 595:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 596:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 597:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 598:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 599:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 600:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****  void CapSense_CSD_UpdateEnabledBaselines(void)
 601:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 715              		.loc 1 601 0
 716              		.cfi_startproc
 717 0000 80B5     		push	{r7, lr}
 718              		.cfi_def_cfa_offset 8
 719              		.cfi_offset 7, -8
 720              		.cfi_offset 14, -4
 721 0002 82B0     		sub	sp, sp, #8
 722              		.cfi_def_cfa_offset 16
 723 0004 00AF     		add	r7, sp, #0
 724              		.cfi_def_cfa_register 7
 602:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 603:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 604:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 605:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_SENSOR_COUNT; i++)
 725              		.loc 1 605 0
 726 0006 0023     		mov	r3, #0
 727 0008 7B60     		str	r3, [r7, #4]
 728 000a 11E0     		b	.L33
 729              	.L35:
 606:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 607:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 730              		.loc 1 607 0
 731 000c 0B4A     		ldr	r2, .L36
 732 000e 7B68     		ldr	r3, [r7, #4]
 733 0010 101C     		mov	r0, r2
 734 0012 191C     		mov	r1, r3
 735 0014 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 736 0018 031C     		mov	r3, r0
 737 001a 3B60     		str	r3, [r7]
 608:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 609:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(0u != isSensorEnabled)
 738              		.loc 1 609 0
 739 001c 3B68     		ldr	r3, [r7]
 740 001e 002B     		cmp	r3, #0
 741 0020 03D0     		beq	.L34
 610:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 25


 611:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 742              		.loc 1 611 0
 743 0022 7B68     		ldr	r3, [r7, #4]
 744 0024 181C     		mov	r0, r3
 745 0026 FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 746              	.L34:
 605:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 747              		.loc 1 605 0 discriminator 2
 748 002a 7B68     		ldr	r3, [r7, #4]
 749 002c 0133     		add	r3, r3, #1
 750 002e 7B60     		str	r3, [r7, #4]
 751              	.L33:
 605:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 752              		.loc 1 605 0 is_stmt 0 discriminator 1
 753 0030 7B68     		ldr	r3, [r7, #4]
 754 0032 0B2B     		cmp	r3, #11
 755 0034 EAD9     		bls	.L35
 612:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 613:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 614:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 756              		.loc 1 614 0 is_stmt 1
 757 0036 BD46     		mov	sp, r7
 758 0038 02B0     		add	sp, sp, #8
 759              		@ sp needed
 760 003a 80BD     		pop	{r7, pc}
 761              	.L37:
 762              		.align	2
 763              	.L36:
 764 003c 00000000 		.word	CapSense_CSD_sensorEnableMask
 765              		.cfi_endproc
 766              	.LFE40:
 767              		.size	CapSense_CSD_UpdateEnabledBaselines, .-CapSense_CSD_UpdateEnabledBaselines
 768              		.section	.text.CapSense_CSD_UpdateWidgetBaseline,"ax",%progbits
 769              		.align	2
 770              		.global	CapSense_CSD_UpdateWidgetBaseline
 771              		.code	16
 772              		.thumb_func
 773              		.type	CapSense_CSD_UpdateWidgetBaseline, %function
 774              	CapSense_CSD_UpdateWidgetBaseline:
 775              	.LFB41:
 615:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 616:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 617:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_UpdateWidgetBaseline
 618:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 619:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 620:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 621:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Checks CapSense_CSD_sensorEnableMask[] array and calls the
 622:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_UpdateSensorBaseline function to update the baselines
 623:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for the enabled sensors that belong to widget.
 624:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 625:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 626:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  Widget number.
 627:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 628:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 629:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 630:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 631:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 26


 632:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
 633:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
 634:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
 635:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 636:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
 637:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 638:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
 639:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
 640:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 641:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 642:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 643:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 644:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 645:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_UpdateWidgetBaseline(uint32 widget)
 646:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 776              		.loc 1 646 0
 777              		.cfi_startproc
 778 0000 80B5     		push	{r7, lr}
 779              		.cfi_def_cfa_offset 8
 780              		.cfi_offset 7, -8
 781              		.cfi_offset 14, -4
 782 0002 88B0     		sub	sp, sp, #32
 783              		.cfi_def_cfa_offset 40
 784 0004 00AF     		add	r7, sp, #0
 785              		.cfi_def_cfa_register 7
 786 0006 7860     		str	r0, [r7, #4]
 647:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 sensorsPerWidget;
 648:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 firstSensor;
 649:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 lastSensor;
 650:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 i;
 651:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 isSensorEnabled;
 652:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 653:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get number of sensors in widget */
 654:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     sensorsPerWidget = CapSense_CSD_numberOfSensors[widget];
 787              		.loc 1 654 0
 788 0008 0C23     		mov	r3, #12
 789 000a BB61     		str	r3, [r7, #24]
 655:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 656:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get first sensor in widget */
 657:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     firstSensor = CapSense_CSD_rawDataIndex[widget];
 790              		.loc 1 657 0
 791 000c 0023     		mov	r3, #0
 792 000e 7B61     		str	r3, [r7, #20]
 658:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 659:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Get last sensor in widget */
 660:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     lastSensor = (CapSense_CSD_rawDataIndex[widget] + sensorsPerWidget);
 793              		.loc 1 660 0
 794 0010 0023     		mov	r3, #0
 795 0012 1A1C     		mov	r2, r3
 796 0014 BB69     		ldr	r3, [r7, #24]
 797 0016 D318     		add	r3, r2, r3
 798 0018 3B61     		str	r3, [r7, #16]
 661:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 662:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = firstSensor; i < lastSensor; i++)
 799              		.loc 1 662 0
 800 001a 7B69     		ldr	r3, [r7, #20]
 801 001c FB61     		str	r3, [r7, #28]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 27


 802 001e 11E0     		b	.L39
 803              	.L41:
 663:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 664:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         isSensorEnabled = CapSense_CSD_GetBitValue(CapSense_CSD_sensorEnableMask, i);
 804              		.loc 1 664 0
 805 0020 0C4A     		ldr	r2, .L42
 806 0022 FB69     		ldr	r3, [r7, #28]
 807 0024 101C     		mov	r0, r2
 808 0026 191C     		mov	r1, r3
 809 0028 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 810 002c 031C     		mov	r3, r0
 811 002e FB60     		str	r3, [r7, #12]
 665:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 666:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(0u != isSensorEnabled)
 812              		.loc 1 666 0
 813 0030 FB68     		ldr	r3, [r7, #12]
 814 0032 002B     		cmp	r3, #0
 815 0034 03D0     		beq	.L40
 667:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
 668:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_UpdateSensorBaseline(i);
 816              		.loc 1 668 0
 817 0036 FB69     		ldr	r3, [r7, #28]
 818 0038 181C     		mov	r0, r3
 819 003a FFF7FEFF 		bl	CapSense_CSD_UpdateSensorBaseline
 820              	.L40:
 662:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 821              		.loc 1 662 0 discriminator 2
 822 003e FB69     		ldr	r3, [r7, #28]
 823 0040 0133     		add	r3, r3, #1
 824 0042 FB61     		str	r3, [r7, #28]
 825              	.L39:
 662:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 826              		.loc 1 662 0 is_stmt 0 discriminator 1
 827 0044 FA69     		ldr	r2, [r7, #28]
 828 0046 3B69     		ldr	r3, [r7, #16]
 829 0048 9A42     		cmp	r2, r3
 830 004a E9D3     		bcc	.L41
 669:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
 670:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 671:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 831              		.loc 1 671 0 is_stmt 1
 832 004c BD46     		mov	sp, r7
 833 004e 08B0     		add	sp, sp, #32
 834              		@ sp needed
 835 0050 80BD     		pop	{r7, pc}
 836              	.L43:
 837 0052 C046     		.align	2
 838              	.L42:
 839 0054 00000000 		.word	CapSense_CSD_sensorEnableMask
 840              		.cfi_endproc
 841              	.LFE41:
 842              		.size	CapSense_CSD_UpdateWidgetBaseline, .-CapSense_CSD_UpdateWidgetBaseline
 843              		.section	.text.CapSense_CSD_GetBaselineData,"ax",%progbits
 844              		.align	2
 845              		.global	CapSense_CSD_GetBaselineData
 846              		.code	16
 847              		.thumb_func
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 28


 848              		.type	CapSense_CSD_GetBaselineData, %function
 849              	CapSense_CSD_GetBaselineData:
 850              	.LFB42:
 672:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 673:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 674:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 675:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetBaselineData
 676:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 677:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 678:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 679:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the sensor baseline from the component.
 680:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 681:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 682:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 683:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 684:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 685:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the baseline value of the sensor indicated by an argument.
 686:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 687:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 688:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] - the array with an initial values by scanning
 689:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 690:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 691:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 692:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 693:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 694:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint16 CapSense_CSD_GetBaselineData(uint32 sensor)
 695:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 851              		.loc 1 695 0
 852              		.cfi_startproc
 853 0000 80B5     		push	{r7, lr}
 854              		.cfi_def_cfa_offset 8
 855              		.cfi_offset 7, -8
 856              		.cfi_offset 14, -4
 857 0002 82B0     		sub	sp, sp, #8
 858              		.cfi_def_cfa_offset 16
 859 0004 00AF     		add	r7, sp, #0
 860              		.cfi_def_cfa_register 7
 861 0006 7860     		str	r0, [r7, #4]
 696:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_sensorBaseline[sensor]);
 862              		.loc 1 696 0
 863 0008 034B     		ldr	r3, .L46
 864 000a 7A68     		ldr	r2, [r7, #4]
 865 000c 5200     		lsl	r2, r2, #1
 866 000e D35A     		ldrh	r3, [r2, r3]
 697:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 867              		.loc 1 697 0
 868 0010 181C     		mov	r0, r3
 869 0012 BD46     		mov	sp, r7
 870 0014 02B0     		add	sp, sp, #8
 871              		@ sp needed
 872 0016 80BD     		pop	{r7, pc}
 873              	.L47:
 874              		.align	2
 875              	.L46:
 876 0018 00000000 		.word	CapSense_CSD_sensorBaseline
 877              		.cfi_endproc
 878              	.LFE42:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 29


 879              		.size	CapSense_CSD_GetBaselineData, .-CapSense_CSD_GetBaselineData
 880              		.section	.text.CapSense_CSD_SetBaselineData,"ax",%progbits
 881              		.align	2
 882              		.global	CapSense_CSD_SetBaselineData
 883              		.code	16
 884              		.thumb_func
 885              		.type	CapSense_CSD_SetBaselineData, %function
 886              	CapSense_CSD_SetBaselineData:
 887              	.LFB43:
 698:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 699:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 700:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 701:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_SetBaselineData
 702:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 703:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 704:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 705:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API writes the data value passed as an argument to the sensor baseline array.
 706:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 707:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 708:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 709:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  data:    Sensor baseline.
 710:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 711:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 712:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 713:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 714:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 715:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorBaseline[] - the array with initial values by scanning
 716:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 717:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 718:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 719:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 720:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 721:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_SetBaselineData(uint32 sensor, uint16 data)
 722:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 888              		.loc 1 722 0
 889              		.cfi_startproc
 890 0000 80B5     		push	{r7, lr}
 891              		.cfi_def_cfa_offset 8
 892              		.cfi_offset 7, -8
 893              		.cfi_offset 14, -4
 894 0002 82B0     		sub	sp, sp, #8
 895              		.cfi_def_cfa_offset 16
 896 0004 00AF     		add	r7, sp, #0
 897              		.cfi_def_cfa_register 7
 898 0006 7860     		str	r0, [r7, #4]
 899 0008 0A1C     		mov	r2, r1
 900 000a BB1C     		add	r3, r7, #2
 901 000c 1A80     		strh	r2, [r3]
 723:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorBaseline[sensor] = data;
 902              		.loc 1 723 0
 903 000e 044B     		ldr	r3, .L49
 904 0010 7A68     		ldr	r2, [r7, #4]
 905 0012 5200     		lsl	r2, r2, #1
 906 0014 B91C     		add	r1, r7, #2
 907 0016 0988     		ldrh	r1, [r1]
 908 0018 D152     		strh	r1, [r2, r3]
 724:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 30


 909              		.loc 1 724 0
 910 001a BD46     		mov	sp, r7
 911 001c 02B0     		add	sp, sp, #8
 912              		@ sp needed
 913 001e 80BD     		pop	{r7, pc}
 914              	.L50:
 915              		.align	2
 916              	.L49:
 917 0020 00000000 		.word	CapSense_CSD_sensorBaseline
 918              		.cfi_endproc
 919              	.LFE43:
 920              		.size	CapSense_CSD_SetBaselineData, .-CapSense_CSD_SetBaselineData
 921              		.section	.text.CapSense_CSD_GetDiffCountData,"ax",%progbits
 922              		.align	2
 923              		.global	CapSense_CSD_GetDiffCountData
 924              		.code	16
 925              		.thumb_func
 926              		.type	CapSense_CSD_GetDiffCountData, %function
 927              	CapSense_CSD_GetDiffCountData:
 928              	.LFB44:
 725:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 726:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 727:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 728:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetDiffCountData
 729:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 730:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 731:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 732:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function returns the Sensor Signal from the component.
 733:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 734:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 735:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 736:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 737:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 738:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the difference count value of the sensor indicated by the
 739:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  argument.
 740:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 741:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 742:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - the array with difference counts for sensors
 743:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 744:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 745:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 746:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 747:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 748:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetDiffCountData(uint32 sensor)
 749:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 929              		.loc 1 749 0
 930              		.cfi_startproc
 931 0000 80B5     		push	{r7, lr}
 932              		.cfi_def_cfa_offset 8
 933              		.cfi_offset 7, -8
 934              		.cfi_offset 14, -4
 935 0002 82B0     		sub	sp, sp, #8
 936              		.cfi_def_cfa_offset 16
 937 0004 00AF     		add	r7, sp, #0
 938              		.cfi_def_cfa_register 7
 939 0006 7860     		str	r0, [r7, #4]
 750:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_sensorSignal[sensor]);
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 31


 940              		.loc 1 750 0
 941 0008 034A     		ldr	r2, .L53
 942 000a 7B68     		ldr	r3, [r7, #4]
 943 000c D318     		add	r3, r2, r3
 944 000e 1B78     		ldrb	r3, [r3]
 751:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 945              		.loc 1 751 0
 946 0010 181C     		mov	r0, r3
 947 0012 BD46     		mov	sp, r7
 948 0014 02B0     		add	sp, sp, #8
 949              		@ sp needed
 950 0016 80BD     		pop	{r7, pc}
 951              	.L54:
 952              		.align	2
 953              	.L53:
 954 0018 00000000 		.word	CapSense_CSD_sensorSignal
 955              		.cfi_endproc
 956              	.LFE44:
 957              		.size	CapSense_CSD_GetDiffCountData, .-CapSense_CSD_GetDiffCountData
 958              		.section	.text.CapSense_CSD_SetDiffCountData,"ax",%progbits
 959              		.align	2
 960              		.global	CapSense_CSD_SetDiffCountData
 961              		.code	16
 962              		.thumb_func
 963              		.type	CapSense_CSD_SetDiffCountData, %function
 964              	CapSense_CSD_SetDiffCountData:
 965              	.LFB45:
 752:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 753:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 754:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 755:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_SetDiffCountData
 756:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 757:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 758:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 759:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API writes the data value passed as an argument to the sensor signal array.
 760:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 761:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 762:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
 763:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  value:   Sensor signal.
 764:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 765:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 766:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 767:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 768:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 769:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - the array with difference counts for sensors
 770:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 771:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 772:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 773:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 774:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 775:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_SetDiffCountData(uint32 sensor, uint8 value)
 776:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 966              		.loc 1 776 0
 967              		.cfi_startproc
 968 0000 80B5     		push	{r7, lr}
 969              		.cfi_def_cfa_offset 8
 970              		.cfi_offset 7, -8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 32


 971              		.cfi_offset 14, -4
 972 0002 82B0     		sub	sp, sp, #8
 973              		.cfi_def_cfa_offset 16
 974 0004 00AF     		add	r7, sp, #0
 975              		.cfi_def_cfa_register 7
 976 0006 7860     		str	r0, [r7, #4]
 977 0008 0A1C     		mov	r2, r1
 978 000a FB1C     		add	r3, r7, #3
 979 000c 1A70     		strb	r2, [r3]
 777:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_sensorSignal[sensor] = value;
 980              		.loc 1 777 0
 981 000e 044A     		ldr	r2, .L56
 982 0010 7B68     		ldr	r3, [r7, #4]
 983 0012 D318     		add	r3, r2, r3
 984 0014 FA1C     		add	r2, r7, #3
 985 0016 1278     		ldrb	r2, [r2]
 986 0018 1A70     		strb	r2, [r3]
 778:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 987              		.loc 1 778 0
 988 001a BD46     		mov	sp, r7
 989 001c 02B0     		add	sp, sp, #8
 990              		@ sp needed
 991 001e 80BD     		pop	{r7, pc}
 992              	.L57:
 993              		.align	2
 994              	.L56:
 995 0020 00000000 		.word	CapSense_CSD_sensorSignal
 996              		.cfi_endproc
 997              	.LFE45:
 998              		.size	CapSense_CSD_SetDiffCountData, .-CapSense_CSD_SetDiffCountData
 999              		.section	.text.CapSense_CSD_GetFingerThreshold,"ax",%progbits
 1000              		.align	2
 1001              		.global	CapSense_CSD_GetFingerThreshold
 1002              		.code	16
 1003              		.thumb_func
 1004              		.type	CapSense_CSD_GetFingerThreshold, %function
 1005              	CapSense_CSD_GetFingerThreshold:
 1006              	.LFB46:
 779:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 780:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 781:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 782:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetFingerThreshold
 783:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 784:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 785:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 786:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the finger threshold from the component.
 787:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 788:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 789:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 790:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 791:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 792:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the finger threshold of the widget indicated by the argument.
 793:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 794:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 795:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_fingerThreshold[] - This array contains the level of signal
 796:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for each widget that is determined if a finger is present on the widget.
 797:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 33


 798:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 799:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 800:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 801:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 802:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetFingerThreshold(uint32 widget)
 803:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1007              		.loc 1 803 0
 1008              		.cfi_startproc
 1009 0000 80B5     		push	{r7, lr}
 1010              		.cfi_def_cfa_offset 8
 1011              		.cfi_offset 7, -8
 1012              		.cfi_offset 14, -4
 1013 0002 82B0     		sub	sp, sp, #8
 1014              		.cfi_def_cfa_offset 16
 1015 0004 00AF     		add	r7, sp, #0
 1016              		.cfi_def_cfa_register 7
 1017 0006 7860     		str	r0, [r7, #4]
 804:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_fingerThreshold[widget]);
 1018              		.loc 1 804 0
 1019 0008 034A     		ldr	r2, .L60
 1020 000a 7B68     		ldr	r3, [r7, #4]
 1021 000c D318     		add	r3, r2, r3
 1022 000e 1B78     		ldrb	r3, [r3]
 805:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1023              		.loc 1 805 0
 1024 0010 181C     		mov	r0, r3
 1025 0012 BD46     		mov	sp, r7
 1026 0014 02B0     		add	sp, sp, #8
 1027              		@ sp needed
 1028 0016 80BD     		pop	{r7, pc}
 1029              	.L61:
 1030              		.align	2
 1031              	.L60:
 1032 0018 00000000 		.word	CapSense_CSD_fingerThreshold
 1033              		.cfi_endproc
 1034              	.LFE46:
 1035              		.size	CapSense_CSD_GetFingerThreshold, .-CapSense_CSD_GetFingerThreshold
 1036              		.section	.text.CapSense_CSD_GetNoiseThreshold,"ax",%progbits
 1037              		.align	2
 1038              		.global	CapSense_CSD_GetNoiseThreshold
 1039              		.code	16
 1040              		.thumb_func
 1041              		.type	CapSense_CSD_GetNoiseThreshold, %function
 1042              	CapSense_CSD_GetNoiseThreshold:
 1043              	.LFB47:
 806:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 807:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 808:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 809:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetNoiseThreshold
 810:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 811:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 812:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 813:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the noise threshold from the component.
 814:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 815:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 816:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 817:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 34


 818:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 819:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the noise threshold of the widget indicated by the argument.
 820:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 821:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 822:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_noiseThreshold[] - This array contains the level of signal
 823:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  for each widget that determines the level of noise in the capacitive scan.
 824:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 825:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 826:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 827:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 828:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetNoiseThreshold(uint32 widget)
 830:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1044              		.loc 1 830 0
 1045              		.cfi_startproc
 1046 0000 80B5     		push	{r7, lr}
 1047              		.cfi_def_cfa_offset 8
 1048              		.cfi_offset 7, -8
 1049              		.cfi_offset 14, -4
 1050 0002 82B0     		sub	sp, sp, #8
 1051              		.cfi_def_cfa_offset 16
 1052 0004 00AF     		add	r7, sp, #0
 1053              		.cfi_def_cfa_register 7
 1054 0006 7860     		str	r0, [r7, #4]
 831:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return (CapSense_CSD_noiseThreshold[widget]);
 1055              		.loc 1 831 0
 1056 0008 034A     		ldr	r2, .L64
 1057 000a 7B68     		ldr	r3, [r7, #4]
 1058 000c D318     		add	r3, r2, r3
 1059 000e 1B78     		ldrb	r3, [r3]
 832:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1060              		.loc 1 832 0
 1061 0010 181C     		mov	r0, r3
 1062 0012 BD46     		mov	sp, r7
 1063 0014 02B0     		add	sp, sp, #8
 1064              		@ sp needed
 1065 0016 80BD     		pop	{r7, pc}
 1066              	.L65:
 1067              		.align	2
 1068              	.L64:
 1069 0018 00000000 		.word	CapSense_CSD_noiseThreshold
 1070              		.cfi_endproc
 1071              	.LFE47:
 1072              		.size	CapSense_CSD_GetNoiseThreshold, .-CapSense_CSD_GetNoiseThreshold
 1073              		.section	.text.CapSense_CSD_GetFingerHysteresis,"ax",%progbits
 1074              		.align	2
 1075              		.global	CapSense_CSD_GetFingerHysteresis
 1076              		.code	16
 1077              		.thumb_func
 1078              		.type	CapSense_CSD_GetFingerHysteresis, %function
 1079              	CapSense_CSD_GetFingerHysteresis:
 1080              	.LFB48:
 833:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 834:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 835:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 836:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetFingerHysteresis
 837:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 35


 838:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 839:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 840:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the Hysteresis value from the component.
 841:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 842:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 843:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
 844:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 845:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
 846:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the Hysteresis of the widget indicated by the argument.
 847:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 848:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 849:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_hysteresis[] - This array contains the hysteresis value
 850:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   for each widget.
 851:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
 852:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 853:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 854:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 855:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 856:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 857:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetFingerHysteresis(uint32 widget)
 858:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1081              		.loc 1 858 0
 1082              		.cfi_startproc
 1083 0000 80B5     		push	{r7, lr}
 1084              		.cfi_def_cfa_offset 8
 1085              		.cfi_offset 7, -8
 1086              		.cfi_offset 14, -4
 1087 0002 82B0     		sub	sp, sp, #8
 1088              		.cfi_def_cfa_offset 16
 1089 0004 00AF     		add	r7, sp, #0
 1090              		.cfi_def_cfa_register 7
 1091 0006 7860     		str	r0, [r7, #4]
 859:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_hysteresis[widget]);
 1092              		.loc 1 859 0
 1093 0008 034A     		ldr	r2, .L68
 1094 000a 7B68     		ldr	r3, [r7, #4]
 1095 000c D318     		add	r3, r2, r3
 1096 000e 1B78     		ldrb	r3, [r3]
 860:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1097              		.loc 1 860 0
 1098 0010 181C     		mov	r0, r3
 1099 0012 BD46     		mov	sp, r7
 1100 0014 02B0     		add	sp, sp, #8
 1101              		@ sp needed
 1102 0016 80BD     		pop	{r7, pc}
 1103              	.L69:
 1104              		.align	2
 1105              	.L68:
 1106 0018 00000000 		.word	CapSense_CSD_hysteresis
 1107              		.cfi_endproc
 1108              	.LFE48:
 1109              		.size	CapSense_CSD_GetFingerHysteresis, .-CapSense_CSD_GetFingerHysteresis
 1110              		.section	.text.CapSense_CSD_GetNegativeNoiseThreshold,"ax",%progbits
 1111              		.align	2
 1112              		.global	CapSense_CSD_GetNegativeNoiseThreshold
 1113              		.code	16
 1114              		.thumb_func
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 36


 1115              		.type	CapSense_CSD_GetNegativeNoiseThreshold, %function
 1116              	CapSense_CSD_GetNegativeNoiseThreshold:
 1117              	.LFB49:
 861:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 862:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 863:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
 864:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetNegativeNoiseThreshold
 865:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
 866:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 867:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
 868:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function reads the negative noise threshold from the component.
 869:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 870:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
 871:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None.
 872:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 873:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return Value:
 874:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the negative noise threshold
 875:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 876:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
 877:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_negativeNoiseThreshold - This variable specifies the negative
 878:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   difference between the raw count and baseline levels for Baseline resetting
 879:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   to the raw count level.
 880:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 881:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
 882:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
 883:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
 884:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
 885:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetNegativeNoiseThreshold(uint32 widget)
 886:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1118              		.loc 1 886 0
 1119              		.cfi_startproc
 1120 0000 80B5     		push	{r7, lr}
 1121              		.cfi_def_cfa_offset 8
 1122              		.cfi_offset 7, -8
 1123              		.cfi_offset 14, -4
 1124 0002 82B0     		sub	sp, sp, #8
 1125              		.cfi_def_cfa_offset 16
 1126 0004 00AF     		add	r7, sp, #0
 1127              		.cfi_def_cfa_register 7
 1128 0006 7860     		str	r0, [r7, #4]
 887:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 888:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_negativeNoiseThreshold[widget]);
 1129              		.loc 1 888 0
 1130 0008 034A     		ldr	r2, .L72
 1131 000a 7B68     		ldr	r3, [r7, #4]
 1132 000c D318     		add	r3, r2, r3
 1133 000e 1B78     		ldrb	r3, [r3]
 889:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #else
 890:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_NEGATIVE_NOISE_THRESHOLD);
 891:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
 892:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1134              		.loc 1 892 0
 1135 0010 181C     		mov	r0, r3
 1136 0012 BD46     		mov	sp, r7
 1137 0014 02B0     		add	sp, sp, #8
 1138              		@ sp needed
 1139 0016 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 37


 1140              	.L73:
 1141              		.align	2
 1142              	.L72:
 1143 0018 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 1144              		.cfi_endproc
 1145              	.LFE49:
 1146              		.size	CapSense_CSD_GetNegativeNoiseThreshold, .-CapSense_CSD_GetNegativeNoiseThreshold
 1147              		.section	.text.CapSense_CSD_SetFingerThreshold,"ax",%progbits
 1148              		.align	2
 1149              		.global	CapSense_CSD_SetFingerThreshold
 1150              		.code	16
 1151              		.thumb_func
 1152              		.type	CapSense_CSD_SetFingerThreshold, %function
 1153              	CapSense_CSD_SetFingerThreshold:
 1154              	.LFB50:
 893:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 894:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 895:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE)
 896:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 897:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetFingerThreshold
 898:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 899:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 900:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 901:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the finger threshold value for a widget.
 902:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 903:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 904:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensorNumber:  widget index.
 905:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Finger threshold value for the widget.
 906:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 907:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 908:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 909:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 910:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 911:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_fingerThreshold[] - This array contains the level of signal
 912:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   for each widget that determines if a finger is present on the widget.
 913:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 914:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 915:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 916:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 917:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 918:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetFingerThreshold(uint32 widget, uint8 value)
 919:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1155              		.loc 1 919 0
 1156              		.cfi_startproc
 1157 0000 80B5     		push	{r7, lr}
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 7, -8
 1160              		.cfi_offset 14, -4
 1161 0002 82B0     		sub	sp, sp, #8
 1162              		.cfi_def_cfa_offset 16
 1163 0004 00AF     		add	r7, sp, #0
 1164              		.cfi_def_cfa_register 7
 1165 0006 7860     		str	r0, [r7, #4]
 1166 0008 0A1C     		mov	r2, r1
 1167 000a FB1C     		add	r3, r7, #3
 1168 000c 1A70     		strb	r2, [r3]
 920:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_fingerThreshold[widget] = value;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 38


 1169              		.loc 1 920 0
 1170 000e 044A     		ldr	r2, .L75
 1171 0010 7B68     		ldr	r3, [r7, #4]
 1172 0012 D318     		add	r3, r2, r3
 1173 0014 FA1C     		add	r2, r7, #3
 1174 0016 1278     		ldrb	r2, [r2]
 1175 0018 1A70     		strb	r2, [r3]
 921:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1176              		.loc 1 921 0
 1177 001a BD46     		mov	sp, r7
 1178 001c 02B0     		add	sp, sp, #8
 1179              		@ sp needed
 1180 001e 80BD     		pop	{r7, pc}
 1181              	.L76:
 1182              		.align	2
 1183              	.L75:
 1184 0020 00000000 		.word	CapSense_CSD_fingerThreshold
 1185              		.cfi_endproc
 1186              	.LFE50:
 1187              		.size	CapSense_CSD_SetFingerThreshold, .-CapSense_CSD_SetFingerThreshold
 1188              		.section	.text.CapSense_CSD_SetNoiseThreshold,"ax",%progbits
 1189              		.align	2
 1190              		.global	CapSense_CSD_SetNoiseThreshold
 1191              		.code	16
 1192              		.thumb_func
 1193              		.type	CapSense_CSD_SetNoiseThreshold, %function
 1194              	CapSense_CSD_SetNoiseThreshold:
 1195              	.LFB51:
 922:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 923:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 924:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 925:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetNoiseThreshold
 926:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 927:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 928:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 929:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Noise Threshold value for each widget.
 930:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 931:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 932:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Sensor index number.
 933:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:   Noise Threshold value for widget.
 934:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 935:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 936:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 937:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 938:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 939:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_noiseThreshold[] - This array contains the level of signal
 940:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   for each widget that determines the level of noise in the capacitive scan.
 941:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 942:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 943:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 944:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 945:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 946:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetNoiseThreshold(uint32 widget, uint8 value)
 947:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1196              		.loc 1 947 0
 1197              		.cfi_startproc
 1198 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 39


 1199              		.cfi_def_cfa_offset 8
 1200              		.cfi_offset 7, -8
 1201              		.cfi_offset 14, -4
 1202 0002 82B0     		sub	sp, sp, #8
 1203              		.cfi_def_cfa_offset 16
 1204 0004 00AF     		add	r7, sp, #0
 1205              		.cfi_def_cfa_register 7
 1206 0006 7860     		str	r0, [r7, #4]
 1207 0008 0A1C     		mov	r2, r1
 1208 000a FB1C     		add	r3, r7, #3
 1209 000c 1A70     		strb	r2, [r3]
 948:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_noiseThreshold[widget] = value;
 1210              		.loc 1 948 0
 1211 000e 044A     		ldr	r2, .L78
 1212 0010 7B68     		ldr	r3, [r7, #4]
 1213 0012 D318     		add	r3, r2, r3
 1214 0014 FA1C     		add	r2, r7, #3
 1215 0016 1278     		ldrb	r2, [r2]
 1216 0018 1A70     		strb	r2, [r3]
 949:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1217              		.loc 1 949 0
 1218 001a BD46     		mov	sp, r7
 1219 001c 02B0     		add	sp, sp, #8
 1220              		@ sp needed
 1221 001e 80BD     		pop	{r7, pc}
 1222              	.L79:
 1223              		.align	2
 1224              	.L78:
 1225 0020 00000000 		.word	CapSense_CSD_noiseThreshold
 1226              		.cfi_endproc
 1227              	.LFE51:
 1228              		.size	CapSense_CSD_SetNoiseThreshold, .-CapSense_CSD_SetNoiseThreshold
 1229              		.section	.text.CapSense_CSD_SetFingerHysteresis,"ax",%progbits
 1230              		.align	2
 1231              		.global	CapSense_CSD_SetFingerHysteresis
 1232              		.code	16
 1233              		.thumb_func
 1234              		.type	CapSense_CSD_SetFingerHysteresis, %function
 1235              	CapSense_CSD_SetFingerHysteresis:
 1236              	.LFB52:
 950:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 951:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 952:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 953:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetFingerHysteresis
 954:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
 955:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 956:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 957:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Hysteresis value of a widget
 958:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 959:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 960:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Hysteresis value for widgets.
 961:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  widget number
 962:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 963:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 964:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 965:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 966:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 40


 967:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_hysteresis[] - This array contains the hysteresis value for each widget.
 968:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
 969:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 970:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
 971:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 972:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 973:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
 974:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetFingerHysteresis(uint32 widget, uint8 value)
 975:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1237              		.loc 1 975 0
 1238              		.cfi_startproc
 1239 0000 80B5     		push	{r7, lr}
 1240              		.cfi_def_cfa_offset 8
 1241              		.cfi_offset 7, -8
 1242              		.cfi_offset 14, -4
 1243 0002 82B0     		sub	sp, sp, #8
 1244              		.cfi_def_cfa_offset 16
 1245 0004 00AF     		add	r7, sp, #0
 1246              		.cfi_def_cfa_register 7
 1247 0006 7860     		str	r0, [r7, #4]
 1248 0008 0A1C     		mov	r2, r1
 1249 000a FB1C     		add	r3, r7, #3
 1250 000c 1A70     		strb	r2, [r3]
 976:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_hysteresis[widget] = value;
 1251              		.loc 1 976 0
 1252 000e 044A     		ldr	r2, .L81
 1253 0010 7B68     		ldr	r3, [r7, #4]
 1254 0012 D318     		add	r3, r2, r3
 1255 0014 FA1C     		add	r2, r7, #3
 1256 0016 1278     		ldrb	r2, [r2]
 1257 0018 1A70     		strb	r2, [r3]
 977:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1258              		.loc 1 977 0
 1259 001a BD46     		mov	sp, r7
 1260 001c 02B0     		add	sp, sp, #8
 1261              		@ sp needed
 1262 001e 80BD     		pop	{r7, pc}
 1263              	.L82:
 1264              		.align	2
 1265              	.L81:
 1266 0020 00000000 		.word	CapSense_CSD_hysteresis
 1267              		.cfi_endproc
 1268              	.LFE52:
 1269              		.size	CapSense_CSD_SetFingerHysteresis, .-CapSense_CSD_SetFingerHysteresis
 1270              		.section	.text.CapSense_CSD_SetNegativeNoiseThreshold,"ax",%progbits
 1271              		.align	2
 1272              		.global	CapSense_CSD_SetNegativeNoiseThreshold
 1273              		.code	16
 1274              		.thumb_func
 1275              		.type	CapSense_CSD_SetNegativeNoiseThreshold, %function
 1276              	CapSense_CSD_SetNegativeNoiseThreshold:
 1277              	.LFB53:
 978:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 979:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
 980:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
 981:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetNegativeNoiseThreshold
 982:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 41


 983:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 984:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
 985:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the Negative Noise Threshold value of a widget
 986:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 987:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
 988:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Negative Noise Threshold value for widgets.
 989:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget: widget number
 990:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 991:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
 992:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
 993:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 994:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
 995:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_negativeNoiseThreshold  - This parameter specifies the negative
 996:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   difference between the raw count and baseline levels for Baseline resetting to
 997:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   the raw count level.
 998:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
 999:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1000:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1001:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1002:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1003:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetNegativeNoiseThreshold(uint32 widget, uint8 value)
1004:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1278              		.loc 1 1004 0
 1279              		.cfi_startproc
 1280 0000 80B5     		push	{r7, lr}
 1281              		.cfi_def_cfa_offset 8
 1282              		.cfi_offset 7, -8
 1283              		.cfi_offset 14, -4
 1284 0002 82B0     		sub	sp, sp, #8
 1285              		.cfi_def_cfa_offset 16
 1286 0004 00AF     		add	r7, sp, #0
 1287              		.cfi_def_cfa_register 7
 1288 0006 7860     		str	r0, [r7, #4]
 1289 0008 0A1C     		mov	r2, r1
 1290 000a FB1C     		add	r3, r7, #3
 1291 000c 1A70     		strb	r2, [r3]
1005:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_negativeNoiseThreshold[widget] = value;
 1292              		.loc 1 1005 0
 1293 000e 044A     		ldr	r2, .L84
 1294 0010 7B68     		ldr	r3, [r7, #4]
 1295 0012 D318     		add	r3, r2, r3
 1296 0014 FA1C     		add	r2, r7, #3
 1297 0016 1278     		ldrb	r2, [r2]
 1298 0018 1A70     		strb	r2, [r3]
1006:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1299              		.loc 1 1006 0
 1300 001a BD46     		mov	sp, r7
 1301 001c 02B0     		add	sp, sp, #8
 1302              		@ sp needed
 1303 001e 80BD     		pop	{r7, pc}
 1304              	.L85:
 1305              		.align	2
 1306              	.L84:
 1307 0020 00000000 		.word	CapSense_CSD_negativeNoiseThreshold
 1308              		.cfi_endproc
 1309              	.LFE53:
 1310              		.size	CapSense_CSD_SetNegativeNoiseThreshold, .-CapSense_CSD_SetNegativeNoiseThreshold
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 42


 1311              		.section	.text.CapSense_CSD_SetDebounce,"ax",%progbits
 1312              		.align	2
 1313              		.global	CapSense_CSD_SetDebounce
 1314              		.code	16
 1315              		.thumb_func
 1316              		.type	CapSense_CSD_SetDebounce, %function
 1317              	CapSense_CSD_SetDebounce:
 1318              	.LFB54:
1007:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1008:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1009:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1010:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetDebounce
1011:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1012:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1013:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1014:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the debounce value for a widget.
1015:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1016:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1017:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value:  Debounce value for widget.
1018:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget: widget index.
1019:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1020:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
1021:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1022:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1023:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1024:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_debounce[] - This array contains the debounce value for each widget.
1025:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_widgetNumberSld - structure with dynamic sliders' parameters.
1026:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1027:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1028:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1029:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1030:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1031:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetDebounce(uint32 widget, uint8 value)
1032:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1319              		.loc 1 1032 0
 1320              		.cfi_startproc
 1321 0000 80B5     		push	{r7, lr}
 1322              		.cfi_def_cfa_offset 8
 1323              		.cfi_offset 7, -8
 1324              		.cfi_offset 14, -4
 1325 0002 82B0     		sub	sp, sp, #8
 1326              		.cfi_def_cfa_offset 16
 1327 0004 00AF     		add	r7, sp, #0
 1328              		.cfi_def_cfa_register 7
 1329 0006 7860     		str	r0, [r7, #4]
 1330 0008 0A1C     		mov	r2, r1
 1331 000a FB1C     		add	r3, r7, #3
 1332 000c 1A70     		strb	r2, [r3]
1033:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_debounce[widget] = value;
 1333              		.loc 1 1033 0
 1334 000e 044A     		ldr	r2, .L87
 1335 0010 7B68     		ldr	r3, [r7, #4]
 1336 0012 D318     		add	r3, r2, r3
 1337 0014 FA1C     		add	r2, r7, #3
 1338 0016 1278     		ldrb	r2, [r2]
 1339 0018 1A70     		strb	r2, [r3]
1034:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 43


 1340              		.loc 1 1034 0
 1341 001a BD46     		mov	sp, r7
 1342 001c 02B0     		add	sp, sp, #8
 1343              		@ sp needed
 1344 001e 80BD     		pop	{r7, pc}
 1345              	.L88:
 1346              		.align	2
 1347              	.L87:
 1348 0020 00000000 		.word	CapSense_CSD_debounce
 1349              		.cfi_endproc
 1350              	.LFE54:
 1351              		.size	CapSense_CSD_SetDebounce, .-CapSense_CSD_SetDebounce
 1352              		.section	.text.CapSense_CSD_SetLowBaselineReset,"ax",%progbits
 1353              		.align	2
 1354              		.global	CapSense_CSD_SetLowBaselineReset
 1355              		.code	16
 1356              		.thumb_func
 1357              		.type	CapSense_CSD_SetLowBaselineReset, %function
 1358              	CapSense_CSD_SetLowBaselineReset:
 1359              	.LFB55:
1035:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1036:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1037:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1038:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_SetLowBaselineReset
1039:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1040:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1041:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1042:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This API sets the low baseline reset threshold value for the sensor.
1043:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1044:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1045:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  value: low baseline reset threshold value.
1046:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensor: Sensor index.
1047:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1048:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return Value:
1049:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1050:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1051:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1052:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_lowBaselineReset[] - This array contains the Baseline update
1053:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold value for each sensor.
1054:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1055:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1056:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1057:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1058:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1059:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_SetLowBaselineReset(uint32 sensor, uint8 value)
1060:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1360              		.loc 1 1060 0
 1361              		.cfi_startproc
 1362 0000 80B5     		push	{r7, lr}
 1363              		.cfi_def_cfa_offset 8
 1364              		.cfi_offset 7, -8
 1365              		.cfi_offset 14, -4
 1366 0002 82B0     		sub	sp, sp, #8
 1367              		.cfi_def_cfa_offset 16
 1368 0004 00AF     		add	r7, sp, #0
 1369              		.cfi_def_cfa_register 7
 1370 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 44


 1371 0008 0A1C     		mov	r2, r1
 1372 000a FB1C     		add	r3, r7, #3
 1373 000c 1A70     		strb	r2, [r3]
1061:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_lowBaselineReset[sensor] = value;
 1374              		.loc 1 1061 0
 1375 000e 044A     		ldr	r2, .L90
 1376 0010 7B68     		ldr	r3, [r7, #4]
 1377 0012 D318     		add	r3, r2, r3
 1378 0014 FA1C     		add	r2, r7, #3
 1379 0016 1278     		ldrb	r2, [r2]
 1380 0018 1A70     		strb	r2, [r3]
1062:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1381              		.loc 1 1062 0
 1382 001a BD46     		mov	sp, r7
 1383 001c 02B0     		add	sp, sp, #8
 1384              		@ sp needed
 1385 001e 80BD     		pop	{r7, pc}
 1386              	.L91:
 1387              		.align	2
 1388              	.L90:
 1389 0020 00000000 		.word	CapSense_CSD_lowBaselineReset
 1390              		.cfi_endproc
 1391              	.LFE55:
 1392              		.size	CapSense_CSD_SetLowBaselineReset, .-CapSense_CSD_SetLowBaselineReset
 1393              		.section	.text.CapSense_CSD_CheckIsSensorActive,"ax",%progbits
 1394              		.align	2
 1395              		.global	CapSense_CSD_CheckIsSensorActive
 1396              		.code	16
 1397              		.thumb_func
 1398              		.type	CapSense_CSD_CheckIsSensorActive, %function
 1399              	CapSense_CSD_CheckIsSensorActive:
 1400              	.LFB56:
1063:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TUNING_METHOD != CapSense_CSD__TUNING_NONE) */
1064:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1065:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1066:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1067:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsSensorActive
1068:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1069:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1070:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1071:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares the CapSense_CSD_sensorSignal[sensor] array element to the finger
1072:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  threshold of the widget it belongs to. The hysteresis and debounce are taken into
1073:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold
1074:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  based on whether the sensor is currently active.
1075:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
1076:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
1077:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  The debounce counter is added to the sensor active transition.
1078:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This function updates the CapSense_CSD_sensorOnMask[] array element.
1079:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1080:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1081:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor:  Sensor number.
1082:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1083:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1084:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
1085:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1086:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1087:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorSignal[] - used to store the difference between
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 45


1088:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the current value of raw data and a previous value of the baseline.
1089:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounceCounter[]   - used to store the current debounce
1090:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  counter of the sensor. the widget which have this parameter are buttons, matrix
1091:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  buttons, proximity, and guard. All other widgets don't have the  debounce parameter
1092:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
1093:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[] - used to store the sensors on/off state.
1094:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorOnMask[0] contains the masked bits for sensors
1095:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1096:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1097:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1098:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor is inactive.
1099:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor is active.
1100:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1101:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1102:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1103:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1104:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1105:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsSensorActive(uint32 sensor)
1106:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1401              		.loc 1 1106 0
 1402              		.cfi_startproc
 1403 0000 80B5     		push	{r7, lr}
 1404              		.cfi_def_cfa_offset 8
 1405              		.cfi_offset 7, -8
 1406              		.cfi_offset 14, -4
 1407 0002 84B0     		sub	sp, sp, #16
 1408              		.cfi_def_cfa_offset 24
 1409 0004 00AF     		add	r7, sp, #0
 1410              		.cfi_def_cfa_register 7
 1411 0006 7860     		str	r0, [r7, #4]
1107:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 widget;
1108:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 debounce;
1109:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 debounceIndex;
1110:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1111:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 fingerThreshold;
1112:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 hysteresis;
1113:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     static uint8 CapSense_CSD_debounceCounter[] = {
1114:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     0u, 
1115:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** };
1116:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1117:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1118:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1119:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Prepare to find debounce counter index */
1120:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     widget = CapSense_CSD_widgetNumber[sensor];
 1412              		.loc 1 1120 0
 1413 0008 0F23     		mov	r3, #15
 1414 000a FB18     		add	r3, r7, r3
 1415 000c 4449     		ldr	r1, .L101
 1416 000e 7A68     		ldr	r2, [r7, #4]
 1417 0010 8A18     		add	r2, r1, r2
 1418 0012 1278     		ldrb	r2, [r2]
 1419 0014 1A70     		strb	r2, [r3]
1121:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1122:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     fingerThreshold = CapSense_CSD_fingerThreshold[widget];
 1420              		.loc 1 1122 0
 1421 0016 0F23     		mov	r3, #15
 1422 0018 FB18     		add	r3, r7, r3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 46


 1423 001a 1A78     		ldrb	r2, [r3]
 1424 001c 0E23     		mov	r3, #14
 1425 001e FB18     		add	r3, r7, r3
 1426 0020 4049     		ldr	r1, .L101+4
 1427 0022 8A5C     		ldrb	r2, [r1, r2]
 1428 0024 1A70     		strb	r2, [r3]
1123:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     hysteresis = CapSense_CSD_hysteresis[widget];
 1429              		.loc 1 1123 0
 1430 0026 0F23     		mov	r3, #15
 1431 0028 FB18     		add	r3, r7, r3
 1432 002a 1A78     		ldrb	r2, [r3]
 1433 002c 0D23     		mov	r3, #13
 1434 002e FB18     		add	r3, r7, r3
 1435 0030 3D49     		ldr	r1, .L101+8
 1436 0032 8A5C     		ldrb	r2, [r1, r2]
 1437 0034 1A70     		strb	r2, [r3]
1124:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     debounce = CapSense_CSD_debounce[widget];
 1438              		.loc 1 1124 0
 1439 0036 0F23     		mov	r3, #15
 1440 0038 FB18     		add	r3, r7, r3
 1441 003a 1A78     		ldrb	r2, [r3]
 1442 003c 0C23     		mov	r3, #12
 1443 003e FB18     		add	r3, r7, r3
 1444 0040 3A49     		ldr	r1, .L101+12
 1445 0042 8A5C     		ldrb	r2, [r1, r2]
 1446 0044 1A70     		strb	r2, [r3]
1125:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1126:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         debounceIndex = CapSense_CSD_UNUSED_DEBOUNCE_COUNTER_INDEX;
 1447              		.loc 1 1126 0
 1448 0046 0B23     		mov	r3, #11
 1449 0048 FB18     		add	r3, r7, r3
 1450 004a 0022     		mov	r2, #0
 1451 004c 1A70     		strb	r2, [r3]
1127:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     CapSense_CSD_debounceCounter[debounceIndex] = 1u;
 1452              		.loc 1 1127 0
 1453 004e 0B23     		mov	r3, #11
 1454 0050 FB18     		add	r3, r7, r3
 1455 0052 1B78     		ldrb	r3, [r3]
 1456 0054 364A     		ldr	r2, .L101+16
 1457 0056 0121     		mov	r1, #1
 1458 0058 D154     		strb	r1, [r2, r3]
1128:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1129:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1130:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Was on */
1131:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     if (0u != CapSense_CSD_GetBitValue(CapSense_CSD_sensorOnMask, sensor))
 1459              		.loc 1 1131 0
 1460 005a 364A     		ldr	r2, .L101+20
 1461 005c 7B68     		ldr	r3, [r7, #4]
 1462 005e 101C     		mov	r0, r2
 1463 0060 191C     		mov	r1, r3
 1464 0062 FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 1465 0066 031E     		sub	r3, r0, #0
 1466 0068 1DD0     		beq	.L93
1132:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1133:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Hysteresis minus */
1134:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 1467              		.loc 1 1134 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 47


 1468 006a 334A     		ldr	r2, .L101+24
 1469 006c 7B68     		ldr	r3, [r7, #4]
 1470 006e D318     		add	r3, r2, r3
 1471 0070 1B78     		ldrb	r3, [r3]
 1472 0072 191C     		mov	r1, r3
 1473 0074 0E23     		mov	r3, #14
 1474 0076 FB18     		add	r3, r7, r3
 1475 0078 1A78     		ldrb	r2, [r3]
 1476 007a 0D23     		mov	r3, #13
 1477 007c FB18     		add	r3, r7, r3
 1478 007e 1B78     		ldrb	r3, [r3]
 1479 0080 D31A     		sub	r3, r2, r3
 1480 0082 9942     		cmp	r1, r3
 1481 0084 3DDA     		bge	.L95
1135:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1136:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_SetBitValue(CapSense_CSD_sensorOnMask, sensor, 0u);
 1482              		.loc 1 1136 0
 1483 0086 2B4A     		ldr	r2, .L101+20
 1484 0088 7B68     		ldr	r3, [r7, #4]
 1485 008a 101C     		mov	r0, r2
 1486 008c 191C     		mov	r1, r3
 1487 008e 0022     		mov	r2, #0
 1488 0090 FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1137:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1138:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 1489              		.loc 1 1138 0
 1490 0094 0B23     		mov	r3, #11
 1491 0096 FB18     		add	r3, r7, r3
 1492 0098 1B78     		ldrb	r3, [r3]
 1493 009a 254A     		ldr	r2, .L101+16
 1494 009c 0C21     		mov	r1, #12
 1495 009e 7918     		add	r1, r7, r1
 1496 00a0 0978     		ldrb	r1, [r1]
 1497 00a2 D154     		strb	r1, [r2, r3]
 1498 00a4 2DE0     		b	.L95
 1499              	.L93:
1139:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1140:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1141:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     else    /* Was off */
1142:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1143:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Hysteresis plus */
1144:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_sensorSignal[sensor] >= (fingerThreshold + hysteresis))
 1500              		.loc 1 1144 0
 1501 00a6 244A     		ldr	r2, .L101+24
 1502 00a8 7B68     		ldr	r3, [r7, #4]
 1503 00aa D318     		add	r3, r2, r3
 1504 00ac 1B78     		ldrb	r3, [r3]
 1505 00ae 191C     		mov	r1, r3
 1506 00b0 0E23     		mov	r3, #14
 1507 00b2 FB18     		add	r3, r7, r3
 1508 00b4 1A78     		ldrb	r2, [r3]
 1509 00b6 0D23     		mov	r3, #13
 1510 00b8 FB18     		add	r3, r7, r3
 1511 00ba 1B78     		ldrb	r3, [r3]
 1512 00bc D318     		add	r3, r2, r3
 1513 00be 9942     		cmp	r1, r3
 1514 00c0 17DB     		blt	.L96
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 48


1145:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1146:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex]--;
 1515              		.loc 1 1146 0
 1516 00c2 0B23     		mov	r3, #11
 1517 00c4 FB18     		add	r3, r7, r3
 1518 00c6 1B78     		ldrb	r3, [r3]
 1519 00c8 194A     		ldr	r2, .L101+16
 1520 00ca D25C     		ldrb	r2, [r2, r3]
 1521 00cc 013A     		sub	r2, r2, #1
 1522 00ce D1B2     		uxtb	r1, r2
 1523 00d0 174A     		ldr	r2, .L101+16
 1524 00d2 D154     		strb	r1, [r2, r3]
1147:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor active, decrement debounce counter */
1148:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(CapSense_CSD_debounceCounter[debounceIndex] == 0u)
 1525              		.loc 1 1148 0
 1526 00d4 0B23     		mov	r3, #11
 1527 00d6 FB18     		add	r3, r7, r3
 1528 00d8 1B78     		ldrb	r3, [r3]
 1529 00da 154A     		ldr	r2, .L101+16
 1530 00dc D35C     		ldrb	r3, [r2, r3]
 1531 00de 002B     		cmp	r3, #0
 1532 00e0 0FD1     		bne	.L95
1149:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1150:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_SetBitValue(CapSense_CSD_sensorOnMask, sensor, 1u);
 1533              		.loc 1 1150 0
 1534 00e2 144A     		ldr	r2, .L101+20
 1535 00e4 7B68     		ldr	r3, [r7, #4]
 1536 00e6 101C     		mov	r0, r2
 1537 00e8 191C     		mov	r1, r3
 1538 00ea 0122     		mov	r2, #1
 1539 00ec FFF7FEFF 		bl	CapSense_CSD_SetBitValue
 1540 00f0 07E0     		b	.L95
 1541              	.L96:
1151:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1152:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1153:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1154:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1155:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
1156:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_debounceCounter[debounceIndex] = debounce;
 1542              		.loc 1 1156 0
 1543 00f2 0B23     		mov	r3, #11
 1544 00f4 FB18     		add	r3, r7, r3
 1545 00f6 1B78     		ldrb	r3, [r3]
 1546 00f8 0D4A     		ldr	r2, .L101+16
 1547 00fa 0C21     		mov	r1, #12
 1548 00fc 7918     		add	r1, r7, r1
 1549 00fe 0978     		ldrb	r1, [r1]
 1550 0100 D154     		strb	r1, [r2, r3]
 1551              	.L95:
1157:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1158:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1159:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1160:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return ((uint32)((0u != CapSense_CSD_GetBitValue(CapSense_CSD_sensorOnMask, sensor)) ? 1u : 0u)
 1552              		.loc 1 1160 0
 1553 0102 0C4A     		ldr	r2, .L101+20
 1554 0104 7B68     		ldr	r3, [r7, #4]
 1555 0106 101C     		mov	r0, r2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 49


 1556 0108 191C     		mov	r1, r3
 1557 010a FFF7FEFF 		bl	CapSense_CSD_GetBitValue
 1558 010e 031E     		sub	r3, r0, #0
 1559 0110 01D0     		beq	.L98
 1560              		.loc 1 1160 0 is_stmt 0 discriminator 1
 1561 0112 0123     		mov	r3, #1
 1562 0114 00E0     		b	.L99
 1563              	.L98:
 1564              		.loc 1 1160 0 discriminator 2
 1565 0116 0023     		mov	r3, #0
 1566              	.L99:
1161:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1567              		.loc 1 1161 0 is_stmt 1 discriminator 4
 1568 0118 181C     		mov	r0, r3
 1569 011a BD46     		mov	sp, r7
 1570 011c 04B0     		add	sp, sp, #16
 1571              		@ sp needed
 1572 011e 80BD     		pop	{r7, pc}
 1573              	.L102:
 1574              		.align	2
 1575              	.L101:
 1576 0120 00000000 		.word	CapSense_CSD_widgetNumber
 1577 0124 00000000 		.word	CapSense_CSD_fingerThreshold
 1578 0128 00000000 		.word	CapSense_CSD_hysteresis
 1579 012c 00000000 		.word	CapSense_CSD_debounce
 1580 0130 34000000 		.word	CapSense_CSD_debounceCounter.5366
 1581 0134 00000000 		.word	CapSense_CSD_sensorOnMask
 1582 0138 00000000 		.word	CapSense_CSD_sensorSignal
 1583              		.cfi_endproc
 1584              	.LFE56:
 1585              		.size	CapSense_CSD_CheckIsSensorActive, .-CapSense_CSD_CheckIsSensorActive
 1586              		.section	.text.CapSense_CSD_CheckIsWidgetActive,"ax",%progbits
 1587              		.align	2
 1588              		.global	CapSense_CSD_CheckIsWidgetActive
 1589              		.code	16
 1590              		.thumb_func
 1591              		.type	CapSense_CSD_CheckIsWidgetActive, %function
 1592              	CapSense_CSD_CheckIsWidgetActive:
 1593              	.LFB57:
1162:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1163:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1164:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1165:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsWidgetActive
1166:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1167:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1168:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1169:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares the CapSense_sensorSignal[] array element to the finger threshold of
1170:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * the widget it belongs to. The hysteresis and debounce are taken into account.
1171:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * The hysteresis is added or subtracted from the finger threshold based on whether
1172:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the sensor is currently active. If the sensor is active, the threshold is
1173:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  lowered by the hysteresis amount. If the sensor is inactive, the threshold
1174:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  is raised by the hysteresis amount.
1175:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * The debounce counter added to the sensor active transition.
1176:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * This function updates CapSense_sensorOnMask[] array element
1177:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1178:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1179:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 50


1180:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1181:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1182:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are
1183:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
1184:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1185:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1186:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  rawDataIndex[]: Contains the  1st sensor position in the widget
1187:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1188:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1189:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1190:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1191:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1192:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsWidgetActive(uint32 widget)
1193:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1594              		.loc 1 1193 0
 1595              		.cfi_startproc
 1596 0000 80B5     		push	{r7, lr}
 1597              		.cfi_def_cfa_offset 8
 1598              		.cfi_offset 7, -8
 1599              		.cfi_offset 14, -4
 1600 0002 86B0     		sub	sp, sp, #24
 1601              		.cfi_def_cfa_offset 32
 1602 0004 00AF     		add	r7, sp, #0
 1603              		.cfi_def_cfa_register 7
 1604 0006 7860     		str	r0, [r7, #4]
1194:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 rawIndex = (uint32)CapSense_CSD_rawDataIndex[widget];
 1605              		.loc 1 1194 0
 1606 0008 0023     		mov	r3, #0
 1607 000a 7B61     		str	r3, [r7, #20]
1195:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 numOfSensors = (uint32)CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1608              		.loc 1 1195 0
 1609 000c 0C23     		mov	r3, #12
 1610 000e 1A1C     		mov	r2, r3
 1611 0010 7B69     		ldr	r3, [r7, #20]
 1612 0012 D318     		add	r3, r2, r3
 1613 0014 FB60     		str	r3, [r7, #12]
1196:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 state = 0u;
 1614              		.loc 1 1196 0
 1615 0016 0023     		mov	r3, #0
 1616 0018 3B61     		str	r3, [r7, #16]
 1617              	.L105:
1197:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1198:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Check all sensors of widget */
1199:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1200:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1201:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_CheckIsSensorActive((uint32)rawIndex) != 0u)
 1618              		.loc 1 1201 0
 1619 001a 7B69     		ldr	r3, [r7, #20]
 1620 001c 181C     		mov	r0, r3
 1621 001e FFF7FEFF 		bl	CapSense_CSD_CheckIsSensorActive
 1622 0022 031E     		sub	r3, r0, #0
 1623 0024 01D0     		beq	.L104
1202:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1203:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_SENSOR_IS_ACTIVE;
 1624              		.loc 1 1203 0
 1625 0026 0123     		mov	r3, #1
 1626 0028 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 51


 1627              	.L104:
1204:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1205:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1628              		.loc 1 1205 0
 1629 002a 7B69     		ldr	r3, [r7, #20]
 1630 002c 0133     		add	r3, r3, #1
 1631 002e 7B61     		str	r3, [r7, #20]
1206:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1207:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1632              		.loc 1 1207 0
 1633 0030 7A69     		ldr	r2, [r7, #20]
 1634 0032 FB68     		ldr	r3, [r7, #12]
 1635 0034 9A42     		cmp	r2, r3
 1636 0036 F0D3     		bcc	.L105
1208:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1209:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1210:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1211:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return state;
 1637              		.loc 1 1211 0
 1638 0038 3B69     		ldr	r3, [r7, #16]
1212:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1639              		.loc 1 1212 0
 1640 003a 181C     		mov	r0, r3
 1641 003c BD46     		mov	sp, r7
 1642 003e 06B0     		add	sp, sp, #24
 1643              		@ sp needed
 1644 0040 80BD     		pop	{r7, pc}
 1645              		.cfi_endproc
 1646              	.LFE57:
 1647              		.size	CapSense_CSD_CheckIsWidgetActive, .-CapSense_CSD_CheckIsWidgetActive
 1648 0042 C046     		.section	.text.CapSense_CSD_CheckIsAnyWidgetActive,"ax",%progbits
 1649              		.align	2
 1650              		.global	CapSense_CSD_CheckIsAnyWidgetActive
 1651              		.code	16
 1652              		.thumb_func
 1653              		.type	CapSense_CSD_CheckIsAnyWidgetActive, %function
 1654              	CapSense_CSD_CheckIsAnyWidgetActive:
 1655              	.LFB58:
1213:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1214:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1215:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1216:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_CheckIsAnyWidgetActive
1217:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1218:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1219:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1220:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Compares all the sensors of the CapSense_CSD_Signal[] array to their finger
1221:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  threshold. Calls CapSense_CSD_CheckIsWidgetActive() for each widget so
1222:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  the CapSense_CSD_sensorOnMask[] array is up to date after calling this
1223:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  function.
1224:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1225:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1226:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1227:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1228:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1229:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
1230:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1231:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 52


1232:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1233:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1234:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1235:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1236:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1237:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1238:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_CheckIsAnyWidgetActive(void)
1239:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1656              		.loc 1 1239 0
 1657              		.cfi_startproc
 1658 0000 80B5     		push	{r7, lr}
 1659              		.cfi_def_cfa_offset 8
 1660              		.cfi_offset 7, -8
 1661              		.cfi_offset 14, -4
 1662 0002 82B0     		sub	sp, sp, #8
 1663              		.cfi_def_cfa_offset 16
 1664 0004 00AF     		add	r7, sp, #0
 1665              		.cfi_def_cfa_register 7
1240:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1241:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 i;
1242:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 state = 0u;
 1666              		.loc 1 1242 0
 1667 0006 0023     		mov	r3, #0
 1668 0008 3B60     		str	r3, [r7]
1243:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1244:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     for(i = 0u; i < CapSense_CSD_TOTAL_WIDGET_COUNT; i++)
 1669              		.loc 1 1244 0
 1670 000a 0023     		mov	r3, #0
 1671 000c 7B60     		str	r3, [r7, #4]
 1672 000e 0AE0     		b	.L108
 1673              	.L110:
1245:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1246:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(i) != 0u)
 1674              		.loc 1 1246 0
 1675 0010 7B68     		ldr	r3, [r7, #4]
 1676 0012 181C     		mov	r0, r3
 1677 0014 FFF7FEFF 		bl	CapSense_CSD_CheckIsWidgetActive
 1678 0018 031E     		sub	r3, r0, #0
 1679 001a 01D0     		beq	.L109
1247:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1248:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             state = CapSense_CSD_WIDGET_IS_ACTIVE;
 1680              		.loc 1 1248 0
 1681 001c 0123     		mov	r3, #1
 1682 001e 3B60     		str	r3, [r7]
 1683              	.L109:
1244:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1684              		.loc 1 1244 0 discriminator 2
 1685 0020 7B68     		ldr	r3, [r7, #4]
 1686 0022 0133     		add	r3, r3, #1
 1687 0024 7B60     		str	r3, [r7, #4]
 1688              	.L108:
1244:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1689              		.loc 1 1244 0 is_stmt 0 discriminator 1
 1690 0026 7B68     		ldr	r3, [r7, #4]
 1691 0028 002B     		cmp	r3, #0
 1692 002a F1D0     		beq	.L110
1249:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 53


1250:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1251:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     
1252:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1253:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1254:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return state;
 1693              		.loc 1 1254 0 is_stmt 1
 1694 002c 3B68     		ldr	r3, [r7]
1255:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1695              		.loc 1 1255 0
 1696 002e 181C     		mov	r0, r3
 1697 0030 BD46     		mov	sp, r7
 1698 0032 02B0     		add	sp, sp, #8
 1699              		@ sp needed
 1700 0034 80BD     		pop	{r7, pc}
 1701              		.cfi_endproc
 1702              	.LFE58:
 1703              		.size	CapSense_CSD_CheckIsAnyWidgetActive, .-CapSense_CSD_CheckIsAnyWidgetActive
 1704 0036 C046     		.section	.text.CapSense_CSD_EnableWidget,"ax",%progbits
 1705              		.align	2
 1706              		.global	CapSense_CSD_EnableWidget
 1707              		.code	16
 1708              		.thumb_func
 1709              		.type	CapSense_CSD_EnableWidget, %function
 1710              	CapSense_CSD_EnableWidget:
 1711              	.LFB59:
1256:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1257:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1258:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1259:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_EnableWidget
1260:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1261:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1262:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1263:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Enables all the widget elements (sensors) to the scanning process.
1264:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1265:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1266:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1267:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1268:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1269:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1270:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1271:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1272:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
1273:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
1274:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
1275:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1276:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1277:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1278:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor doesn't scan by CapSense_CSD_ScanEnabledWidgets().
1279:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor scans by CapSense_CSD_ScanEnabledWidgets().
1280:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1281:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1282:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1283:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1284:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1285:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_EnableWidget(uint32 widget)
1286:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 1712              		.loc 1 1286 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 54


 1713              		.cfi_startproc
 1714 0000 80B5     		push	{r7, lr}
 1715              		.cfi_def_cfa_offset 8
 1716              		.cfi_offset 7, -8
 1717              		.cfi_offset 14, -4
 1718 0002 84B0     		sub	sp, sp, #16
 1719              		.cfi_def_cfa_offset 24
 1720 0004 00AF     		add	r7, sp, #0
 1721              		.cfi_def_cfa_register 7
 1722 0006 7860     		str	r0, [r7, #4]
1287:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1288:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1723              		.loc 1 1288 0
 1724 0008 0F23     		mov	r3, #15
 1725 000a FB18     		add	r3, r7, r3
 1726 000c 0022     		mov	r2, #0
 1727 000e 1A70     		strb	r2, [r3]
1289:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 numOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1728              		.loc 1 1289 0
 1729 0010 0C21     		mov	r1, #12
 1730 0012 0E23     		mov	r3, #14
 1731 0014 FB18     		add	r3, r7, r3
 1732 0016 0F22     		mov	r2, #15
 1733 0018 BA18     		add	r2, r7, r2
 1734 001a 1278     		ldrb	r2, [r2]
 1735 001c 8A18     		add	r2, r1, r2
 1736 001e 1A70     		strb	r2, [r3]
 1737              	.L113:
1290:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1291:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Enable all sensors of widget */
1292:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1293:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1294:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, (uint32)rawIndex, 1u);
 1738              		.loc 1 1294 0 discriminator 1
 1739 0020 0F23     		mov	r3, #15
 1740 0022 FB18     		add	r3, r7, r3
 1741 0024 1B78     		ldrb	r3, [r3]
 1742 0026 0C4A     		ldr	r2, .L114
 1743 0028 101C     		mov	r0, r2
 1744 002a 191C     		mov	r1, r3
 1745 002c 0122     		mov	r2, #1
 1746 002e FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1295:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1747              		.loc 1 1295 0 discriminator 1
 1748 0032 0F23     		mov	r3, #15
 1749 0034 FB18     		add	r3, r7, r3
 1750 0036 1A78     		ldrb	r2, [r3]
 1751 0038 0F23     		mov	r3, #15
 1752 003a FB18     		add	r3, r7, r3
 1753 003c 0132     		add	r2, r2, #1
 1754 003e 1A70     		strb	r2, [r3]
1296:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1297:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1755              		.loc 1 1297 0 discriminator 1
 1756 0040 0F23     		mov	r3, #15
 1757 0042 FA18     		add	r2, r7, r3
 1758 0044 0E23     		mov	r3, #14
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 55


 1759 0046 FB18     		add	r3, r7, r3
 1760 0048 1278     		ldrb	r2, [r2]
 1761 004a 1B78     		ldrb	r3, [r3]
 1762 004c 9A42     		cmp	r2, r3
 1763 004e E7D3     		bcc	.L113
1298:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1764              		.loc 1 1298 0
 1765 0050 BD46     		mov	sp, r7
 1766 0052 04B0     		add	sp, sp, #16
 1767              		@ sp needed
 1768 0054 80BD     		pop	{r7, pc}
 1769              	.L115:
 1770 0056 C046     		.align	2
 1771              	.L114:
 1772 0058 00000000 		.word	CapSense_CSD_sensorEnableMask
 1773              		.cfi_endproc
 1774              	.LFE59:
 1775              		.size	CapSense_CSD_EnableWidget, .-CapSense_CSD_EnableWidget
 1776              		.section	.text.CapSense_CSD_DisableWidget,"ax",%progbits
 1777              		.align	2
 1778              		.global	CapSense_CSD_DisableWidget
 1779              		.code	16
 1780              		.thumb_func
 1781              		.type	CapSense_CSD_DisableWidget, %function
 1782              	CapSense_CSD_DisableWidget:
 1783              	.LFB60:
1299:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1300:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1301:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
1302:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_DisableWidget
1303:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
1304:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1305:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
1306:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Disables all the widget elements (sensors) from the scanning process.
1307:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1308:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
1309:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  widget:  widget number.
1310:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1311:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
1312:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1313:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1314:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
1315:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[] - used to store the sensor scanning
1316:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  state.
1317:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[0] contains the masked bits for sensors
1318:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
1319:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_sensorEnableMask[1] contains the masked bits for
1320:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
1321:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  0 - sensor isn't scanned by CapSense_CSD_ScanEnabledWidgets().
1322:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  1 - sensor is scanned by CapSense_CSD_ScanEnabledWidgets().
1323:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1324:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
1325:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
1326:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
1327:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
1328:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** void CapSense_CSD_DisableWidget(uint32 widget)
1329:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 56


 1784              		.loc 1 1329 0
 1785              		.cfi_startproc
 1786 0000 80B5     		push	{r7, lr}
 1787              		.cfi_def_cfa_offset 8
 1788              		.cfi_offset 7, -8
 1789              		.cfi_offset 14, -4
 1790 0002 84B0     		sub	sp, sp, #16
 1791              		.cfi_def_cfa_offset 24
 1792 0004 00AF     		add	r7, sp, #0
 1793              		.cfi_def_cfa_register 7
 1794 0006 7860     		str	r0, [r7, #4]
1330:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 rawIndex = CapSense_CSD_rawDataIndex[widget];
 1795              		.loc 1 1330 0
 1796 0008 0F23     		mov	r3, #15
 1797 000a FB18     		add	r3, r7, r3
 1798 000c 0022     		mov	r2, #0
 1799 000e 1A70     		strb	r2, [r3]
1331:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 numOfSensors = CapSense_CSD_numberOfSensors[widget] + rawIndex;
 1800              		.loc 1 1331 0
 1801 0010 0C21     		mov	r1, #12
 1802 0012 0E23     		mov	r3, #14
 1803 0014 FB18     		add	r3, r7, r3
 1804 0016 0F22     		mov	r2, #15
 1805 0018 BA18     		add	r2, r7, r2
 1806 001a 1278     		ldrb	r2, [r2]
 1807 001c 8A18     		add	r2, r1, r2
 1808 001e 1A70     		strb	r2, [r3]
 1809              	.L117:
1332:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1333:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /* Disable all sensors of widget */
1334:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     do
1335:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
1336:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1337:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_SetBitValue(CapSense_CSD_sensorEnableMask, (uint32)rawIndex, 0u);
 1810              		.loc 1 1337 0 discriminator 1
 1811 0020 0F23     		mov	r3, #15
 1812 0022 FB18     		add	r3, r7, r3
 1813 0024 1B78     		ldrb	r3, [r3]
 1814 0026 0C4A     		ldr	r2, .L118
 1815 0028 101C     		mov	r0, r2
 1816 002a 191C     		mov	r1, r3
 1817 002c 0022     		mov	r2, #0
 1818 002e FFF7FEFF 		bl	CapSense_CSD_SetBitValue
1338:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         rawIndex++;
 1819              		.loc 1 1338 0 discriminator 1
 1820 0032 0F23     		mov	r3, #15
 1821 0034 FB18     		add	r3, r7, r3
 1822 0036 1A78     		ldrb	r2, [r3]
 1823 0038 0F23     		mov	r3, #15
 1824 003a FB18     		add	r3, r7, r3
 1825 003c 0132     		add	r2, r2, #1
 1826 003e 1A70     		strb	r2, [r3]
1339:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
1340:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     while(rawIndex < numOfSensors);
 1827              		.loc 1 1340 0 discriminator 1
 1828 0040 0F23     		mov	r3, #15
 1829 0042 FA18     		add	r2, r7, r3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 57


 1830 0044 0E23     		mov	r3, #14
 1831 0046 FB18     		add	r3, r7, r3
 1832 0048 1278     		ldrb	r2, [r2]
 1833 004a 1B78     		ldrb	r3, [r3]
 1834 004c 9A42     		cmp	r2, r3
 1835 004e E7D3     		bcc	.L117
1341:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 1836              		.loc 1 1341 0
 1837 0050 BD46     		mov	sp, r7
 1838 0052 04B0     		add	sp, sp, #16
 1839              		@ sp needed
 1840 0054 80BD     		pop	{r7, pc}
 1841              	.L119:
 1842 0056 C046     		.align	2
 1843              	.L118:
 1844 0058 00000000 		.word	CapSense_CSD_sensorEnableMask
 1845              		.cfi_endproc
 1846              	.LFE60:
 1847              		.size	CapSense_CSD_DisableWidget, .-CapSense_CSD_DisableWidget
 1848              		.section	.text.CapSense_CSD_FindMaximum,"ax",%progbits
 1849              		.align	2
 1850              		.global	CapSense_CSD_FindMaximum
 1851              		.code	16
 1852              		.thumb_func
 1853              		.type	CapSense_CSD_FindMaximum, %function
 1854              	CapSense_CSD_FindMaximum:
 1855              	.LFB61:
1342:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1343:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1344:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT)
1345:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1346:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_FindMaximum
1347:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1348:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1349:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1350:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Finds the index of the maximum element within a defined centroid. Checks
1351:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_sensorSignal[] within a defined centroid and
1352:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  returns the index of the maximum element. The values below the finger threshold are
1353:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  ignored.
1354:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The centroid is defined by offset of the first element and a number of elements - count.
1355:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The diplexed centroid requires at least two consecutive elements above
1356:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  FingerThreshold to find the index of the maximum element.
1357:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1358:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1359:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  offset:  Start index of centroid in CapSense_CSD_sensorSignal[] array.
1360:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  count:   number of elements within centroid.
1361:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  fingerThreshold:  Finger threshold.
1362:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  diplex:   pointer to diplex table.
1363:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1364:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1365:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns the index of the maximum element within a defined centroid.
1366:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If the index of the maximum element isn't found it returns 0xFF.
1367:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1368:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1369:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_startOfSlider[] - contains the index of the first slider element
1370:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1371:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 58


1372:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1373:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1374:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1375:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1376:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold, const uint
1377:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #else
1378:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 CapSense_CSD_FindMaximum(uint8 offset, uint8 count, uint8 fingerThreshold)
1379:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1380:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1856              		.loc 1 1380 0
 1857              		.cfi_startproc
 1858 0000 90B5     		push	{r4, r7, lr}
 1859              		.cfi_def_cfa_offset 12
 1860              		.cfi_offset 4, -12
 1861              		.cfi_offset 7, -8
 1862              		.cfi_offset 14, -4
 1863 0002 85B0     		sub	sp, sp, #20
 1864              		.cfi_def_cfa_offset 32
 1865 0004 00AF     		add	r7, sp, #0
 1866              		.cfi_def_cfa_register 7
 1867 0006 041C     		mov	r4, r0
 1868 0008 081C     		mov	r0, r1
 1869 000a 111C     		mov	r1, r2
 1870 000c FB1D     		add	r3, r7, #7
 1871 000e 221C     		add	r2, r4, #0
 1872 0010 1A70     		strb	r2, [r3]
 1873 0012 BB1D     		add	r3, r7, #6
 1874 0014 021C     		add	r2, r0, #0
 1875 0016 1A70     		strb	r2, [r3]
 1876 0018 7B1D     		add	r3, r7, #5
 1877 001a 0A1C     		add	r2, r1, #0
 1878 001c 1A70     		strb	r2, [r3]
1381:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 i;
1382:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1383:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curPos = 0u;
1384:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* No centroid at Start */
1385:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curCntrdSize = 0u;
1386:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 curCtrdStartPos = CapSense_CSD_MAXIMUM_CENTROID;
1387:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Biggest centroid is zero */
1388:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdSize = 0u;
1389:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 biggestCtrdStartPos = 0u;
1390:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1391:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum = CapSense_CSD_MAXIMUM_CENTROID;
 1879              		.loc 1 1391 0
 1880 001e 0E23     		mov	r3, #14
 1881 0020 FB18     		add	r3, r7, r3
 1882 0022 FF22     		mov	r2, #255
 1883 0024 1A70     		strb	r2, [r3]
1392:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1393:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 temp = 0u;
 1884              		.loc 1 1393 0
 1885 0026 0D23     		mov	r3, #13
 1886 0028 FB18     		add	r3, r7, r3
 1887 002a 0022     		mov	r2, #0
 1888 002c 1A70     		strb	r2, [r3]
1394:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 *startOfSlider = &CapSense_CSD_sensorSignal[offset];
 1889              		.loc 1 1394 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 59


 1890 002e FB1D     		add	r3, r7, #7
 1891 0030 1A78     		ldrb	r2, [r3]
 1892 0032 204B     		ldr	r3, .L125
 1893 0034 D318     		add	r3, r2, r3
 1894 0036 BB60     		str	r3, [r7, #8]
1395:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1396:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1397:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(diplex != 0u)
1398:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1399:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Initialize */
1400:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 i = 0u;
1401:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1402:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Make slider x2 as Diplexed */
1403:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 count <<= 1u;
1404:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 while(1u)
1405:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1406:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (startOfSlider[curPos] > 0u)    /* Looking for centroids */
1407:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1408:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if (curCtrdStartPos == CapSense_CSD_MAXIMUM_CENTROID)
1409:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1410:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Start of centroid */
1411:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = i;
1412:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
1413:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1414:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         else
1415:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1416:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize++;
1417:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1418:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1419:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else   /* Select biggest and indicate zero start */
1420:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1421:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if(curCntrdSize > 0u)
1422:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1423:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* We are at the end of current */
1424:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if(curCntrdSize > biggestCtrdSize)
1425:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1426:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 biggestCtrdSize = curCntrdSize;
1427:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 biggestCtrdStartPos = curCtrdStartPos;
1428:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1429:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1430:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCntrdSize = 0u;
1431:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curCtrdStartPos = CapSense_CSD_MAXIMUM_CENTROID;
1432:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1433:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1434:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1435:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     i++;
1436:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     curPos = diplex[i];
1437:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(i == count)
1438:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1439:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         break;
1440:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1441:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1442:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1443:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Find biggest centroid if two are same size, last one wins
1444:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                        We are at the end of current */
1445:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (curCntrdSize >= biggestCtrdSize)
1446:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 60


1447:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     biggestCtrdSize = curCntrdSize;
1448:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     biggestCtrdStartPos = curCtrdStartPos;
1449:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1450:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1451:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1452:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1453:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Without diplexing */
1454:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 biggestCtrdSize = count;
1455:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1456:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1457:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1458:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Check centroid size */
1459:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1460:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if((biggestCtrdSize >= 2u) || ((biggestCtrdSize == 1u) && (diplex == 0u)))
1461:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #else
1462:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(biggestCtrdSize >= 2u)
1463:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1464:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1465:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     for (i = biggestCtrdStartPos; i < (biggestCtrdStartPos + biggestCtrdSize); i++)
1466:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1467:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
1468:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (diplex == 0u)
1469:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1470:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 curPos = i;
1471:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1472:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             else
1473:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1474:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 curPos = diplex[i];
1475:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1476:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1477:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             curPos = diplex[i];
1478:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLID
1479:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Looking for greater element within centroid */
1480:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if(startOfSlider[curPos] > fingerThreshold)
1481:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
1482:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if(startOfSlider[curPos] > temp)
1483:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1484:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 maximum = i;
1485:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 temp = startOfSlider[curPos];
1486:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1487:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
1488:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1489:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1490:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1491:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for (i = 0u; i < count; i++)
 1895              		.loc 1 1491 0
 1896 0038 0F23     		mov	r3, #15
 1897 003a FB18     		add	r3, r7, r3
 1898 003c 0022     		mov	r2, #0
 1899 003e 1A70     		strb	r2, [r3]
 1900 0040 2AE0     		b	.L121
 1901              	.L123:
1492:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1493:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Looking for greater element within centroid */
1494:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(startOfSlider[i] > fingerThreshold)
 1902              		.loc 1 1494 0
 1903 0042 0F23     		mov	r3, #15
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 61


 1904 0044 FB18     		add	r3, r7, r3
 1905 0046 1B78     		ldrb	r3, [r3]
 1906 0048 BA68     		ldr	r2, [r7, #8]
 1907 004a D318     		add	r3, r2, r3
 1908 004c 1B78     		ldrb	r3, [r3]
 1909 004e 7A1D     		add	r2, r7, #5
 1910 0050 1278     		ldrb	r2, [r2]
 1911 0052 9A42     		cmp	r2, r3
 1912 0054 19D2     		bcs	.L122
1495:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1496:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(startOfSlider[i] > temp)
 1913              		.loc 1 1496 0
 1914 0056 0F23     		mov	r3, #15
 1915 0058 FB18     		add	r3, r7, r3
 1916 005a 1B78     		ldrb	r3, [r3]
 1917 005c BA68     		ldr	r2, [r7, #8]
 1918 005e D318     		add	r3, r2, r3
 1919 0060 1B78     		ldrb	r3, [r3]
 1920 0062 0D22     		mov	r2, #13
 1921 0064 BA18     		add	r2, r7, r2
 1922 0066 1278     		ldrb	r2, [r2]
 1923 0068 9A42     		cmp	r2, r3
 1924 006a 0ED2     		bcs	.L122
1497:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1498:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         maximum = i;
 1925              		.loc 1 1498 0
 1926 006c 0E23     		mov	r3, #14
 1927 006e FB18     		add	r3, r7, r3
 1928 0070 0F22     		mov	r2, #15
 1929 0072 BA18     		add	r2, r7, r2
 1930 0074 1278     		ldrb	r2, [r2]
 1931 0076 1A70     		strb	r2, [r3]
1499:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         temp = startOfSlider[i];
 1932              		.loc 1 1499 0
 1933 0078 0F23     		mov	r3, #15
 1934 007a FB18     		add	r3, r7, r3
 1935 007c 1B78     		ldrb	r3, [r3]
 1936 007e BA68     		ldr	r2, [r7, #8]
 1937 0080 D218     		add	r2, r2, r3
 1938 0082 0D23     		mov	r3, #13
 1939 0084 FB18     		add	r3, r7, r3
 1940 0086 1278     		ldrb	r2, [r2]
 1941 0088 1A70     		strb	r2, [r3]
 1942              	.L122:
1491:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 1943              		.loc 1 1491 0 discriminator 2
 1944 008a 0F23     		mov	r3, #15
 1945 008c FB18     		add	r3, r7, r3
 1946 008e 1A78     		ldrb	r2, [r3]
 1947 0090 0F23     		mov	r3, #15
 1948 0092 FB18     		add	r3, r7, r3
 1949 0094 0132     		add	r2, r2, #1
 1950 0096 1A70     		strb	r2, [r3]
 1951              	.L121:
1491:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
 1952              		.loc 1 1491 0 is_stmt 0 discriminator 1
 1953 0098 0F23     		mov	r3, #15
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 62


 1954 009a FA18     		add	r2, r7, r3
 1955 009c BB1D     		add	r3, r7, #6
 1956 009e 1278     		ldrb	r2, [r2]
 1957 00a0 1B78     		ldrb	r3, [r3]
 1958 00a2 9A42     		cmp	r2, r3
 1959 00a4 CDD3     		bcc	.L123
1500:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1501:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1502:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1503:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1504:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (maximum);
 1960              		.loc 1 1504 0 is_stmt 1
 1961 00a6 0E23     		mov	r3, #14
 1962 00a8 FB18     		add	r3, r7, r3
 1963 00aa 1B78     		ldrb	r3, [r3]
1505:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 1964              		.loc 1 1505 0
 1965 00ac 181C     		mov	r0, r3
 1966 00ae BD46     		mov	sp, r7
 1967 00b0 05B0     		add	sp, sp, #20
 1968              		@ sp needed
 1969 00b2 90BD     		pop	{r4, r7, pc}
 1970              	.L126:
 1971              		.align	2
 1972              	.L125:
 1973 00b4 00000000 		.word	CapSense_CSD_sensorSignal
 1974              		.cfi_endproc
 1975              	.LFE61:
 1976              		.size	CapSense_CSD_FindMaximum, .-CapSense_CSD_FindMaximum
 1977              		.global	__aeabi_idiv
 1978              		.section	.text.CapSense_CSD_CalcCentroid,"ax",%progbits
 1979              		.align	2
 1980              		.global	CapSense_CSD_CalcCentroid
 1981              		.code	16
 1982              		.thumb_func
 1983              		.type	CapSense_CSD_CalcCentroid, %function
 1984              	CapSense_CSD_CalcCentroid:
 1985              	.LFB62:
1506:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1507:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1508:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1509:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_CalcCentroid
1510:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1511:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1512:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1513:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value calculated according to the index of the maximum element and API
1514:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  resolution.
1515:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1516:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1517:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  type:  widget type.
1518:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  diplex:  pointer to diplex table.
1519:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  maximum:  Index of maximum element within centroid.
1520:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  offset:   Start index of centroid in CapSense_CSD_sensorSignal[] array.
1521:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  count:    Number of elements within centroid.
1522:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  resolution:  multiplicator calculated according to centroid type and
1523:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  API resolution.
1524:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  noiseThreshold:  Noise threshold.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 63


1525:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1526:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1527:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the slider.
1528:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1529:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1530:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1531:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1532:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1533:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u)
1534:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset,
1535:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         uint8 count, uint32 resolution, uint8 noiseThreshold)
1536:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #else
1537:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint8 CapSense_CSD_CalcCentroid(uint8 maximum, uint8 offset,
1538:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         uint8 count, uint16 resolution, uint8 noiseThreshold)
1539:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TRACKPAD_GESTURES_COUNT > 0u) */
1540:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 1986              		.loc 1 1540 0
 1987              		.cfi_startproc
 1988 0000 B0B5     		push	{r4, r5, r7, lr}
 1989              		.cfi_def_cfa_offset 16
 1990              		.cfi_offset 4, -16
 1991              		.cfi_offset 5, -12
 1992              		.cfi_offset 7, -8
 1993              		.cfi_offset 14, -4
 1994 0002 88B0     		sub	sp, sp, #32
 1995              		.cfi_def_cfa_offset 48
 1996 0004 00AF     		add	r7, sp, #0
 1997              		.cfi_def_cfa_register 7
 1998 0006 051C     		mov	r5, r0
 1999 0008 0C1C     		mov	r4, r1
 2000 000a 101C     		mov	r0, r2
 2001 000c 191C     		mov	r1, r3
 2002 000e FB1D     		add	r3, r7, #7
 2003 0010 2A1C     		add	r2, r5, #0
 2004 0012 1A70     		strb	r2, [r3]
 2005 0014 BB1D     		add	r3, r7, #6
 2006 0016 221C     		add	r2, r4, #0
 2007 0018 1A70     		strb	r2, [r3]
 2008 001a 7B1D     		add	r3, r7, #5
 2009 001c 021C     		add	r2, r0, #0
 2010 001e 1A70     		strb	r2, [r3]
 2011 0020 BB1C     		add	r3, r7, #2
 2012 0022 0A1C     		add	r2, r1, #0
 2013 0024 1A80     		strh	r2, [r3]
1541:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC
1542:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posPrev;
1543:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posNext;
1544:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1545:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1546:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Helps during centroid calculation */
1547:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT)
1548:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             static uint8 CapSense_CSD_centroid[3u];
1549:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif  /* (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT) */
1550:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1551:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1552:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 pos;
1553:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 64


1554:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1555:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 position;
1556:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 numerator;
1557:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         int32 denominator;
1558:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1559:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8  *startOfSlider = &CapSense_CSD_sensorSignal[offset];
 2014              		.loc 1 1559 0
 2015 0026 BB1D     		add	r3, r7, #6
 2016 0028 1A78     		ldrb	r2, [r3]
 2017 002a 5B4B     		ldr	r3, .L137
 2018 002c D318     		add	r3, r2, r3
 2019 002e BB61     		str	r3, [r7, #24]
1560:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1561:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC
1562:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             posPrev = 0u;
 2020              		.loc 1 1562 0
 2021 0030 1F23     		mov	r3, #31
 2022 0032 FB18     		add	r3, r7, r3
 2023 0034 0022     		mov	r2, #0
 2024 0036 1A70     		strb	r2, [r3]
1563:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1564:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1565:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1566:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(type == CapSense_CSD_TYPE_RADIAL_SLIDER)
1567:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1568:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1569:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1570:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1571:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Copy Signal to the centroid array */
1572:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
1573:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1574:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check borders for ROTARY Slider */
1575:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
1576:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1577:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[count - 1u];
1578:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[1u];
1579:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1580:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else if (maximum == (count - 1u))    /* End of centroid */
1581:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1582:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1583:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[0u];
1584:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1585:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1586:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1587:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[maximum - 1u];
1588:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[maximum + 1u];
1589:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1590:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1591:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1592:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1593:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1594:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1595:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1596:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1597:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1598:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_TOUCH_PADS_B
1599:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER)
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 65


1600:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1601:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if(diplex == 0u)
1602:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1603:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         pos     = maximum;
1604:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
1605:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posNext = maximum + 1u;
1606:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1607:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
1608:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1609:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         pos     = diplex[maximum];
1610:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = diplex[maximum - 1u];
1611:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posNext = diplex[maximum + 1u];
1612:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         count <<= 1u;
1613:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1614:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #elif (CapSense_CSD_IS_DIPLEX_SLIDER)
1615:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1616:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     pos     = diplex[maximum];
1617:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posPrev = diplex[maximum - 1u];
1618:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posNext = diplex[maximum + 1u];
1619:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     count <<= 1u;
1620:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #else
1621:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate next and previous near to maximum */
1622:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (maximum >= 1u)
 2025              		.loc 1 1622 0
 2026 0038 FB1D     		add	r3, r7, #7
 2027 003a 1B78     		ldrb	r3, [r3]
 2028 003c 002B     		cmp	r3, #0
 2029 003e 05D0     		beq	.L128
1623:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1624:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posPrev = maximum - 1u;
 2030              		.loc 1 1624 0
 2031 0040 1F23     		mov	r3, #31
 2032 0042 FB18     		add	r3, r7, r3
 2033 0044 FA1D     		add	r2, r7, #7
 2034 0046 1278     		ldrb	r2, [r2]
 2035 0048 013A     		sub	r2, r2, #1
 2036 004a 1A70     		strb	r2, [r3]
 2037              	.L128:
1625:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1626:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posNext = maximum + 1u;
 2038              		.loc 1 1626 0
 2039 004c 1723     		mov	r3, #23
 2040 004e FB18     		add	r3, r7, r3
 2041 0050 FA1D     		add	r2, r7, #7
 2042 0052 1278     		ldrb	r2, [r2]
 2043 0054 0132     		add	r2, r2, #1
 2044 0056 1A70     		strb	r2, [r3]
1627:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER && CapSense_CSD_IS_NON_DIPLEX_SLIDER) */
1628:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1629:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Copy Signal to the centroid array */
1630:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1631:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[pos];
1632:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #else
1633:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS] = startOfSlider[maximum];
 2045              		.loc 1 1633 0
 2046 0058 FB1D     		add	r3, r7, #7
 2047 005a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 66


 2048 005c BA69     		ldr	r2, [r7, #24]
 2049 005e D318     		add	r3, r2, r3
 2050 0060 1A78     		ldrb	r2, [r3]
 2051 0062 4E4B     		ldr	r3, .L137+4
 2052 0064 5A70     		strb	r2, [r3, #1]
1634:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1635:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1636:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check borders for LINEAR Slider */
1637:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (maximum == 0u)                   /* Start of centroid */
 2053              		.loc 1 1637 0
 2054 0066 FB1D     		add	r3, r7, #7
 2055 0068 1B78     		ldrb	r3, [r3]
 2056 006a 002B     		cmp	r3, #0
 2057 006c 0BD1     		bne	.L129
1638:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1639:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
 2058              		.loc 1 1639 0
 2059 006e 4B4B     		ldr	r3, .L137+4
 2060 0070 0022     		mov	r2, #0
 2061 0072 1A70     		strb	r2, [r3]
1640:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
 2062              		.loc 1 1640 0
 2063 0074 1723     		mov	r3, #23
 2064 0076 FB18     		add	r3, r7, r3
 2065 0078 1B78     		ldrb	r3, [r3]
 2066 007a BA69     		ldr	r2, [r7, #24]
 2067 007c D318     		add	r3, r2, r3
 2068 007e 1A78     		ldrb	r2, [r3]
 2069 0080 464B     		ldr	r3, .L137+4
 2070 0082 9A70     		strb	r2, [r3, #2]
 2071 0084 22E0     		b	.L130
 2072              	.L129:
1641:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1642:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else if (maximum == ((count) - 1u)) /* End of centroid */
 2073              		.loc 1 1642 0
 2074 0086 FB1D     		add	r3, r7, #7
 2075 0088 1A78     		ldrb	r2, [r3]
 2076 008a 7B1D     		add	r3, r7, #5
 2077 008c 1B78     		ldrb	r3, [r3]
 2078 008e 013B     		sub	r3, r3, #1
 2079 0090 9A42     		cmp	r2, r3
 2080 0092 0BD1     		bne	.L131
1643:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1644:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
 2081              		.loc 1 1644 0
 2082 0094 1F23     		mov	r3, #31
 2083 0096 FB18     		add	r3, r7, r3
 2084 0098 1B78     		ldrb	r3, [r3]
 2085 009a BA69     		ldr	r2, [r7, #24]
 2086 009c D318     		add	r3, r2, r3
 2087 009e 1A78     		ldrb	r2, [r3]
 2088 00a0 3E4B     		ldr	r3, .L137+4
 2089 00a2 1A70     		strb	r2, [r3]
1645:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
 2090              		.loc 1 1645 0
 2091 00a4 3D4B     		ldr	r3, .L137+4
 2092 00a6 0022     		mov	r2, #0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 67


 2093 00a8 9A70     		strb	r2, [r3, #2]
 2094 00aa 0FE0     		b	.L130
 2095              	.L131:
1646:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1647:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 else                                /* Not first Not last */
1648:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1649:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = startOfSlider[posPrev];
 2096              		.loc 1 1649 0
 2097 00ac 1F23     		mov	r3, #31
 2098 00ae FB18     		add	r3, r7, r3
 2099 00b0 1B78     		ldrb	r3, [r3]
 2100 00b2 BA69     		ldr	r2, [r7, #24]
 2101 00b4 D318     		add	r3, r2, r3
 2102 00b6 1A78     		ldrb	r2, [r3]
 2103 00b8 384B     		ldr	r3, .L137+4
 2104 00ba 1A70     		strb	r2, [r3]
1650:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = startOfSlider[posNext];
 2105              		.loc 1 1650 0
 2106 00bc 1723     		mov	r3, #23
 2107 00be FB18     		add	r3, r7, r3
 2108 00c0 1B78     		ldrb	r3, [r3]
 2109 00c2 BA69     		ldr	r2, [r7, #24]
 2110 00c4 D318     		add	r3, r2, r3
 2111 00c6 1A78     		ldrb	r2, [r3]
 2112 00c8 344B     		ldr	r3, .L137+4
 2113 00ca 9A70     		strb	r2, [r3, #2]
 2114              	.L130:
1651:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1652:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* ((CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT>0u)||(CapSense_CSD_TOTAL_TOUCH_PADS
1653:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1654:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_ADD_SLIDER_TYPE)
1655:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1656:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_ADD_SLIDER_TYPE) */
1657:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1658:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1659:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_PREV] > noiseThreshold)
 2115              		.loc 1 1659 0
 2116 00cc 334B     		ldr	r3, .L137+4
 2117 00ce 1B78     		ldrb	r3, [r3]
 2118 00d0 3022     		mov	r2, #48
 2119 00d2 BA18     		add	r2, r7, r2
 2120 00d4 1278     		ldrb	r2, [r2]
 2121 00d6 9A42     		cmp	r2, r3
 2122 00d8 09D2     		bcs	.L132
1660:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1661:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] -= noiseThreshold;
 2123              		.loc 1 1661 0
 2124 00da 304B     		ldr	r3, .L137+4
 2125 00dc 1A78     		ldrb	r2, [r3]
 2126 00de 3023     		mov	r3, #48
 2127 00e0 FB18     		add	r3, r7, r3
 2128 00e2 1B78     		ldrb	r3, [r3]
 2129 00e4 D31A     		sub	r3, r2, r3
 2130 00e6 DAB2     		uxtb	r2, r3
 2131 00e8 2C4B     		ldr	r3, .L137+4
 2132 00ea 1A70     		strb	r2, [r3]
 2133 00ec 02E0     		b	.L133
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 68


 2134              	.L132:
1662:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1663:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1664:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1665:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_PREV] = 0u;
 2135              		.loc 1 1665 0
 2136 00ee 2B4B     		ldr	r3, .L137+4
 2137 00f0 0022     		mov	r2, #0
 2138 00f2 1A70     		strb	r2, [r3]
 2139              	.L133:
1666:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1667:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1668:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Maximum always greater than fingerThreshold, so greater than noiseThreshold */
1669:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_centroid[CapSense_CSD_POS] -= noiseThreshold;
 2140              		.loc 1 1669 0
 2141 00f4 294B     		ldr	r3, .L137+4
 2142 00f6 5A78     		ldrb	r2, [r3, #1]
 2143 00f8 3023     		mov	r3, #48
 2144 00fa FB18     		add	r3, r7, r3
 2145 00fc 1B78     		ldrb	r3, [r3]
 2146 00fe D31A     		sub	r3, r2, r3
 2147 0100 DAB2     		uxtb	r2, r3
 2148 0102 264B     		ldr	r3, .L137+4
 2149 0104 5A70     		strb	r2, [r3, #1]
1670:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1671:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Subtract noiseThreshold */
1672:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if(CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] > noiseThreshold)
 2150              		.loc 1 1672 0
 2151 0106 254B     		ldr	r3, .L137+4
 2152 0108 9B78     		ldrb	r3, [r3, #2]
 2153 010a 3022     		mov	r2, #48
 2154 010c BA18     		add	r2, r7, r2
 2155 010e 1278     		ldrb	r2, [r2]
 2156 0110 9A42     		cmp	r2, r3
 2157 0112 09D2     		bcs	.L134
1673:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1674:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -= noiseThreshold;
 2158              		.loc 1 1674 0
 2159 0114 214B     		ldr	r3, .L137+4
 2160 0116 9A78     		ldrb	r2, [r3, #2]
 2161 0118 3023     		mov	r3, #48
 2162 011a FB18     		add	r3, r7, r3
 2163 011c 1B78     		ldrb	r3, [r3]
 2164 011e D31A     		sub	r3, r2, r3
 2165 0120 DAB2     		uxtb	r2, r3
 2166 0122 1E4B     		ldr	r3, .L137+4
 2167 0124 9A70     		strb	r2, [r3, #2]
 2168 0126 02E0     		b	.L135
 2169              	.L134:
1675:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1676:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1677:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1678:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] = 0u;
 2170              		.loc 1 1678 0
 2171 0128 1C4B     		ldr	r3, .L137+4
 2172 012a 0022     		mov	r2, #0
 2173 012c 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 69


 2174              	.L135:
1679:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1680:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1681:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1682:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Si+1 - Si-1 */
1683:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         numerator = (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT] -
 2175              		.loc 1 1683 0
 2176 012e 1B4B     		ldr	r3, .L137+4
 2177 0130 9B78     		ldrb	r3, [r3, #2]
 2178 0132 1A1C     		mov	r2, r3
1684:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
 2179              		.loc 1 1684 0
 2180 0134 194B     		ldr	r3, .L137+4
 2181 0136 1B78     		ldrb	r3, [r3]
1683:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     (uint32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV];
 2182              		.loc 1 1683 0
 2183 0138 D31A     		sub	r3, r2, r3
 2184 013a 3B61     		str	r3, [r7, #16]
1685:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1686:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Si+1 + Si + Si-1 */
1687:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (int32) CapSense_CSD_centroid[CapSense_CSD_POS_PREV] +
 2185              		.loc 1 1687 0
 2186 013c 174B     		ldr	r3, .L137+4
 2187 013e 1B78     		ldrb	r3, [r3]
 2188 0140 1A1C     		mov	r2, r3
1688:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] +
 2189              		.loc 1 1688 0
 2190 0142 164B     		ldr	r3, .L137+4
 2191 0144 5B78     		ldrb	r3, [r3, #1]
1687:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] +
 2192              		.loc 1 1687 0
 2193 0146 D318     		add	r3, r2, r3
1689:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS_NEXT];
 2194              		.loc 1 1689 0
 2195 0148 144A     		ldr	r2, .L137+4
 2196 014a 9278     		ldrb	r2, [r2, #2]
1687:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                       (int32) CapSense_CSD_centroid[CapSense_CSD_POS] +
 2197              		.loc 1 1687 0
 2198 014c 9B18     		add	r3, r3, r2
 2199 014e FB60     		str	r3, [r7, #12]
1690:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1691:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* (numerator/denominator) + maximum */
1692:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator = (((int32)(uint32)((uint32)numerator << 8u)/denominator) + (int32)(uint32)((ui
 2200              		.loc 1 1692 0
 2201 0150 3B69     		ldr	r3, [r7, #16]
 2202 0152 1B02     		lsl	r3, r3, #8
 2203 0154 181C     		mov	r0, r3
 2204 0156 F968     		ldr	r1, [r7, #12]
 2205 0158 FFF7FEFF 		bl	__aeabi_idiv
 2206 015c 031C     		mov	r3, r0
 2207 015e 1A1C     		mov	r2, r3
 2208 0160 FB1D     		add	r3, r7, #7
 2209 0162 1B78     		ldrb	r3, [r3]
 2210 0164 1B02     		lsl	r3, r3, #8
 2211 0166 D318     		add	r3, r2, r3
 2212 0168 FB60     		str	r3, [r7, #12]
1693:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 70


1694:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if(CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u)
1695:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Only required for RADIAL Slider */
1696:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(denominator < 0)
1697:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1698:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 denominator += (int32)((uint16)((uint16) count << 8u));
1699:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1700:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) */
1701:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1702:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         denominator *= (int16)resolution;
 2213              		.loc 1 1702 0
 2214 016a BB1C     		add	r3, r7, #2
 2215 016c 1B88     		ldrh	r3, [r3]
 2216 016e 1AB2     		sxth	r2, r3
 2217 0170 FB68     		ldr	r3, [r7, #12]
 2218 0172 5343     		mul	r3, r2
 2219 0174 FB60     		str	r3, [r7, #12]
1703:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1704:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Round result and put it to uint8 */
1705:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         position = ((uint8) HI16((uint32)denominator + CapSense_CSD_CENTROID_ROUND_VALUE));
 2220              		.loc 1 1705 0
 2221 0176 FB68     		ldr	r3, [r7, #12]
 2222 0178 FE22     		mov	r2, #254
 2223 017a D201     		lsl	r2, r2, #7
 2224 017c 9446     		mov	ip, r2
 2225 017e 6344     		add	r3, r3, ip
 2226 0180 1A0C     		lsr	r2, r3, #16
 2227 0182 0B23     		mov	r3, #11
 2228 0184 FB18     		add	r3, r7, r3
 2229 0186 1A70     		strb	r2, [r3]
1706:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1707:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
 2230              		.loc 1 1707 0
 2231 0188 0B23     		mov	r3, #11
 2232 018a FB18     		add	r3, r7, r3
 2233 018c 1B78     		ldrb	r3, [r3]
1708:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2234              		.loc 1 1708 0
 2235 018e 181C     		mov	r0, r3
 2236 0190 BD46     		mov	sp, r7
 2237 0192 08B0     		add	sp, sp, #32
 2238              		@ sp needed
 2239 0194 B0BD     		pop	{r4, r5, r7, pc}
 2240              	.L138:
 2241 0196 C046     		.align	2
 2242              	.L137:
 2243 0198 00000000 		.word	CapSense_CSD_sensorSignal
 2244 019c 38000000 		.word	CapSense_CSD_centroid.5418
 2245              		.cfi_endproc
 2246              	.LFE62:
 2247              		.size	CapSense_CSD_CalcCentroid, .-CapSense_CSD_CalcCentroid
 2248              		.section	.text.CapSense_CSD_GetCentroidPos,"ax",%progbits
 2249              		.align	2
 2250              		.global	CapSense_CSD_GetCentroidPos
 2251              		.code	16
 2252              		.thumb_func
 2253              		.type	CapSense_CSD_GetCentroidPos, %function
 2254              	CapSense_CSD_GetCentroidPos:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 71


 2255              	.LFB63:
1709:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_CENTROIDS_BASIC_COUNT) */
1710:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1711:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1712:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u
1713:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1714:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetCentroidPos
1715:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1716:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1717:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1718:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1719:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1720:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1721:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result if enabled.
1722:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1723:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1724:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1725:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every linear slider widget there are defines in this format:
1726:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__LS           5
1727:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1728:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1729:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the linear slider.
1730:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1731:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1732:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
1733:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1734:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1735:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1736:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1737:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF. If an error occurs during
1738:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  execution of the centroid/diplexing algorithm, the function returns 0xFFFF.
1739:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1740:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1741:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1742:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Note:
1743:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1744:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1745:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1746:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
1747:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1748:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_GetCentroidPos(uint32 widget)
1749:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2256              		.loc 1 1749 0
 2257              		.cfi_startproc
 2258 0000 90B5     		push	{r4, r7, lr}
 2259              		.cfi_def_cfa_offset 12
 2260              		.cfi_offset 4, -12
 2261              		.cfi_offset 7, -8
 2262              		.cfi_offset 14, -4
 2263 0002 87B0     		sub	sp, sp, #28
 2264              		.cfi_def_cfa_offset 40
 2265 0004 02AF     		add	r7, sp, #8
 2266              		.cfi_def_cfa 7, 32
 2267 0006 7860     		str	r0, [r7, #4]
1750:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1751:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             const uint8 *diplex;
1752:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 72


1753:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1754:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1755:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1756:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
 2268              		.loc 1 1756 0
 2269 0008 0D23     		mov	r3, #13
 2270 000a FB18     		add	r3, r7, r3
 2271 000c 4F49     		ldr	r1, .L145
 2272 000e 7A68     		ldr	r2, [r7, #4]
 2273 0010 8A18     		add	r2, r1, r2
 2274 0012 1278     		ldrb	r2, [r2]
 2275 0014 1A70     		strb	r2, [r3]
1757:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
 2276              		.loc 1 1757 0
 2277 0016 0C23     		mov	r3, #12
 2278 0018 FB18     		add	r3, r7, r3
 2279 001a 4D49     		ldr	r1, .L145+4
 2280 001c 7A68     		ldr	r2, [r7, #4]
 2281 001e 8A18     		add	r2, r1, r2
 2282 0020 1278     		ldrb	r2, [r2]
 2283 0022 1A70     		strb	r2, [r3]
1758:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1759:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1760:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) ||
1761:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1762:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1763:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MAS
1764:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_
1765:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
1766:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1767:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum;
1768:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 position;
1769:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
 2284              		.loc 1 1769 0
 2285 0024 0B23     		mov	r3, #11
 2286 0026 FB18     		add	r3, r7, r3
 2287 0028 0022     		mov	r2, #0
 2288 002a 1A70     		strb	r2, [r3]
1770:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
 2289              		.loc 1 1770 0
 2290 002c 0A23     		mov	r3, #10
 2291 002e FB18     		add	r3, r7, r3
 2292 0030 0C22     		mov	r2, #12
 2293 0032 1A70     		strb	r2, [r3]
1771:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1772:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1773:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(widget < CapSense_CSD_TOTAL_DIPLEXED_SLIDERS_COUNT)
1774:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1775:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 maximum = CapSense_CSD_diplexTable[widget];
1776:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 diplex = &CapSense_CSD_diplexTable[maximum];
1777:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1778:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             else
1779:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
1780:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 diplex = 0u;
1781:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
1782:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1783:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 73


1784:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */
1785:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1786:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
1787:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1788:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
 2294              		.loc 1 1788 0
 2295 0034 474A     		ldr	r2, .L145+8
 2296 0036 7B68     		ldr	r3, [r7, #4]
 2297 0038 D318     		add	r3, r2, r3
 2298 003a 1A78     		ldrb	r2, [r3]
 2299 003c 0923     		mov	r3, #9
 2300 003e FC18     		add	r4, r7, r3
 2301 0040 0B23     		mov	r3, #11
 2302 0042 FB18     		add	r3, r7, r3
 2303 0044 1978     		ldrb	r1, [r3]
 2304 0046 0A23     		mov	r3, #10
 2305 0048 FB18     		add	r3, r7, r3
 2306 004a 1B78     		ldrb	r3, [r3]
 2307 004c 081C     		mov	r0, r1
 2308 004e 191C     		mov	r1, r3
 2309 0050 FFF7FEFF 		bl	CapSense_CSD_FindMaximum
 2310 0054 031C     		mov	r3, r0
 2311 0056 2370     		strb	r3, [r4]
1789:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1790:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1791:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (maximum != 0xFFu)
 2312              		.loc 1 1791 0
 2313 0058 0923     		mov	r3, #9
 2314 005a FB18     		add	r3, r7, r3
 2315 005c 1B78     		ldrb	r3, [r3]
 2316 005e FF2B     		cmp	r3, #255
 2317 0060 5BD0     		beq	.L140
1792:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1793:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1794:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum,
 2318              		.loc 1 1794 0
 2319 0062 3D4C     		ldr	r4, .L145+12
 2320 0064 3D4A     		ldr	r2, .L145+16
 2321 0066 7B68     		ldr	r3, [r7, #4]
 2322 0068 D318     		add	r3, r2, r3
 2323 006a 1B78     		ldrb	r3, [r3]
 2324 006c 0922     		mov	r2, #9
 2325 006e BA18     		add	r2, r7, r2
 2326 0070 1078     		ldrb	r0, [r2]
 2327 0072 0B22     		mov	r2, #11
 2328 0074 BA18     		add	r2, r7, r2
 2329 0076 1178     		ldrb	r1, [r2]
 2330 0078 0A22     		mov	r2, #10
 2331 007a BA18     		add	r2, r7, r2
 2332 007c 1278     		ldrb	r2, [r2]
 2333 007e 0093     		str	r3, [sp]
 2334 0080 231C     		mov	r3, r4
 2335 0082 FFF7FEFF 		bl	CapSense_CSD_CalcCentroid
 2336 0086 031C     		mov	r3, r0
 2337 0088 1A1C     		mov	r2, r3
 2338 008a 0E23     		mov	r3, #14
 2339 008c FB18     		add	r3, r7, r3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 74


 2340 008e 1A80     		strh	r2, [r3]
1795:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1796:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1797:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1798:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check if this linear slider has enabled filters */
1799:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
 2341              		.loc 1 1799 0
 2342 0090 0C23     		mov	r3, #12
 2343 0092 FB18     		add	r3, r7, r3
 2344 0094 1B78     		ldrb	r3, [r3]
 2345 0096 1F22     		mov	r2, #31
 2346 0098 1340     		and	r3, r2
 2347 009a 4FD0     		beq	.L143
1800:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1801:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate position to store filters data */
1802:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
 2348              		.loc 1 1802 0
 2349 009c 0823     		mov	r3, #8
 2350 009e FB18     		add	r3, r7, r3
 2351 00a0 0D22     		mov	r2, #13
 2352 00a2 BA18     		add	r2, r7, r2
 2353 00a4 1278     		ldrb	r2, [r2]
 2354 00a6 0132     		add	r2, r2, #1
 2355 00a8 1A70     		strb	r2, [r3]
1803:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1804:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
 2356              		.loc 1 1804 0
 2357 00aa 0D23     		mov	r3, #13
 2358 00ac FB18     		add	r3, r7, r3
 2359 00ae 1B78     		ldrb	r3, [r3]
 2360 00b0 264A     		ldr	r2, .L145
 2361 00b2 D35C     		ldrb	r3, [r2, r3]
 2362 00b4 002B     		cmp	r3, #0
 2363 00b6 0FD1     		bne	.L142
1805:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1806:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Init filters */
1807:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
 2364              		.loc 1 1807 0
 2365 00b8 0823     		mov	r3, #8
 2366 00ba FB18     		add	r3, r7, r3
 2367 00bc 1B78     		ldrb	r3, [r3]
 2368 00be 0E22     		mov	r2, #14
 2369 00c0 BA18     		add	r2, r7, r2
 2370 00c2 1288     		ldrh	r2, [r2]
 2371 00c4 D1B2     		uxtb	r1, r2
 2372 00c6 214A     		ldr	r2, .L145
 2373 00c8 D154     		strb	r1, [r2, r3]
1808:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1809:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1810:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1811:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1812:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1813:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) ||
1814:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
1815:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1816:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
1817:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 75


1818:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1819:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)) || \
1820:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
1821:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)))
1822:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1823:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1824:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
 2374              		.loc 1 1824 0
 2375 00ca 0D23     		mov	r3, #13
 2376 00cc FB18     		add	r3, r7, r3
 2377 00ce 1B78     		ldrb	r3, [r3]
 2378 00d0 1E4A     		ldr	r2, .L145
 2379 00d2 0121     		mov	r1, #1
 2380 00d4 D154     		strb	r1, [r2, r3]
 2381 00d6 31E0     		b	.L143
 2382              	.L142:
1825:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1826:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
1827:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1828:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Do filtering */
1829:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1830:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
1831:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1832:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1833:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
1834:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1835:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1836:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
1837:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
1838:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1839:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1840:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /*(0u != (CapSense_CSD_MEDIAN_FILTER &
1841:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *         CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1842:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1843:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1844:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if(0u!=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1845:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
1846:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1847:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
1848:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
1849:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1850:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                 (uint16)CapSense_CSD_posFiltersData
1851:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]=CapSense_CSD_posFiltersDat
1852:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
1853:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1854:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
1855:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1856:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1857:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1858:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1859:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
1860:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1861:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
1862:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1863:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1864:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1865:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 76


1866:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1867:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1868:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1869:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FILT
1870:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
1871:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1872:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
1873:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
1874:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1875:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1876:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
1877:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1878:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1879:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1880:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_LINEAR_SLIDERS_POS_FI
1881:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
 2383              		.loc 1 1881 0
 2384 00d8 0C23     		mov	r3, #12
 2385 00da FB18     		add	r3, r7, r3
 2386 00dc 1B78     		ldrb	r3, [r3]
 2387 00de 1022     		mov	r2, #16
 2388 00e0 1340     		and	r3, r2
 2389 00e2 2BD0     		beq	.L143
1882:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
1883:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
1884:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
 2390              		.loc 1 1884 0
 2391 00e4 0823     		mov	r3, #8
 2392 00e6 FB18     		add	r3, r7, r3
 2393 00e8 1B78     		ldrb	r3, [r3]
 2394 00ea 184A     		ldr	r2, .L145
 2395 00ec D35C     		ldrb	r3, [r2, r3]
1883:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
 2396              		.loc 1 1883 0
 2397 00ee 9AB2     		uxth	r2, r3
 2398 00f0 0E23     		mov	r3, #14
 2399 00f2 FC18     		add	r4, r7, r3
 2400 00f4 0E23     		mov	r3, #14
 2401 00f6 FB18     		add	r3, r7, r3
 2402 00f8 1B88     		ldrh	r3, [r3]
 2403 00fa 181C     		mov	r0, r3
 2404 00fc 111C     		mov	r1, r2
 2405 00fe FFF7FEFF 		bl	CapSense_CSD_JitterFilter
 2406 0102 031C     		mov	r3, r0
 2407 0104 2380     		strh	r3, [r4]
1885:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
 2408              		.loc 1 1885 0
 2409 0106 0823     		mov	r3, #8
 2410 0108 FB18     		add	r3, r7, r3
 2411 010a 1B78     		ldrb	r3, [r3]
 2412 010c 0E22     		mov	r2, #14
 2413 010e BA18     		add	r2, r7, r2
 2414 0110 1288     		ldrh	r2, [r2]
 2415 0112 D1B2     		uxtb	r1, r2
 2416 0114 0D4A     		ldr	r2, .L145
 2417 0116 D154     		strb	r1, [r2, r3]
 2418 0118 10E0     		b	.L143
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 77


 2419              	.L140:
1886:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
1887:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
1888:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK))
1889:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
1890:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
1891:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1892:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1893:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1894:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1895:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
1896:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1897:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Maximum wasn't found */
1898:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
 2420              		.loc 1 1898 0
 2421 011a 0E23     		mov	r3, #14
 2422 011c FB18     		add	r3, r7, r3
 2423 011e 0122     		mov	r2, #1
 2424 0120 5242     		neg	r2, r2
 2425 0122 1A80     		strh	r2, [r3]
1899:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1900:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if(0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK)
1901:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
1902:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if(0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
 2426              		.loc 1 1902 0
 2427 0124 0C23     		mov	r3, #12
 2428 0126 FB18     		add	r3, r7, r3
 2429 0128 1B78     		ldrb	r3, [r3]
 2430 012a 1F22     		mov	r2, #31
 2431 012c 1340     		and	r3, r2
 2432 012e 05D0     		beq	.L143
1903:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1904:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
 2433              		.loc 1 1904 0
 2434 0130 0D23     		mov	r3, #13
 2435 0132 FB18     		add	r3, r7, r3
 2436 0134 1B78     		ldrb	r3, [r3]
 2437 0136 054A     		ldr	r2, .L145
 2438 0138 0021     		mov	r1, #0
 2439 013a D154     		strb	r1, [r2, r3]
 2440              	.L143:
1905:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
1906:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_LINEAR_SLIDERS_POS_FILTERS_MASK) */
1907:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
1908:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1909:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1910:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
 2441              		.loc 1 1910 0
 2442 013c 0E23     		mov	r3, #14
 2443 013e FB18     		add	r3, r7, r3
 2444 0140 1B88     		ldrh	r3, [r3]
1911:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2445              		.loc 1 1911 0
 2446 0142 181C     		mov	r0, r3
 2447 0144 BD46     		mov	sp, r7
 2448 0146 05B0     		add	sp, sp, #20
 2449              		@ sp needed
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 78


 2450 0148 90BD     		pop	{r4, r7, pc}
 2451              	.L146:
 2452 014a C046     		.align	2
 2453              	.L145:
 2454 014c 18000000 		.word	CapSense_CSD_posFiltersData
 2455 0150 14000000 		.word	CapSense_CSD_posFiltersMask
 2456 0154 00000000 		.word	CapSense_CSD_fingerThreshold
 2457 0158 8B0B0000 		.word	2955
 2458 015c 00000000 		.word	CapSense_CSD_noiseThreshold
 2459              		.cfi_endproc
 2460              	.LFE63:
 2461              		.size	CapSense_CSD_GetCentroidPos, .-CapSense_CSD_GetCentroidPos
 2462              		.section	.text.CapSense_CSD_GetRadialCentroidPos,"ax",%progbits
 2463              		.align	2
 2464              		.global	CapSense_CSD_GetRadialCentroidPos
 2465              		.code	16
 2466              		.thumb_func
 2467              		.type	CapSense_CSD_GetRadialCentroidPos, %function
 2468              	CapSense_CSD_GetRadialCentroidPos:
 2469              	.LFB64:
1912:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COU
1913:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1914:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1915:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COUNT > 0u
1916:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
1917:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetRadialCentroidPos
1918:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
1919:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1920:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
1921:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Checks the CapSense_CSD_Signal[ ] array for a centroid within
1922:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  a slider specified range. The centroid position is calculated according to the resolution
1923:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  specified in the CapSense customizer. The position filters are applied to the
1924:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result if enabled.
1925:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1926:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
1927:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
1928:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every radial slider widget there are defines in this format:
1929:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__RS           5
1930:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1931:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
1932:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a position value of the radial slider.
1933:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1934:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
1935:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
1936:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1937:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
1938:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If any sensor within the slider widget is active, the function returns values
1939:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  from zero to the API resolution value set in the CapSense customizer. If no
1940:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  sensors are active, the function returns 0xFFFF.
1941:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  There are no checks of the widget type argument provided to this function.
1942:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The unproper widget type provided will cause unexpected position calculations.
1943:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1944:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Note:
1945:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If noise counts on the slider segments are greater than the noise
1946:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold, this subroutine may generate a false centroid result. The noise
1947:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  threshold should be set carefully (high enough above the noise level) so
1948:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  that noise will not generate a false centroid.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 79


1949:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
1950:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
1951:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****      uint16 CapSense_CSD_GetRadialCentroidPos(uint32 widget)
1952:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2470              		.loc 1 1952 0
 2471              		.cfi_startproc
 2472 0000 90B5     		push	{r4, r7, lr}
 2473              		.cfi_def_cfa_offset 12
 2474              		.cfi_offset 4, -12
 2475              		.cfi_offset 7, -8
 2476              		.cfi_offset 14, -4
 2477 0002 87B0     		sub	sp, sp, #28
 2478              		.cfi_def_cfa_offset 40
 2479 0004 02AF     		add	r7, sp, #8
 2480              		.cfi_def_cfa 7, 32
 2481 0006 7860     		str	r0, [r7, #4]
1953:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1954:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posIndex;
1955:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
1956:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
1957:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
1958:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1959:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) ||
1960:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
1961:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 tempPos;
1962:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MAS
1963:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_
1964:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
1965:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1966:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 maximum;
1967:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 position;
1968:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
 2482              		.loc 1 1968 0
 2483 0008 0D23     		mov	r3, #13
 2484 000a FB18     		add	r3, r7, r3
 2485 000c 0022     		mov	r2, #0
 2486 000e 1A70     		strb	r2, [r3]
1969:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
 2487              		.loc 1 1969 0
 2488 0010 0C23     		mov	r3, #12
 2489 0012 FB18     		add	r3, r7, r3
 2490 0014 0C22     		mov	r2, #12
 2491 0016 1A70     		strb	r2, [r3]
1970:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1971:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within centroid */
1972:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
1973:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
1974:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
1975:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             maximum = CapSense_CSD_FindMaximum(offset, count, (uint8)CapSense_CSD_fingerThreshold[w
 2492              		.loc 1 1975 0
 2493 0018 1D4A     		ldr	r2, .L151
 2494 001a 7B68     		ldr	r3, [r7, #4]
 2495 001c D318     		add	r3, r2, r3
 2496 001e 1A78     		ldrb	r2, [r3]
 2497 0020 0B23     		mov	r3, #11
 2498 0022 FC18     		add	r4, r7, r3
 2499 0024 0D23     		mov	r3, #13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 80


 2500 0026 FB18     		add	r3, r7, r3
 2501 0028 1978     		ldrb	r1, [r3]
 2502 002a 0C23     		mov	r3, #12
 2503 002c FB18     		add	r3, r7, r3
 2504 002e 1B78     		ldrb	r3, [r3]
 2505 0030 081C     		mov	r0, r1
 2506 0032 191C     		mov	r1, r3
 2507 0034 FFF7FEFF 		bl	CapSense_CSD_FindMaximum
 2508 0038 031C     		mov	r3, r0
 2509 003a 2370     		strb	r3, [r4]
1976:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
1977:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1978:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (maximum != CapSense_CSD_MAXIMUM_CENTROID)
 2510              		.loc 1 1978 0
 2511 003c 0B23     		mov	r3, #11
 2512 003e FB18     		add	r3, r7, r3
 2513 0040 1B78     		ldrb	r3, [r3]
 2514 0042 FF2B     		cmp	r3, #255
 2515 0044 17D0     		beq	.L148
1979:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
1980:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Calculate centroid */
1981:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = (uint16) CapSense_CSD_CalcCentroid(maximum,
 2516              		.loc 1 1981 0
 2517 0046 134C     		ldr	r4, .L151+4
 2518 0048 134A     		ldr	r2, .L151+8
 2519 004a 7B68     		ldr	r3, [r7, #4]
 2520 004c D318     		add	r3, r2, r3
 2521 004e 1B78     		ldrb	r3, [r3]
 2522 0050 0B22     		mov	r2, #11
 2523 0052 BA18     		add	r2, r7, r2
 2524 0054 1078     		ldrb	r0, [r2]
 2525 0056 0D22     		mov	r2, #13
 2526 0058 BA18     		add	r2, r7, r2
 2527 005a 1178     		ldrb	r1, [r2]
 2528 005c 0C22     		mov	r2, #12
 2529 005e BA18     		add	r2, r7, r2
 2530 0060 1278     		ldrb	r2, [r2]
 2531 0062 0093     		str	r3, [sp]
 2532 0064 231C     		mov	r3, r4
 2533 0066 FFF7FEFF 		bl	CapSense_CSD_CalcCentroid
 2534 006a 031C     		mov	r3, r0
 2535 006c 1A1C     		mov	r2, r3
 2536 006e 0E23     		mov	r3, #14
 2537 0070 FB18     		add	r3, r7, r3
 2538 0072 1A80     		strh	r2, [r3]
 2539 0074 04E0     		b	.L149
 2540              	.L148:
1982:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                          offset, count, CapSense_CSD_centroidMult[widget], CapSense_CSD_noiseThresh
1983:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1984:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
1985:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Check if this Radial slider has enabled filters */
1986:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
1987:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
1988:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Calculate position to store filters data */
1989:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     posIndex  = firstTimeIndex + 1u;
1990:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
1991:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 81


1992:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
1993:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Init filters */
1994:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
1995:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & \
1996:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
1997:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                              (0u != (CapSense_CSD_AVERAGING_FILTER & \
1998:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
1999:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2000:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))  ||
2001:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                  (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
2002:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2003:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] = (uint8) position;
2004:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2005:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2006:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)) || \
2007:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *   (0u != (CapSense_CSD_AVERAGING_FILTER & \
2008:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)))
2009:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2010:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2011:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
2012:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2013:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     else
2014:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2015:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Do filtering */
2016:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
2017:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
2018:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2019:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
2020:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_MedianFilter(position,
2021:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
2022:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                         CapSense_CSD_posFiltersData
2023:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex + 1u] =
2024:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                               CapSense_CSD_posFilte
2025:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
2026:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2027:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER &
2028:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2029:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2030:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2031:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_AVERAGING_FILTER & \
2032:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2033:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
2034:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2035:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 tempPos = (uint8) position;
2036:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_AveragingFilter(position,
2037:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2038:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2039:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex+1u]= CapSense_CSD_posFiltersDa
2040:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = tempPos;
2041:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2042:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
2043:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2044:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2045:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2046:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
2047:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
2048:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 82


2049:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR2Filter(position,
2050:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2051:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2052:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2053:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR2_FILTER &
2054:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2055:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2056:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2057:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FILT
2058:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
2059:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2060:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_IIR4Filter(position,
2061:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2062:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2063:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2064:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_IIR4_FILTER &
2065:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *          CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2066:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2067:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2068:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_RADIAL_SLIDERS_POS_FI
2069:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
2070:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             {
2071:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 position = CapSense_CSD_JitterFilter(position,
2072:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                          CapSense_CSD_posFiltersDat
2073:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 CapSense_CSD_posFiltersData[posIndex] = (uint8) position;
2074:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             }
2075:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         #endif /* (0u != (CapSense_CSD_JITTER_FILTER &
2076:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                *           CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK))
2077:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                */
2078:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2079:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2080:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2081:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2082:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2083:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
2084:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2085:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Maximum was not found */
2086:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             position = 0xFFFFu;
 2541              		.loc 1 2086 0
 2542 0076 0E23     		mov	r3, #14
 2543 0078 FB18     		add	r3, r7, r3
 2544 007a 0122     		mov	r2, #1
 2545 007c 5242     		neg	r2, r2
 2546 007e 1A80     		strh	r2, [r3]
 2547              	.L149:
2087:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2088:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK)
2089:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
2090:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
2091:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2092:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
2093:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2094:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (0u != CapSense_CSD_RADIAL_SLIDERS_POS_FILTERS_MASK) */
2095:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2096:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2097:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (position);
 2548              		.loc 1 2097 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 83


 2549 0080 0E23     		mov	r3, #14
 2550 0082 FB18     		add	r3, r7, r3
 2551 0084 1B88     		ldrh	r3, [r3]
2098:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2552              		.loc 1 2098 0
 2553 0086 181C     		mov	r0, r3
 2554 0088 BD46     		mov	sp, r7
 2555 008a 05B0     		add	sp, sp, #20
 2556              		@ sp needed
 2557 008c 90BD     		pop	{r4, r7, pc}
 2558              	.L152:
 2559 008e C046     		.align	2
 2560              	.L151:
 2561 0090 00000000 		.word	CapSense_CSD_fingerThreshold
 2562 0094 8B0B0000 		.word	2955
 2563 0098 00000000 		.word	CapSense_CSD_noiseThreshold
 2564              		.cfi_endproc
 2565              	.LFE64:
 2566              		.size	CapSense_CSD_GetRadialCentroidPos, .-CapSense_CSD_GetRadialCentroidPos
 2567              		.section	.text.CapSense_CSD_MedianFilter,"ax",%progbits
 2568              		.align	2
 2569              		.global	CapSense_CSD_MedianFilter
 2570              		.code	16
 2571              		.thumb_func
 2572              		.type	CapSense_CSD_MedianFilter, %function
 2573              	CapSense_CSD_MedianFilter:
 2574              	.LFB65:
2099:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ((CapSense_CSD_TOTAL_RADIAL_SLIDERS_COUNT > 0u) || (CapSense_CSD_TOTAL_LINEAR_SLIDERS_COU
2100:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2101:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2102:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if(CapSense_CSD_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u)
2103:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2104:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetTouchCentroidPos
2105:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2106:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2107:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2108:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  If a finger is present on a touchpad, this function calculates the X and Y
2109:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  position of the finger by calculating the centroids within touchpad specified
2110:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  range. The X and Y positions are calculated according to the API resolutions set in the
2111:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense customizer. Returns 1 if a finger is on the touchpad.
2112:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The position filter is applied to the result if enabled.
2113:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This function is available only if a touch pad is defined by the CapSense
2114:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  customizer.
2115:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2116:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2117:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  Widget number.
2118:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  For every touchpad widget there are defines in this format:
2119:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  #define CapSense_CSD_"widget_name"__TP            5
2120:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2121:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos:     Pointer to the array of two uint16 elements, where result
2122:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  result of calculation of X and Y position are stored.
2123:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos[0u]  - position of X
2124:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos[1u]  - position of Y
2125:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2126:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2127:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a 1 if a finger is on the touch pad, 0 - if not.
2128:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 84


2129:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2130:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2131:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2132:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2133:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   There are no checks of the widget type argument provided to this function.
2134:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   The unproper widget type provided will cause unexpected position
2135:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *   calculations.
2136:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2137:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2138:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 CapSense_CSD_GetTouchCentroidPos(uint32 widget, uint16* pos)
2139:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2140:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2141:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posXIndex;
2142:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posYIndex;
2143:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 firstTimeIndex = CapSense_CSD_posFiltersData[widget];
2144:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint8 posFiltersMask = CapSense_CSD_posFiltersMask[widget];
2145:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2146:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2147:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
2148:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****              (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2149:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             uint16 tempPos;
2150:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) 
2151:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                *   (0u != (CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK
2152:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                */
2153:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2154:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 MaxX;
2155:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 MaxY;
2156:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 posX;
2157:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 posY;
2158:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 touch = 0u;
2159:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 offset = CapSense_CSD_rawDataIndex[widget];
2160:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 count = CapSense_CSD_numberOfSensors[widget];
2161:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2162:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* Find Maximum within X centroid */
2163:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (CapSense_CSD_IS_DIPLEX_SLIDER)
2164:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             MaxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget], 0u
2165:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #else
2166:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             MaxX = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget]);
2167:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
2168:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2169:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (MaxX != CapSense_CSD_MAXIMUM_CENTROID)
2170:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2171:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             offset = CapSense_CSD_rawDataIndex[widget + 1u];
2172:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             count = CapSense_CSD_numberOfSensors[widget + 1u];
2173:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2174:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find Maximum within Y centroid */
2175:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #if (CapSense_CSD_IS_DIPLEX_SLIDER)
2176:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 MaxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
2177:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #else
2178:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 MaxY = CapSense_CSD_FindMaximum(offset, count, CapSense_CSD_fingerThreshold[widget 
2179:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             #endif /* (CapSense_CSD_IS_DIPLEX_SLIDER) */
2180:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2181:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (MaxY != CapSense_CSD_MAXIMUM_CENTROID)
2182:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2183:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* X and Y maximums are found = true touch */
2184:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 touch = 1u;
2185:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 85


2186:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Calculate Y centroid */
2187:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 posY = CapSense_CSD_CalcCentroid(MaxY, offset, count,
2188:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget + 1u], CapSense_CSD_noiseThreshold[wid
2189:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2190:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Calculate X centroid */
2191:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 offset = CapSense_CSD_rawDataIndex[widget];
2192:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 count = CapSense_CSD_numberOfSensors[widget];
2193:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2194:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 posX = CapSense_CSD_CalcCentroid(MaxX, offset, count,
2195:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_centroidMult[widget],CapSense_CSD_noiseThreshold[widget]);
2196:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2197:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2198:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     /* Check if this TP has enabled filters */
2199:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     if (0u != (posFiltersMask & CapSense_CSD_ANY_POS_FILTER))
2200:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     {
2201:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         /* Calculate position to store filters data */
2202:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posXIndex  = firstTimeIndex + 1u;
2203:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         posYIndex  = CapSense_CSD_posFiltersData[widget + 1u];
2204:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2205:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         if (0u == CapSense_CSD_posFiltersData[firstTimeIndex])
2206:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
2207:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Init filters */
2208:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posXIndex] = posX;
2209:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[posYIndex] = posY;
2210:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2211:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if((0u != (CapSense_CSD_MEDIAN_FILTER & \
2212:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))|| \
2213:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 (0u != (CapSense_CSD_AVERAGING_FILTER & \
2214:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2215:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2216:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if ( (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER)) ||
2217:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                      (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER)) )
2218:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2219:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] = posX;
2220:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] = posY;
2221:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2222:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* ((0u != (CapSense_CSD_MEDIAN_FILTER & \
2223:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)) || \
2224:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *    (0u != (CapSense_CSD_AVERAGING_FILTER & \
2225:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *            CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)))
2226:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2227:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2228:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             CapSense_CSD_posFiltersData[firstTimeIndex] = 1u;
2229:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
2230:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         else
2231:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         {
2232:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             /* Do filtering */
2233:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_MEDIAN_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
2234:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_MEDIAN_FILTER))
2235:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2236:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
2237:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_MedianFilter(posX,
2238:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2239:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2240:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] =
2241:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2242:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 86


2243:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2244:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
2245:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_MedianFilter(posY,
2246:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2247:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2248:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] =
2249:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2250:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
2251:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2252:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2253:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_MEDIAN_FILTER & \
2254:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2255:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2256:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2257:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if(0u !=(CapSense_CSD_AVERAGING_FILTER & CapSense_CSD_TOUCH_PADS_POS_F
2258:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_AVERAGING_FILTER))
2259:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2260:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posX;
2261:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_AveragingFilter(posX,
2262:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2263:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                        CapSense_CSD_posFiltersData[
2264:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex + 1u] =
2265:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                              CapSense_CSD_posFilter
2266:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = tempPos;
2267:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2268:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     tempPos = posY;
2269:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_AveragingFilter(posY,
2270:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2271:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                       CapSense_CSD_posFiltersData[p
2272:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex + 1u] =
2273:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2274:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = tempPos;
2275:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2276:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2277:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_AVERAGING_FILTER & \
2278:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2279:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2280:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2281:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR2_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
2282:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR2_FILTER))
2283:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
2284:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR2Filter(posX,
2285:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                            CapSense_CSD_posFiltersD
2286:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
2287:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2288:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR2Filter(posY,
2289:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2290:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
2291:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2292:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2293:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR2_FILTER & \
2294:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *          CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2295:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2296:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2297:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_IIR4_FILTER & CapSense_CSD_TOUCH_PADS_POS_FILT
2298:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_IIR4_FILTER))
2299:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 {
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 87


2300:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posX = (uint8) CapSense_CSD_IIR4Filter((uint16)posX,
2301:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2302:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posXIndex] = posX;
2303:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2304:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     posY = (uint8) CapSense_CSD_IIR4Filter((uint16)posY,
2305:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                     (uint16)CapSense_CSD_posFilters
2306:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     CapSense_CSD_posFiltersData[posYIndex] = posY;
2307:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 }
2308:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2309:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_IIR4_FILTER & \
2310:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2311:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2312:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2313:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #if (0u != (CapSense_CSD_JITTER_FILTER & CapSense_CSD_TOUCH_PADS_POS_FI
2314:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                 if (0u != (posFiltersMask & CapSense_CSD_JITTER_FILTER))
2315:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     {
2316:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         posX = (uint8) CapSense_CSD_JitterFilter(posX,
2317:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2318:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posXIndex] = posX;
2319:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2320:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         posY = (uint8) CapSense_CSD_JitterFilter(posY,
2321:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                                                             CapSense_CSD_posFilters
2322:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                         CapSense_CSD_posFiltersData[posYIndex] = posY;
2323:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                     }
2324:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                             #endif /* (0u != (CapSense_CSD_JITTER_FILTER & \
2325:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    *           CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK))
2326:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                                    */
2327:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                         }
2328:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     }
2329:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2330:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2331:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Save positions */
2332:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[0u] = posX;
2333:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[1u] = posY;
2334:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2335:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2336:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2337:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #if (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK)
2338:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if(touch == 0u)
2339:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2340:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 /* Reset filters */
2341:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if ((posFiltersMask & CapSense_CSD_ANY_POS_FILTER) != 0u)
2342:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2343:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     CapSense_CSD_posFiltersData[firstTimeIndex] = 0u;
2344:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2345:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2346:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         #endif /* (0u != CapSense_CSD_TOUCH_PADS_POS_FILTERS_MASK) */
2347:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2348:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (touch);
2349:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2350:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_TOTAL_TOUCH_PADS_BASIC_COUNT > 0u) */
2351:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2352:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2353:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2354:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2355:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)) )
2356:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 88


2357:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_MedianFilter
2358:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2359:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2360:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2361:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Median filter function.
2362:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The median filter looks at the three most recent samples and reports the
2363:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  median value.
2364:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2365:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2366:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2367:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2368:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
2369:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2370:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2371:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2372:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2373:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2374:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2375:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2376:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2377:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2378:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2379:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2380:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_MedianFilter(uint16 x1, uint16 x2, uint16 x3)
2381:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2575              		.loc 1 2381 0
 2576              		.cfi_startproc
 2577 0000 90B5     		push	{r4, r7, lr}
 2578              		.cfi_def_cfa_offset 12
 2579              		.cfi_offset 4, -12
 2580              		.cfi_offset 7, -8
 2581              		.cfi_offset 14, -4
 2582 0002 85B0     		sub	sp, sp, #20
 2583              		.cfi_def_cfa_offset 32
 2584 0004 00AF     		add	r7, sp, #0
 2585              		.cfi_def_cfa_register 7
 2586 0006 041C     		mov	r4, r0
 2587 0008 081C     		mov	r0, r1
 2588 000a 111C     		mov	r1, r2
 2589 000c BB1D     		add	r3, r7, #6
 2590 000e 221C     		add	r2, r4, #0
 2591 0010 1A80     		strh	r2, [r3]
 2592 0012 3B1D     		add	r3, r7, #4
 2593 0014 021C     		add	r2, r0, #0
 2594 0016 1A80     		strh	r2, [r3]
 2595 0018 BB1C     		add	r3, r7, #2
 2596 001a 0A1C     		add	r2, r1, #0
 2597 001c 1A80     		strh	r2, [r3]
2382:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 tmp;
2383:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2384:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x1 > x2)
 2598              		.loc 1 2384 0
 2599 001e BA1D     		add	r2, r7, #6
 2600 0020 3B1D     		add	r3, r7, #4
 2601 0022 1288     		ldrh	r2, [r2]
 2602 0024 1B88     		ldrh	r3, [r3]
 2603 0026 9A42     		cmp	r2, r3
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 89


 2604 0028 0DD9     		bls	.L154
2385:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2386:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             tmp = x2;
 2605              		.loc 1 2386 0
 2606 002a 0E23     		mov	r3, #14
 2607 002c FB18     		add	r3, r7, r3
 2608 002e 3A1D     		add	r2, r7, #4
 2609 0030 1288     		ldrh	r2, [r2]
 2610 0032 1A80     		strh	r2, [r3]
2387:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x2 = x1;
 2611              		.loc 1 2387 0
 2612 0034 3B1D     		add	r3, r7, #4
 2613 0036 BA1D     		add	r2, r7, #6
 2614 0038 1288     		ldrh	r2, [r2]
 2615 003a 1A80     		strh	r2, [r3]
2388:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1 = tmp;
 2616              		.loc 1 2388 0
 2617 003c BB1D     		add	r3, r7, #6
 2618 003e 0E22     		mov	r2, #14
 2619 0040 BA18     		add	r2, r7, r2
 2620 0042 1288     		ldrh	r2, [r2]
 2621 0044 1A80     		strh	r2, [r3]
 2622              	.L154:
2389:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2390:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2391:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x2 > x3)
 2623              		.loc 1 2391 0
 2624 0046 3A1D     		add	r2, r7, #4
 2625 0048 BB1C     		add	r3, r7, #2
 2626 004a 1288     		ldrh	r2, [r2]
 2627 004c 1B88     		ldrh	r3, [r3]
 2628 004e 9A42     		cmp	r2, r3
 2629 0050 03D9     		bls	.L155
2392:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2393:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x2 = x3;
 2630              		.loc 1 2393 0
 2631 0052 3B1D     		add	r3, r7, #4
 2632 0054 BA1C     		add	r2, r7, #2
 2633 0056 1288     		ldrh	r2, [r2]
 2634 0058 1A80     		strh	r2, [r3]
 2635              	.L155:
2394:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2395:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2396:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((x1 > x2) ? x1 : x2);
 2636              		.loc 1 2396 0
 2637 005a 3B1D     		add	r3, r7, #4
 2638 005c BA1D     		add	r2, r7, #6
 2639 005e 1088     		ldrh	r0, [r2]
 2640 0060 1B88     		ldrh	r3, [r3]
 2641 0062 99B2     		uxth	r1, r3
 2642 0064 82B2     		uxth	r2, r0
 2643 0066 9142     		cmp	r1, r2
 2644 0068 00D2     		bcs	.L156
 2645 006a 031C     		add	r3, r0, #0
 2646              	.L156:
 2647 006c 9BB2     		uxth	r3, r3
2397:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 90


 2648              		.loc 1 2397 0
 2649 006e 181C     		mov	r0, r3
 2650 0070 BD46     		mov	sp, r7
 2651 0072 05B0     		add	sp, sp, #20
 2652              		@ sp needed
 2653 0074 90BD     		pop	{r4, r7, pc}
 2654              		.cfi_endproc
 2655              	.LFE65:
 2656              		.size	CapSense_CSD_MedianFilter, .-CapSense_CSD_MedianFilter
 2657 0076 C046     		.section	.text.CapSense_CSD_IIR4Filter,"ax",%progbits
 2658              		.align	2
 2659              		.global	CapSense_CSD_IIR4Filter
 2660              		.code	16
 2661              		.thumb_func
 2662              		.type	CapSense_CSD_IIR4Filter, %function
 2663              	CapSense_CSD_IIR4Filter:
 2664              	.LFB66:
2398:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2399:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_MEDIAN_FILTER)) || \
2400:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       ((CapSense_CSD_TUNING_METHOD == CapSense_CSD__TUNING_AUTO)) ) */
2401:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2402:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2403:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER)) || \
2404:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER)) )
2405:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2406:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_AveragingFilter
2407:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2408:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2409:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2410:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Averaging filter function.
2411:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  The averaging filter looks at the three most recent samples of a position and
2412:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  reports the averaging value.
2413:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2414:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2415:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2416:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2417:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x3:  Before previous value.
2418:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2419:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2420:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2421:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2422:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2423:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2424:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2425:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2426:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2427:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2428:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2429:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_AveragingFilter(uint16 x1, uint16 x2, uint16 x3)
2430:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2431:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp = ((uint32)x1 + (uint32)x2 + (uint32)x3) / 3u;
2432:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2433:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2434:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2435:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_AVERAGING_FILTER) || \
2436:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_AVERAGING_FILTER) ) */
2437:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 91


2438:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2439:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)) || \
2440:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER)) )
2441:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2442:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR2Filter
2443:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2444:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2445:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2446:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/2 filter function. IIR1/2 = 1/2current + 1/2previous.
2447:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2448:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2449:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2450:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2451:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2452:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2453:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2454:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2455:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2456:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2457:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2458:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2459:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2460:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2461:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2462:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR2Filter(uint16 x1, uint16 x2)
2463:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2464:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2465:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2466:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/2 Current Value+ 1/2 Previous Value */
2467:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
2468:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 1u;
2469:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2470:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2471:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2472:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR2_FILTER)) || \
2473:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR2_FILTER)) )
2474:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2475:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2476:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2477:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)) || \
2478:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER)) )
2479:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2480:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR4Filter
2481:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2482:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2483:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2484:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/4 filter function. IIR1/4 = 1/4current + 3/4previous.
2485:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2486:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2487:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2488:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2489:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2490:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2491:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns a filtered value.
2492:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2493:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2494:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 92


2495:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2496:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2497:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2498:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2499:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2500:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR4Filter(uint16 x1, uint16 x2)
2501:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2665              		.loc 1 2501 0
 2666              		.cfi_startproc
 2667 0000 80B5     		push	{r7, lr}
 2668              		.cfi_def_cfa_offset 8
 2669              		.cfi_offset 7, -8
 2670              		.cfi_offset 14, -4
 2671 0002 84B0     		sub	sp, sp, #16
 2672              		.cfi_def_cfa_offset 24
 2673 0004 00AF     		add	r7, sp, #0
 2674              		.cfi_def_cfa_register 7
 2675 0006 021C     		mov	r2, r0
 2676 0008 BB1D     		add	r3, r7, #6
 2677 000a 1A80     		strh	r2, [r3]
 2678 000c 3B1D     		add	r3, r7, #4
 2679 000e 0A1C     		add	r2, r1, #0
 2680 0010 1A80     		strh	r2, [r3]
2502:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2503:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2504:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/4 Current Value + 3/4 Previous Value */
2505:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1 + (uint32)x2;
 2681              		.loc 1 2505 0
 2682 0012 BB1D     		add	r3, r7, #6
 2683 0014 1A88     		ldrh	r2, [r3]
 2684 0016 3B1D     		add	r3, r7, #4
 2685 0018 1B88     		ldrh	r3, [r3]
 2686 001a D318     		add	r3, r2, r3
 2687 001c FB60     		str	r3, [r7, #12]
2506:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += ((uint32)x2 << 1u);
 2688              		.loc 1 2506 0
 2689 001e 3B1D     		add	r3, r7, #4
 2690 0020 1B88     		ldrh	r3, [r3]
 2691 0022 5B00     		lsl	r3, r3, #1
 2692 0024 FA68     		ldr	r2, [r7, #12]
 2693 0026 D318     		add	r3, r2, r3
 2694 0028 FB60     		str	r3, [r7, #12]
2507:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 2u;
 2695              		.loc 1 2507 0
 2696 002a FB68     		ldr	r3, [r7, #12]
 2697 002c 9B08     		lsr	r3, r3, #2
 2698 002e FB60     		str	r3, [r7, #12]
2508:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2509:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
 2699              		.loc 1 2509 0
 2700 0030 FB68     		ldr	r3, [r7, #12]
 2701 0032 9BB2     		uxth	r3, r3
2510:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2702              		.loc 1 2510 0
 2703 0034 181C     		mov	r0, r3
 2704 0036 BD46     		mov	sp, r7
 2705 0038 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 93


 2706              		@ sp needed
 2707 003a 80BD     		pop	{r7, pc}
 2708              		.cfi_endproc
 2709              	.LFE66:
 2710              		.size	CapSense_CSD_IIR4Filter, .-CapSense_CSD_IIR4Filter
 2711              		.section	.text.CapSense_CSD_JitterFilter,"ax",%progbits
 2712              		.align	2
 2713              		.global	CapSense_CSD_JitterFilter
 2714              		.code	16
 2715              		.thumb_func
 2716              		.type	CapSense_CSD_JitterFilter, %function
 2717              	CapSense_CSD_JitterFilter:
 2718              	.LFB67:
2511:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR4_FILTER)) || \
2512:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_IIR4_FILTER)) )
2513:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2514:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2515:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2516:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
2517:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) || \
2518:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****       (0u != (CapSense_CSD_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)))
2519:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2520:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: uint16 CapSense_CSD_JitterFilter
2521:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2522:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2523:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2524:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the Jitter filter function.
2525:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2526:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2527:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2528:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2529:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2530:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2531:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2532:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2533:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2534:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2535:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2536:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2537:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2538:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2539:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2540:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_JitterFilter(uint16 x1, uint16 x2)
2541:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2719              		.loc 1 2541 0
 2720              		.cfi_startproc
 2721 0000 80B5     		push	{r7, lr}
 2722              		.cfi_def_cfa_offset 8
 2723              		.cfi_offset 7, -8
 2724              		.cfi_offset 14, -4
 2725 0002 82B0     		sub	sp, sp, #8
 2726              		.cfi_def_cfa_offset 16
 2727 0004 00AF     		add	r7, sp, #0
 2728              		.cfi_def_cfa_register 7
 2729 0006 021C     		mov	r2, r0
 2730 0008 BB1D     		add	r3, r7, #6
 2731 000a 1A80     		strh	r2, [r3]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 94


 2732 000c 3B1D     		add	r3, r7, #4
 2733 000e 0A1C     		add	r2, r1, #0
 2734 0010 1A80     		strh	r2, [r3]
2542:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (x1 > x2)
 2735              		.loc 1 2542 0
 2736 0012 BA1D     		add	r2, r7, #6
 2737 0014 3B1D     		add	r3, r7, #4
 2738 0016 1288     		ldrh	r2, [r2]
 2739 0018 1B88     		ldrh	r3, [r3]
 2740 001a 9A42     		cmp	r2, r3
 2741 001c 05D9     		bls	.L161
2543:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2544:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             x1--;
 2742              		.loc 1 2544 0
 2743 001e BB1D     		add	r3, r7, #6
 2744 0020 1A88     		ldrh	r2, [r3]
 2745 0022 BB1D     		add	r3, r7, #6
 2746 0024 013A     		sub	r2, r2, #1
 2747 0026 1A80     		strh	r2, [r3]
 2748 0028 0AE0     		b	.L162
 2749              	.L161:
2545:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2546:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         else
2547:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2548:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if (x1 < x2)
 2750              		.loc 1 2548 0
 2751 002a BA1D     		add	r2, r7, #6
 2752 002c 3B1D     		add	r3, r7, #4
 2753 002e 1288     		ldrh	r2, [r2]
 2754 0030 1B88     		ldrh	r3, [r3]
 2755 0032 9A42     		cmp	r2, r3
 2756 0034 04D2     		bcs	.L162
2549:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2550:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 x1++;
 2757              		.loc 1 2550 0
 2758 0036 BB1D     		add	r3, r7, #6
 2759 0038 1A88     		ldrh	r2, [r3]
 2760 003a BB1D     		add	r3, r7, #6
 2761 003c 0132     		add	r2, r2, #1
 2762 003e 1A80     		strh	r2, [r3]
 2763              	.L162:
2551:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2552:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2553:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2554:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return x1;
 2764              		.loc 1 2554 0
 2765 0040 BB1D     		add	r3, r7, #6
 2766 0042 1B88     		ldrh	r3, [r3]
2555:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2767              		.loc 1 2555 0
 2768 0044 181C     		mov	r0, r3
 2769 0046 BD46     		mov	sp, r7
 2770 0048 02B0     		add	sp, sp, #8
 2771              		@ sp needed
 2772 004a 80BD     		pop	{r7, pc}
 2773              		.cfi_endproc
 2774              	.LFE67:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 95


 2775              		.size	CapSense_CSD_JitterFilter, .-CapSense_CSD_JitterFilter
 2776              		.section	.text.CapSense_CSD_GetWidgetNumber,"ax",%progbits
 2777              		.align	2
 2778              		.global	CapSense_CSD_GetWidgetNumber
 2779              		.code	16
 2780              		.thumb_func
 2781              		.type	CapSense_CSD_GetWidgetNumber, %function
 2782              	CapSense_CSD_GetWidgetNumber:
 2783              	.LFB68:
2556:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* ( (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_JITTER_FILTER)) || \
2557:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) )
2558:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        *    (0u != (CapSense_CSD_TRACKPAD_GEST_POS_FILTERS_MASK & CapSense_CSD_JITTER_FILTER)) )
2559:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****        */
2560:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2561:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2562:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER))
2563:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2564:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR8Filter
2565:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2566:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2567:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2568:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/8 filter function. IIR1/8 = 1/8current + 7/8previous.
2569:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Only applies for raw data.
2570:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2571:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2572:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2573:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2574:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2575:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2576:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2577:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2578:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2579:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2580:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2581:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2582:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2583:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2584:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2585:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR8Filter(uint16 x1, uint16 x2)
2586:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2587:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2588:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2589:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/8 Current Value + 7/8 Previous Value */
2590:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1;
2591:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += (((uint32)x2 << 3u) - ((uint32)x2));
2592:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 3u;
2593:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2594:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2595:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2596:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR8_FILTER)) */
2597:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2598:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2599:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER))
2600:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2601:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_IIR16Filter
2602:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2603:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 96


2604:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2605:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  This is the IIR1/16 filter function. IIR1/16 = 1/16current + 15/16previous.
2606:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Only applies for raw data.
2607:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2608:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2609:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x1:  Current value.
2610:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  x2:  Previous value.
2611:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2612:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2613:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns filtered value.
2614:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2615:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2616:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None.
2617:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2618:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2619:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2620:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2621:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2622:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint16 CapSense_CSD_IIR16Filter(uint16 x1, uint16 x2)
2623:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2624:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 tmp;
2625:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2626:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         /* IIR = 1/16 Current Value + 15/16 Previous Value */
2627:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp = (uint32)x1;
2628:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp += (((uint32)x2 << 4u) - ((uint32)x2));
2629:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         tmp >>= 4u;
2630:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2631:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return ((uint16) tmp);
2632:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2633:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (CapSense_CSD_RAW_FILTER_MASK & CapSense_CSD_IIR16_FILTER) */
2634:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2635:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2636:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (0u != (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT))
2637:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2638:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2639:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_GetMatrixButtonPos
2640:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2641:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2642:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2643:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Function calculates and returns a touch position (column and row) for the matrix
2644:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  button widget.
2645:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2646:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2647:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  widget:  widget number;
2648:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  pos:     pointer to an array of two uint8, where touch position will be
2649:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           stored:
2650:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           pos[0] - column position;
2651:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *           pos[1] - raw position.
2652:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2653:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2654:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Returns 1 if row and column sensors of matrix button are active, 0 - in other
2655:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  cases.
2656:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2657:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2658:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_fingerThreshold[ ] - used to store the finger threshold for all widgets.
2659:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_sensorSignal[ ] - used to store a difference between the current value of
2660:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  raw data and a previous value of the baseline.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 97


2661:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2662:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2663:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2664:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2665:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2666:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     uint32 CapSense_CSD_GetMatrixButtonPos(uint32 widget, uint8* pos)
2667:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
2668:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 i;
2669:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint32 retVal = 0u;
2670:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 row_sig_max = 0u;
2671:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint16 col_sig_max = 0u;
2672:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 row_ind = 0u;
2673:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         uint8 col_ind = 0u;
2674:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2675:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         if (CapSense_CSD_CheckIsWidgetActive(widget) == 1u)
2676:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         {
2677:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find row number with maximal signal value */
2678:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for(i = CapSense_CSD_rawDataIndex[widget]; i < (CapSense_CSD_rawDataIndex[widget] + \
2679:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  CapSense_CSD_numberOfSensors[widget]); i++)
2680:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2681:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (CapSense_CSD_sensorSignal[i] > col_sig_max)
2682:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2683:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     col_ind = i;
2684:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     col_sig_max = CapSense_CSD_sensorSignal[i];
2685:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2686:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2687:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2688:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             /* Find row number with maximal signal value */
2689:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             for(i = CapSense_CSD_rawDataIndex[widget+1u]; i < (CapSense_CSD_rawDataIndex[widget+1u]
2690:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                  CapSense_CSD_numberOfSensors[widget+1u]); i++)
2691:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2692:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 if (CapSense_CSD_sensorSignal[i] > row_sig_max)
2693:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 {
2694:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     row_ind = i;
2695:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                     row_sig_max = CapSense_CSD_sensorSignal[i];
2696:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 }
2697:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2698:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2699:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             if((col_sig_max >= CapSense_CSD_fingerThreshold[widget]) && \
2700:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                (row_sig_max >= CapSense_CSD_fingerThreshold[widget+1u]))
2701:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             {
2702:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[0u] = col_ind - CapSense_CSD_rawDataIndex[widget];
2703:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 pos[1u] = row_ind - CapSense_CSD_rawDataIndex[widget+1u];
2704:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****                 retVal = 1u;
2705:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****             }
2706:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         }
2707:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         return (retVal);
2708:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
2709:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2710:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #endif /* (0u != (CapSense_CSD_TOTAL_MATRIX_BUTTONS_COUNT)) */
2711:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2712:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2713:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetWidgetNumber
2714:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2715:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2716:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2717:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the widget number for the sensor.
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 98


2718:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2719:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2720:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2721:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2722:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2723:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2724:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the widget number for the sensor.
2725:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2726:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2727:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_widgetNumber[]  - stores widget numbers.
2728:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2729:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2730:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2731:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2732:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2733:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint32 CapSense_CSD_GetWidgetNumber(uint32 sensor)
2734:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2784              		.loc 1 2734 0
 2785              		.cfi_startproc
 2786 0000 80B5     		push	{r7, lr}
 2787              		.cfi_def_cfa_offset 8
 2788              		.cfi_offset 7, -8
 2789              		.cfi_offset 14, -4
 2790 0002 82B0     		sub	sp, sp, #8
 2791              		.cfi_def_cfa_offset 16
 2792 0004 00AF     		add	r7, sp, #0
 2793              		.cfi_def_cfa_register 7
 2794 0006 7860     		str	r0, [r7, #4]
2735:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return((uint32)CapSense_CSD_widgetNumber[sensor]);
 2795              		.loc 1 2735 0
 2796 0008 034A     		ldr	r2, .L166
 2797 000a 7B68     		ldr	r3, [r7, #4]
 2798 000c D318     		add	r3, r2, r3
 2799 000e 1B78     		ldrb	r3, [r3]
2736:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2800              		.loc 1 2736 0
 2801 0010 181C     		mov	r0, r3
 2802 0012 BD46     		mov	sp, r7
 2803 0014 02B0     		add	sp, sp, #8
 2804              		@ sp needed
 2805 0016 80BD     		pop	{r7, pc}
 2806              	.L167:
 2807              		.align	2
 2808              	.L166:
 2809 0018 00000000 		.word	CapSense_CSD_widgetNumber
 2810              		.cfi_endproc
 2811              	.LFE68:
 2812              		.size	CapSense_CSD_GetWidgetNumber, .-CapSense_CSD_GetWidgetNumber
 2813              		.section	.text.CapSense_CSD_GetLowBaselineReset,"ax",%progbits
 2814              		.align	2
 2815              		.global	CapSense_CSD_GetLowBaselineReset
 2816              		.code	16
 2817              		.thumb_func
 2818              		.type	CapSense_CSD_GetLowBaselineReset, %function
 2819              	CapSense_CSD_GetLowBaselineReset:
 2820              	.LFB69:
2737:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 99


2738:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2739:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetLowBaselineReset
2740:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2741:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2742:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2743:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns the low baseline reset threshold value for the  sensor.
2744:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2745:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2746:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2747:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2748:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2749:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2750:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  low baseline reset threshold value a sensor.
2751:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2752:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2753:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_lowBaselineReset[]  - stores low baseline reset values.
2754:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2755:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2756:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2757:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2758:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2759:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetLowBaselineReset(uint32 sensor)
2760:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2821              		.loc 1 2760 0
 2822              		.cfi_startproc
 2823 0000 80B5     		push	{r7, lr}
 2824              		.cfi_def_cfa_offset 8
 2825              		.cfi_offset 7, -8
 2826              		.cfi_offset 14, -4
 2827 0002 82B0     		sub	sp, sp, #8
 2828              		.cfi_def_cfa_offset 16
 2829 0004 00AF     		add	r7, sp, #0
 2830              		.cfi_def_cfa_register 7
 2831 0006 7860     		str	r0, [r7, #4]
2761:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_lowBaselineReset[sensor]);
 2832              		.loc 1 2761 0
 2833 0008 034A     		ldr	r2, .L170
 2834 000a 7B68     		ldr	r3, [r7, #4]
 2835 000c D318     		add	r3, r2, r3
 2836 000e 1B78     		ldrb	r3, [r3]
2762:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2837              		.loc 1 2762 0
 2838 0010 181C     		mov	r0, r3
 2839 0012 BD46     		mov	sp, r7
 2840 0014 02B0     		add	sp, sp, #8
 2841              		@ sp needed
 2842 0016 80BD     		pop	{r7, pc}
 2843              	.L171:
 2844              		.align	2
 2845              	.L170:
 2846 0018 00000000 		.word	CapSense_CSD_lowBaselineReset
 2847              		.cfi_endproc
 2848              	.LFE69:
 2849              		.size	CapSense_CSD_GetLowBaselineReset, .-CapSense_CSD_GetLowBaselineReset
 2850              		.section	.text.CapSense_CSD_GetDebounce,"ax",%progbits
 2851              		.align	2
 2852              		.global	CapSense_CSD_GetDebounce
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 100


 2853              		.code	16
 2854              		.thumb_func
 2855              		.type	CapSense_CSD_GetDebounce, %function
 2856              	CapSense_CSD_GetDebounce:
 2857              	.LFB70:
2763:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2764:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** /*******************************************************************************
2765:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Function Name: CapSense_CSD_GetDebounce
2766:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** ********************************************************************************
2767:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2768:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Summary:
2769:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  This API returns a debounce value.
2770:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2771:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Parameters:
2772:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  sensor: sensor index. The value of index can be
2773:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  from 0 to (CapSense_CSD_TOTAL_SENSOR_COUNT-1).
2774:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2775:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Return:
2776:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  Debounce value
2777:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2778:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Global Variables:
2779:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  CapSense_CSD_debounce[]  - stores the debounce value.
2780:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2781:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** * Side Effects:
2782:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *  None
2783:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *
2784:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** *******************************************************************************/
2785:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** uint8 CapSense_CSD_GetDebounce(uint32 widget)
2786:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** {
 2858              		.loc 1 2786 0
 2859              		.cfi_startproc
 2860 0000 80B5     		push	{r7, lr}
 2861              		.cfi_def_cfa_offset 8
 2862              		.cfi_offset 7, -8
 2863              		.cfi_offset 14, -4
 2864 0002 82B0     		sub	sp, sp, #8
 2865              		.cfi_def_cfa_offset 16
 2866 0004 00AF     		add	r7, sp, #0
 2867              		.cfi_def_cfa_register 7
 2868 0006 7860     		str	r0, [r7, #4]
2787:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     return(CapSense_CSD_debounce[widget]);
 2869              		.loc 1 2787 0
 2870 0008 034A     		ldr	r2, .L174
 2871 000a 7B68     		ldr	r3, [r7, #4]
 2872 000c D318     		add	r3, r2, r3
 2873 000e 1B78     		ldrb	r3, [r3]
2788:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** }
 2874              		.loc 1 2788 0
 2875 0010 181C     		mov	r0, r3
 2876 0012 BD46     		mov	sp, r7
 2877 0014 02B0     		add	sp, sp, #8
 2878              		@ sp needed
 2879 0016 80BD     		pop	{r7, pc}
 2880              	.L175:
 2881              		.align	2
 2882              	.L174:
 2883 0018 00000000 		.word	CapSense_CSD_debounce
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 101


 2884              		.cfi_endproc
 2885              	.LFE70:
 2886              		.size	CapSense_CSD_GetDebounce, .-CapSense_CSD_GetDebounce
 2887              		.section	.text.CapSense_CSD_EnableRawDataFilters,"ax",%progbits
 2888              		.align	2
 2889              		.global	CapSense_CSD_EnableRawDataFilters
 2890              		.code	16
 2891              		.thumb_func
 2892              		.type	CapSense_CSD_EnableRawDataFilters, %function
 2893              	CapSense_CSD_EnableRawDataFilters:
 2894              	.LFB71:
2789:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2790:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** #if (CapSense_CSD_RAW_FILTER_MASK != 0u)
2791:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2792:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_EnableRawDataFilters
2793:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2794:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2795:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2796:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Enables the rawdata filters for the sensor signals.
2797:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2798:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2799:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2800:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2801:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2802:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2803:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2804:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2805:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_enableRawFilters defines if the filters are enabled or not.
2806:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2807:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2808:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2809:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2810:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2811:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_EnableRawDataFilters(void)
2812:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2895              		.loc 1 2812 0
 2896              		.cfi_startproc
 2897 0000 80B5     		push	{r7, lr}
 2898              		.cfi_def_cfa_offset 8
 2899              		.cfi_offset 7, -8
 2900              		.cfi_offset 14, -4
 2901 0002 00AF     		add	r7, sp, #0
 2902              		.cfi_def_cfa_register 7
2813:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_ENABLED;
 2903              		.loc 1 2813 0
 2904 0004 024B     		ldr	r3, .L177
 2905 0006 0122     		mov	r2, #1
 2906 0008 1A70     		strb	r2, [r3]
2814:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2907              		.loc 1 2814 0
 2908 000a BD46     		mov	sp, r7
 2909              		@ sp needed
 2910 000c 80BD     		pop	{r7, pc}
 2911              	.L178:
 2912 000e C046     		.align	2
 2913              	.L177:
 2914 0010 00000000 		.word	CapSense_CSD_enableRawFilters
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 102


 2915              		.cfi_endproc
 2916              	.LFE71:
 2917              		.size	CapSense_CSD_EnableRawDataFilters, .-CapSense_CSD_EnableRawDataFilters
 2918              		.section	.text.CapSense_CSD_DisableRawDataFilters,"ax",%progbits
 2919              		.align	2
 2920              		.global	CapSense_CSD_DisableRawDataFilters
 2921              		.code	16
 2922              		.thumb_func
 2923              		.type	CapSense_CSD_DisableRawDataFilters, %function
 2924              	CapSense_CSD_DisableRawDataFilters:
 2925              	.LFB72:
2815:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c **** 
2816:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     /*******************************************************************************
2817:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Function Name: CapSense_CSD_DisableRawDataFilters
2818:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     ********************************************************************************
2819:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2820:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Summary:
2821:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  Disables the rawdata filters for the sensor signals.
2822:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2823:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Parameters:
2824:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2825:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2826:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Return:
2827:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2828:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2829:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Global Variables:
2830:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  CapSense_CSD_enableRawFilters defines if the filters are enabled or not.
2831:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2832:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     * Side Effects:
2833:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *  None
2834:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *
2835:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     *******************************************************************************/
2836:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     void CapSense_CSD_DisableRawDataFilters(void)
2837:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     {
 2926              		.loc 1 2837 0
 2927              		.cfi_startproc
 2928 0000 80B5     		push	{r7, lr}
 2929              		.cfi_def_cfa_offset 8
 2930              		.cfi_offset 7, -8
 2931              		.cfi_offset 14, -4
 2932 0002 00AF     		add	r7, sp, #0
 2933              		.cfi_def_cfa_register 7
2838:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****         CapSense_CSD_enableRawFilters = CapSense_CSD_RAW_FILTERS_DISABLED;
 2934              		.loc 1 2838 0
 2935 0004 024B     		ldr	r3, .L180
 2936 0006 0022     		mov	r2, #0
 2937 0008 1A70     		strb	r2, [r3]
2839:.\Generated_Source\PSoC4/CapSense_CSD_CSHL.c ****     }
 2938              		.loc 1 2839 0
 2939 000a BD46     		mov	sp, r7
 2940              		@ sp needed
 2941 000c 80BD     		pop	{r7, pc}
 2942              	.L181:
 2943 000e C046     		.align	2
 2944              	.L180:
 2945 0010 00000000 		.word	CapSense_CSD_enableRawFilters
 2946              		.cfi_endproc
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 103


 2947              	.LFE72:
 2948              		.size	CapSense_CSD_DisableRawDataFilters, .-CapSense_CSD_DisableRawDataFilters
 2949              		.bss
 2950 0032 0000     		.align	2
 2951              	CapSense_CSD_debounceCounter.5366:
 2952 0034 00       		.space	1
 2953 0035 000000   		.align	2
 2954              	CapSense_CSD_centroid.5418:
 2955 0038 000000   		.space	3
 2956 003b 00       		.text
 2957              	.Letext0:
 2958              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2959              		.file 3 ".\\Generated_Source\\PSoC4\\CapSense_CSD_PVT.h"
 2960              		.section	.debug_info,"",%progbits
 2961              	.Ldebug_info0:
 2962 0000 800E0000 		.4byte	0xe80
 2963 0004 0400     		.2byte	0x4
 2964 0006 00000000 		.4byte	.Ldebug_abbrev0
 2965 000a 04       		.byte	0x4
 2966 000b 01       		.uleb128 0x1
 2967 000c AD060000 		.4byte	.LASF146
 2968 0010 01       		.byte	0x1
 2969 0011 67010000 		.4byte	.LASF147
 2970 0015 AB000000 		.4byte	.LASF148
 2971 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2972 001d 00000000 		.4byte	0
 2973 0021 00000000 		.4byte	.Ldebug_line0
 2974 0025 02       		.uleb128 0x2
 2975 0026 01       		.byte	0x1
 2976 0027 06       		.byte	0x6
 2977 0028 B00B0000 		.4byte	.LASF0
 2978 002c 02       		.uleb128 0x2
 2979 002d 01       		.byte	0x1
 2980 002e 08       		.byte	0x8
 2981 002f F70A0000 		.4byte	.LASF1
 2982 0033 02       		.uleb128 0x2
 2983 0034 02       		.byte	0x2
 2984 0035 05       		.byte	0x5
 2985 0036 E3080000 		.4byte	.LASF2
 2986 003a 02       		.uleb128 0x2
 2987 003b 02       		.byte	0x2
 2988 003c 07       		.byte	0x7
 2989 003d BC0B0000 		.4byte	.LASF3
 2990 0041 02       		.uleb128 0x2
 2991 0042 04       		.byte	0x4
 2992 0043 05       		.byte	0x5
 2993 0044 ED080000 		.4byte	.LASF4
 2994 0048 02       		.uleb128 0x2
 2995 0049 04       		.byte	0x4
 2996 004a 07       		.byte	0x7
 2997 004b EE090000 		.4byte	.LASF5
 2998 004f 02       		.uleb128 0x2
 2999 0050 08       		.byte	0x8
 3000 0051 05       		.byte	0x5
 3001 0052 0B060000 		.4byte	.LASF6
 3002 0056 02       		.uleb128 0x2
 3003 0057 08       		.byte	0x8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 104


 3004 0058 07       		.byte	0x7
 3005 0059 39030000 		.4byte	.LASF7
 3006 005d 03       		.uleb128 0x3
 3007 005e 04       		.byte	0x4
 3008 005f 05       		.byte	0x5
 3009 0060 696E7400 		.ascii	"int\000"
 3010 0064 02       		.uleb128 0x2
 3011 0065 04       		.byte	0x4
 3012 0066 07       		.byte	0x7
 3013 0067 86000000 		.4byte	.LASF8
 3014 006b 04       		.uleb128 0x4
 3015 006c 260C0000 		.4byte	.LASF9
 3016 0070 02       		.byte	0x2
 3017 0071 3801     		.2byte	0x138
 3018 0073 2C000000 		.4byte	0x2c
 3019 0077 04       		.uleb128 0x4
 3020 0078 77050000 		.4byte	.LASF10
 3021 007c 02       		.byte	0x2
 3022 007d 3901     		.2byte	0x139
 3023 007f 3A000000 		.4byte	0x3a
 3024 0083 04       		.uleb128 0x4
 3025 0084 86070000 		.4byte	.LASF11
 3026 0088 02       		.byte	0x2
 3027 0089 3A01     		.2byte	0x13a
 3028 008b 48000000 		.4byte	0x48
 3029 008f 04       		.uleb128 0x4
 3030 0090 54010000 		.4byte	.LASF12
 3031 0094 02       		.byte	0x2
 3032 0095 3C01     		.2byte	0x13c
 3033 0097 33000000 		.4byte	0x33
 3034 009b 04       		.uleb128 0x4
 3035 009c D9020000 		.4byte	.LASF13
 3036 00a0 02       		.byte	0x2
 3037 00a1 3D01     		.2byte	0x13d
 3038 00a3 41000000 		.4byte	0x41
 3039 00a7 02       		.uleb128 0x2
 3040 00a8 04       		.byte	0x4
 3041 00a9 04       		.byte	0x4
 3042 00aa D3020000 		.4byte	.LASF14
 3043 00ae 02       		.uleb128 0x2
 3044 00af 08       		.byte	0x8
 3045 00b0 04       		.byte	0x4
 3046 00b1 2C0C0000 		.4byte	.LASF15
 3047 00b5 02       		.uleb128 0x2
 3048 00b6 01       		.byte	0x1
 3049 00b7 08       		.byte	0x8
 3050 00b8 1D050000 		.4byte	.LASF16
 3051 00bc 02       		.uleb128 0x2
 3052 00bd 04       		.byte	0x4
 3053 00be 07       		.byte	0x7
 3054 00bf E5090000 		.4byte	.LASF17
 3055 00c3 05       		.uleb128 0x5
 3056 00c4 5C       		.byte	0x5c
 3057 00c5 03       		.byte	0x3
 3058 00c6 2F       		.byte	0x2f
 3059 00c7 E0010000 		.4byte	0x1e0
 3060 00cb 06       		.uleb128 0x6
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 105


 3061 00cc 83050000 		.4byte	.LASF18
 3062 00d0 03       		.byte	0x3
 3063 00d1 31       		.byte	0x31
 3064 00d2 E0010000 		.4byte	0x1e0
 3065 00d6 00       		.byte	0
 3066 00d7 06       		.uleb128 0x6
 3067 00d8 D4080000 		.4byte	.LASF19
 3068 00dc 03       		.byte	0x3
 3069 00dd 32       		.byte	0x32
 3070 00de E0010000 		.4byte	0x1e0
 3071 00e2 04       		.byte	0x4
 3072 00e3 06       		.uleb128 0x6
 3073 00e4 6F0B0000 		.4byte	.LASF20
 3074 00e8 03       		.byte	0x3
 3075 00e9 33       		.byte	0x33
 3076 00ea E0010000 		.4byte	0x1e0
 3077 00ee 08       		.byte	0x8
 3078 00ef 06       		.uleb128 0x6
 3079 00f0 D00A0000 		.4byte	.LASF21
 3080 00f4 03       		.byte	0x3
 3081 00f5 34       		.byte	0x34
 3082 00f6 E0010000 		.4byte	0x1e0
 3083 00fa 0C       		.byte	0xc
 3084 00fb 06       		.uleb128 0x6
 3085 00fc A60B0000 		.4byte	.LASF22
 3086 0100 03       		.byte	0x3
 3087 0101 35       		.byte	0x35
 3088 0102 E0010000 		.4byte	0x1e0
 3089 0106 10       		.byte	0x10
 3090 0107 06       		.uleb128 0x6
 3091 0108 5C090000 		.4byte	.LASF23
 3092 010c 03       		.byte	0x3
 3093 010d 36       		.byte	0x36
 3094 010e E6010000 		.4byte	0x1e6
 3095 0112 14       		.byte	0x14
 3096 0113 06       		.uleb128 0x6
 3097 0114 E5020000 		.4byte	.LASF24
 3098 0118 03       		.byte	0x3
 3099 0119 37       		.byte	0x37
 3100 011a F1010000 		.4byte	0x1f1
 3101 011e 18       		.byte	0x18
 3102 011f 06       		.uleb128 0x6
 3103 0120 2E040000 		.4byte	.LASF25
 3104 0124 03       		.byte	0x3
 3105 0125 38       		.byte	0x38
 3106 0126 E0010000 		.4byte	0x1e0
 3107 012a 1C       		.byte	0x1c
 3108 012b 06       		.uleb128 0x6
 3109 012c 03030000 		.4byte	.LASF26
 3110 0130 03       		.byte	0x3
 3111 0131 39       		.byte	0x39
 3112 0132 E0010000 		.4byte	0x1e0
 3113 0136 20       		.byte	0x20
 3114 0137 06       		.uleb128 0x6
 3115 0138 94010000 		.4byte	.LASF27
 3116 013c 03       		.byte	0x3
 3117 013d 3A       		.byte	0x3a
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 106


 3118 013e E0010000 		.4byte	0x1e0
 3119 0142 24       		.byte	0x24
 3120 0143 06       		.uleb128 0x6
 3121 0144 79070000 		.4byte	.LASF28
 3122 0148 03       		.byte	0x3
 3123 0149 3B       		.byte	0x3b
 3124 014a F7010000 		.4byte	0x1f7
 3125 014e 28       		.byte	0x28
 3126 014f 06       		.uleb128 0x6
 3127 0150 5A010000 		.4byte	.LASF29
 3128 0154 03       		.byte	0x3
 3129 0155 3C       		.byte	0x3c
 3130 0156 F7010000 		.4byte	0x1f7
 3131 015a 2C       		.byte	0x2c
 3132 015b 06       		.uleb128 0x6
 3133 015c AE0A0000 		.4byte	.LASF30
 3134 0160 03       		.byte	0x3
 3135 0161 3D       		.byte	0x3d
 3136 0162 F7010000 		.4byte	0x1f7
 3137 0166 30       		.byte	0x30
 3138 0167 06       		.uleb128 0x6
 3139 0168 BE090000 		.4byte	.LASF31
 3140 016c 03       		.byte	0x3
 3141 016d 3E       		.byte	0x3e
 3142 016e E0010000 		.4byte	0x1e0
 3143 0172 34       		.byte	0x34
 3144 0173 06       		.uleb128 0x6
 3145 0174 00000000 		.4byte	.LASF32
 3146 0178 03       		.byte	0x3
 3147 0179 3F       		.byte	0x3f
 3148 017a E0010000 		.4byte	0x1e0
 3149 017e 38       		.byte	0x38
 3150 017f 06       		.uleb128 0x6
 3151 0180 3D050000 		.4byte	.LASF33
 3152 0184 03       		.byte	0x3
 3153 0185 40       		.byte	0x40
 3154 0186 E6010000 		.4byte	0x1e6
 3155 018a 3C       		.byte	0x3c
 3156 018b 06       		.uleb128 0x6
 3157 018c C3010000 		.4byte	.LASF34
 3158 0190 03       		.byte	0x3
 3159 0191 41       		.byte	0x41
 3160 0192 E6010000 		.4byte	0x1e6
 3161 0196 40       		.byte	0x40
 3162 0197 06       		.uleb128 0x6
 3163 0198 0D000000 		.4byte	.LASF35
 3164 019c 03       		.byte	0x3
 3165 019d 42       		.byte	0x42
 3166 019e E6010000 		.4byte	0x1e6
 3167 01a2 44       		.byte	0x44
 3168 01a3 06       		.uleb128 0x6
 3169 01a4 86060000 		.4byte	.LASF36
 3170 01a8 03       		.byte	0x3
 3171 01a9 43       		.byte	0x43
 3172 01aa 0C020000 		.4byte	0x20c
 3173 01ae 48       		.byte	0x48
 3174 01af 06       		.uleb128 0x6
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 107


 3175 01b0 5A060000 		.4byte	.LASF37
 3176 01b4 03       		.byte	0x3
 3177 01b5 44       		.byte	0x44
 3178 01b6 1D020000 		.4byte	0x21d
 3179 01ba 4C       		.byte	0x4c
 3180 01bb 06       		.uleb128 0x6
 3181 01bc 44040000 		.4byte	.LASF38
 3182 01c0 03       		.byte	0x3
 3183 01c1 45       		.byte	0x45
 3184 01c2 0C020000 		.4byte	0x20c
 3185 01c6 50       		.byte	0x50
 3186 01c7 06       		.uleb128 0x6
 3187 01c8 1D000000 		.4byte	.LASF39
 3188 01cc 03       		.byte	0x3
 3189 01cd 46       		.byte	0x46
 3190 01ce 37020000 		.4byte	0x237
 3191 01d2 54       		.byte	0x54
 3192 01d3 06       		.uleb128 0x6
 3193 01d4 CF0B0000 		.4byte	.LASF40
 3194 01d8 03       		.byte	0x3
 3195 01d9 47       		.byte	0x47
 3196 01da 52020000 		.4byte	0x252
 3197 01de 58       		.byte	0x58
 3198 01df 00       		.byte	0
 3199 01e0 07       		.uleb128 0x7
 3200 01e1 04       		.byte	0x4
 3201 01e2 6B000000 		.4byte	0x6b
 3202 01e6 07       		.uleb128 0x7
 3203 01e7 04       		.byte	0x4
 3204 01e8 EC010000 		.4byte	0x1ec
 3205 01ec 08       		.uleb128 0x8
 3206 01ed 6B000000 		.4byte	0x6b
 3207 01f1 07       		.uleb128 0x7
 3208 01f2 04       		.byte	0x4
 3209 01f3 83000000 		.4byte	0x83
 3210 01f7 07       		.uleb128 0x7
 3211 01f8 04       		.byte	0x4
 3212 01f9 77000000 		.4byte	0x77
 3213 01fd 09       		.uleb128 0x9
 3214 01fe 77000000 		.4byte	0x77
 3215 0202 0C020000 		.4byte	0x20c
 3216 0206 0A       		.uleb128 0xa
 3217 0207 83000000 		.4byte	0x83
 3218 020b 00       		.byte	0
 3219 020c 07       		.uleb128 0x7
 3220 020d 04       		.byte	0x4
 3221 020e FD010000 		.4byte	0x1fd
 3222 0212 0B       		.uleb128 0xb
 3223 0213 1D020000 		.4byte	0x21d
 3224 0217 0A       		.uleb128 0xa
 3225 0218 83000000 		.4byte	0x83
 3226 021c 00       		.byte	0
 3227 021d 07       		.uleb128 0x7
 3228 021e 04       		.byte	0x4
 3229 021f 12020000 		.4byte	0x212
 3230 0223 09       		.uleb128 0x9
 3231 0224 83000000 		.4byte	0x83
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 108


 3232 0228 37020000 		.4byte	0x237
 3233 022c 0A       		.uleb128 0xa
 3234 022d E6010000 		.4byte	0x1e6
 3235 0231 0A       		.uleb128 0xa
 3236 0232 83000000 		.4byte	0x83
 3237 0236 00       		.byte	0
 3238 0237 07       		.uleb128 0x7
 3239 0238 04       		.byte	0x4
 3240 0239 23020000 		.4byte	0x223
 3241 023d 0B       		.uleb128 0xb
 3242 023e 52020000 		.4byte	0x252
 3243 0242 0A       		.uleb128 0xa
 3244 0243 E0010000 		.4byte	0x1e0
 3245 0247 0A       		.uleb128 0xa
 3246 0248 83000000 		.4byte	0x83
 3247 024c 0A       		.uleb128 0xa
 3248 024d 83000000 		.4byte	0x83
 3249 0251 00       		.byte	0
 3250 0252 07       		.uleb128 0x7
 3251 0253 04       		.byte	0x4
 3252 0254 3D020000 		.4byte	0x23d
 3253 0258 0C       		.uleb128 0xc
 3254 0259 4C050000 		.4byte	.LASF41
 3255 025d 03       		.byte	0x3
 3256 025e 48       		.byte	0x48
 3257 025f C3000000 		.4byte	0xc3
 3258 0263 05       		.uleb128 0x5
 3259 0264 0C       		.byte	0xc
 3260 0265 03       		.byte	0x3
 3261 0266 4A       		.byte	0x4a
 3262 0267 B4020000 		.4byte	0x2b4
 3263 026b 06       		.uleb128 0x6
 3264 026c B4040000 		.4byte	.LASF42
 3265 0270 03       		.byte	0x3
 3266 0271 4C       		.byte	0x4c
 3267 0272 6B000000 		.4byte	0x6b
 3268 0276 00       		.byte	0
 3269 0277 06       		.uleb128 0x6
 3270 0278 D0010000 		.4byte	.LASF43
 3271 027c 03       		.byte	0x3
 3272 027d 4D       		.byte	0x4d
 3273 027e 6B000000 		.4byte	0x6b
 3274 0282 01       		.byte	0x1
 3275 0283 06       		.uleb128 0x6
 3276 0284 93000000 		.4byte	.LASF44
 3277 0288 03       		.byte	0x3
 3278 0289 4E       		.byte	0x4e
 3279 028a 6B000000 		.4byte	0x6b
 3280 028e 02       		.byte	0x2
 3281 028f 06       		.uleb128 0x6
 3282 0290 F0040000 		.4byte	.LASF45
 3283 0294 03       		.byte	0x3
 3284 0295 4F       		.byte	0x4f
 3285 0296 77000000 		.4byte	0x77
 3286 029a 04       		.byte	0x4
 3287 029b 06       		.uleb128 0x6
 3288 029c A8080000 		.4byte	.LASF46
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 109


 3289 02a0 03       		.byte	0x3
 3290 02a1 50       		.byte	0x50
 3291 02a2 77000000 		.4byte	0x77
 3292 02a6 06       		.byte	0x6
 3293 02a7 06       		.uleb128 0x6
 3294 02a8 1C0A0000 		.4byte	.LASF47
 3295 02ac 03       		.byte	0x3
 3296 02ad 51       		.byte	0x51
 3297 02ae B4020000 		.4byte	0x2b4
 3298 02b2 08       		.byte	0x8
 3299 02b3 00       		.byte	0
 3300 02b4 07       		.uleb128 0x7
 3301 02b5 04       		.byte	0x4
 3302 02b6 BA020000 		.4byte	0x2ba
 3303 02ba 08       		.uleb128 0x8
 3304 02bb 58020000 		.4byte	0x258
 3305 02bf 0C       		.uleb128 0xc
 3306 02c0 B1020000 		.4byte	.LASF48
 3307 02c4 03       		.byte	0x3
 3308 02c5 52       		.byte	0x52
 3309 02c6 63020000 		.4byte	0x263
 3310 02ca 0D       		.uleb128 0xd
 3311 02cb 2C000000 		.4byte	.LASF49
 3312 02cf 01       		.byte	0x1
 3313 02d0 8E       		.byte	0x8e
 3314 02d1 00000000 		.4byte	.LFB34
 3315 02d5 58000000 		.4byte	.LFE34-.LFB34
 3316 02d9 01       		.uleb128 0x1
 3317 02da 9C       		.byte	0x9c
 3318 02db EE020000 		.4byte	0x2ee
 3319 02df 0E       		.uleb128 0xe
 3320 02e0 E9040000 		.4byte	.LASF51
 3321 02e4 01       		.byte	0x1
 3322 02e5 8E       		.byte	0x8e
 3323 02e6 83000000 		.4byte	0x83
 3324 02ea 02       		.uleb128 0x2
 3325 02eb 91       		.byte	0x91
 3326 02ec 74       		.sleb128 -12
 3327 02ed 00       		.byte	0
 3328 02ee 0F       		.uleb128 0xf
 3329 02ef 2F0B0000 		.4byte	.LASF50
 3330 02f3 01       		.byte	0x1
 3331 02f4 D9       		.byte	0xd9
 3332 02f5 00000000 		.4byte	.LFB35
 3333 02f9 28000000 		.4byte	.LFE35-.LFB35
 3334 02fd 01       		.uleb128 0x1
 3335 02fe 9C       		.byte	0x9c
 3336 02ff 12030000 		.4byte	0x312
 3337 0303 0E       		.uleb128 0xe
 3338 0304 E9040000 		.4byte	.LASF51
 3339 0308 01       		.byte	0x1
 3340 0309 D9       		.byte	0xd9
 3341 030a 83000000 		.4byte	0x83
 3342 030e 02       		.uleb128 0x2
 3343 030f 91       		.byte	0x91
 3344 0310 74       		.sleb128 -12
 3345 0311 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 110


 3346 0312 0F       		.uleb128 0xf
 3347 0313 FA0B0000 		.4byte	.LASF52
 3348 0317 01       		.byte	0x1
 3349 0318 FE       		.byte	0xfe
 3350 0319 00000000 		.4byte	.LFB36
 3351 031d 26000000 		.4byte	.LFE36-.LFB36
 3352 0321 01       		.uleb128 0x1
 3353 0322 9C       		.byte	0x9c
 3354 0323 35030000 		.4byte	0x335
 3355 0327 10       		.uleb128 0x10
 3356 0328 6900     		.ascii	"i\000"
 3357 032a 01       		.byte	0x1
 3358 032b 0001     		.2byte	0x100
 3359 032d 83000000 		.4byte	0x83
 3360 0331 02       		.uleb128 0x2
 3361 0332 91       		.byte	0x91
 3362 0333 74       		.sleb128 -12
 3363 0334 00       		.byte	0
 3364 0335 11       		.uleb128 0x11
 3365 0336 0F010000 		.4byte	.LASF53
 3366 033a 01       		.byte	0x1
 3367 033b 2101     		.2byte	0x121
 3368 033d 00000000 		.4byte	.LFB37
 3369 0341 50000000 		.4byte	.LFE37-.LFB37
 3370 0345 01       		.uleb128 0x1
 3371 0346 9C       		.byte	0x9c
 3372 0347 68030000 		.4byte	0x368
 3373 034b 10       		.uleb128 0x10
 3374 034c 6900     		.ascii	"i\000"
 3375 034e 01       		.byte	0x1
 3376 034f 2301     		.2byte	0x123
 3377 0351 83000000 		.4byte	0x83
 3378 0355 02       		.uleb128 0x2
 3379 0356 91       		.byte	0x91
 3380 0357 74       		.sleb128 -12
 3381 0358 12       		.uleb128 0x12
 3382 0359 69000000 		.4byte	.LASF54
 3383 035d 01       		.byte	0x1
 3384 035e 2401     		.2byte	0x124
 3385 0360 83000000 		.4byte	0x83
 3386 0364 02       		.uleb128 0x2
 3387 0365 91       		.byte	0x91
 3388 0366 70       		.sleb128 -16
 3389 0367 00       		.byte	0
 3390 0368 11       		.uleb128 0x11
 3391 0369 C5030000 		.4byte	.LASF55
 3392 036d 01       		.byte	0x1
 3393 036e 6201     		.2byte	0x162
 3394 0370 00000000 		.4byte	.LFB38
 3395 0374 38020000 		.4byte	.LFE38-.LFB38
 3396 0378 01       		.uleb128 0x1
 3397 0379 9C       		.byte	0x9c
 3398 037a E8030000 		.4byte	0x3e8
 3399 037e 13       		.uleb128 0x13
 3400 037f E9040000 		.4byte	.LASF51
 3401 0383 01       		.byte	0x1
 3402 0384 6201     		.2byte	0x162
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 111


 3403 0386 83000000 		.4byte	0x83
 3404 038a 02       		.uleb128 0x2
 3405 038b 91       		.byte	0x91
 3406 038c 5C       		.sleb128 -36
 3407 038d 12       		.uleb128 0x12
 3408 038e 3F040000 		.4byte	.LASF56
 3409 0392 01       		.byte	0x1
 3410 0393 6401     		.2byte	0x164
 3411 0395 83000000 		.4byte	0x83
 3412 0399 02       		.uleb128 0x2
 3413 039a 91       		.byte	0x91
 3414 039b 60       		.sleb128 -32
 3415 039c 12       		.uleb128 0x12
 3416 039d 22040000 		.4byte	.LASF57
 3417 03a1 01       		.byte	0x1
 3418 03a2 6501     		.2byte	0x165
 3419 03a4 83000000 		.4byte	0x83
 3420 03a8 02       		.uleb128 0x2
 3421 03a9 91       		.byte	0x91
 3422 03aa 6C       		.sleb128 -20
 3423 03ab 12       		.uleb128 0x12
 3424 03ac 1E0C0000 		.4byte	.LASF58
 3425 03b0 01       		.byte	0x1
 3426 03b1 6601     		.2byte	0x166
 3427 03b3 77000000 		.4byte	0x77
 3428 03b7 02       		.uleb128 0x2
 3429 03b8 91       		.byte	0x91
 3430 03b9 6A       		.sleb128 -22
 3431 03ba 12       		.uleb128 0x12
 3432 03bb 79040000 		.4byte	.LASF59
 3433 03bf 01       		.byte	0x1
 3434 03c0 6701     		.2byte	0x167
 3435 03c2 77000000 		.4byte	0x77
 3436 03c6 02       		.uleb128 0x2
 3437 03c7 91       		.byte	0x91
 3438 03c8 68       		.sleb128 -24
 3439 03c9 12       		.uleb128 0x12
 3440 03ca 50030000 		.4byte	.LASF60
 3441 03ce 01       		.byte	0x1
 3442 03cf 6801     		.2byte	0x168
 3443 03d1 6B000000 		.4byte	0x6b
 3444 03d5 02       		.uleb128 0x2
 3445 03d6 91       		.byte	0x91
 3446 03d7 67       		.sleb128 -25
 3447 03d8 12       		.uleb128 0x12
 3448 03d9 5C0A0000 		.4byte	.LASF61
 3449 03dd 01       		.byte	0x1
 3450 03de 6901     		.2byte	0x169
 3451 03e0 6B000000 		.4byte	0x6b
 3452 03e4 02       		.uleb128 0x2
 3453 03e5 91       		.byte	0x91
 3454 03e6 66       		.sleb128 -26
 3455 03e7 00       		.byte	0
 3456 03e8 11       		.uleb128 0x11
 3457 03e9 EC070000 		.4byte	.LASF62
 3458 03ed 01       		.byte	0x1
 3459 03ee 2202     		.2byte	0x222
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 112


 3460 03f0 00000000 		.4byte	.LFB39
 3461 03f4 1E000000 		.4byte	.LFE39-.LFB39
 3462 03f8 01       		.uleb128 0x1
 3463 03f9 9C       		.byte	0x9c
 3464 03fa 0E040000 		.4byte	0x40e
 3465 03fe 13       		.uleb128 0x13
 3466 03ff E9040000 		.4byte	.LASF51
 3467 0403 01       		.byte	0x1
 3468 0404 2202     		.2byte	0x222
 3469 0406 83000000 		.4byte	0x83
 3470 040a 02       		.uleb128 0x2
 3471 040b 91       		.byte	0x91
 3472 040c 74       		.sleb128 -12
 3473 040d 00       		.byte	0
 3474 040e 11       		.uleb128 0x11
 3475 040f 3B070000 		.4byte	.LASF63
 3476 0413 01       		.byte	0x1
 3477 0414 5802     		.2byte	0x258
 3478 0416 00000000 		.4byte	.LFB40
 3479 041a 40000000 		.4byte	.LFE40-.LFB40
 3480 041e 01       		.uleb128 0x1
 3481 041f 9C       		.byte	0x9c
 3482 0420 41040000 		.4byte	0x441
 3483 0424 10       		.uleb128 0x10
 3484 0425 6900     		.ascii	"i\000"
 3485 0427 01       		.byte	0x1
 3486 0428 5A02     		.2byte	0x25a
 3487 042a 83000000 		.4byte	0x83
 3488 042e 02       		.uleb128 0x2
 3489 042f 91       		.byte	0x91
 3490 0430 74       		.sleb128 -12
 3491 0431 12       		.uleb128 0x12
 3492 0432 69000000 		.4byte	.LASF54
 3493 0436 01       		.byte	0x1
 3494 0437 5B02     		.2byte	0x25b
 3495 0439 83000000 		.4byte	0x83
 3496 043d 02       		.uleb128 0x2
 3497 043e 91       		.byte	0x91
 3498 043f 70       		.sleb128 -16
 3499 0440 00       		.byte	0
 3500 0441 11       		.uleb128 0x11
 3501 0442 76030000 		.4byte	.LASF64
 3502 0446 01       		.byte	0x1
 3503 0447 8502     		.2byte	0x285
 3504 0449 00000000 		.4byte	.LFB41
 3505 044d 58000000 		.4byte	.LFE41-.LFB41
 3506 0451 01       		.uleb128 0x1
 3507 0452 9C       		.byte	0x9c
 3508 0453 B0040000 		.4byte	0x4b0
 3509 0457 13       		.uleb128 0x13
 3510 0458 50030000 		.4byte	.LASF60
 3511 045c 01       		.byte	0x1
 3512 045d 8502     		.2byte	0x285
 3513 045f 83000000 		.4byte	0x83
 3514 0463 02       		.uleb128 0x2
 3515 0464 91       		.byte	0x91
 3516 0465 5C       		.sleb128 -36
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 113


 3517 0466 12       		.uleb128 0x12
 3518 0467 89040000 		.4byte	.LASF65
 3519 046b 01       		.byte	0x1
 3520 046c 8702     		.2byte	0x287
 3521 046e 83000000 		.4byte	0x83
 3522 0472 02       		.uleb128 0x2
 3523 0473 91       		.byte	0x91
 3524 0474 70       		.sleb128 -16
 3525 0475 12       		.uleb128 0x12
 3526 0476 F6080000 		.4byte	.LASF66
 3527 047a 01       		.byte	0x1
 3528 047b 8802     		.2byte	0x288
 3529 047d 83000000 		.4byte	0x83
 3530 0481 02       		.uleb128 0x2
 3531 0482 91       		.byte	0x91
 3532 0483 6C       		.sleb128 -20
 3533 0484 12       		.uleb128 0x12
 3534 0485 89080000 		.4byte	.LASF67
 3535 0489 01       		.byte	0x1
 3536 048a 8902     		.2byte	0x289
 3537 048c 83000000 		.4byte	0x83
 3538 0490 02       		.uleb128 0x2
 3539 0491 91       		.byte	0x91
 3540 0492 68       		.sleb128 -24
 3541 0493 10       		.uleb128 0x10
 3542 0494 6900     		.ascii	"i\000"
 3543 0496 01       		.byte	0x1
 3544 0497 8A02     		.2byte	0x28a
 3545 0499 83000000 		.4byte	0x83
 3546 049d 02       		.uleb128 0x2
 3547 049e 91       		.byte	0x91
 3548 049f 74       		.sleb128 -12
 3549 04a0 12       		.uleb128 0x12
 3550 04a1 69000000 		.4byte	.LASF54
 3551 04a5 01       		.byte	0x1
 3552 04a6 8B02     		.2byte	0x28b
 3553 04a8 83000000 		.4byte	0x83
 3554 04ac 02       		.uleb128 0x2
 3555 04ad 91       		.byte	0x91
 3556 04ae 64       		.sleb128 -28
 3557 04af 00       		.byte	0
 3558 04b0 14       		.uleb128 0x14
 3559 04b1 C8090000 		.4byte	.LASF70
 3560 04b5 01       		.byte	0x1
 3561 04b6 B602     		.2byte	0x2b6
 3562 04b8 77000000 		.4byte	0x77
 3563 04bc 00000000 		.4byte	.LFB42
 3564 04c0 1C000000 		.4byte	.LFE42-.LFB42
 3565 04c4 01       		.uleb128 0x1
 3566 04c5 9C       		.byte	0x9c
 3567 04c6 DA040000 		.4byte	0x4da
 3568 04ca 13       		.uleb128 0x13
 3569 04cb E9040000 		.4byte	.LASF51
 3570 04cf 01       		.byte	0x1
 3571 04d0 B602     		.2byte	0x2b6
 3572 04d2 83000000 		.4byte	0x83
 3573 04d6 02       		.uleb128 0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 114


 3574 04d7 91       		.byte	0x91
 3575 04d8 74       		.sleb128 -12
 3576 04d9 00       		.byte	0
 3577 04da 15       		.uleb128 0x15
 3578 04db 37010000 		.4byte	.LASF68
 3579 04df 01       		.byte	0x1
 3580 04e0 D102     		.2byte	0x2d1
 3581 04e2 00000000 		.4byte	.LFB43
 3582 04e6 24000000 		.4byte	.LFE43-.LFB43
 3583 04ea 01       		.uleb128 0x1
 3584 04eb 9C       		.byte	0x9c
 3585 04ec 0F050000 		.4byte	0x50f
 3586 04f0 13       		.uleb128 0x13
 3587 04f1 E9040000 		.4byte	.LASF51
 3588 04f5 01       		.byte	0x1
 3589 04f6 D102     		.2byte	0x2d1
 3590 04f8 83000000 		.4byte	0x83
 3591 04fc 02       		.uleb128 0x2
 3592 04fd 91       		.byte	0x91
 3593 04fe 74       		.sleb128 -12
 3594 04ff 13       		.uleb128 0x13
 3595 0500 7E050000 		.4byte	.LASF69
 3596 0504 01       		.byte	0x1
 3597 0505 D102     		.2byte	0x2d1
 3598 0507 77000000 		.4byte	0x77
 3599 050b 02       		.uleb128 0x2
 3600 050c 91       		.byte	0x91
 3601 050d 72       		.sleb128 -14
 3602 050e 00       		.byte	0
 3603 050f 14       		.uleb128 0x14
 3604 0510 3E090000 		.4byte	.LASF71
 3605 0514 01       		.byte	0x1
 3606 0515 EC02     		.2byte	0x2ec
 3607 0517 6B000000 		.4byte	0x6b
 3608 051b 00000000 		.4byte	.LFB44
 3609 051f 1C000000 		.4byte	.LFE44-.LFB44
 3610 0523 01       		.uleb128 0x1
 3611 0524 9C       		.byte	0x9c
 3612 0525 39050000 		.4byte	0x539
 3613 0529 13       		.uleb128 0x13
 3614 052a E9040000 		.4byte	.LASF51
 3615 052e 01       		.byte	0x1
 3616 052f EC02     		.2byte	0x2ec
 3617 0531 83000000 		.4byte	0x83
 3618 0535 02       		.uleb128 0x2
 3619 0536 91       		.byte	0x91
 3620 0537 74       		.sleb128 -12
 3621 0538 00       		.byte	0
 3622 0539 15       		.uleb128 0x15
 3623 053a CE070000 		.4byte	.LASF72
 3624 053e 01       		.byte	0x1
 3625 053f 0703     		.2byte	0x307
 3626 0541 00000000 		.4byte	.LFB45
 3627 0545 24000000 		.4byte	.LFE45-.LFB45
 3628 0549 01       		.uleb128 0x1
 3629 054a 9C       		.byte	0x9c
 3630 054b 6E050000 		.4byte	0x56e
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 115


 3631 054f 13       		.uleb128 0x13
 3632 0550 E9040000 		.4byte	.LASF51
 3633 0554 01       		.byte	0x1
 3634 0555 0703     		.2byte	0x307
 3635 0557 83000000 		.4byte	0x83
 3636 055b 02       		.uleb128 0x2
 3637 055c 91       		.byte	0x91
 3638 055d 74       		.sleb128 -12
 3639 055e 13       		.uleb128 0x13
 3640 055f 98030000 		.4byte	.LASF73
 3641 0563 01       		.byte	0x1
 3642 0564 0703     		.2byte	0x307
 3643 0566 6B000000 		.4byte	0x6b
 3644 056a 02       		.uleb128 0x2
 3645 056b 91       		.byte	0x91
 3646 056c 73       		.sleb128 -13
 3647 056d 00       		.byte	0
 3648 056e 14       		.uleb128 0x14
 3649 056f 19060000 		.4byte	.LASF74
 3650 0573 01       		.byte	0x1
 3651 0574 2203     		.2byte	0x322
 3652 0576 6B000000 		.4byte	0x6b
 3653 057a 00000000 		.4byte	.LFB46
 3654 057e 1C000000 		.4byte	.LFE46-.LFB46
 3655 0582 01       		.uleb128 0x1
 3656 0583 9C       		.byte	0x9c
 3657 0584 98050000 		.4byte	0x598
 3658 0588 13       		.uleb128 0x13
 3659 0589 50030000 		.4byte	.LASF60
 3660 058d 01       		.byte	0x1
 3661 058e 2203     		.2byte	0x322
 3662 0590 83000000 		.4byte	0x83
 3663 0594 02       		.uleb128 0x2
 3664 0595 91       		.byte	0x91
 3665 0596 74       		.sleb128 -12
 3666 0597 00       		.byte	0
 3667 0598 14       		.uleb128 0x14
 3668 0599 92020000 		.4byte	.LASF75
 3669 059d 01       		.byte	0x1
 3670 059e 3D03     		.2byte	0x33d
 3671 05a0 6B000000 		.4byte	0x6b
 3672 05a4 00000000 		.4byte	.LFB47
 3673 05a8 1C000000 		.4byte	.LFE47-.LFB47
 3674 05ac 01       		.uleb128 0x1
 3675 05ad 9C       		.byte	0x9c
 3676 05ae C2050000 		.4byte	0x5c2
 3677 05b2 13       		.uleb128 0x13
 3678 05b3 50030000 		.4byte	.LASF60
 3679 05b7 01       		.byte	0x1
 3680 05b8 3D03     		.2byte	0x33d
 3681 05ba 83000000 		.4byte	0x83
 3682 05be 02       		.uleb128 0x2
 3683 05bf 91       		.byte	0x91
 3684 05c0 74       		.sleb128 -12
 3685 05c1 00       		.byte	0
 3686 05c2 14       		.uleb128 0x14
 3687 05c3 65060000 		.4byte	.LASF76
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 116


 3688 05c7 01       		.byte	0x1
 3689 05c8 5903     		.2byte	0x359
 3690 05ca 6B000000 		.4byte	0x6b
 3691 05ce 00000000 		.4byte	.LFB48
 3692 05d2 1C000000 		.4byte	.LFE48-.LFB48
 3693 05d6 01       		.uleb128 0x1
 3694 05d7 9C       		.byte	0x9c
 3695 05d8 EC050000 		.4byte	0x5ec
 3696 05dc 13       		.uleb128 0x13
 3697 05dd 50030000 		.4byte	.LASF60
 3698 05e1 01       		.byte	0x1
 3699 05e2 5903     		.2byte	0x359
 3700 05e4 83000000 		.4byte	0x83
 3701 05e8 02       		.uleb128 0x2
 3702 05e9 91       		.byte	0x91
 3703 05ea 74       		.sleb128 -12
 3704 05eb 00       		.byte	0
 3705 05ec 14       		.uleb128 0x14
 3706 05ed 92050000 		.4byte	.LASF77
 3707 05f1 01       		.byte	0x1
 3708 05f2 7503     		.2byte	0x375
 3709 05f4 6B000000 		.4byte	0x6b
 3710 05f8 00000000 		.4byte	.LFB49
 3711 05fc 1C000000 		.4byte	.LFE49-.LFB49
 3712 0600 01       		.uleb128 0x1
 3713 0601 9C       		.byte	0x9c
 3714 0602 16060000 		.4byte	0x616
 3715 0606 13       		.uleb128 0x13
 3716 0607 50030000 		.4byte	.LASF60
 3717 060b 01       		.byte	0x1
 3718 060c 7503     		.2byte	0x375
 3719 060e 83000000 		.4byte	0x83
 3720 0612 02       		.uleb128 0x2
 3721 0613 91       		.byte	0x91
 3722 0614 74       		.sleb128 -12
 3723 0615 00       		.byte	0
 3724 0616 15       		.uleb128 0x15
 3725 0617 01020000 		.4byte	.LASF78
 3726 061b 01       		.byte	0x1
 3727 061c 9603     		.2byte	0x396
 3728 061e 00000000 		.4byte	.LFB50
 3729 0622 24000000 		.4byte	.LFE50-.LFB50
 3730 0626 01       		.uleb128 0x1
 3731 0627 9C       		.byte	0x9c
 3732 0628 4B060000 		.4byte	0x64b
 3733 062c 13       		.uleb128 0x13
 3734 062d 50030000 		.4byte	.LASF60
 3735 0631 01       		.byte	0x1
 3736 0632 9603     		.2byte	0x396
 3737 0634 83000000 		.4byte	0x83
 3738 0638 02       		.uleb128 0x2
 3739 0639 91       		.byte	0x91
 3740 063a 74       		.sleb128 -12
 3741 063b 13       		.uleb128 0x13
 3742 063c 98030000 		.4byte	.LASF73
 3743 0640 01       		.byte	0x1
 3744 0641 9603     		.2byte	0x396
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 117


 3745 0643 6B000000 		.4byte	0x6b
 3746 0647 02       		.uleb128 0x2
 3747 0648 91       		.byte	0x91
 3748 0649 73       		.sleb128 -13
 3749 064a 00       		.byte	0
 3750 064b 15       		.uleb128 0x15
 3751 064c 57030000 		.4byte	.LASF79
 3752 0650 01       		.byte	0x1
 3753 0651 B203     		.2byte	0x3b2
 3754 0653 00000000 		.4byte	.LFB51
 3755 0657 24000000 		.4byte	.LFE51-.LFB51
 3756 065b 01       		.uleb128 0x1
 3757 065c 9C       		.byte	0x9c
 3758 065d 80060000 		.4byte	0x680
 3759 0661 13       		.uleb128 0x13
 3760 0662 50030000 		.4byte	.LASF60
 3761 0666 01       		.byte	0x1
 3762 0667 B203     		.2byte	0x3b2
 3763 0669 83000000 		.4byte	0x83
 3764 066d 02       		.uleb128 0x2
 3765 066e 91       		.byte	0x91
 3766 066f 74       		.sleb128 -12
 3767 0670 13       		.uleb128 0x13
 3768 0671 98030000 		.4byte	.LASF73
 3769 0675 01       		.byte	0x1
 3770 0676 B203     		.2byte	0x3b2
 3771 0678 6B000000 		.4byte	0x6b
 3772 067c 02       		.uleb128 0x2
 3773 067d 91       		.byte	0x91
 3774 067e 73       		.sleb128 -13
 3775 067f 00       		.byte	0
 3776 0680 15       		.uleb128 0x15
 3777 0681 8D0A0000 		.4byte	.LASF80
 3778 0685 01       		.byte	0x1
 3779 0686 CE03     		.2byte	0x3ce
 3780 0688 00000000 		.4byte	.LFB52
 3781 068c 24000000 		.4byte	.LFE52-.LFB52
 3782 0690 01       		.uleb128 0x1
 3783 0691 9C       		.byte	0x9c
 3784 0692 B5060000 		.4byte	0x6b5
 3785 0696 13       		.uleb128 0x13
 3786 0697 50030000 		.4byte	.LASF60
 3787 069b 01       		.byte	0x1
 3788 069c CE03     		.2byte	0x3ce
 3789 069e 83000000 		.4byte	0x83
 3790 06a2 02       		.uleb128 0x2
 3791 06a3 91       		.byte	0x91
 3792 06a4 74       		.sleb128 -12
 3793 06a5 13       		.uleb128 0x13
 3794 06a6 98030000 		.4byte	.LASF73
 3795 06aa 01       		.byte	0x1
 3796 06ab CE03     		.2byte	0x3ce
 3797 06ad 6B000000 		.4byte	0x6b
 3798 06b1 02       		.uleb128 0x2
 3799 06b2 91       		.byte	0x91
 3800 06b3 73       		.sleb128 -13
 3801 06b4 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 118


 3802 06b5 15       		.uleb128 0x15
 3803 06b6 9E030000 		.4byte	.LASF81
 3804 06ba 01       		.byte	0x1
 3805 06bb EB03     		.2byte	0x3eb
 3806 06bd 00000000 		.4byte	.LFB53
 3807 06c1 24000000 		.4byte	.LFE53-.LFB53
 3808 06c5 01       		.uleb128 0x1
 3809 06c6 9C       		.byte	0x9c
 3810 06c7 EA060000 		.4byte	0x6ea
 3811 06cb 13       		.uleb128 0x13
 3812 06cc 50030000 		.4byte	.LASF60
 3813 06d0 01       		.byte	0x1
 3814 06d1 EB03     		.2byte	0x3eb
 3815 06d3 83000000 		.4byte	0x83
 3816 06d7 02       		.uleb128 0x2
 3817 06d8 91       		.byte	0x91
 3818 06d9 74       		.sleb128 -12
 3819 06da 13       		.uleb128 0x13
 3820 06db 98030000 		.4byte	.LASF73
 3821 06df 01       		.byte	0x1
 3822 06e0 EB03     		.2byte	0x3eb
 3823 06e2 6B000000 		.4byte	0x6b
 3824 06e6 02       		.uleb128 0x2
 3825 06e7 91       		.byte	0x91
 3826 06e8 73       		.sleb128 -13
 3827 06e9 00       		.byte	0
 3828 06ea 15       		.uleb128 0x15
 3829 06eb 60040000 		.4byte	.LASF82
 3830 06ef 01       		.byte	0x1
 3831 06f0 0704     		.2byte	0x407
 3832 06f2 00000000 		.4byte	.LFB54
 3833 06f6 24000000 		.4byte	.LFE54-.LFB54
 3834 06fa 01       		.uleb128 0x1
 3835 06fb 9C       		.byte	0x9c
 3836 06fc 1F070000 		.4byte	0x71f
 3837 0700 13       		.uleb128 0x13
 3838 0701 50030000 		.4byte	.LASF60
 3839 0705 01       		.byte	0x1
 3840 0706 0704     		.2byte	0x407
 3841 0708 83000000 		.4byte	0x83
 3842 070c 02       		.uleb128 0x2
 3843 070d 91       		.byte	0x91
 3844 070e 74       		.sleb128 -12
 3845 070f 13       		.uleb128 0x13
 3846 0710 98030000 		.4byte	.LASF73
 3847 0714 01       		.byte	0x1
 3848 0715 0704     		.2byte	0x407
 3849 0717 6B000000 		.4byte	0x6b
 3850 071b 02       		.uleb128 0x2
 3851 071c 91       		.byte	0x91
 3852 071d 73       		.sleb128 -13
 3853 071e 00       		.byte	0
 3854 071f 15       		.uleb128 0x15
 3855 0720 44080000 		.4byte	.LASF83
 3856 0724 01       		.byte	0x1
 3857 0725 2304     		.2byte	0x423
 3858 0727 00000000 		.4byte	.LFB55
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 119


 3859 072b 24000000 		.4byte	.LFE55-.LFB55
 3860 072f 01       		.uleb128 0x1
 3861 0730 9C       		.byte	0x9c
 3862 0731 54070000 		.4byte	0x754
 3863 0735 13       		.uleb128 0x13
 3864 0736 E9040000 		.4byte	.LASF51
 3865 073a 01       		.byte	0x1
 3866 073b 2304     		.2byte	0x423
 3867 073d 83000000 		.4byte	0x83
 3868 0741 02       		.uleb128 0x2
 3869 0742 91       		.byte	0x91
 3870 0743 74       		.sleb128 -12
 3871 0744 13       		.uleb128 0x13
 3872 0745 98030000 		.4byte	.LASF73
 3873 0749 01       		.byte	0x1
 3874 074a 2304     		.2byte	0x423
 3875 074c 6B000000 		.4byte	0x6b
 3876 0750 02       		.uleb128 0x2
 3877 0751 91       		.byte	0x91
 3878 0752 73       		.sleb128 -13
 3879 0753 00       		.byte	0
 3880 0754 16       		.uleb128 0x16
 3881 0755 9D090000 		.4byte	.LASF84
 3882 0759 01       		.byte	0x1
 3883 075a 5104     		.2byte	0x451
 3884 075c 83000000 		.4byte	0x83
 3885 0760 00000000 		.4byte	.LFB56
 3886 0764 3C010000 		.4byte	.LFE56-.LFB56
 3887 0768 01       		.uleb128 0x1
 3888 0769 9C       		.byte	0x9c
 3889 076a DB070000 		.4byte	0x7db
 3890 076e 13       		.uleb128 0x13
 3891 076f E9040000 		.4byte	.LASF51
 3892 0773 01       		.byte	0x1
 3893 0774 5104     		.2byte	0x451
 3894 0776 83000000 		.4byte	0x83
 3895 077a 02       		.uleb128 0x2
 3896 077b 91       		.byte	0x91
 3897 077c 6C       		.sleb128 -20
 3898 077d 12       		.uleb128 0x12
 3899 077e 50030000 		.4byte	.LASF60
 3900 0782 01       		.byte	0x1
 3901 0783 5304     		.2byte	0x453
 3902 0785 6B000000 		.4byte	0x6b
 3903 0789 02       		.uleb128 0x2
 3904 078a 91       		.byte	0x91
 3905 078b 77       		.sleb128 -9
 3906 078c 12       		.uleb128 0x12
 3907 078d 39060000 		.4byte	.LASF85
 3908 0791 01       		.byte	0x1
 3909 0792 5404     		.2byte	0x454
 3910 0794 6B000000 		.4byte	0x6b
 3911 0798 02       		.uleb128 0x2
 3912 0799 91       		.byte	0x91
 3913 079a 74       		.sleb128 -12
 3914 079b 12       		.uleb128 0x12
 3915 079c 050B0000 		.4byte	.LASF86
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 120


 3916 07a0 01       		.byte	0x1
 3917 07a1 5504     		.2byte	0x455
 3918 07a3 6B000000 		.4byte	0x6b
 3919 07a7 02       		.uleb128 0x2
 3920 07a8 91       		.byte	0x91
 3921 07a9 73       		.sleb128 -13
 3922 07aa 12       		.uleb128 0x12
 3923 07ab C00A0000 		.4byte	.LASF87
 3924 07af 01       		.byte	0x1
 3925 07b0 5704     		.2byte	0x457
 3926 07b2 6B000000 		.4byte	0x6b
 3927 07b6 02       		.uleb128 0x2
 3928 07b7 91       		.byte	0x91
 3929 07b8 76       		.sleb128 -10
 3930 07b9 12       		.uleb128 0x12
 3931 07ba 55040000 		.4byte	.LASF88
 3932 07be 01       		.byte	0x1
 3933 07bf 5804     		.2byte	0x458
 3934 07c1 6B000000 		.4byte	0x6b
 3935 07c5 02       		.uleb128 0x2
 3936 07c6 91       		.byte	0x91
 3937 07c7 75       		.sleb128 -11
 3938 07c8 12       		.uleb128 0x12
 3939 07c9 75020000 		.4byte	.LASF89
 3940 07cd 01       		.byte	0x1
 3941 07ce 5904     		.2byte	0x459
 3942 07d0 DB070000 		.4byte	0x7db
 3943 07d4 05       		.uleb128 0x5
 3944 07d5 03       		.byte	0x3
 3945 07d6 34000000 		.4byte	CapSense_CSD_debounceCounter.5366
 3946 07da 00       		.byte	0
 3947 07db 17       		.uleb128 0x17
 3948 07dc 6B000000 		.4byte	0x6b
 3949 07e0 EB070000 		.4byte	0x7eb
 3950 07e4 18       		.uleb128 0x18
 3951 07e5 BC000000 		.4byte	0xbc
 3952 07e9 00       		.byte	0
 3953 07ea 00       		.byte	0
 3954 07eb 16       		.uleb128 0x16
 3955 07ec E0010000 		.4byte	.LASF90
 3956 07f0 01       		.byte	0x1
 3957 07f1 A804     		.2byte	0x4a8
 3958 07f3 83000000 		.4byte	0x83
 3959 07f7 00000000 		.4byte	.LFB57
 3960 07fb 42000000 		.4byte	.LFE57-.LFB57
 3961 07ff 01       		.uleb128 0x1
 3962 0800 9C       		.byte	0x9c
 3963 0801 42080000 		.4byte	0x842
 3964 0805 13       		.uleb128 0x13
 3965 0806 50030000 		.4byte	.LASF60
 3966 080a 01       		.byte	0x1
 3967 080b A804     		.2byte	0x4a8
 3968 080d 83000000 		.4byte	0x83
 3969 0811 02       		.uleb128 0x2
 3970 0812 91       		.byte	0x91
 3971 0813 64       		.sleb128 -28
 3972 0814 12       		.uleb128 0x12
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 121


 3973 0815 C4050000 		.4byte	.LASF91
 3974 0819 01       		.byte	0x1
 3975 081a AA04     		.2byte	0x4aa
 3976 081c 83000000 		.4byte	0x83
 3977 0820 02       		.uleb128 0x2
 3978 0821 91       		.byte	0x91
 3979 0822 74       		.sleb128 -12
 3980 0823 12       		.uleb128 0x12
 3981 0824 79000000 		.4byte	.LASF92
 3982 0828 01       		.byte	0x1
 3983 0829 AB04     		.2byte	0x4ab
 3984 082b 83000000 		.4byte	0x83
 3985 082f 02       		.uleb128 0x2
 3986 0830 91       		.byte	0x91
 3987 0831 6C       		.sleb128 -20
 3988 0832 12       		.uleb128 0x12
 3989 0833 7E0B0000 		.4byte	.LASF93
 3990 0837 01       		.byte	0x1
 3991 0838 AC04     		.2byte	0x4ac
 3992 083a 83000000 		.4byte	0x83
 3993 083e 02       		.uleb128 0x2
 3994 083f 91       		.byte	0x91
 3995 0840 70       		.sleb128 -16
 3996 0841 00       		.byte	0
 3997 0842 16       		.uleb128 0x16
 3998 0843 6D090000 		.4byte	.LASF94
 3999 0847 01       		.byte	0x1
 4000 0848 D604     		.2byte	0x4d6
 4001 084a 83000000 		.4byte	0x83
 4002 084e 00000000 		.4byte	.LFB58
 4003 0852 36000000 		.4byte	.LFE58-.LFB58
 4004 0856 01       		.uleb128 0x1
 4005 0857 9C       		.byte	0x9c
 4006 0858 79080000 		.4byte	0x879
 4007 085c 10       		.uleb128 0x10
 4008 085d 6900     		.ascii	"i\000"
 4009 085f 01       		.byte	0x1
 4010 0860 D904     		.2byte	0x4d9
 4011 0862 83000000 		.4byte	0x83
 4012 0866 02       		.uleb128 0x2
 4013 0867 91       		.byte	0x91
 4014 0868 74       		.sleb128 -12
 4015 0869 12       		.uleb128 0x12
 4016 086a 7E0B0000 		.4byte	.LASF93
 4017 086e 01       		.byte	0x1
 4018 086f DA04     		.2byte	0x4da
 4019 0871 83000000 		.4byte	0x83
 4020 0875 02       		.uleb128 0x2
 4021 0876 91       		.byte	0x91
 4022 0877 70       		.sleb128 -16
 4023 0878 00       		.byte	0
 4024 0879 11       		.uleb128 0x11
 4025 087a 550B0000 		.4byte	.LASF95
 4026 087e 01       		.byte	0x1
 4027 087f 0505     		.2byte	0x505
 4028 0881 00000000 		.4byte	.LFB59
 4029 0885 5C000000 		.4byte	.LFE59-.LFB59
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 122


 4030 0889 01       		.uleb128 0x1
 4031 088a 9C       		.byte	0x9c
 4032 088b BD080000 		.4byte	0x8bd
 4033 088f 13       		.uleb128 0x13
 4034 0890 50030000 		.4byte	.LASF60
 4035 0894 01       		.byte	0x1
 4036 0895 0505     		.2byte	0x505
 4037 0897 83000000 		.4byte	0x83
 4038 089b 02       		.uleb128 0x2
 4039 089c 91       		.byte	0x91
 4040 089d 6C       		.sleb128 -20
 4041 089e 12       		.uleb128 0x12
 4042 089f C4050000 		.4byte	.LASF91
 4043 08a3 01       		.byte	0x1
 4044 08a4 0805     		.2byte	0x508
 4045 08a6 6B000000 		.4byte	0x6b
 4046 08aa 02       		.uleb128 0x2
 4047 08ab 91       		.byte	0x91
 4048 08ac 77       		.sleb128 -9
 4049 08ad 12       		.uleb128 0x12
 4050 08ae 79000000 		.4byte	.LASF92
 4051 08b2 01       		.byte	0x1
 4052 08b3 0905     		.2byte	0x509
 4053 08b5 6B000000 		.4byte	0x6b
 4054 08b9 02       		.uleb128 0x2
 4055 08ba 91       		.byte	0x91
 4056 08bb 76       		.sleb128 -10
 4057 08bc 00       		.byte	0
 4058 08bd 11       		.uleb128 0x11
 4059 08be 22050000 		.4byte	.LASF96
 4060 08c2 01       		.byte	0x1
 4061 08c3 3005     		.2byte	0x530
 4062 08c5 00000000 		.4byte	.LFB60
 4063 08c9 5C000000 		.4byte	.LFE60-.LFB60
 4064 08cd 01       		.uleb128 0x1
 4065 08ce 9C       		.byte	0x9c
 4066 08cf 01090000 		.4byte	0x901
 4067 08d3 13       		.uleb128 0x13
 4068 08d4 50030000 		.4byte	.LASF60
 4069 08d8 01       		.byte	0x1
 4070 08d9 3005     		.2byte	0x530
 4071 08db 83000000 		.4byte	0x83
 4072 08df 02       		.uleb128 0x2
 4073 08e0 91       		.byte	0x91
 4074 08e1 6C       		.sleb128 -20
 4075 08e2 12       		.uleb128 0x12
 4076 08e3 C4050000 		.4byte	.LASF91
 4077 08e7 01       		.byte	0x1
 4078 08e8 3205     		.2byte	0x532
 4079 08ea 6B000000 		.4byte	0x6b
 4080 08ee 02       		.uleb128 0x2
 4081 08ef 91       		.byte	0x91
 4082 08f0 77       		.sleb128 -9
 4083 08f1 12       		.uleb128 0x12
 4084 08f2 79000000 		.4byte	.LASF92
 4085 08f6 01       		.byte	0x1
 4086 08f7 3305     		.2byte	0x533
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 123


 4087 08f9 6B000000 		.4byte	0x6b
 4088 08fd 02       		.uleb128 0x2
 4089 08fe 91       		.byte	0x91
 4090 08ff 76       		.sleb128 -10
 4091 0900 00       		.byte	0
 4092 0901 14       		.uleb128 0x14
 4093 0902 330C0000 		.4byte	.LASF97
 4094 0906 01       		.byte	0x1
 4095 0907 6205     		.2byte	0x562
 4096 0909 6B000000 		.4byte	0x6b
 4097 090d 00000000 		.4byte	.LFB61
 4098 0911 B8000000 		.4byte	.LFE61-.LFB61
 4099 0915 01       		.uleb128 0x1
 4100 0916 9C       		.byte	0x9c
 4101 0917 83090000 		.4byte	0x983
 4102 091b 13       		.uleb128 0x13
 4103 091c 27040000 		.4byte	.LASF98
 4104 0920 01       		.byte	0x1
 4105 0921 6205     		.2byte	0x562
 4106 0923 6B000000 		.4byte	0x6b
 4107 0927 02       		.uleb128 0x2
 4108 0928 91       		.byte	0x91
 4109 0929 67       		.sleb128 -25
 4110 092a 13       		.uleb128 0x13
 4111 092b DF020000 		.4byte	.LASF99
 4112 092f 01       		.byte	0x1
 4113 0930 6205     		.2byte	0x562
 4114 0932 6B000000 		.4byte	0x6b
 4115 0936 02       		.uleb128 0x2
 4116 0937 91       		.byte	0x91
 4117 0938 66       		.sleb128 -26
 4118 0939 13       		.uleb128 0x13
 4119 093a C00A0000 		.4byte	.LASF87
 4120 093e 01       		.byte	0x1
 4121 093f 6205     		.2byte	0x562
 4122 0941 6B000000 		.4byte	0x6b
 4123 0945 02       		.uleb128 0x2
 4124 0946 91       		.byte	0x91
 4125 0947 65       		.sleb128 -27
 4126 0948 10       		.uleb128 0x10
 4127 0949 6900     		.ascii	"i\000"
 4128 094b 01       		.byte	0x1
 4129 094c 6505     		.2byte	0x565
 4130 094e 6B000000 		.4byte	0x6b
 4131 0952 02       		.uleb128 0x2
 4132 0953 91       		.byte	0x91
 4133 0954 6F       		.sleb128 -17
 4134 0955 12       		.uleb128 0x12
 4135 0956 CD050000 		.4byte	.LASF100
 4136 095a 01       		.byte	0x1
 4137 095b 6F05     		.2byte	0x56f
 4138 095d 6B000000 		.4byte	0x6b
 4139 0961 02       		.uleb128 0x2
 4140 0962 91       		.byte	0x91
 4141 0963 6E       		.sleb128 -18
 4142 0964 12       		.uleb128 0x12
 4143 0965 21090000 		.4byte	.LASF101
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 124


 4144 0969 01       		.byte	0x1
 4145 096a 7105     		.2byte	0x571
 4146 096c 6B000000 		.4byte	0x6b
 4147 0970 02       		.uleb128 0x2
 4148 0971 91       		.byte	0x91
 4149 0972 6D       		.sleb128 -19
 4150 0973 12       		.uleb128 0x12
 4151 0974 C0070000 		.4byte	.LASF102
 4152 0978 01       		.byte	0x1
 4153 0979 7205     		.2byte	0x572
 4154 097b E0010000 		.4byte	0x1e0
 4155 097f 02       		.uleb128 0x2
 4156 0980 91       		.byte	0x91
 4157 0981 68       		.sleb128 -24
 4158 0982 00       		.byte	0
 4159 0983 16       		.uleb128 0x16
 4160 0984 6B0C0000 		.4byte	.LASF103
 4161 0988 01       		.byte	0x1
 4162 0989 0106     		.2byte	0x601
 4163 098b 6B000000 		.4byte	0x6b
 4164 098f 00000000 		.4byte	.LFB62
 4165 0993 A0010000 		.4byte	.LFE62-.LFB62
 4166 0997 01       		.uleb128 0x1
 4167 0998 9C       		.byte	0x9c
 4168 0999 550A0000 		.4byte	0xa55
 4169 099d 13       		.uleb128 0x13
 4170 099e CD050000 		.4byte	.LASF100
 4171 09a2 01       		.byte	0x1
 4172 09a3 0106     		.2byte	0x601
 4173 09a5 6B000000 		.4byte	0x6b
 4174 09a9 02       		.uleb128 0x2
 4175 09aa 91       		.byte	0x91
 4176 09ab 57       		.sleb128 -41
 4177 09ac 13       		.uleb128 0x13
 4178 09ad 27040000 		.4byte	.LASF98
 4179 09b1 01       		.byte	0x1
 4180 09b2 0106     		.2byte	0x601
 4181 09b4 6B000000 		.4byte	0x6b
 4182 09b8 02       		.uleb128 0x2
 4183 09b9 91       		.byte	0x91
 4184 09ba 56       		.sleb128 -42
 4185 09bb 13       		.uleb128 0x13
 4186 09bc DF020000 		.4byte	.LASF99
 4187 09c0 01       		.byte	0x1
 4188 09c1 0206     		.2byte	0x602
 4189 09c3 6B000000 		.4byte	0x6b
 4190 09c7 02       		.uleb128 0x2
 4191 09c8 91       		.byte	0x91
 4192 09c9 55       		.sleb128 -43
 4193 09ca 13       		.uleb128 0x13
 4194 09cb B9050000 		.4byte	.LASF104
 4195 09cf 01       		.byte	0x1
 4196 09d0 0206     		.2byte	0x602
 4197 09d2 77000000 		.4byte	0x77
 4198 09d6 02       		.uleb128 0x2
 4199 09d7 91       		.byte	0x91
 4200 09d8 52       		.sleb128 -46
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 125


 4201 09d9 13       		.uleb128 0x13
 4202 09da 5C0A0000 		.4byte	.LASF61
 4203 09de 01       		.byte	0x1
 4204 09df 0206     		.2byte	0x602
 4205 09e1 6B000000 		.4byte	0x6b
 4206 09e5 02       		.uleb128 0x2
 4207 09e6 91       		.byte	0x91
 4208 09e7 00       		.sleb128 0
 4209 09e8 12       		.uleb128 0x12
 4210 09e9 A4010000 		.4byte	.LASF105
 4211 09ed 01       		.byte	0x1
 4212 09ee 0606     		.2byte	0x606
 4213 09f0 6B000000 		.4byte	0x6b
 4214 09f4 02       		.uleb128 0x2
 4215 09f5 91       		.byte	0x91
 4216 09f6 6F       		.sleb128 -17
 4217 09f7 12       		.uleb128 0x12
 4218 09f8 A3000000 		.4byte	.LASF106
 4219 09fc 01       		.byte	0x1
 4220 09fd 0706     		.2byte	0x607
 4221 09ff 6B000000 		.4byte	0x6b
 4222 0a03 02       		.uleb128 0x2
 4223 0a04 91       		.byte	0x91
 4224 0a05 67       		.sleb128 -25
 4225 0a06 12       		.uleb128 0x12
 4226 0a07 4C0C0000 		.4byte	.LASF107
 4227 0a0b 01       		.byte	0x1
 4228 0a0c 0C06     		.2byte	0x60c
 4229 0a0e 550A0000 		.4byte	0xa55
 4230 0a12 05       		.uleb128 0x5
 4231 0a13 03       		.byte	0x3
 4232 0a14 38000000 		.4byte	CapSense_CSD_centroid.5418
 4233 0a18 12       		.uleb128 0x12
 4234 0a19 620C0000 		.4byte	.LASF108
 4235 0a1d 01       		.byte	0x1
 4236 0a1e 1306     		.2byte	0x613
 4237 0a20 6B000000 		.4byte	0x6b
 4238 0a24 02       		.uleb128 0x2
 4239 0a25 91       		.byte	0x91
 4240 0a26 5B       		.sleb128 -37
 4241 0a27 12       		.uleb128 0x12
 4242 0a28 7F080000 		.4byte	.LASF109
 4243 0a2c 01       		.byte	0x1
 4244 0a2d 1406     		.2byte	0x614
 4245 0a2f 83000000 		.4byte	0x83
 4246 0a33 02       		.uleb128 0x2
 4247 0a34 91       		.byte	0x91
 4248 0a35 60       		.sleb128 -32
 4249 0a36 12       		.uleb128 0x12
 4250 0a37 91090000 		.4byte	.LASF110
 4251 0a3b 01       		.byte	0x1
 4252 0a3c 1506     		.2byte	0x615
 4253 0a3e 9B000000 		.4byte	0x9b
 4254 0a42 02       		.uleb128 0x2
 4255 0a43 91       		.byte	0x91
 4256 0a44 5C       		.sleb128 -36
 4257 0a45 12       		.uleb128 0x12
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 126


 4258 0a46 C0070000 		.4byte	.LASF102
 4259 0a4a 01       		.byte	0x1
 4260 0a4b 1706     		.2byte	0x617
 4261 0a4d E0010000 		.4byte	0x1e0
 4262 0a51 02       		.uleb128 0x2
 4263 0a52 91       		.byte	0x91
 4264 0a53 68       		.sleb128 -24
 4265 0a54 00       		.byte	0
 4266 0a55 17       		.uleb128 0x17
 4267 0a56 6B000000 		.4byte	0x6b
 4268 0a5a 650A0000 		.4byte	0xa65
 4269 0a5e 18       		.uleb128 0x18
 4270 0a5f BC000000 		.4byte	0xbc
 4271 0a63 02       		.byte	0x2
 4272 0a64 00       		.byte	0
 4273 0a65 16       		.uleb128 0x16
 4274 0a66 130B0000 		.4byte	.LASF111
 4275 0a6a 01       		.byte	0x1
 4276 0a6b D406     		.2byte	0x6d4
 4277 0a6d 77000000 		.4byte	0x77
 4278 0a71 00000000 		.4byte	.LFB63
 4279 0a75 60010000 		.4byte	.LFE63-.LFB63
 4280 0a79 01       		.uleb128 0x1
 4281 0a7a 9C       		.byte	0x9c
 4282 0a7b F80A0000 		.4byte	0xaf8
 4283 0a7f 13       		.uleb128 0x13
 4284 0a80 50030000 		.4byte	.LASF60
 4285 0a84 01       		.byte	0x1
 4286 0a85 D406     		.2byte	0x6d4
 4287 0a87 83000000 		.4byte	0x83
 4288 0a8b 02       		.uleb128 0x2
 4289 0a8c 91       		.byte	0x91
 4290 0a8d 64       		.sleb128 -28
 4291 0a8e 12       		.uleb128 0x12
 4292 0a8f 60000000 		.4byte	.LASF112
 4293 0a93 01       		.byte	0x1
 4294 0a94 DB06     		.2byte	0x6db
 4295 0a96 6B000000 		.4byte	0x6b
 4296 0a9a 02       		.uleb128 0x2
 4297 0a9b 91       		.byte	0x91
 4298 0a9c 68       		.sleb128 -24
 4299 0a9d 12       		.uleb128 0x12
 4300 0a9e B1070000 		.4byte	.LASF113
 4301 0aa2 01       		.byte	0x1
 4302 0aa3 DC06     		.2byte	0x6dc
 4303 0aa5 6B000000 		.4byte	0x6b
 4304 0aa9 02       		.uleb128 0x2
 4305 0aaa 91       		.byte	0x91
 4306 0aab 6D       		.sleb128 -19
 4307 0aac 12       		.uleb128 0x12
 4308 0aad F4020000 		.4byte	.LASF114
 4309 0ab1 01       		.byte	0x1
 4310 0ab2 DD06     		.2byte	0x6dd
 4311 0ab4 6B000000 		.4byte	0x6b
 4312 0ab8 02       		.uleb128 0x2
 4313 0ab9 91       		.byte	0x91
 4314 0aba 6C       		.sleb128 -20
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 127


 4315 0abb 12       		.uleb128 0x12
 4316 0abc CD050000 		.4byte	.LASF100
 4317 0ac0 01       		.byte	0x1
 4318 0ac1 E706     		.2byte	0x6e7
 4319 0ac3 6B000000 		.4byte	0x6b
 4320 0ac7 02       		.uleb128 0x2
 4321 0ac8 91       		.byte	0x91
 4322 0ac9 69       		.sleb128 -23
 4323 0aca 12       		.uleb128 0x12
 4324 0acb 620C0000 		.4byte	.LASF108
 4325 0acf 01       		.byte	0x1
 4326 0ad0 E806     		.2byte	0x6e8
 4327 0ad2 77000000 		.4byte	0x77
 4328 0ad6 02       		.uleb128 0x2
 4329 0ad7 91       		.byte	0x91
 4330 0ad8 6E       		.sleb128 -18
 4331 0ad9 12       		.uleb128 0x12
 4332 0ada 27040000 		.4byte	.LASF98
 4333 0ade 01       		.byte	0x1
 4334 0adf E906     		.2byte	0x6e9
 4335 0ae1 6B000000 		.4byte	0x6b
 4336 0ae5 02       		.uleb128 0x2
 4337 0ae6 91       		.byte	0x91
 4338 0ae7 6B       		.sleb128 -21
 4339 0ae8 12       		.uleb128 0x12
 4340 0ae9 DF020000 		.4byte	.LASF99
 4341 0aed 01       		.byte	0x1
 4342 0aee EA06     		.2byte	0x6ea
 4343 0af0 6B000000 		.4byte	0x6b
 4344 0af4 02       		.uleb128 0x2
 4345 0af5 91       		.byte	0x91
 4346 0af6 6A       		.sleb128 -22
 4347 0af7 00       		.byte	0
 4348 0af8 16       		.uleb128 0x16
 4349 0af9 840B0000 		.4byte	.LASF115
 4350 0afd 01       		.byte	0x1
 4351 0afe 9F07     		.2byte	0x79f
 4352 0b00 77000000 		.4byte	0x77
 4353 0b04 00000000 		.4byte	.LFB64
 4354 0b08 9C000000 		.4byte	.LFE64-.LFB64
 4355 0b0c 01       		.uleb128 0x1
 4356 0b0d 9C       		.byte	0x9c
 4357 0b0e 5E0B0000 		.4byte	0xb5e
 4358 0b12 13       		.uleb128 0x13
 4359 0b13 50030000 		.4byte	.LASF60
 4360 0b17 01       		.byte	0x1
 4361 0b18 9F07     		.2byte	0x79f
 4362 0b1a 83000000 		.4byte	0x83
 4363 0b1e 02       		.uleb128 0x2
 4364 0b1f 91       		.byte	0x91
 4365 0b20 64       		.sleb128 -28
 4366 0b21 12       		.uleb128 0x12
 4367 0b22 CD050000 		.4byte	.LASF100
 4368 0b26 01       		.byte	0x1
 4369 0b27 AE07     		.2byte	0x7ae
 4370 0b29 6B000000 		.4byte	0x6b
 4371 0b2d 02       		.uleb128 0x2
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 128


 4372 0b2e 91       		.byte	0x91
 4373 0b2f 6B       		.sleb128 -21
 4374 0b30 12       		.uleb128 0x12
 4375 0b31 620C0000 		.4byte	.LASF108
 4376 0b35 01       		.byte	0x1
 4377 0b36 AF07     		.2byte	0x7af
 4378 0b38 77000000 		.4byte	0x77
 4379 0b3c 02       		.uleb128 0x2
 4380 0b3d 91       		.byte	0x91
 4381 0b3e 6E       		.sleb128 -18
 4382 0b3f 12       		.uleb128 0x12
 4383 0b40 27040000 		.4byte	.LASF98
 4384 0b44 01       		.byte	0x1
 4385 0b45 B007     		.2byte	0x7b0
 4386 0b47 6B000000 		.4byte	0x6b
 4387 0b4b 02       		.uleb128 0x2
 4388 0b4c 91       		.byte	0x91
 4389 0b4d 6D       		.sleb128 -19
 4390 0b4e 12       		.uleb128 0x12
 4391 0b4f DF020000 		.4byte	.LASF99
 4392 0b53 01       		.byte	0x1
 4393 0b54 B107     		.2byte	0x7b1
 4394 0b56 6B000000 		.4byte	0x6b
 4395 0b5a 02       		.uleb128 0x2
 4396 0b5b 91       		.byte	0x91
 4397 0b5c 6C       		.sleb128 -20
 4398 0b5d 00       		.byte	0
 4399 0b5e 14       		.uleb128 0x14
 4400 0b5f D5050000 		.4byte	.LASF116
 4401 0b63 01       		.byte	0x1
 4402 0b64 4C09     		.2byte	0x94c
 4403 0b66 77000000 		.4byte	0x77
 4404 0b6a 00000000 		.4byte	.LFB65
 4405 0b6e 76000000 		.4byte	.LFE65-.LFB65
 4406 0b72 01       		.uleb128 0x1
 4407 0b73 9C       		.byte	0x9c
 4408 0b74 B20B0000 		.4byte	0xbb2
 4409 0b78 19       		.uleb128 0x19
 4410 0b79 783100   		.ascii	"x1\000"
 4411 0b7c 01       		.byte	0x1
 4412 0b7d 4C09     		.2byte	0x94c
 4413 0b7f 77000000 		.4byte	0x77
 4414 0b83 02       		.uleb128 0x2
 4415 0b84 91       		.byte	0x91
 4416 0b85 66       		.sleb128 -26
 4417 0b86 19       		.uleb128 0x19
 4418 0b87 783200   		.ascii	"x2\000"
 4419 0b8a 01       		.byte	0x1
 4420 0b8b 4C09     		.2byte	0x94c
 4421 0b8d 77000000 		.4byte	0x77
 4422 0b91 02       		.uleb128 0x2
 4423 0b92 91       		.byte	0x91
 4424 0b93 64       		.sleb128 -28
 4425 0b94 19       		.uleb128 0x19
 4426 0b95 783300   		.ascii	"x3\000"
 4427 0b98 01       		.byte	0x1
 4428 0b99 4C09     		.2byte	0x94c
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 129


 4429 0b9b 77000000 		.4byte	0x77
 4430 0b9f 02       		.uleb128 0x2
 4431 0ba0 91       		.byte	0x91
 4432 0ba1 62       		.sleb128 -30
 4433 0ba2 10       		.uleb128 0x10
 4434 0ba3 746D7000 		.ascii	"tmp\000"
 4435 0ba7 01       		.byte	0x1
 4436 0ba8 4E09     		.2byte	0x94e
 4437 0baa 77000000 		.4byte	0x77
 4438 0bae 02       		.uleb128 0x2
 4439 0baf 91       		.byte	0x91
 4440 0bb0 6E       		.sleb128 -18
 4441 0bb1 00       		.byte	0
 4442 0bb2 14       		.uleb128 0x14
 4443 0bb3 42060000 		.4byte	.LASF117
 4444 0bb7 01       		.byte	0x1
 4445 0bb8 C409     		.2byte	0x9c4
 4446 0bba 77000000 		.4byte	0x77
 4447 0bbe 00000000 		.4byte	.LFB66
 4448 0bc2 3C000000 		.4byte	.LFE66-.LFB66
 4449 0bc6 01       		.uleb128 0x1
 4450 0bc7 9C       		.byte	0x9c
 4451 0bc8 F80B0000 		.4byte	0xbf8
 4452 0bcc 19       		.uleb128 0x19
 4453 0bcd 783100   		.ascii	"x1\000"
 4454 0bd0 01       		.byte	0x1
 4455 0bd1 C409     		.2byte	0x9c4
 4456 0bd3 77000000 		.4byte	0x77
 4457 0bd7 02       		.uleb128 0x2
 4458 0bd8 91       		.byte	0x91
 4459 0bd9 6E       		.sleb128 -18
 4460 0bda 19       		.uleb128 0x19
 4461 0bdb 783200   		.ascii	"x2\000"
 4462 0bde 01       		.byte	0x1
 4463 0bdf C409     		.2byte	0x9c4
 4464 0be1 77000000 		.4byte	0x77
 4465 0be5 02       		.uleb128 0x2
 4466 0be6 91       		.byte	0x91
 4467 0be7 6C       		.sleb128 -20
 4468 0be8 10       		.uleb128 0x10
 4469 0be9 746D7000 		.ascii	"tmp\000"
 4470 0bed 01       		.byte	0x1
 4471 0bee C609     		.2byte	0x9c6
 4472 0bf0 83000000 		.4byte	0x83
 4473 0bf4 02       		.uleb128 0x2
 4474 0bf5 91       		.byte	0x91
 4475 0bf6 74       		.sleb128 -12
 4476 0bf7 00       		.byte	0
 4477 0bf8 14       		.uleb128 0x14
 4478 0bf9 9A040000 		.4byte	.LASF118
 4479 0bfd 01       		.byte	0x1
 4480 0bfe EC09     		.2byte	0x9ec
 4481 0c00 77000000 		.4byte	0x77
 4482 0c04 00000000 		.4byte	.LFB67
 4483 0c08 4C000000 		.4byte	.LFE67-.LFB67
 4484 0c0c 01       		.uleb128 0x1
 4485 0c0d 9C       		.byte	0x9c
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 130


 4486 0c0e 2F0C0000 		.4byte	0xc2f
 4487 0c12 19       		.uleb128 0x19
 4488 0c13 783100   		.ascii	"x1\000"
 4489 0c16 01       		.byte	0x1
 4490 0c17 EC09     		.2byte	0x9ec
 4491 0c19 77000000 		.4byte	0x77
 4492 0c1d 02       		.uleb128 0x2
 4493 0c1e 91       		.byte	0x91
 4494 0c1f 76       		.sleb128 -10
 4495 0c20 19       		.uleb128 0x19
 4496 0c21 783200   		.ascii	"x2\000"
 4497 0c24 01       		.byte	0x1
 4498 0c25 EC09     		.2byte	0x9ec
 4499 0c27 77000000 		.4byte	0x77
 4500 0c2b 02       		.uleb128 0x2
 4501 0c2c 91       		.byte	0x91
 4502 0c2d 74       		.sleb128 -12
 4503 0c2e 00       		.byte	0
 4504 0c2f 14       		.uleb128 0x14
 4505 0c30 90060000 		.4byte	.LASF119
 4506 0c34 01       		.byte	0x1
 4507 0c35 AD0A     		.2byte	0xaad
 4508 0c37 83000000 		.4byte	0x83
 4509 0c3b 00000000 		.4byte	.LFB68
 4510 0c3f 1C000000 		.4byte	.LFE68-.LFB68
 4511 0c43 01       		.uleb128 0x1
 4512 0c44 9C       		.byte	0x9c
 4513 0c45 590C0000 		.4byte	0xc59
 4514 0c49 13       		.uleb128 0x13
 4515 0c4a E9040000 		.4byte	.LASF51
 4516 0c4e 01       		.byte	0x1
 4517 0c4f AD0A     		.2byte	0xaad
 4518 0c51 83000000 		.4byte	0x83
 4519 0c55 02       		.uleb128 0x2
 4520 0c56 91       		.byte	0x91
 4521 0c57 74       		.sleb128 -12
 4522 0c58 00       		.byte	0
 4523 0c59 14       		.uleb128 0x14
 4524 0c5a 250A0000 		.4byte	.LASF120
 4525 0c5e 01       		.byte	0x1
 4526 0c5f C70A     		.2byte	0xac7
 4527 0c61 6B000000 		.4byte	0x6b
 4528 0c65 00000000 		.4byte	.LFB69
 4529 0c69 1C000000 		.4byte	.LFE69-.LFB69
 4530 0c6d 01       		.uleb128 0x1
 4531 0c6e 9C       		.byte	0x9c
 4532 0c6f 830C0000 		.4byte	0xc83
 4533 0c73 13       		.uleb128 0x13
 4534 0c74 E9040000 		.4byte	.LASF51
 4535 0c78 01       		.byte	0x1
 4536 0c79 C70A     		.2byte	0xac7
 4537 0c7b 83000000 		.4byte	0x83
 4538 0c7f 02       		.uleb128 0x2
 4539 0c80 91       		.byte	0x91
 4540 0c81 74       		.sleb128 -12
 4541 0c82 00       		.byte	0
 4542 0c83 14       		.uleb128 0x14
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 131


 4543 0c84 21020000 		.4byte	.LASF121
 4544 0c88 01       		.byte	0x1
 4545 0c89 E10A     		.2byte	0xae1
 4546 0c8b 6B000000 		.4byte	0x6b
 4547 0c8f 00000000 		.4byte	.LFB70
 4548 0c93 1C000000 		.4byte	.LFE70-.LFB70
 4549 0c97 01       		.uleb128 0x1
 4550 0c98 9C       		.byte	0x9c
 4551 0c99 AD0C0000 		.4byte	0xcad
 4552 0c9d 13       		.uleb128 0x13
 4553 0c9e 50030000 		.4byte	.LASF60
 4554 0ca2 01       		.byte	0x1
 4555 0ca3 E10A     		.2byte	0xae1
 4556 0ca5 83000000 		.4byte	0x83
 4557 0ca9 02       		.uleb128 0x2
 4558 0caa 91       		.byte	0x91
 4559 0cab 74       		.sleb128 -12
 4560 0cac 00       		.byte	0
 4561 0cad 1A       		.uleb128 0x1a
 4562 0cae 6B0A0000 		.4byte	.LASF122
 4563 0cb2 01       		.byte	0x1
 4564 0cb3 FB0A     		.2byte	0xafb
 4565 0cb5 00000000 		.4byte	.LFB71
 4566 0cb9 14000000 		.4byte	.LFE71-.LFB71
 4567 0cbd 01       		.uleb128 0x1
 4568 0cbe 9C       		.byte	0x9c
 4569 0cbf 1A       		.uleb128 0x1a
 4570 0cc0 C6040000 		.4byte	.LASF123
 4571 0cc4 01       		.byte	0x1
 4572 0cc5 140B     		.2byte	0xb14
 4573 0cc7 00000000 		.4byte	.LFB72
 4574 0ccb 14000000 		.4byte	.LFE72-.LFB72
 4575 0ccf 01       		.uleb128 0x1
 4576 0cd0 9C       		.byte	0x9c
 4577 0cd1 17       		.uleb128 0x17
 4578 0cd2 77000000 		.4byte	0x77
 4579 0cd6 E10C0000 		.4byte	0xce1
 4580 0cda 18       		.uleb128 0x18
 4581 0cdb BC000000 		.4byte	0xbc
 4582 0cdf 00       		.byte	0
 4583 0ce0 00       		.byte	0
 4584 0ce1 1B       		.uleb128 0x1b
 4585 0ce2 EC030000 		.4byte	.LASF124
 4586 0ce6 01       		.byte	0x1
 4587 0ce7 5D       		.byte	0x5d
 4588 0ce8 F20C0000 		.4byte	0xcf2
 4589 0cec 05       		.uleb128 0x5
 4590 0ced 03       		.byte	0x3
 4591 0cee 08000000 		.4byte	CapSense_CSD_centroidMult
 4592 0cf2 08       		.uleb128 0x8
 4593 0cf3 D10C0000 		.4byte	0xcd1
 4594 0cf7 1B       		.uleb128 0x1b
 4595 0cf8 DE0B0000 		.4byte	.LASF125
 4596 0cfc 01       		.byte	0x1
 4597 0cfd 61       		.byte	0x61
 4598 0cfe DB070000 		.4byte	0x7db
 4599 0d02 05       		.uleb128 0x5
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 132


 4600 0d03 03       		.byte	0x3
 4601 0d04 14000000 		.4byte	CapSense_CSD_posFiltersMask
 4602 0d08 1B       		.uleb128 0x1b
 4603 0d09 000A0000 		.4byte	.LASF126
 4604 0d0d 01       		.byte	0x1
 4605 0d0e 65       		.byte	0x65
 4606 0d0f 550A0000 		.4byte	0xa55
 4607 0d13 05       		.uleb128 0x5
 4608 0d14 03       		.byte	0x3
 4609 0d15 18000000 		.4byte	CapSense_CSD_posFiltersData
 4610 0d19 17       		.uleb128 0x17
 4611 0d1a 77000000 		.4byte	0x77
 4612 0d1e 290D0000 		.4byte	0xd29
 4613 0d22 18       		.uleb128 0x18
 4614 0d23 BC000000 		.4byte	0xbc
 4615 0d27 0B       		.byte	0xb
 4616 0d28 00       		.byte	0
 4617 0d29 1C       		.uleb128 0x1c
 4618 0d2a AC010000 		.4byte	.LASF127
 4619 0d2e 01       		.byte	0x1
 4620 0d2f 2C       		.byte	0x2c
 4621 0d30 190D0000 		.4byte	0xd19
 4622 0d34 17       		.uleb128 0x17
 4623 0d35 6B000000 		.4byte	0x6b
 4624 0d39 440D0000 		.4byte	0xd44
 4625 0d3d 18       		.uleb128 0x18
 4626 0d3e BC000000 		.4byte	0xbc
 4627 0d42 01       		.byte	0x1
 4628 0d43 00       		.byte	0
 4629 0d44 1C       		.uleb128 0x1c
 4630 0d45 B6080000 		.4byte	.LASF128
 4631 0d49 01       		.byte	0x1
 4632 0d4a 2D       		.byte	0x2d
 4633 0d4b 340D0000 		.4byte	0xd34
 4634 0d4f 17       		.uleb128 0x17
 4635 0d50 6B000000 		.4byte	0x6b
 4636 0d54 5F0D0000 		.4byte	0xd5f
 4637 0d58 18       		.uleb128 0x18
 4638 0d59 BC000000 		.4byte	0xbc
 4639 0d5d 0B       		.byte	0xb
 4640 0d5e 00       		.byte	0
 4641 0d5f 1C       		.uleb128 0x1c
 4642 0d60 DD0A0000 		.4byte	.LASF129
 4643 0d64 01       		.byte	0x1
 4644 0d65 2E       		.byte	0x2e
 4645 0d66 6A0D0000 		.4byte	0xd6a
 4646 0d6a 08       		.uleb128 0x8
 4647 0d6b 4F0D0000 		.4byte	0xd4f
 4648 0d6f 1D       		.uleb128 0x1d
 4649 0d70 06040000 		.4byte	.LASF130
 4650 0d74 01       		.byte	0x1
 4651 0d75 34       		.byte	0x34
 4652 0d76 190D0000 		.4byte	0xd19
 4653 0d7a 05       		.uleb128 0x5
 4654 0d7b 03       		.byte	0x3
 4655 0d7c 00000000 		.4byte	CapSense_CSD_sensorBaseline
 4656 0d80 1D       		.uleb128 0x1d
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 133


 4657 0d81 02090000 		.4byte	.LASF131
 4658 0d85 01       		.byte	0x1
 4659 0d86 35       		.byte	0x35
 4660 0d87 4F0D0000 		.4byte	0xd4f
 4661 0d8b 05       		.uleb128 0x5
 4662 0d8c 03       		.byte	0x3
 4663 0d8d 00000000 		.4byte	CapSense_CSD_sensorBaselineLow
 4664 0d91 1D       		.uleb128 0x1d
 4665 0d92 2A080000 		.4byte	.LASF132
 4666 0d96 01       		.byte	0x1
 4667 0d97 36       		.byte	0x36
 4668 0d98 4F0D0000 		.4byte	0xd4f
 4669 0d9c 05       		.uleb128 0x5
 4670 0d9d 03       		.byte	0x3
 4671 0d9e 00000000 		.4byte	CapSense_CSD_sensorSignal
 4672 0da2 1D       		.uleb128 0x1d
 4673 0da3 5F070000 		.4byte	.LASF133
 4674 0da7 01       		.byte	0x1
 4675 0da8 37       		.byte	0x37
 4676 0da9 340D0000 		.4byte	0xd34
 4677 0dad 05       		.uleb128 0x5
 4678 0dae 03       		.byte	0x3
 4679 0daf 00000000 		.4byte	CapSense_CSD_sensorOnMask
 4680 0db3 1D       		.uleb128 0x1d
 4681 0db4 18030000 		.4byte	.LASF134
 4682 0db8 01       		.byte	0x1
 4683 0db9 39       		.byte	0x39
 4684 0dba 4F0D0000 		.4byte	0xd4f
 4685 0dbe 05       		.uleb128 0x5
 4686 0dbf 03       		.byte	0x3
 4687 0dc0 00000000 		.4byte	CapSense_CSD_lowBaselineResetCnt
 4688 0dc4 1D       		.uleb128 0x1d
 4689 0dc5 42000000 		.4byte	.LASF135
 4690 0dc9 01       		.byte	0x1
 4691 0dca 3A       		.byte	0x3a
 4692 0dcb 4F0D0000 		.4byte	0xd4f
 4693 0dcf 05       		.uleb128 0x5
 4694 0dd0 03       		.byte	0x3
 4695 0dd1 00000000 		.4byte	CapSense_CSD_lowBaselineReset
 4696 0dd5 1D       		.uleb128 0x1d
 4697 0dd6 58020000 		.4byte	.LASF136
 4698 0dda 01       		.byte	0x1
 4699 0ddb 49       		.byte	0x49
 4700 0ddc DB070000 		.4byte	0x7db
 4701 0de0 05       		.uleb128 0x5
 4702 0de1 03       		.byte	0x3
 4703 0de2 00000000 		.4byte	CapSense_CSD_fingerThreshold
 4704 0de6 1D       		.uleb128 0x1d
 4705 0de7 EF050000 		.4byte	.LASF137
 4706 0deb 01       		.byte	0x1
 4707 0dec 4B       		.byte	0x4b
 4708 0ded DB070000 		.4byte	0x7db
 4709 0df1 05       		.uleb128 0x5
 4710 0df2 03       		.byte	0x3
 4711 0df3 00000000 		.4byte	CapSense_CSD_noiseThreshold
 4712 0df7 1D       		.uleb128 0x1d
 4713 0df8 8D070000 		.4byte	.LASF138
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 134


 4714 0dfc 01       		.byte	0x1
 4715 0dfd 4D       		.byte	0x4d
 4716 0dfe DB070000 		.4byte	0x7db
 4717 0e02 05       		.uleb128 0x5
 4718 0e03 03       		.byte	0x3
 4719 0e04 00000000 		.4byte	CapSense_CSD_negativeNoiseThreshold
 4720 0e08 1D       		.uleb128 0x1d
 4721 0e09 26090000 		.4byte	.LASF139
 4722 0e0d 01       		.byte	0x1
 4723 0e0e 4F       		.byte	0x4f
 4724 0e0f DB070000 		.4byte	0x7db
 4725 0e13 05       		.uleb128 0x5
 4726 0e14 03       		.byte	0x3
 4727 0e15 00000000 		.4byte	CapSense_CSD_hysteresis
 4728 0e19 1D       		.uleb128 0x1d
 4729 0e1a 460A0000 		.4byte	.LASF140
 4730 0e1e 01       		.byte	0x1
 4731 0e1f 51       		.byte	0x51
 4732 0e20 DB070000 		.4byte	0x7db
 4733 0e24 05       		.uleb128 0x5
 4734 0e25 03       		.byte	0x3
 4735 0e26 00000000 		.4byte	CapSense_CSD_debounce
 4736 0e2a 1D       		.uleb128 0x1d
 4737 0e2b 65080000 		.4byte	.LASF141
 4738 0e2f 01       		.byte	0x1
 4739 0e30 55       		.byte	0x55
 4740 0e31 3B0E0000 		.4byte	0xe3b
 4741 0e35 05       		.uleb128 0x5
 4742 0e36 03       		.byte	0x3
 4743 0e37 00000000 		.4byte	CapSense_CSD_rawDataIndex
 4744 0e3b 08       		.uleb128 0x8
 4745 0e3c DB070000 		.4byte	0x7db
 4746 0e40 1D       		.uleb128 0x1d
 4747 0e41 00050000 		.4byte	.LASF142
 4748 0e45 01       		.byte	0x1
 4749 0e46 59       		.byte	0x59
 4750 0e47 510E0000 		.4byte	0xe51
 4751 0e4b 05       		.uleb128 0x5
 4752 0e4c 03       		.byte	0x3
 4753 0e4d 00000000 		.4byte	CapSense_CSD_numberOfSensors
 4754 0e51 08       		.uleb128 0x8
 4755 0e52 DB070000 		.4byte	0x7db
 4756 0e56 1D       		.uleb128 0x1d
 4757 0e57 0E080000 		.4byte	.LASF143
 4758 0e5b 01       		.byte	0x1
 4759 0e5c 27       		.byte	0x27
 4760 0e5d 190D0000 		.4byte	0xd19
 4761 0e61 05       		.uleb128 0x5
 4762 0e62 03       		.byte	0x3
 4763 0e63 00000000 		.4byte	CapSense_CSD_rawFilterData1
 4764 0e67 1C       		.uleb128 0x1c
 4765 0e68 94080000 		.4byte	.LASF144
 4766 0e6c 01       		.byte	0x1
 4767 0e6d 41       		.byte	0x41
 4768 0e6e BF020000 		.4byte	0x2bf
 4769 0e72 1D       		.uleb128 0x1d
 4770 0e73 3A020000 		.4byte	.LASF145
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 135


 4771 0e77 01       		.byte	0x1
 4772 0e78 45       		.byte	0x45
 4773 0e79 6B000000 		.4byte	0x6b
 4774 0e7d 05       		.uleb128 0x5
 4775 0e7e 03       		.byte	0x3
 4776 0e7f 00000000 		.4byte	CapSense_CSD_enableRawFilters
 4777 0e83 00       		.byte	0
 4778              		.section	.debug_abbrev,"",%progbits
 4779              	.Ldebug_abbrev0:
 4780 0000 01       		.uleb128 0x1
 4781 0001 11       		.uleb128 0x11
 4782 0002 01       		.byte	0x1
 4783 0003 25       		.uleb128 0x25
 4784 0004 0E       		.uleb128 0xe
 4785 0005 13       		.uleb128 0x13
 4786 0006 0B       		.uleb128 0xb
 4787 0007 03       		.uleb128 0x3
 4788 0008 0E       		.uleb128 0xe
 4789 0009 1B       		.uleb128 0x1b
 4790 000a 0E       		.uleb128 0xe
 4791 000b 55       		.uleb128 0x55
 4792 000c 17       		.uleb128 0x17
 4793 000d 11       		.uleb128 0x11
 4794 000e 01       		.uleb128 0x1
 4795 000f 10       		.uleb128 0x10
 4796 0010 17       		.uleb128 0x17
 4797 0011 00       		.byte	0
 4798 0012 00       		.byte	0
 4799 0013 02       		.uleb128 0x2
 4800 0014 24       		.uleb128 0x24
 4801 0015 00       		.byte	0
 4802 0016 0B       		.uleb128 0xb
 4803 0017 0B       		.uleb128 0xb
 4804 0018 3E       		.uleb128 0x3e
 4805 0019 0B       		.uleb128 0xb
 4806 001a 03       		.uleb128 0x3
 4807 001b 0E       		.uleb128 0xe
 4808 001c 00       		.byte	0
 4809 001d 00       		.byte	0
 4810 001e 03       		.uleb128 0x3
 4811 001f 24       		.uleb128 0x24
 4812 0020 00       		.byte	0
 4813 0021 0B       		.uleb128 0xb
 4814 0022 0B       		.uleb128 0xb
 4815 0023 3E       		.uleb128 0x3e
 4816 0024 0B       		.uleb128 0xb
 4817 0025 03       		.uleb128 0x3
 4818 0026 08       		.uleb128 0x8
 4819 0027 00       		.byte	0
 4820 0028 00       		.byte	0
 4821 0029 04       		.uleb128 0x4
 4822 002a 16       		.uleb128 0x16
 4823 002b 00       		.byte	0
 4824 002c 03       		.uleb128 0x3
 4825 002d 0E       		.uleb128 0xe
 4826 002e 3A       		.uleb128 0x3a
 4827 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 136


 4828 0030 3B       		.uleb128 0x3b
 4829 0031 05       		.uleb128 0x5
 4830 0032 49       		.uleb128 0x49
 4831 0033 13       		.uleb128 0x13
 4832 0034 00       		.byte	0
 4833 0035 00       		.byte	0
 4834 0036 05       		.uleb128 0x5
 4835 0037 13       		.uleb128 0x13
 4836 0038 01       		.byte	0x1
 4837 0039 0B       		.uleb128 0xb
 4838 003a 0B       		.uleb128 0xb
 4839 003b 3A       		.uleb128 0x3a
 4840 003c 0B       		.uleb128 0xb
 4841 003d 3B       		.uleb128 0x3b
 4842 003e 0B       		.uleb128 0xb
 4843 003f 01       		.uleb128 0x1
 4844 0040 13       		.uleb128 0x13
 4845 0041 00       		.byte	0
 4846 0042 00       		.byte	0
 4847 0043 06       		.uleb128 0x6
 4848 0044 0D       		.uleb128 0xd
 4849 0045 00       		.byte	0
 4850 0046 03       		.uleb128 0x3
 4851 0047 0E       		.uleb128 0xe
 4852 0048 3A       		.uleb128 0x3a
 4853 0049 0B       		.uleb128 0xb
 4854 004a 3B       		.uleb128 0x3b
 4855 004b 0B       		.uleb128 0xb
 4856 004c 49       		.uleb128 0x49
 4857 004d 13       		.uleb128 0x13
 4858 004e 38       		.uleb128 0x38
 4859 004f 0B       		.uleb128 0xb
 4860 0050 00       		.byte	0
 4861 0051 00       		.byte	0
 4862 0052 07       		.uleb128 0x7
 4863 0053 0F       		.uleb128 0xf
 4864 0054 00       		.byte	0
 4865 0055 0B       		.uleb128 0xb
 4866 0056 0B       		.uleb128 0xb
 4867 0057 49       		.uleb128 0x49
 4868 0058 13       		.uleb128 0x13
 4869 0059 00       		.byte	0
 4870 005a 00       		.byte	0
 4871 005b 08       		.uleb128 0x8
 4872 005c 26       		.uleb128 0x26
 4873 005d 00       		.byte	0
 4874 005e 49       		.uleb128 0x49
 4875 005f 13       		.uleb128 0x13
 4876 0060 00       		.byte	0
 4877 0061 00       		.byte	0
 4878 0062 09       		.uleb128 0x9
 4879 0063 15       		.uleb128 0x15
 4880 0064 01       		.byte	0x1
 4881 0065 27       		.uleb128 0x27
 4882 0066 19       		.uleb128 0x19
 4883 0067 49       		.uleb128 0x49
 4884 0068 13       		.uleb128 0x13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 137


 4885 0069 01       		.uleb128 0x1
 4886 006a 13       		.uleb128 0x13
 4887 006b 00       		.byte	0
 4888 006c 00       		.byte	0
 4889 006d 0A       		.uleb128 0xa
 4890 006e 05       		.uleb128 0x5
 4891 006f 00       		.byte	0
 4892 0070 49       		.uleb128 0x49
 4893 0071 13       		.uleb128 0x13
 4894 0072 00       		.byte	0
 4895 0073 00       		.byte	0
 4896 0074 0B       		.uleb128 0xb
 4897 0075 15       		.uleb128 0x15
 4898 0076 01       		.byte	0x1
 4899 0077 27       		.uleb128 0x27
 4900 0078 19       		.uleb128 0x19
 4901 0079 01       		.uleb128 0x1
 4902 007a 13       		.uleb128 0x13
 4903 007b 00       		.byte	0
 4904 007c 00       		.byte	0
 4905 007d 0C       		.uleb128 0xc
 4906 007e 16       		.uleb128 0x16
 4907 007f 00       		.byte	0
 4908 0080 03       		.uleb128 0x3
 4909 0081 0E       		.uleb128 0xe
 4910 0082 3A       		.uleb128 0x3a
 4911 0083 0B       		.uleb128 0xb
 4912 0084 3B       		.uleb128 0x3b
 4913 0085 0B       		.uleb128 0xb
 4914 0086 49       		.uleb128 0x49
 4915 0087 13       		.uleb128 0x13
 4916 0088 00       		.byte	0
 4917 0089 00       		.byte	0
 4918 008a 0D       		.uleb128 0xd
 4919 008b 2E       		.uleb128 0x2e
 4920 008c 01       		.byte	0x1
 4921 008d 3F       		.uleb128 0x3f
 4922 008e 19       		.uleb128 0x19
 4923 008f 03       		.uleb128 0x3
 4924 0090 0E       		.uleb128 0xe
 4925 0091 3A       		.uleb128 0x3a
 4926 0092 0B       		.uleb128 0xb
 4927 0093 3B       		.uleb128 0x3b
 4928 0094 0B       		.uleb128 0xb
 4929 0095 27       		.uleb128 0x27
 4930 0096 19       		.uleb128 0x19
 4931 0097 11       		.uleb128 0x11
 4932 0098 01       		.uleb128 0x1
 4933 0099 12       		.uleb128 0x12
 4934 009a 06       		.uleb128 0x6
 4935 009b 40       		.uleb128 0x40
 4936 009c 18       		.uleb128 0x18
 4937 009d 9742     		.uleb128 0x2117
 4938 009f 19       		.uleb128 0x19
 4939 00a0 01       		.uleb128 0x1
 4940 00a1 13       		.uleb128 0x13
 4941 00a2 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 138


 4942 00a3 00       		.byte	0
 4943 00a4 0E       		.uleb128 0xe
 4944 00a5 05       		.uleb128 0x5
 4945 00a6 00       		.byte	0
 4946 00a7 03       		.uleb128 0x3
 4947 00a8 0E       		.uleb128 0xe
 4948 00a9 3A       		.uleb128 0x3a
 4949 00aa 0B       		.uleb128 0xb
 4950 00ab 3B       		.uleb128 0x3b
 4951 00ac 0B       		.uleb128 0xb
 4952 00ad 49       		.uleb128 0x49
 4953 00ae 13       		.uleb128 0x13
 4954 00af 02       		.uleb128 0x2
 4955 00b0 18       		.uleb128 0x18
 4956 00b1 00       		.byte	0
 4957 00b2 00       		.byte	0
 4958 00b3 0F       		.uleb128 0xf
 4959 00b4 2E       		.uleb128 0x2e
 4960 00b5 01       		.byte	0x1
 4961 00b6 3F       		.uleb128 0x3f
 4962 00b7 19       		.uleb128 0x19
 4963 00b8 03       		.uleb128 0x3
 4964 00b9 0E       		.uleb128 0xe
 4965 00ba 3A       		.uleb128 0x3a
 4966 00bb 0B       		.uleb128 0xb
 4967 00bc 3B       		.uleb128 0x3b
 4968 00bd 0B       		.uleb128 0xb
 4969 00be 27       		.uleb128 0x27
 4970 00bf 19       		.uleb128 0x19
 4971 00c0 11       		.uleb128 0x11
 4972 00c1 01       		.uleb128 0x1
 4973 00c2 12       		.uleb128 0x12
 4974 00c3 06       		.uleb128 0x6
 4975 00c4 40       		.uleb128 0x40
 4976 00c5 18       		.uleb128 0x18
 4977 00c6 9642     		.uleb128 0x2116
 4978 00c8 19       		.uleb128 0x19
 4979 00c9 01       		.uleb128 0x1
 4980 00ca 13       		.uleb128 0x13
 4981 00cb 00       		.byte	0
 4982 00cc 00       		.byte	0
 4983 00cd 10       		.uleb128 0x10
 4984 00ce 34       		.uleb128 0x34
 4985 00cf 00       		.byte	0
 4986 00d0 03       		.uleb128 0x3
 4987 00d1 08       		.uleb128 0x8
 4988 00d2 3A       		.uleb128 0x3a
 4989 00d3 0B       		.uleb128 0xb
 4990 00d4 3B       		.uleb128 0x3b
 4991 00d5 05       		.uleb128 0x5
 4992 00d6 49       		.uleb128 0x49
 4993 00d7 13       		.uleb128 0x13
 4994 00d8 02       		.uleb128 0x2
 4995 00d9 18       		.uleb128 0x18
 4996 00da 00       		.byte	0
 4997 00db 00       		.byte	0
 4998 00dc 11       		.uleb128 0x11
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 139


 4999 00dd 2E       		.uleb128 0x2e
 5000 00de 01       		.byte	0x1
 5001 00df 3F       		.uleb128 0x3f
 5002 00e0 19       		.uleb128 0x19
 5003 00e1 03       		.uleb128 0x3
 5004 00e2 0E       		.uleb128 0xe
 5005 00e3 3A       		.uleb128 0x3a
 5006 00e4 0B       		.uleb128 0xb
 5007 00e5 3B       		.uleb128 0x3b
 5008 00e6 05       		.uleb128 0x5
 5009 00e7 27       		.uleb128 0x27
 5010 00e8 19       		.uleb128 0x19
 5011 00e9 11       		.uleb128 0x11
 5012 00ea 01       		.uleb128 0x1
 5013 00eb 12       		.uleb128 0x12
 5014 00ec 06       		.uleb128 0x6
 5015 00ed 40       		.uleb128 0x40
 5016 00ee 18       		.uleb128 0x18
 5017 00ef 9642     		.uleb128 0x2116
 5018 00f1 19       		.uleb128 0x19
 5019 00f2 01       		.uleb128 0x1
 5020 00f3 13       		.uleb128 0x13
 5021 00f4 00       		.byte	0
 5022 00f5 00       		.byte	0
 5023 00f6 12       		.uleb128 0x12
 5024 00f7 34       		.uleb128 0x34
 5025 00f8 00       		.byte	0
 5026 00f9 03       		.uleb128 0x3
 5027 00fa 0E       		.uleb128 0xe
 5028 00fb 3A       		.uleb128 0x3a
 5029 00fc 0B       		.uleb128 0xb
 5030 00fd 3B       		.uleb128 0x3b
 5031 00fe 05       		.uleb128 0x5
 5032 00ff 49       		.uleb128 0x49
 5033 0100 13       		.uleb128 0x13
 5034 0101 02       		.uleb128 0x2
 5035 0102 18       		.uleb128 0x18
 5036 0103 00       		.byte	0
 5037 0104 00       		.byte	0
 5038 0105 13       		.uleb128 0x13
 5039 0106 05       		.uleb128 0x5
 5040 0107 00       		.byte	0
 5041 0108 03       		.uleb128 0x3
 5042 0109 0E       		.uleb128 0xe
 5043 010a 3A       		.uleb128 0x3a
 5044 010b 0B       		.uleb128 0xb
 5045 010c 3B       		.uleb128 0x3b
 5046 010d 05       		.uleb128 0x5
 5047 010e 49       		.uleb128 0x49
 5048 010f 13       		.uleb128 0x13
 5049 0110 02       		.uleb128 0x2
 5050 0111 18       		.uleb128 0x18
 5051 0112 00       		.byte	0
 5052 0113 00       		.byte	0
 5053 0114 14       		.uleb128 0x14
 5054 0115 2E       		.uleb128 0x2e
 5055 0116 01       		.byte	0x1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 140


 5056 0117 3F       		.uleb128 0x3f
 5057 0118 19       		.uleb128 0x19
 5058 0119 03       		.uleb128 0x3
 5059 011a 0E       		.uleb128 0xe
 5060 011b 3A       		.uleb128 0x3a
 5061 011c 0B       		.uleb128 0xb
 5062 011d 3B       		.uleb128 0x3b
 5063 011e 05       		.uleb128 0x5
 5064 011f 27       		.uleb128 0x27
 5065 0120 19       		.uleb128 0x19
 5066 0121 49       		.uleb128 0x49
 5067 0122 13       		.uleb128 0x13
 5068 0123 11       		.uleb128 0x11
 5069 0124 01       		.uleb128 0x1
 5070 0125 12       		.uleb128 0x12
 5071 0126 06       		.uleb128 0x6
 5072 0127 40       		.uleb128 0x40
 5073 0128 18       		.uleb128 0x18
 5074 0129 9742     		.uleb128 0x2117
 5075 012b 19       		.uleb128 0x19
 5076 012c 01       		.uleb128 0x1
 5077 012d 13       		.uleb128 0x13
 5078 012e 00       		.byte	0
 5079 012f 00       		.byte	0
 5080 0130 15       		.uleb128 0x15
 5081 0131 2E       		.uleb128 0x2e
 5082 0132 01       		.byte	0x1
 5083 0133 3F       		.uleb128 0x3f
 5084 0134 19       		.uleb128 0x19
 5085 0135 03       		.uleb128 0x3
 5086 0136 0E       		.uleb128 0xe
 5087 0137 3A       		.uleb128 0x3a
 5088 0138 0B       		.uleb128 0xb
 5089 0139 3B       		.uleb128 0x3b
 5090 013a 05       		.uleb128 0x5
 5091 013b 27       		.uleb128 0x27
 5092 013c 19       		.uleb128 0x19
 5093 013d 11       		.uleb128 0x11
 5094 013e 01       		.uleb128 0x1
 5095 013f 12       		.uleb128 0x12
 5096 0140 06       		.uleb128 0x6
 5097 0141 40       		.uleb128 0x40
 5098 0142 18       		.uleb128 0x18
 5099 0143 9742     		.uleb128 0x2117
 5100 0145 19       		.uleb128 0x19
 5101 0146 01       		.uleb128 0x1
 5102 0147 13       		.uleb128 0x13
 5103 0148 00       		.byte	0
 5104 0149 00       		.byte	0
 5105 014a 16       		.uleb128 0x16
 5106 014b 2E       		.uleb128 0x2e
 5107 014c 01       		.byte	0x1
 5108 014d 3F       		.uleb128 0x3f
 5109 014e 19       		.uleb128 0x19
 5110 014f 03       		.uleb128 0x3
 5111 0150 0E       		.uleb128 0xe
 5112 0151 3A       		.uleb128 0x3a
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 141


 5113 0152 0B       		.uleb128 0xb
 5114 0153 3B       		.uleb128 0x3b
 5115 0154 05       		.uleb128 0x5
 5116 0155 27       		.uleb128 0x27
 5117 0156 19       		.uleb128 0x19
 5118 0157 49       		.uleb128 0x49
 5119 0158 13       		.uleb128 0x13
 5120 0159 11       		.uleb128 0x11
 5121 015a 01       		.uleb128 0x1
 5122 015b 12       		.uleb128 0x12
 5123 015c 06       		.uleb128 0x6
 5124 015d 40       		.uleb128 0x40
 5125 015e 18       		.uleb128 0x18
 5126 015f 9642     		.uleb128 0x2116
 5127 0161 19       		.uleb128 0x19
 5128 0162 01       		.uleb128 0x1
 5129 0163 13       		.uleb128 0x13
 5130 0164 00       		.byte	0
 5131 0165 00       		.byte	0
 5132 0166 17       		.uleb128 0x17
 5133 0167 01       		.uleb128 0x1
 5134 0168 01       		.byte	0x1
 5135 0169 49       		.uleb128 0x49
 5136 016a 13       		.uleb128 0x13
 5137 016b 01       		.uleb128 0x1
 5138 016c 13       		.uleb128 0x13
 5139 016d 00       		.byte	0
 5140 016e 00       		.byte	0
 5141 016f 18       		.uleb128 0x18
 5142 0170 21       		.uleb128 0x21
 5143 0171 00       		.byte	0
 5144 0172 49       		.uleb128 0x49
 5145 0173 13       		.uleb128 0x13
 5146 0174 2F       		.uleb128 0x2f
 5147 0175 0B       		.uleb128 0xb
 5148 0176 00       		.byte	0
 5149 0177 00       		.byte	0
 5150 0178 19       		.uleb128 0x19
 5151 0179 05       		.uleb128 0x5
 5152 017a 00       		.byte	0
 5153 017b 03       		.uleb128 0x3
 5154 017c 08       		.uleb128 0x8
 5155 017d 3A       		.uleb128 0x3a
 5156 017e 0B       		.uleb128 0xb
 5157 017f 3B       		.uleb128 0x3b
 5158 0180 05       		.uleb128 0x5
 5159 0181 49       		.uleb128 0x49
 5160 0182 13       		.uleb128 0x13
 5161 0183 02       		.uleb128 0x2
 5162 0184 18       		.uleb128 0x18
 5163 0185 00       		.byte	0
 5164 0186 00       		.byte	0
 5165 0187 1A       		.uleb128 0x1a
 5166 0188 2E       		.uleb128 0x2e
 5167 0189 00       		.byte	0
 5168 018a 3F       		.uleb128 0x3f
 5169 018b 19       		.uleb128 0x19
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 142


 5170 018c 03       		.uleb128 0x3
 5171 018d 0E       		.uleb128 0xe
 5172 018e 3A       		.uleb128 0x3a
 5173 018f 0B       		.uleb128 0xb
 5174 0190 3B       		.uleb128 0x3b
 5175 0191 05       		.uleb128 0x5
 5176 0192 27       		.uleb128 0x27
 5177 0193 19       		.uleb128 0x19
 5178 0194 11       		.uleb128 0x11
 5179 0195 01       		.uleb128 0x1
 5180 0196 12       		.uleb128 0x12
 5181 0197 06       		.uleb128 0x6
 5182 0198 40       		.uleb128 0x40
 5183 0199 18       		.uleb128 0x18
 5184 019a 9742     		.uleb128 0x2117
 5185 019c 19       		.uleb128 0x19
 5186 019d 00       		.byte	0
 5187 019e 00       		.byte	0
 5188 019f 1B       		.uleb128 0x1b
 5189 01a0 34       		.uleb128 0x34
 5190 01a1 00       		.byte	0
 5191 01a2 03       		.uleb128 0x3
 5192 01a3 0E       		.uleb128 0xe
 5193 01a4 3A       		.uleb128 0x3a
 5194 01a5 0B       		.uleb128 0xb
 5195 01a6 3B       		.uleb128 0x3b
 5196 01a7 0B       		.uleb128 0xb
 5197 01a8 49       		.uleb128 0x49
 5198 01a9 13       		.uleb128 0x13
 5199 01aa 02       		.uleb128 0x2
 5200 01ab 18       		.uleb128 0x18
 5201 01ac 00       		.byte	0
 5202 01ad 00       		.byte	0
 5203 01ae 1C       		.uleb128 0x1c
 5204 01af 34       		.uleb128 0x34
 5205 01b0 00       		.byte	0
 5206 01b1 03       		.uleb128 0x3
 5207 01b2 0E       		.uleb128 0xe
 5208 01b3 3A       		.uleb128 0x3a
 5209 01b4 0B       		.uleb128 0xb
 5210 01b5 3B       		.uleb128 0x3b
 5211 01b6 0B       		.uleb128 0xb
 5212 01b7 49       		.uleb128 0x49
 5213 01b8 13       		.uleb128 0x13
 5214 01b9 3F       		.uleb128 0x3f
 5215 01ba 19       		.uleb128 0x19
 5216 01bb 3C       		.uleb128 0x3c
 5217 01bc 19       		.uleb128 0x19
 5218 01bd 00       		.byte	0
 5219 01be 00       		.byte	0
 5220 01bf 1D       		.uleb128 0x1d
 5221 01c0 34       		.uleb128 0x34
 5222 01c1 00       		.byte	0
 5223 01c2 03       		.uleb128 0x3
 5224 01c3 0E       		.uleb128 0xe
 5225 01c4 3A       		.uleb128 0x3a
 5226 01c5 0B       		.uleb128 0xb
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 143


 5227 01c6 3B       		.uleb128 0x3b
 5228 01c7 0B       		.uleb128 0xb
 5229 01c8 49       		.uleb128 0x49
 5230 01c9 13       		.uleb128 0x13
 5231 01ca 3F       		.uleb128 0x3f
 5232 01cb 19       		.uleb128 0x19
 5233 01cc 02       		.uleb128 0x2
 5234 01cd 18       		.uleb128 0x18
 5235 01ce 00       		.byte	0
 5236 01cf 00       		.byte	0
 5237 01d0 00       		.byte	0
 5238              		.section	.debug_aranges,"",%progbits
 5239 0000 4C010000 		.4byte	0x14c
 5240 0004 0200     		.2byte	0x2
 5241 0006 00000000 		.4byte	.Ldebug_info0
 5242 000a 04       		.byte	0x4
 5243 000b 00       		.byte	0
 5244 000c 0000     		.2byte	0
 5245 000e 0000     		.2byte	0
 5246 0010 00000000 		.4byte	.LFB34
 5247 0014 58000000 		.4byte	.LFE34-.LFB34
 5248 0018 00000000 		.4byte	.LFB35
 5249 001c 28000000 		.4byte	.LFE35-.LFB35
 5250 0020 00000000 		.4byte	.LFB36
 5251 0024 26000000 		.4byte	.LFE36-.LFB36
 5252 0028 00000000 		.4byte	.LFB37
 5253 002c 50000000 		.4byte	.LFE37-.LFB37
 5254 0030 00000000 		.4byte	.LFB38
 5255 0034 38020000 		.4byte	.LFE38-.LFB38
 5256 0038 00000000 		.4byte	.LFB39
 5257 003c 1E000000 		.4byte	.LFE39-.LFB39
 5258 0040 00000000 		.4byte	.LFB40
 5259 0044 40000000 		.4byte	.LFE40-.LFB40
 5260 0048 00000000 		.4byte	.LFB41
 5261 004c 58000000 		.4byte	.LFE41-.LFB41
 5262 0050 00000000 		.4byte	.LFB42
 5263 0054 1C000000 		.4byte	.LFE42-.LFB42
 5264 0058 00000000 		.4byte	.LFB43
 5265 005c 24000000 		.4byte	.LFE43-.LFB43
 5266 0060 00000000 		.4byte	.LFB44
 5267 0064 1C000000 		.4byte	.LFE44-.LFB44
 5268 0068 00000000 		.4byte	.LFB45
 5269 006c 24000000 		.4byte	.LFE45-.LFB45
 5270 0070 00000000 		.4byte	.LFB46
 5271 0074 1C000000 		.4byte	.LFE46-.LFB46
 5272 0078 00000000 		.4byte	.LFB47
 5273 007c 1C000000 		.4byte	.LFE47-.LFB47
 5274 0080 00000000 		.4byte	.LFB48
 5275 0084 1C000000 		.4byte	.LFE48-.LFB48
 5276 0088 00000000 		.4byte	.LFB49
 5277 008c 1C000000 		.4byte	.LFE49-.LFB49
 5278 0090 00000000 		.4byte	.LFB50
 5279 0094 24000000 		.4byte	.LFE50-.LFB50
 5280 0098 00000000 		.4byte	.LFB51
 5281 009c 24000000 		.4byte	.LFE51-.LFB51
 5282 00a0 00000000 		.4byte	.LFB52
 5283 00a4 24000000 		.4byte	.LFE52-.LFB52
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 144


 5284 00a8 00000000 		.4byte	.LFB53
 5285 00ac 24000000 		.4byte	.LFE53-.LFB53
 5286 00b0 00000000 		.4byte	.LFB54
 5287 00b4 24000000 		.4byte	.LFE54-.LFB54
 5288 00b8 00000000 		.4byte	.LFB55
 5289 00bc 24000000 		.4byte	.LFE55-.LFB55
 5290 00c0 00000000 		.4byte	.LFB56
 5291 00c4 3C010000 		.4byte	.LFE56-.LFB56
 5292 00c8 00000000 		.4byte	.LFB57
 5293 00cc 42000000 		.4byte	.LFE57-.LFB57
 5294 00d0 00000000 		.4byte	.LFB58
 5295 00d4 36000000 		.4byte	.LFE58-.LFB58
 5296 00d8 00000000 		.4byte	.LFB59
 5297 00dc 5C000000 		.4byte	.LFE59-.LFB59
 5298 00e0 00000000 		.4byte	.LFB60
 5299 00e4 5C000000 		.4byte	.LFE60-.LFB60
 5300 00e8 00000000 		.4byte	.LFB61
 5301 00ec B8000000 		.4byte	.LFE61-.LFB61
 5302 00f0 00000000 		.4byte	.LFB62
 5303 00f4 A0010000 		.4byte	.LFE62-.LFB62
 5304 00f8 00000000 		.4byte	.LFB63
 5305 00fc 60010000 		.4byte	.LFE63-.LFB63
 5306 0100 00000000 		.4byte	.LFB64
 5307 0104 9C000000 		.4byte	.LFE64-.LFB64
 5308 0108 00000000 		.4byte	.LFB65
 5309 010c 76000000 		.4byte	.LFE65-.LFB65
 5310 0110 00000000 		.4byte	.LFB66
 5311 0114 3C000000 		.4byte	.LFE66-.LFB66
 5312 0118 00000000 		.4byte	.LFB67
 5313 011c 4C000000 		.4byte	.LFE67-.LFB67
 5314 0120 00000000 		.4byte	.LFB68
 5315 0124 1C000000 		.4byte	.LFE68-.LFB68
 5316 0128 00000000 		.4byte	.LFB69
 5317 012c 1C000000 		.4byte	.LFE69-.LFB69
 5318 0130 00000000 		.4byte	.LFB70
 5319 0134 1C000000 		.4byte	.LFE70-.LFB70
 5320 0138 00000000 		.4byte	.LFB71
 5321 013c 14000000 		.4byte	.LFE71-.LFB71
 5322 0140 00000000 		.4byte	.LFB72
 5323 0144 14000000 		.4byte	.LFE72-.LFB72
 5324 0148 00000000 		.4byte	0
 5325 014c 00000000 		.4byte	0
 5326              		.section	.debug_ranges,"",%progbits
 5327              	.Ldebug_ranges0:
 5328 0000 00000000 		.4byte	.LFB34
 5329 0004 58000000 		.4byte	.LFE34
 5330 0008 00000000 		.4byte	.LFB35
 5331 000c 28000000 		.4byte	.LFE35
 5332 0010 00000000 		.4byte	.LFB36
 5333 0014 26000000 		.4byte	.LFE36
 5334 0018 00000000 		.4byte	.LFB37
 5335 001c 50000000 		.4byte	.LFE37
 5336 0020 00000000 		.4byte	.LFB38
 5337 0024 38020000 		.4byte	.LFE38
 5338 0028 00000000 		.4byte	.LFB39
 5339 002c 1E000000 		.4byte	.LFE39
 5340 0030 00000000 		.4byte	.LFB40
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 145


 5341 0034 40000000 		.4byte	.LFE40
 5342 0038 00000000 		.4byte	.LFB41
 5343 003c 58000000 		.4byte	.LFE41
 5344 0040 00000000 		.4byte	.LFB42
 5345 0044 1C000000 		.4byte	.LFE42
 5346 0048 00000000 		.4byte	.LFB43
 5347 004c 24000000 		.4byte	.LFE43
 5348 0050 00000000 		.4byte	.LFB44
 5349 0054 1C000000 		.4byte	.LFE44
 5350 0058 00000000 		.4byte	.LFB45
 5351 005c 24000000 		.4byte	.LFE45
 5352 0060 00000000 		.4byte	.LFB46
 5353 0064 1C000000 		.4byte	.LFE46
 5354 0068 00000000 		.4byte	.LFB47
 5355 006c 1C000000 		.4byte	.LFE47
 5356 0070 00000000 		.4byte	.LFB48
 5357 0074 1C000000 		.4byte	.LFE48
 5358 0078 00000000 		.4byte	.LFB49
 5359 007c 1C000000 		.4byte	.LFE49
 5360 0080 00000000 		.4byte	.LFB50
 5361 0084 24000000 		.4byte	.LFE50
 5362 0088 00000000 		.4byte	.LFB51
 5363 008c 24000000 		.4byte	.LFE51
 5364 0090 00000000 		.4byte	.LFB52
 5365 0094 24000000 		.4byte	.LFE52
 5366 0098 00000000 		.4byte	.LFB53
 5367 009c 24000000 		.4byte	.LFE53
 5368 00a0 00000000 		.4byte	.LFB54
 5369 00a4 24000000 		.4byte	.LFE54
 5370 00a8 00000000 		.4byte	.LFB55
 5371 00ac 24000000 		.4byte	.LFE55
 5372 00b0 00000000 		.4byte	.LFB56
 5373 00b4 3C010000 		.4byte	.LFE56
 5374 00b8 00000000 		.4byte	.LFB57
 5375 00bc 42000000 		.4byte	.LFE57
 5376 00c0 00000000 		.4byte	.LFB58
 5377 00c4 36000000 		.4byte	.LFE58
 5378 00c8 00000000 		.4byte	.LFB59
 5379 00cc 5C000000 		.4byte	.LFE59
 5380 00d0 00000000 		.4byte	.LFB60
 5381 00d4 5C000000 		.4byte	.LFE60
 5382 00d8 00000000 		.4byte	.LFB61
 5383 00dc B8000000 		.4byte	.LFE61
 5384 00e0 00000000 		.4byte	.LFB62
 5385 00e4 A0010000 		.4byte	.LFE62
 5386 00e8 00000000 		.4byte	.LFB63
 5387 00ec 60010000 		.4byte	.LFE63
 5388 00f0 00000000 		.4byte	.LFB64
 5389 00f4 9C000000 		.4byte	.LFE64
 5390 00f8 00000000 		.4byte	.LFB65
 5391 00fc 76000000 		.4byte	.LFE65
 5392 0100 00000000 		.4byte	.LFB66
 5393 0104 3C000000 		.4byte	.LFE66
 5394 0108 00000000 		.4byte	.LFB67
 5395 010c 4C000000 		.4byte	.LFE67
 5396 0110 00000000 		.4byte	.LFB68
 5397 0114 1C000000 		.4byte	.LFE68
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 146


 5398 0118 00000000 		.4byte	.LFB69
 5399 011c 1C000000 		.4byte	.LFE69
 5400 0120 00000000 		.4byte	.LFB70
 5401 0124 1C000000 		.4byte	.LFE70
 5402 0128 00000000 		.4byte	.LFB71
 5403 012c 14000000 		.4byte	.LFE71
 5404 0130 00000000 		.4byte	.LFB72
 5405 0134 14000000 		.4byte	.LFE72
 5406 0138 00000000 		.4byte	0
 5407 013c 00000000 		.4byte	0
 5408              		.section	.debug_line,"",%progbits
 5409              	.Ldebug_line0:
 5410 0000 BB040000 		.section	.debug_str,"MS",%progbits,1
 5410      02006600 
 5410      00000201 
 5410      FB0E0D00 
 5410      01010101 
 5411              	.LASF32:
 5412 0000 7363616E 		.ascii	"scanSpeedTbl\000"
 5412      53706565 
 5412      6454626C 
 5412      00
 5413              	.LASF35:
 5414 000d 6E756D62 		.ascii	"numberOfSensors\000"
 5414      65724F66 
 5414      53656E73 
 5414      6F727300 
 5415              	.LASF39:
 5416 001d 70747247 		.ascii	"ptrGetBitValue\000"
 5416      65744269 
 5416      7456616C 
 5416      756500
 5417              	.LASF49:
 5418 002c 43617053 		.ascii	"CapSense_CSD_BaseInit\000"
 5418      656E7365 
 5418      5F435344 
 5418      5F426173 
 5418      65496E69 
 5419              	.LASF135:
 5420 0042 43617053 		.ascii	"CapSense_CSD_lowBaselineReset\000"
 5420      656E7365 
 5420      5F435344 
 5420      5F6C6F77 
 5420      42617365 
 5421              	.LASF112:
 5422 0060 706F7349 		.ascii	"posIndex\000"
 5422      6E646578 
 5422      00
 5423              	.LASF54:
 5424 0069 69735365 		.ascii	"isSensorEnabled\000"
 5424      6E736F72 
 5424      456E6162 
 5424      6C656400 
 5425              	.LASF92:
 5426 0079 6E756D4F 		.ascii	"numOfSensors\000"
 5426      6653656E 
 5426      736F7273 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 147


 5426      00
 5427              	.LASF8:
 5428 0086 756E7369 		.ascii	"unsigned int\000"
 5428      676E6564 
 5428      20696E74 
 5428      00
 5429              	.LASF44:
 5430 0093 746F7461 		.ascii	"totalSensorsNum\000"
 5430      6C53656E 
 5430      736F7273 
 5430      4E756D00 
 5431              	.LASF106:
 5432 00a3 706F734E 		.ascii	"posNext\000"
 5432      65787400 
 5433              	.LASF148:
 5434 00ab 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\Daten\\Prog"
 5434      73657273 
 5434      5C4C756B 
 5434      61732043 
 5434      72657574 
 5435 00d9 72616D6D 		.ascii	"rammierprojekte\\GitHub\\freeDSPPSoC-I2C\\CapSense."
 5435      69657270 
 5435      726F6A65 
 5435      6B74655C 
 5435      47697448 
 5436 0109 63796473 		.ascii	"cydsn\000"
 5436      6E00
 5437              	.LASF53:
 5438 010f 43617053 		.ascii	"CapSense_CSD_InitializeEnabledBaselines\000"
 5438      656E7365 
 5438      5F435344 
 5438      5F496E69 
 5438      7469616C 
 5439              	.LASF68:
 5440 0137 43617053 		.ascii	"CapSense_CSD_SetBaselineData\000"
 5440      656E7365 
 5440      5F435344 
 5440      5F536574 
 5440      42617365 
 5441              	.LASF12:
 5442 0154 696E7431 		.ascii	"int16\000"
 5442      3600
 5443              	.LASF29:
 5444 015a 73616D70 		.ascii	"sampleMaxTbl\000"
 5444      6C654D61 
 5444      7854626C 
 5444      00
 5445              	.LASF147:
 5446 0167 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\CapSense_CSD_CSHL.c\000"
 5446      6E657261 
 5446      7465645F 
 5446      536F7572 
 5446      63655C50 
 5447              	.LASF27:
 5448 0194 7369676E 		.ascii	"signRegisterTbl\000"
 5448      52656769 
 5448      73746572 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 148


 5448      54626C00 
 5449              	.LASF105:
 5450 01a4 706F7350 		.ascii	"posPrev\000"
 5450      72657600 
 5451              	.LASF127:
 5452 01ac 43617053 		.ascii	"CapSense_CSD_sensorRaw\000"
 5452      656E7365 
 5452      5F435344 
 5452      5F73656E 
 5452      736F7252 
 5453              	.LASF34:
 5454 01c3 72617744 		.ascii	"rawDataIndex\000"
 5454      61746149 
 5454      6E646578 
 5454      00
 5455              	.LASF43:
 5456 01d0 746F7461 		.ascii	"totalWidgetsNum\000"
 5456      6C576964 
 5456      67657473 
 5456      4E756D00 
 5457              	.LASF90:
 5458 01e0 43617053 		.ascii	"CapSense_CSD_CheckIsWidgetActive\000"
 5458      656E7365 
 5458      5F435344 
 5458      5F436865 
 5458      636B4973 
 5459              	.LASF78:
 5460 0201 43617053 		.ascii	"CapSense_CSD_SetFingerThreshold\000"
 5460      656E7365 
 5460      5F435344 
 5460      5F536574 
 5460      46696E67 
 5461              	.LASF121:
 5462 0221 43617053 		.ascii	"CapSense_CSD_GetDebounce\000"
 5462      656E7365 
 5462      5F435344 
 5462      5F476574 
 5462      4465626F 
 5463              	.LASF145:
 5464 023a 43617053 		.ascii	"CapSense_CSD_enableRawFilters\000"
 5464      656E7365 
 5464      5F435344 
 5464      5F656E61 
 5464      626C6552 
 5465              	.LASF136:
 5466 0258 43617053 		.ascii	"CapSense_CSD_fingerThreshold\000"
 5466      656E7365 
 5466      5F435344 
 5466      5F66696E 
 5466      67657254 
 5467              	.LASF89:
 5468 0275 43617053 		.ascii	"CapSense_CSD_debounceCounter\000"
 5468      656E7365 
 5468      5F435344 
 5468      5F646562 
 5468      6F756E63 
 5469              	.LASF75:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 149


 5470 0292 43617053 		.ascii	"CapSense_CSD_GetNoiseThreshold\000"
 5470      656E7365 
 5470      5F435344 
 5470      5F476574 
 5470      4E6F6973 
 5471              	.LASF48:
 5472 02b1 43617053 		.ascii	"CapSense_CSD_CONFIG_TYPE_P4_v2_40\000"
 5472      656E7365 
 5472      5F435344 
 5472      5F434F4E 
 5472      4649475F 
 5473              	.LASF14:
 5474 02d3 666C6F61 		.ascii	"float\000"
 5474      7400
 5475              	.LASF13:
 5476 02d9 696E7433 		.ascii	"int32\000"
 5476      3200
 5477              	.LASF99:
 5478 02df 636F756E 		.ascii	"count\000"
 5478      7400
 5479              	.LASF24:
 5480 02e5 7265736F 		.ascii	"resolutionsTbl\000"
 5480      6C757469 
 5480      6F6E7354 
 5480      626C00
 5481              	.LASF114:
 5482 02f4 706F7346 		.ascii	"posFiltersMask\000"
 5482      696C7465 
 5482      72734D61 
 5482      736B00
 5483              	.LASF26:
 5484 0303 72756E6E 		.ascii	"runningDifferenceTbl\000"
 5484      696E6744 
 5484      69666665 
 5484      72656E63 
 5484      6554626C 
 5485              	.LASF134:
 5486 0318 43617053 		.ascii	"CapSense_CSD_lowBaselineResetCnt\000"
 5486      656E7365 
 5486      5F435344 
 5486      5F6C6F77 
 5486      42617365 
 5487              	.LASF7:
 5488 0339 6C6F6E67 		.ascii	"long long unsigned int\000"
 5488      206C6F6E 
 5488      6720756E 
 5488      7369676E 
 5488      65642069 
 5489              	.LASF60:
 5490 0350 77696467 		.ascii	"widget\000"
 5490      657400
 5491              	.LASF79:
 5492 0357 43617053 		.ascii	"CapSense_CSD_SetNoiseThreshold\000"
 5492      656E7365 
 5492      5F435344 
 5492      5F536574 
 5492      4E6F6973 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 150


 5493              	.LASF64:
 5494 0376 43617053 		.ascii	"CapSense_CSD_UpdateWidgetBaseline\000"
 5494      656E7365 
 5494      5F435344 
 5494      5F557064 
 5494      61746557 
 5495              	.LASF73:
 5496 0398 76616C75 		.ascii	"value\000"
 5496      6500
 5497              	.LASF81:
 5498 039e 43617053 		.ascii	"CapSense_CSD_SetNegativeNoiseThreshold\000"
 5498      656E7365 
 5498      5F435344 
 5498      5F536574 
 5498      4E656761 
 5499              	.LASF55:
 5500 03c5 43617053 		.ascii	"CapSense_CSD_UpdateBaselineNoThreshold\000"
 5500      656E7365 
 5500      5F435344 
 5500      5F557064 
 5500      61746542 
 5501              	.LASF124:
 5502 03ec 43617053 		.ascii	"CapSense_CSD_centroidMult\000"
 5502      656E7365 
 5502      5F435344 
 5502      5F63656E 
 5502      74726F69 
 5503              	.LASF130:
 5504 0406 43617053 		.ascii	"CapSense_CSD_sensorBaseline\000"
 5504      656E7365 
 5504      5F435344 
 5504      5F73656E 
 5504      736F7242 
 5505              	.LASF57:
 5506 0422 7369676E 		.ascii	"sign\000"
 5506      00
 5507              	.LASF98:
 5508 0427 6F666673 		.ascii	"offset\000"
 5508      657400
 5509              	.LASF25:
 5510 042e 6E6F6973 		.ascii	"noiseEnvelopeTbl\000"
 5510      65456E76 
 5510      656C6F70 
 5510      6554626C 
 5510      00
 5511              	.LASF56:
 5512 043f 63616C63 		.ascii	"calc\000"
 5512      00
 5513              	.LASF38:
 5514 0444 70747252 		.ascii	"ptrReadSensorRaw\000"
 5514      65616453 
 5514      656E736F 
 5514      72526177 
 5514      00
 5515              	.LASF88:
 5516 0455 68797374 		.ascii	"hysteresis\000"
 5516      65726573 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 151


 5516      697300
 5517              	.LASF82:
 5518 0460 43617053 		.ascii	"CapSense_CSD_SetDebounce\000"
 5518      656E7365 
 5518      5F435344 
 5518      5F536574 
 5518      4465626F 
 5519              	.LASF59:
 5520 0479 66696C74 		.ascii	"filteredRawData\000"
 5520      65726564 
 5520      52617744 
 5520      61746100 
 5521              	.LASF65:
 5522 0489 73656E73 		.ascii	"sensorsPerWidget\000"
 5522      6F727350 
 5522      65725769 
 5522      64676574 
 5522      00
 5523              	.LASF118:
 5524 049a 43617053 		.ascii	"CapSense_CSD_JitterFilter\000"
 5524      656E7365 
 5524      5F435344 
 5524      5F4A6974 
 5524      74657246 
 5525              	.LASF42:
 5526 04b4 746F7461 		.ascii	"totalScanslotsNum\000"
 5526      6C536361 
 5526      6E736C6F 
 5526      74734E75 
 5526      6D00
 5527              	.LASF123:
 5528 04c6 43617053 		.ascii	"CapSense_CSD_DisableRawDataFilters\000"
 5528      656E7365 
 5528      5F435344 
 5528      5F446973 
 5528      61626C65 
 5529              	.LASF51:
 5530 04e9 73656E73 		.ascii	"sensor\000"
 5530      6F7200
 5531              	.LASF45:
 5532 04f0 73656E73 		.ascii	"sensetivitySeed\000"
 5532      65746976 
 5532      69747953 
 5532      65656400 
 5533              	.LASF142:
 5534 0500 43617053 		.ascii	"CapSense_CSD_numberOfSensors\000"
 5534      656E7365 
 5534      5F435344 
 5534      5F6E756D 
 5534      6265724F 
 5535              	.LASF16:
 5536 051d 63686172 		.ascii	"char\000"
 5536      00
 5537              	.LASF96:
 5538 0522 43617053 		.ascii	"CapSense_CSD_DisableWidget\000"
 5538      656E7365 
 5538      5F435344 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 152


 5538      5F446973 
 5538      61626C65 
 5539              	.LASF33:
 5540 053d 70726573 		.ascii	"prescalerTable\000"
 5540      63616C65 
 5540      72546162 
 5540      6C6500
 5541              	.LASF41:
 5542 054c 43617053 		.ascii	"CapSense_CSD_CONFIG_TYPE_POINTERS_P4_v2_40\000"
 5542      656E7365 
 5542      5F435344 
 5542      5F434F4E 
 5542      4649475F 
 5543              	.LASF10:
 5544 0577 75696E74 		.ascii	"uint16\000"
 5544      313600
 5545              	.LASF69:
 5546 057e 64617461 		.ascii	"data\000"
 5546      00
 5547              	.LASF18:
 5548 0583 69646163 		.ascii	"idac1LevelsTbl\000"
 5548      314C6576 
 5548      656C7354 
 5548      626C00
 5549              	.LASF77:
 5550 0592 43617053 		.ascii	"CapSense_CSD_GetNegativeNoiseThreshold\000"
 5550      656E7365 
 5550      5F435344 
 5550      5F476574 
 5550      4E656761 
 5551              	.LASF104:
 5552 05b9 7265736F 		.ascii	"resolution\000"
 5552      6C757469 
 5552      6F6E00
 5553              	.LASF91:
 5554 05c4 72617749 		.ascii	"rawIndex\000"
 5554      6E646578 
 5554      00
 5555              	.LASF100:
 5556 05cd 6D617869 		.ascii	"maximum\000"
 5556      6D756D00 
 5557              	.LASF116:
 5558 05d5 43617053 		.ascii	"CapSense_CSD_MedianFilter\000"
 5558      656E7365 
 5558      5F435344 
 5558      5F4D6564 
 5558      69616E46 
 5559              	.LASF137:
 5560 05ef 43617053 		.ascii	"CapSense_CSD_noiseThreshold\000"
 5560      656E7365 
 5560      5F435344 
 5560      5F6E6F69 
 5560      73655468 
 5561              	.LASF6:
 5562 060b 6C6F6E67 		.ascii	"long long int\000"
 5562      206C6F6E 
 5562      6720696E 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 153


 5562      7400
 5563              	.LASF74:
 5564 0619 43617053 		.ascii	"CapSense_CSD_GetFingerThreshold\000"
 5564      656E7365 
 5564      5F435344 
 5564      5F476574 
 5564      46696E67 
 5565              	.LASF85:
 5566 0639 6465626F 		.ascii	"debounce\000"
 5566      756E6365 
 5566      00
 5567              	.LASF117:
 5568 0642 43617053 		.ascii	"CapSense_CSD_IIR4Filter\000"
 5568      656E7365 
 5568      5F435344 
 5568      5F494952 
 5568      3446696C 
 5569              	.LASF37:
 5570 065a 70747250 		.ascii	"ptrPreScan\000"
 5570      72655363 
 5570      616E00
 5571              	.LASF76:
 5572 0665 43617053 		.ascii	"CapSense_CSD_GetFingerHysteresis\000"
 5572      656E7365 
 5572      5F435344 
 5572      5F476574 
 5572      46696E67 
 5573              	.LASF36:
 5574 0686 70747247 		.ascii	"ptrGetRaw\000"
 5574      65745261 
 5574      7700
 5575              	.LASF119:
 5576 0690 43617053 		.ascii	"CapSense_CSD_GetWidgetNumber\000"
 5576      656E7365 
 5576      5F435344 
 5576      5F476574 
 5576      57696467 
 5577              	.LASF146:
 5578 06ad 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5578      4320342E 
 5578      392E3320 
 5578      32303135 
 5578      30333033 
 5579 06e0 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5579      20726576 
 5579      6973696F 
 5579      6E203232 
 5579      31323230 
 5580 0713 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 5580      66756E63 
 5580      74696F6E 
 5580      2D736563 
 5580      74696F6E 
 5581              	.LASF63:
 5582 073b 43617053 		.ascii	"CapSense_CSD_UpdateEnabledBaselines\000"
 5582      656E7365 
 5582      5F435344 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 154


 5582      5F557064 
 5582      61746545 
 5583              	.LASF133:
 5584 075f 43617053 		.ascii	"CapSense_CSD_sensorOnMask\000"
 5584      656E7365 
 5584      5F435344 
 5584      5F73656E 
 5584      736F724F 
 5585              	.LASF28:
 5586 0779 73616D70 		.ascii	"sampleMinTbl\000"
 5586      6C654D69 
 5586      6E54626C 
 5586      00
 5587              	.LASF11:
 5588 0786 75696E74 		.ascii	"uint32\000"
 5588      333200
 5589              	.LASF138:
 5590 078d 43617053 		.ascii	"CapSense_CSD_negativeNoiseThreshold\000"
 5590      656E7365 
 5590      5F435344 
 5590      5F6E6567 
 5590      61746976 
 5591              	.LASF113:
 5592 07b1 66697273 		.ascii	"firstTimeIndex\000"
 5592      7454696D 
 5592      65496E64 
 5592      657800
 5593              	.LASF102:
 5594 07c0 73746172 		.ascii	"startOfSlider\000"
 5594      744F6653 
 5594      6C696465 
 5594      7200
 5595              	.LASF72:
 5596 07ce 43617053 		.ascii	"CapSense_CSD_SetDiffCountData\000"
 5596      656E7365 
 5596      5F435344 
 5596      5F536574 
 5596      44696666 
 5597              	.LASF62:
 5598 07ec 43617053 		.ascii	"CapSense_CSD_UpdateSensorBaseline\000"
 5598      656E7365 
 5598      5F435344 
 5598      5F557064 
 5598      61746553 
 5599              	.LASF143:
 5600 080e 43617053 		.ascii	"CapSense_CSD_rawFilterData1\000"
 5600      656E7365 
 5600      5F435344 
 5600      5F726177 
 5600      46696C74 
 5601              	.LASF132:
 5602 082a 43617053 		.ascii	"CapSense_CSD_sensorSignal\000"
 5602      656E7365 
 5602      5F435344 
 5602      5F73656E 
 5602      736F7253 
 5603              	.LASF83:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 155


 5604 0844 43617053 		.ascii	"CapSense_CSD_SetLowBaselineReset\000"
 5604      656E7365 
 5604      5F435344 
 5604      5F536574 
 5604      4C6F7742 
 5605              	.LASF141:
 5606 0865 43617053 		.ascii	"CapSense_CSD_rawDataIndex\000"
 5606      656E7365 
 5606      5F435344 
 5606      5F726177 
 5606      44617461 
 5607              	.LASF109:
 5608 087f 6E756D65 		.ascii	"numerator\000"
 5608      7261746F 
 5608      7200
 5609              	.LASF67:
 5610 0889 6C617374 		.ascii	"lastSensor\000"
 5610      53656E73 
 5610      6F7200
 5611              	.LASF144:
 5612 0894 43617053 		.ascii	"CapSense_CSD_config\000"
 5612      656E7365 
 5612      5F435344 
 5612      5F636F6E 
 5612      66696700 
 5613              	.LASF46:
 5614 08a8 6866636C 		.ascii	"hfclkFreq_MHz\000"
 5614      6B467265 
 5614      715F4D48 
 5614      7A00
 5615              	.LASF128:
 5616 08b6 43617053 		.ascii	"CapSense_CSD_sensorEnableMask\000"
 5616      656E7365 
 5616      5F435344 
 5616      5F73656E 
 5616      736F7245 
 5617              	.LASF19:
 5618 08d4 69646163 		.ascii	"idac2LevelsTbl\000"
 5618      324C6576 
 5618      656C7354 
 5618      626C00
 5619              	.LASF2:
 5620 08e3 73686F72 		.ascii	"short int\000"
 5620      7420696E 
 5620      7400
 5621              	.LASF4:
 5622 08ed 6C6F6E67 		.ascii	"long int\000"
 5622      20696E74 
 5622      00
 5623              	.LASF66:
 5624 08f6 66697273 		.ascii	"firstSensor\000"
 5624      7453656E 
 5624      736F7200 
 5625              	.LASF131:
 5626 0902 43617053 		.ascii	"CapSense_CSD_sensorBaselineLow\000"
 5626      656E7365 
 5626      5F435344 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 156


 5626      5F73656E 
 5626      736F7242 
 5627              	.LASF101:
 5628 0921 74656D70 		.ascii	"temp\000"
 5628      00
 5629              	.LASF139:
 5630 0926 43617053 		.ascii	"CapSense_CSD_hysteresis\000"
 5630      656E7365 
 5630      5F435344 
 5630      5F687973 
 5630      74657265 
 5631              	.LASF71:
 5632 093e 43617053 		.ascii	"CapSense_CSD_GetDiffCountData\000"
 5632      656E7365 
 5632      5F435344 
 5632      5F476574 
 5632      44696666 
 5633              	.LASF23:
 5634 095c 77696467 		.ascii	"widgetNubmersTbl\000"
 5634      65744E75 
 5634      626D6572 
 5634      7354626C 
 5634      00
 5635              	.LASF94:
 5636 096d 43617053 		.ascii	"CapSense_CSD_CheckIsAnyWidgetActive\000"
 5636      656E7365 
 5636      5F435344 
 5636      5F436865 
 5636      636B4973 
 5637              	.LASF110:
 5638 0991 64656E6F 		.ascii	"denominator\000"
 5638      6D696E61 
 5638      746F7200 
 5639              	.LASF84:
 5640 099d 43617053 		.ascii	"CapSense_CSD_CheckIsSensorActive\000"
 5640      656E7365 
 5640      5F435344 
 5640      5F436865 
 5640      636B4973 
 5641              	.LASF31:
 5642 09be 6B56616C 		.ascii	"kValueTbl\000"
 5642      75655462 
 5642      6C00
 5643              	.LASF70:
 5644 09c8 43617053 		.ascii	"CapSense_CSD_GetBaselineData\000"
 5644      656E7365 
 5644      5F435344 
 5644      5F476574 
 5644      42617365 
 5645              	.LASF17:
 5646 09e5 73697A65 		.ascii	"sizetype\000"
 5646      74797065 
 5646      00
 5647              	.LASF5:
 5648 09ee 6C6F6E67 		.ascii	"long unsigned int\000"
 5648      20756E73 
 5648      69676E65 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 157


 5648      6420696E 
 5648      7400
 5649              	.LASF126:
 5650 0a00 43617053 		.ascii	"CapSense_CSD_posFiltersData\000"
 5650      656E7365 
 5650      5F435344 
 5650      5F706F73 
 5650      46696C74 
 5651              	.LASF47:
 5652 0a1c 706F696E 		.ascii	"pointers\000"
 5652      74657273 
 5652      00
 5653              	.LASF120:
 5654 0a25 43617053 		.ascii	"CapSense_CSD_GetLowBaselineReset\000"
 5654      656E7365 
 5654      5F435344 
 5654      5F476574 
 5654      4C6F7742 
 5655              	.LASF140:
 5656 0a46 43617053 		.ascii	"CapSense_CSD_debounce\000"
 5656      656E7365 
 5656      5F435344 
 5656      5F646562 
 5656      6F756E63 
 5657              	.LASF61:
 5658 0a5c 6E6F6973 		.ascii	"noiseThreshold\000"
 5658      65546872 
 5658      6573686F 
 5658      6C6400
 5659              	.LASF122:
 5660 0a6b 43617053 		.ascii	"CapSense_CSD_EnableRawDataFilters\000"
 5660      656E7365 
 5660      5F435344 
 5660      5F456E61 
 5660      626C6552 
 5661              	.LASF80:
 5662 0a8d 43617053 		.ascii	"CapSense_CSD_SetFingerHysteresis\000"
 5662      656E7365 
 5662      5F435344 
 5662      5F536574 
 5662      46696E67 
 5663              	.LASF30:
 5664 0aae 70726576 		.ascii	"previousSampleTbl\000"
 5664      696F7573 
 5664      53616D70 
 5664      6C655462 
 5664      6C00
 5665              	.LASF87:
 5666 0ac0 66696E67 		.ascii	"fingerThreshold\000"
 5666      65725468 
 5666      72657368 
 5666      6F6C6400 
 5667              	.LASF21:
 5668 0ad0 63686172 		.ascii	"chargeDivTbl\000"
 5668      67654469 
 5668      7654626C 
 5668      00
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 158


 5669              	.LASF129:
 5670 0add 43617053 		.ascii	"CapSense_CSD_widgetNumber\000"
 5670      656E7365 
 5670      5F435344 
 5670      5F776964 
 5670      6765744E 
 5671              	.LASF1:
 5672 0af7 756E7369 		.ascii	"unsigned char\000"
 5672      676E6564 
 5672      20636861 
 5672      7200
 5673              	.LASF86:
 5674 0b05 6465626F 		.ascii	"debounceIndex\000"
 5674      756E6365 
 5674      496E6465 
 5674      7800
 5675              	.LASF111:
 5676 0b13 43617053 		.ascii	"CapSense_CSD_GetCentroidPos\000"
 5676      656E7365 
 5676      5F435344 
 5676      5F476574 
 5676      43656E74 
 5677              	.LASF50:
 5678 0b2f 43617053 		.ascii	"CapSense_CSD_InitializeSensorBaseline\000"
 5678      656E7365 
 5678      5F435344 
 5678      5F496E69 
 5678      7469616C 
 5679              	.LASF95:
 5680 0b55 43617053 		.ascii	"CapSense_CSD_EnableWidget\000"
 5680      656E7365 
 5680      5F435344 
 5680      5F456E61 
 5680      626C6557 
 5681              	.LASF20:
 5682 0b6f 73656E73 		.ascii	"sensetivityTbl\000"
 5682      65746976 
 5682      69747954 
 5682      626C00
 5683              	.LASF93:
 5684 0b7e 73746174 		.ascii	"state\000"
 5684      6500
 5685              	.LASF115:
 5686 0b84 43617053 		.ascii	"CapSense_CSD_GetRadialCentroidPos\000"
 5686      656E7365 
 5686      5F435344 
 5686      5F476574 
 5686      52616469 
 5687              	.LASF22:
 5688 0ba6 6D6F6444 		.ascii	"modDivTbl\000"
 5688      69765462 
 5688      6C00
 5689              	.LASF0:
 5690 0bb0 7369676E 		.ascii	"signed char\000"
 5690      65642063 
 5690      68617200 
 5691              	.LASF3:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccamJxQ9.s 			page 159


 5692 0bbc 73686F72 		.ascii	"short unsigned int\000"
 5692      7420756E 
 5692      7369676E 
 5692      65642069 
 5692      6E7400
 5693              	.LASF40:
 5694 0bcf 70747253 		.ascii	"ptrSetBitValue\000"
 5694      65744269 
 5694      7456616C 
 5694      756500
 5695              	.LASF125:
 5696 0bde 43617053 		.ascii	"CapSense_CSD_posFiltersMask\000"
 5696      656E7365 
 5696      5F435344 
 5696      5F706F73 
 5696      46696C74 
 5697              	.LASF52:
 5698 0bfa 43617053 		.ascii	"CapSense_CSD_InitializeAllBaselines\000"
 5698      656E7365 
 5698      5F435344 
 5698      5F496E69 
 5698      7469616C 
 5699              	.LASF58:
 5700 0c1e 74656D70 		.ascii	"tempRaw\000"
 5700      52617700 
 5701              	.LASF9:
 5702 0c26 75696E74 		.ascii	"uint8\000"
 5702      3800
 5703              	.LASF15:
 5704 0c2c 646F7562 		.ascii	"double\000"
 5704      6C6500
 5705              	.LASF97:
 5706 0c33 43617053 		.ascii	"CapSense_CSD_FindMaximum\000"
 5706      656E7365 
 5706      5F435344 
 5706      5F46696E 
 5706      644D6178 
 5707              	.LASF107:
 5708 0c4c 43617053 		.ascii	"CapSense_CSD_centroid\000"
 5708      656E7365 
 5708      5F435344 
 5708      5F63656E 
 5708      74726F69 
 5709              	.LASF108:
 5710 0c62 706F7369 		.ascii	"position\000"
 5710      74696F6E 
 5710      00
 5711              	.LASF103:
 5712 0c6b 43617053 		.ascii	"CapSense_CSD_CalcCentroid\000"
 5712      656E7365 
 5712      5F435344 
 5712      5F43616C 
 5712      6343656E 
 5713              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
