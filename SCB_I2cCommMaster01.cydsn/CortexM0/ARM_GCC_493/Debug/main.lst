ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.rodata
  18              		.align	2
  19              	.LC0:
  20 0000 54657374 		.ascii	"Test\015\012\000"
  20      0D0A00
  21 0007 00       		.section	.text.main,"ax",%progbits
  22              		.align	2
  23              		.global	main
  24              		.code	16
  25              		.thumb_func
  26              		.type	main, %function
  27              	main:
  28              	.LFB34:
  29              		.file 1 ".\\main.c"
   1:.\main.c      **** /*******************************************************************************
   2:.\main.c      **** * File Name: main.c
   3:.\main.c      **** *
   4:.\main.c      **** * Version: 1.20
   5:.\main.c      **** *
   6:.\main.c      **** * Description:
   7:.\main.c      **** *  This example project demonstrates the basic operation of the I2C master
   8:.\main.c      **** *  (SCB mode) component. The I2C master sends a packet with a command to
   9:.\main.c      **** *  the I2C slave to control the RGB LED color. The packet with a status
  10:.\main.c      **** *  is read back.
  11:.\main.c      **** *  For more information refer to the example project datasheet.
  12:.\main.c      **** *
  13:.\main.c      **** ********************************************************************************
  14:.\main.c      **** * Copyright 2014-2015, Cypress Semiconductor Corporation. All rights reserved.
  15:.\main.c      **** * This software is owned by Cypress Semiconductor Corporation and is protected
  16:.\main.c      **** * by and subject to worldwide patent and copyright laws and treaties.
  17:.\main.c      **** * Therefore, you may use this software only as provided in the license agreement
  18:.\main.c      **** * accompanying the software package from which you obtained this software.
  19:.\main.c      **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  20:.\main.c      **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  21:.\main.c      **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  22:.\main.c      **** *******************************************************************************/
  23:.\main.c      **** 
  24:.\main.c      **** #include "main.h"
  25:.\main.c      **** #include "uart.h"
  26:.\main.c      **** 
  27:.\main.c      **** 
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 2


  28:.\main.c      **** /*******************************************************************************
  29:.\main.c      **** * Function Name: main
  30:.\main.c      **** ********************************************************************************
  31:.\main.c      **** * Summary:
  32:.\main.c      **** *  The main function performs the following actions:
  33:.\main.c      **** *   1. Turns off the RGB LED.
  34:.\main.c      **** *   2. Starts the I2C master (SCB mode) component.
  35:.\main.c      **** *   3. Enables global interrupts.
  36:.\main.c      **** *   4. Sends command and status packets to the slave every 500mS.
  37:.\main.c      **** *
  38:.\main.c      **** * Parameters:
  39:.\main.c      **** *  None
  40:.\main.c      **** *
  41:.\main.c      **** * Return:
  42:.\main.c      **** *  None
  43:.\main.c      **** *
  44:.\main.c      **** *******************************************************************************/
  45:.\main.c      **** int main()
  46:.\main.c      **** {
  30              		.loc 1 46 0
  31              		.cfi_startproc
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 82B0     		sub	sp, sp, #8
  37              		.cfi_def_cfa_offset 16
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  47:.\main.c      ****     uint8 command = CMD_SET_RED;
  40              		.loc 1 47 0
  41 0006 FB1D     		add	r3, r7, #7
  42 0008 0122     		mov	r2, #1
  43 000a 1A70     		strb	r2, [r3]
  48:.\main.c      **** 
  49:.\main.c      ****     RGB_LED_OFF;
  44              		.loc 1 49 0
  45 000c 0120     		mov	r0, #1
  46 000e FFF7FEFF 		bl	LED_RED_Write
  47 0012 0120     		mov	r0, #1
  48 0014 FFF7FEFF 		bl	LED_GREEN_Write
  50:.\main.c      **** 
  51:.\main.c      ****     I2CM_Start();
  49              		.loc 1 51 0
  50 0018 FFF7FEFF 		bl	I2CM_Start
  52:.\main.c      ****     UART_1_Start();
  51              		.loc 1 52 0
  52 001c FFF7FEFF 		bl	UART_1_Start
  53:.\main.c      ****     //UARTInit();
  54:.\main.c      **** 
  55:.\main.c      ****     CyGlobalIntEnable;
  53              		.loc 1 55 0
  54              	@ 55 ".\main.c" 1
  55 0020 62B6     		CPSIE   i
  56              	@ 0 "" 2
  57              		.code	16
  58              	.L4:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 3


  56:.\main.c      **** 
  57:.\main.c      ****     /***************************************************************************
  58:.\main.c      ****     * Main polling loop
  59:.\main.c      ****     ***************************************************************************/
  60:.\main.c      ****     for(;;)
  61:.\main.c      ****     {
  62:.\main.c      ****         UART_1_UartPutString("Test\r\n");
  59              		.loc 1 62 0
  60 0022 134B     		ldr	r3, .L5
  61 0024 181C     		mov	r0, r3
  62 0026 FFF7FEFF 		bl	UART_1_UartPutString
  63:.\main.c      ****         //UART_SendNumber(command);
  64:.\main.c      ****         /* Send packet with command to the slave */
  65:.\main.c      ****         if (0u == WriteCommandPacket(command))
  63              		.loc 1 65 0
  64 002a FB1D     		add	r3, r7, #7
  65 002c 1B78     		ldrb	r3, [r3]
  66 002e 181C     		mov	r0, r3
  67 0030 FFF7FEFF 		bl	WriteCommandPacket
  68 0034 031E     		sub	r3, r0, #0
  69 0036 15D1     		bne	.L2
  66:.\main.c      ****         {
  67:.\main.c      ****             /* Read response packet from the slave */
  68:.\main.c      ****             if (0u == ReadStatusPacket())
  70              		.loc 1 68 0
  71 0038 FFF7FEFF 		bl	ReadStatusPacket
  72 003c 031E     		sub	r3, r0, #0
  73 003e 11D1     		bne	.L2
  69:.\main.c      ****             {
  70:.\main.c      ****                 /* Next command to be written */
  71:.\main.c      ****                 command++;
  74              		.loc 1 71 0
  75 0040 FB1D     		add	r3, r7, #7
  76 0042 1A78     		ldrb	r2, [r3]
  77 0044 FB1D     		add	r3, r7, #7
  78 0046 0132     		add	r2, r2, #1
  79 0048 1A70     		strb	r2, [r3]
  72:.\main.c      ****                 if (command > CMD_SET_BLUE)
  80              		.loc 1 72 0
  81 004a FB1D     		add	r3, r7, #7
  82 004c 1B78     		ldrb	r3, [r3]
  83 004e 032B     		cmp	r3, #3
  84 0050 02D9     		bls	.L3
  73:.\main.c      ****                 {
  74:.\main.c      ****                     command = CMD_SET_OFF;
  85              		.loc 1 74 0
  86 0052 FB1D     		add	r3, r7, #7
  87 0054 0022     		mov	r2, #0
  88 0056 1A70     		strb	r2, [r3]
  89              	.L3:
  75:.\main.c      ****                 }
  76:.\main.c      **** 
  77:.\main.c      ****                 /* Turn off status LED */
  78:.\main.c      ****                 RGB_LED_OFF;
  90              		.loc 1 78 0
  91 0058 0120     		mov	r0, #1
  92 005a FFF7FEFF 		bl	LED_RED_Write
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 4


  93 005e 0120     		mov	r0, #1
  94 0060 FFF7FEFF 		bl	LED_GREEN_Write
  95              	.L2:
  79:.\main.c      ****             }
  80:.\main.c      ****         }
  81:.\main.c      **** 
  82:.\main.c      ****         CyDelay(CMD_TO_CMD_DELAY); /* Delay between commands */
  96              		.loc 1 82 0
  97 0064 FA23     		mov	r3, #250
  98 0066 5B00     		lsl	r3, r3, #1
  99 0068 181C     		mov	r0, r3
 100 006a FFF7FEFF 		bl	CyDelay
  83:.\main.c      ****     }
 101              		.loc 1 83 0
 102 006e D8E7     		b	.L4
 103              	.L6:
 104              		.align	2
 105              	.L5:
 106 0070 00000000 		.word	.LC0
 107              		.cfi_endproc
 108              	.LFE34:
 109              		.size	main, .-main
 110              		.section	.text.WriteCommandPacket,"ax",%progbits
 111              		.align	2
 112              		.global	WriteCommandPacket
 113              		.code	16
 114              		.thumb_func
 115              		.type	WriteCommandPacket, %function
 116              	WriteCommandPacket:
 117              	.LFB35:
  84:.\main.c      **** }
  85:.\main.c      **** 
  86:.\main.c      **** 
  87:.\main.c      **** /*******************************************************************************
  88:.\main.c      **** * Function Name: WriteCommandPacket
  89:.\main.c      **** ********************************************************************************
  90:.\main.c      **** * Summary:
  91:.\main.c      **** *  Master initiates the transfer to write command packet into the slave.
  92:.\main.c      **** *  The status of the transfer is returned.
  93:.\main.c      **** *
  94:.\main.c      **** * Parameters:
  95:.\main.c      **** *  cmd: command to execute. Available commands:
  96:.\main.c      **** *   - CMD_SET_RED:   set red color of the LED.
  97:.\main.c      **** *   - CMD_SET_GREEN: set green color of the LED.
  98:.\main.c      **** *   - CMD_SET_BLUE:  set blue color of the LED.
  99:.\main.c      **** *   - CMD_SET_OFF:   turn off the LED.
 100:.\main.c      **** *
 101:.\main.c      **** * Return:
 102:.\main.c      **** *  Returns status of the transfer. There are two statuses
 103:.\main.c      **** *  - TRANSFER_CMPLT: transfer completed successfully.
 104:.\main.c      **** *  - TRANSFER_ERROR: the error occurred while transfer.
 105:.\main.c      **** *
 106:.\main.c      **** *******************************************************************************/
 107:.\main.c      **** uint32 WriteCommandPacket(uint8 cmd)
 108:.\main.c      **** {
 118              		.loc 1 108 0
 119              		.cfi_startproc
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 5


 120 0000 80B5     		push	{r7, lr}
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 7, -8
 123              		.cfi_offset 14, -4
 124 0002 84B0     		sub	sp, sp, #16
 125              		.cfi_def_cfa_offset 24
 126 0004 00AF     		add	r7, sp, #0
 127              		.cfi_def_cfa_register 7
 128 0006 021C     		mov	r2, r0
 129 0008 FB1D     		add	r3, r7, #7
 130 000a 1A70     		strb	r2, [r3]
 109:.\main.c      ****     uint8  buffer[BUFFER_SIZE];
 110:.\main.c      ****     uint32 status = TRANSFER_ERROR;
 131              		.loc 1 110 0
 132 000c FF23     		mov	r3, #255
 133 000e FB60     		str	r3, [r7, #12]
 111:.\main.c      **** 
 112:.\main.c      ****     /* Initialize buffer with packet */
 113:.\main.c      ****     buffer[PACKET_SOP_POS] = PACKET_SOP;
 134              		.loc 1 113 0
 135 0010 0823     		mov	r3, #8
 136 0012 FB18     		add	r3, r7, r3
 137 0014 0122     		mov	r2, #1
 138 0016 1A70     		strb	r2, [r3]
 114:.\main.c      ****     buffer[PACKET_CMD_POS] = cmd;
 139              		.loc 1 114 0
 140 0018 0823     		mov	r3, #8
 141 001a FB18     		add	r3, r7, r3
 142 001c FA1D     		add	r2, r7, #7
 143 001e 1278     		ldrb	r2, [r2]
 144 0020 5A70     		strb	r2, [r3, #1]
 115:.\main.c      ****     buffer[PACKET_EOP_POS] = PACKET_EOP;
 145              		.loc 1 115 0
 146 0022 0823     		mov	r3, #8
 147 0024 FB18     		add	r3, r7, r3
 148 0026 1722     		mov	r2, #23
 149 0028 9A70     		strb	r2, [r3, #2]
 116:.\main.c      **** 
 117:.\main.c      ****     (void) I2CM_I2CMasterWriteBuf(I2C_SLAVE_ADDR, buffer, PACKET_SIZE, \
 150              		.loc 1 117 0
 151 002a 0823     		mov	r3, #8
 152 002c FB18     		add	r3, r7, r3
 153 002e 0820     		mov	r0, #8
 154 0030 191C     		mov	r1, r3
 155 0032 0322     		mov	r2, #3
 156 0034 0023     		mov	r3, #0
 157 0036 FFF7FEFF 		bl	I2CM_I2CMasterWriteBuf
 118:.\main.c      ****                                   I2CM_I2C_MODE_COMPLETE_XFER);
 119:.\main.c      **** 
 120:.\main.c      ****     /* Waits until master completes write transfer */
 121:.\main.c      ****     while (0u == (I2CM_I2CMasterStatus() & I2CM_I2C_MSTAT_WR_CMPLT))
 158              		.loc 1 121 0
 159 003a C046     		mov	r8, r8
 160              	.L8:
 161              		.loc 1 121 0 is_stmt 0 discriminator 1
 162 003c FFF7FEFF 		bl	I2CM_I2CMasterStatus
 163 0040 021C     		mov	r2, r0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 6


 164 0042 0223     		mov	r3, #2
 165 0044 1340     		and	r3, r2
 166 0046 F9D0     		beq	.L8
 122:.\main.c      ****     {
 123:.\main.c      ****     }
 124:.\main.c      **** 
 125:.\main.c      ****     /* Displays transfer status */
 126:.\main.c      ****     if (0u == (I2CM_I2C_MSTAT_ERR_XFER & I2CM_I2CMasterStatus()))
 167              		.loc 1 126 0 is_stmt 1
 168 0048 FFF7FEFF 		bl	I2CM_I2CMasterStatus
 169 004c 021C     		mov	r2, r0
 170 004e 8023     		mov	r3, #128
 171 0050 9B00     		lsl	r3, r3, #2
 172 0052 1340     		and	r3, r2
 173 0054 0DD1     		bne	.L9
 127:.\main.c      ****     {
 128:.\main.c      ****         /* Check if all bytes was written */
 129:.\main.c      ****         if (I2CM_I2CMasterGetWriteBufSize() == BUFFER_SIZE)
 174              		.loc 1 129 0
 175 0056 FFF7FEFF 		bl	I2CM_I2CMasterGetWriteBufSize
 176 005a 031E     		sub	r3, r0, #0
 177 005c 032B     		cmp	r3, #3
 178 005e 0ED1     		bne	.L11
 130:.\main.c      ****         {
 131:.\main.c      ****             RGB_LED_ON_GREEN;
 179              		.loc 1 131 0
 180 0060 0120     		mov	r0, #1
 181 0062 FFF7FEFF 		bl	LED_RED_Write
 182 0066 0020     		mov	r0, #0
 183 0068 FFF7FEFF 		bl	LED_GREEN_Write
 132:.\main.c      ****             status = TRANSFER_CMPLT;
 184              		.loc 1 132 0
 185 006c 0023     		mov	r3, #0
 186 006e FB60     		str	r3, [r7, #12]
 187 0070 05E0     		b	.L11
 188              	.L9:
 133:.\main.c      ****         }
 134:.\main.c      ****     }
 135:.\main.c      ****     else
 136:.\main.c      ****     {
 137:.\main.c      ****         RGB_LED_ON_RED;
 189              		.loc 1 137 0
 190 0072 0020     		mov	r0, #0
 191 0074 FFF7FEFF 		bl	LED_RED_Write
 192 0078 0120     		mov	r0, #1
 193 007a FFF7FEFF 		bl	LED_GREEN_Write
 194              	.L11:
 138:.\main.c      ****     }
 139:.\main.c      **** 
 140:.\main.c      ****     (void) I2CM_I2CMasterClearStatus();
 195              		.loc 1 140 0
 196 007e FFF7FEFF 		bl	I2CM_I2CMasterClearStatus
 141:.\main.c      **** 
 142:.\main.c      ****     return (status);
 197              		.loc 1 142 0
 198 0082 FB68     		ldr	r3, [r7, #12]
 143:.\main.c      **** }
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 7


 199              		.loc 1 143 0
 200 0084 181C     		mov	r0, r3
 201 0086 BD46     		mov	sp, r7
 202 0088 04B0     		add	sp, sp, #16
 203              		@ sp needed
 204 008a 80BD     		pop	{r7, pc}
 205              		.cfi_endproc
 206              	.LFE35:
 207              		.size	WriteCommandPacket, .-WriteCommandPacket
 208              		.section	.text.ReadStatusPacket,"ax",%progbits
 209              		.align	2
 210              		.global	ReadStatusPacket
 211              		.code	16
 212              		.thumb_func
 213              		.type	ReadStatusPacket, %function
 214              	ReadStatusPacket:
 215              	.LFB36:
 144:.\main.c      **** 
 145:.\main.c      **** 
 146:.\main.c      **** /*******************************************************************************
 147:.\main.c      **** * Function Name: ReadStatusPacket
 148:.\main.c      **** ********************************************************************************
 149:.\main.c      **** * Summary:
 150:.\main.c      **** *  Master initiates the transfer to read status packet from the slave.
 151:.\main.c      **** *  The status of the transfer is returned.
 152:.\main.c      **** *
 153:.\main.c      **** * Parameters:
 154:.\main.c      **** *  None
 155:.\main.c      **** *
 156:.\main.c      **** * Return:
 157:.\main.c      **** *  Returns status of the transfer. There are two statuses
 158:.\main.c      **** *  - TRANSFER_CMPLT: transfer completed successfully.
 159:.\main.c      **** *  - TRANSFER_ERROR: the error occurred while transfer.
 160:.\main.c      **** *
 161:.\main.c      **** *******************************************************************************/
 162:.\main.c      **** uint32 ReadStatusPacket(void)
 163:.\main.c      **** {
 216              		.loc 1 163 0
 217              		.cfi_startproc
 218 0000 80B5     		push	{r7, lr}
 219              		.cfi_def_cfa_offset 8
 220              		.cfi_offset 7, -8
 221              		.cfi_offset 14, -4
 222 0002 82B0     		sub	sp, sp, #8
 223              		.cfi_def_cfa_offset 16
 224 0004 00AF     		add	r7, sp, #0
 225              		.cfi_def_cfa_register 7
 164:.\main.c      ****     uint8  buffer[BUFFER_SIZE];
 165:.\main.c      ****     uint32 status = TRANSFER_ERROR;
 226              		.loc 1 165 0
 227 0006 FF23     		mov	r3, #255
 228 0008 7B60     		str	r3, [r7, #4]
 166:.\main.c      **** 
 167:.\main.c      ****     (void) I2CM_I2CMasterReadBuf(I2C_SLAVE_ADDR, buffer, PACKET_SIZE, \
 229              		.loc 1 167 0
 230 000a 3B1C     		mov	r3, r7
 231 000c 0820     		mov	r0, #8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 8


 232 000e 191C     		mov	r1, r3
 233 0010 0322     		mov	r2, #3
 234 0012 0023     		mov	r3, #0
 235 0014 FFF7FEFF 		bl	I2CM_I2CMasterReadBuf
 168:.\main.c      ****                                  I2CM_I2C_MODE_COMPLETE_XFER);
 169:.\main.c      **** 
 170:.\main.c      ****     /* Waits until master complete read transfer */
 171:.\main.c      ****     while (0u == (I2CM_I2CMasterStatus() & I2CM_I2C_MSTAT_RD_CMPLT))
 236              		.loc 1 171 0
 237 0018 C046     		mov	r8, r8
 238              	.L14:
 239              		.loc 1 171 0 is_stmt 0 discriminator 1
 240 001a FFF7FEFF 		bl	I2CM_I2CMasterStatus
 241 001e 021C     		mov	r2, r0
 242 0020 0123     		mov	r3, #1
 243 0022 1340     		and	r3, r2
 244 0024 F9D0     		beq	.L14
 172:.\main.c      ****     {
 173:.\main.c      ****     }
 174:.\main.c      **** 
 175:.\main.c      ****     /* Displays transfer status */
 176:.\main.c      ****     if (0u == (I2CM_I2C_MSTAT_ERR_XFER & I2CM_I2CMasterStatus()))
 245              		.loc 1 176 0 is_stmt 1
 246 0026 FFF7FEFF 		bl	I2CM_I2CMasterStatus
 247 002a 021C     		mov	r2, r0
 248 002c 8023     		mov	r3, #128
 249 002e 9B00     		lsl	r3, r3, #2
 250 0030 1340     		and	r3, r2
 251 0032 19D1     		bne	.L15
 177:.\main.c      ****     {
 178:.\main.c      ****         /* Check packet structure */
 179:.\main.c      ****         if ((I2CM_I2CMasterGetReadBufSize() == BUFFER_SIZE) &&
 252              		.loc 1 179 0
 253 0034 FFF7FEFF 		bl	I2CM_I2CMasterGetReadBufSize
 254 0038 031E     		sub	r3, r0, #0
 255 003a 032B     		cmp	r3, #3
 256 003c 1CD1     		bne	.L17
 180:.\main.c      ****             (PACKET_SOP == buffer[PACKET_SOP_POS]) &&
 257              		.loc 1 180 0 discriminator 1
 258 003e 3B1C     		mov	r3, r7
 259 0040 1B78     		ldrb	r3, [r3]
 179:.\main.c      ****             (PACKET_SOP == buffer[PACKET_SOP_POS]) &&
 260              		.loc 1 179 0 discriminator 1
 261 0042 012B     		cmp	r3, #1
 262 0044 18D1     		bne	.L17
 181:.\main.c      ****             (PACKET_EOP == buffer[PACKET_EOP_POS]))
 263              		.loc 1 181 0
 264 0046 3B1C     		mov	r3, r7
 265 0048 9B78     		ldrb	r3, [r3, #2]
 180:.\main.c      ****             (PACKET_SOP == buffer[PACKET_SOP_POS]) &&
 266              		.loc 1 180 0
 267 004a 172B     		cmp	r3, #23
 268 004c 14D1     		bne	.L17
 182:.\main.c      ****         {
 183:.\main.c      ****             /* Check packet status */
 184:.\main.c      ****             if (STS_CMD_DONE == buffer[PACKET_STS_POS])
 269              		.loc 1 184 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 9


 270 004e 3B1C     		mov	r3, r7
 271 0050 5B78     		ldrb	r3, [r3, #1]
 272 0052 002B     		cmp	r3, #0
 273 0054 10D1     		bne	.L17
 185:.\main.c      ****             {
 186:.\main.c      ****                 RGB_LED_ON_GREEN;
 274              		.loc 1 186 0
 275 0056 0120     		mov	r0, #1
 276 0058 FFF7FEFF 		bl	LED_RED_Write
 277 005c 0020     		mov	r0, #0
 278 005e FFF7FEFF 		bl	LED_GREEN_Write
 187:.\main.c      ****                 status = TRANSFER_CMPLT;
 279              		.loc 1 187 0
 280 0062 0023     		mov	r3, #0
 281 0064 7B60     		str	r3, [r7, #4]
 282 0066 07E0     		b	.L17
 283              	.L15:
 188:.\main.c      ****             }
 189:.\main.c      ****         }
 190:.\main.c      ****     }
 191:.\main.c      ****     else
 192:.\main.c      ****     {
 193:.\main.c      ****         RGB_LED_ON_RED;
 284              		.loc 1 193 0
 285 0068 0020     		mov	r0, #0
 286 006a FFF7FEFF 		bl	LED_RED_Write
 287 006e 0120     		mov	r0, #1
 288 0070 FFF7FEFF 		bl	LED_GREEN_Write
 194:.\main.c      ****         status = TRANSFER_ERROR;
 289              		.loc 1 194 0
 290 0074 FF23     		mov	r3, #255
 291 0076 7B60     		str	r3, [r7, #4]
 292              	.L17:
 195:.\main.c      ****     }
 196:.\main.c      **** 
 197:.\main.c      ****     (void) I2CM_I2CMasterClearStatus();
 293              		.loc 1 197 0
 294 0078 FFF7FEFF 		bl	I2CM_I2CMasterClearStatus
 198:.\main.c      **** 
 199:.\main.c      ****     return (status);
 295              		.loc 1 199 0
 296 007c 7B68     		ldr	r3, [r7, #4]
 200:.\main.c      **** }
 297              		.loc 1 200 0
 298 007e 181C     		mov	r0, r3
 299 0080 BD46     		mov	sp, r7
 300 0082 02B0     		add	sp, sp, #8
 301              		@ sp needed
 302 0084 80BD     		pop	{r7, pc}
 303              		.cfi_endproc
 304              	.LFE36:
 305              		.size	ReadStatusPacket, .-ReadStatusPacket
 306 0086 C046     		.text
 307              	.Letext0:
 308              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 309              		.section	.debug_info,"",%progbits
 310              	.Ldebug_info0:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 10


 311 0000 56010000 		.4byte	0x156
 312 0004 0400     		.2byte	0x4
 313 0006 00000000 		.4byte	.Ldebug_abbrev0
 314 000a 04       		.byte	0x4
 315 000b 01       		.uleb128 0x1
 316 000c 5D000000 		.4byte	.LASF21
 317 0010 01       		.byte	0x1
 318 0011 D8010000 		.4byte	.LASF22
 319 0015 31010000 		.4byte	.LASF23
 320 0019 00000000 		.4byte	.Ldebug_ranges0+0
 321 001d 00000000 		.4byte	0
 322 0021 00000000 		.4byte	.Ldebug_line0
 323 0025 02       		.uleb128 0x2
 324 0026 01       		.byte	0x1
 325 0027 06       		.byte	0x6
 326 0028 B3010000 		.4byte	.LASF0
 327 002c 02       		.uleb128 0x2
 328 002d 01       		.byte	0x1
 329 002e 08       		.byte	0x8
 330 002f FC000000 		.4byte	.LASF1
 331 0033 02       		.uleb128 0x2
 332 0034 02       		.byte	0x2
 333 0035 05       		.byte	0x5
 334 0036 18010000 		.4byte	.LASF2
 335 003a 02       		.uleb128 0x2
 336 003b 02       		.byte	0x2
 337 003c 07       		.byte	0x7
 338 003d A0010000 		.4byte	.LASF3
 339 0041 02       		.uleb128 0x2
 340 0042 04       		.byte	0x4
 341 0043 05       		.byte	0x5
 342 0044 0F010000 		.4byte	.LASF4
 343 0048 02       		.uleb128 0x2
 344 0049 04       		.byte	0x4
 345 004a 07       		.byte	0x7
 346 004b 34000000 		.4byte	.LASF5
 347 004f 02       		.uleb128 0x2
 348 0050 08       		.byte	0x8
 349 0051 05       		.byte	0x5
 350 0052 00000000 		.4byte	.LASF6
 351 0056 02       		.uleb128 0x2
 352 0057 08       		.byte	0x8
 353 0058 07       		.byte	0x7
 354 0059 46000000 		.4byte	.LASF7
 355 005d 03       		.uleb128 0x3
 356 005e 04       		.byte	0x4
 357 005f 05       		.byte	0x5
 358 0060 696E7400 		.ascii	"int\000"
 359 0064 02       		.uleb128 0x2
 360 0065 04       		.byte	0x4
 361 0066 07       		.byte	0x7
 362 0067 15000000 		.4byte	.LASF8
 363 006b 04       		.uleb128 0x4
 364 006c 2E000000 		.4byte	.LASF9
 365 0070 02       		.byte	0x2
 366 0071 3801     		.2byte	0x138
 367 0073 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 11


 368 0077 04       		.uleb128 0x4
 369 0078 E1010000 		.4byte	.LASF10
 370 007c 02       		.byte	0x2
 371 007d 3901     		.2byte	0x139
 372 007f 3A000000 		.4byte	0x3a
 373 0083 04       		.uleb128 0x4
 374 0084 0E000000 		.4byte	.LASF11
 375 0088 02       		.byte	0x2
 376 0089 3A01     		.2byte	0x13a
 377 008b 48000000 		.4byte	0x48
 378 008f 02       		.uleb128 0x2
 379 0090 04       		.byte	0x4
 380 0091 04       		.byte	0x4
 381 0092 D2010000 		.4byte	.LASF12
 382 0096 02       		.uleb128 0x2
 383 0097 08       		.byte	0x8
 384 0098 04       		.byte	0x4
 385 0099 2A010000 		.4byte	.LASF13
 386 009d 02       		.uleb128 0x2
 387 009e 01       		.byte	0x1
 388 009f 08       		.byte	0x8
 389 00a0 0A010000 		.4byte	.LASF14
 390 00a4 02       		.uleb128 0x2
 391 00a5 04       		.byte	0x4
 392 00a6 07       		.byte	0x7
 393 00a7 EF010000 		.4byte	.LASF15
 394 00ab 05       		.uleb128 0x5
 395 00ac 22000000 		.4byte	.LASF19
 396 00b0 01       		.byte	0x1
 397 00b1 2D       		.byte	0x2d
 398 00b2 5D000000 		.4byte	0x5d
 399 00b6 00000000 		.4byte	.LFB34
 400 00ba 74000000 		.4byte	.LFE34-.LFB34
 401 00be 01       		.uleb128 0x1
 402 00bf 9C       		.byte	0x9c
 403 00c0 D3000000 		.4byte	0xd3
 404 00c4 06       		.uleb128 0x6
 405 00c5 22010000 		.4byte	.LASF16
 406 00c9 01       		.byte	0x1
 407 00ca 2F       		.byte	0x2f
 408 00cb 6B000000 		.4byte	0x6b
 409 00cf 02       		.uleb128 0x2
 410 00d0 91       		.byte	0x91
 411 00d1 77       		.sleb128 -9
 412 00d2 00       		.byte	0
 413 00d3 07       		.uleb128 0x7
 414 00d4 BF010000 		.4byte	.LASF24
 415 00d8 01       		.byte	0x1
 416 00d9 6B       		.byte	0x6b
 417 00da 83000000 		.4byte	0x83
 418 00de 00000000 		.4byte	.LFB35
 419 00e2 8C000000 		.4byte	.LFE35-.LFB35
 420 00e6 01       		.uleb128 0x1
 421 00e7 9C       		.byte	0x9c
 422 00e8 17010000 		.4byte	0x117
 423 00ec 08       		.uleb128 0x8
 424 00ed 636D6400 		.ascii	"cmd\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 12


 425 00f1 01       		.byte	0x1
 426 00f2 6B       		.byte	0x6b
 427 00f3 6B000000 		.4byte	0x6b
 428 00f7 02       		.uleb128 0x2
 429 00f8 91       		.byte	0x91
 430 00f9 6F       		.sleb128 -17
 431 00fa 06       		.uleb128 0x6
 432 00fb E8010000 		.4byte	.LASF17
 433 00ff 01       		.byte	0x1
 434 0100 6D       		.byte	0x6d
 435 0101 17010000 		.4byte	0x117
 436 0105 02       		.uleb128 0x2
 437 0106 91       		.byte	0x91
 438 0107 70       		.sleb128 -16
 439 0108 06       		.uleb128 0x6
 440 0109 27000000 		.4byte	.LASF18
 441 010d 01       		.byte	0x1
 442 010e 6E       		.byte	0x6e
 443 010f 83000000 		.4byte	0x83
 444 0113 02       		.uleb128 0x2
 445 0114 91       		.byte	0x91
 446 0115 74       		.sleb128 -12
 447 0116 00       		.byte	0
 448 0117 09       		.uleb128 0x9
 449 0118 6B000000 		.4byte	0x6b
 450 011c 27010000 		.4byte	0x127
 451 0120 0A       		.uleb128 0xa
 452 0121 A4000000 		.4byte	0xa4
 453 0125 02       		.byte	0x2
 454 0126 00       		.byte	0
 455 0127 0B       		.uleb128 0xb
 456 0128 EB000000 		.4byte	.LASF20
 457 012c 01       		.byte	0x1
 458 012d A2       		.byte	0xa2
 459 012e 83000000 		.4byte	0x83
 460 0132 00000000 		.4byte	.LFB36
 461 0136 86000000 		.4byte	.LFE36-.LFB36
 462 013a 01       		.uleb128 0x1
 463 013b 9C       		.byte	0x9c
 464 013c 06       		.uleb128 0x6
 465 013d E8010000 		.4byte	.LASF17
 466 0141 01       		.byte	0x1
 467 0142 A4       		.byte	0xa4
 468 0143 17010000 		.4byte	0x117
 469 0147 02       		.uleb128 0x2
 470 0148 91       		.byte	0x91
 471 0149 70       		.sleb128 -16
 472 014a 06       		.uleb128 0x6
 473 014b 27000000 		.4byte	.LASF18
 474 014f 01       		.byte	0x1
 475 0150 A5       		.byte	0xa5
 476 0151 83000000 		.4byte	0x83
 477 0155 02       		.uleb128 0x2
 478 0156 91       		.byte	0x91
 479 0157 74       		.sleb128 -12
 480 0158 00       		.byte	0
 481 0159 00       		.byte	0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 13


 482              		.section	.debug_abbrev,"",%progbits
 483              	.Ldebug_abbrev0:
 484 0000 01       		.uleb128 0x1
 485 0001 11       		.uleb128 0x11
 486 0002 01       		.byte	0x1
 487 0003 25       		.uleb128 0x25
 488 0004 0E       		.uleb128 0xe
 489 0005 13       		.uleb128 0x13
 490 0006 0B       		.uleb128 0xb
 491 0007 03       		.uleb128 0x3
 492 0008 0E       		.uleb128 0xe
 493 0009 1B       		.uleb128 0x1b
 494 000a 0E       		.uleb128 0xe
 495 000b 55       		.uleb128 0x55
 496 000c 17       		.uleb128 0x17
 497 000d 11       		.uleb128 0x11
 498 000e 01       		.uleb128 0x1
 499 000f 10       		.uleb128 0x10
 500 0010 17       		.uleb128 0x17
 501 0011 00       		.byte	0
 502 0012 00       		.byte	0
 503 0013 02       		.uleb128 0x2
 504 0014 24       		.uleb128 0x24
 505 0015 00       		.byte	0
 506 0016 0B       		.uleb128 0xb
 507 0017 0B       		.uleb128 0xb
 508 0018 3E       		.uleb128 0x3e
 509 0019 0B       		.uleb128 0xb
 510 001a 03       		.uleb128 0x3
 511 001b 0E       		.uleb128 0xe
 512 001c 00       		.byte	0
 513 001d 00       		.byte	0
 514 001e 03       		.uleb128 0x3
 515 001f 24       		.uleb128 0x24
 516 0020 00       		.byte	0
 517 0021 0B       		.uleb128 0xb
 518 0022 0B       		.uleb128 0xb
 519 0023 3E       		.uleb128 0x3e
 520 0024 0B       		.uleb128 0xb
 521 0025 03       		.uleb128 0x3
 522 0026 08       		.uleb128 0x8
 523 0027 00       		.byte	0
 524 0028 00       		.byte	0
 525 0029 04       		.uleb128 0x4
 526 002a 16       		.uleb128 0x16
 527 002b 00       		.byte	0
 528 002c 03       		.uleb128 0x3
 529 002d 0E       		.uleb128 0xe
 530 002e 3A       		.uleb128 0x3a
 531 002f 0B       		.uleb128 0xb
 532 0030 3B       		.uleb128 0x3b
 533 0031 05       		.uleb128 0x5
 534 0032 49       		.uleb128 0x49
 535 0033 13       		.uleb128 0x13
 536 0034 00       		.byte	0
 537 0035 00       		.byte	0
 538 0036 05       		.uleb128 0x5
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 14


 539 0037 2E       		.uleb128 0x2e
 540 0038 01       		.byte	0x1
 541 0039 3F       		.uleb128 0x3f
 542 003a 19       		.uleb128 0x19
 543 003b 03       		.uleb128 0x3
 544 003c 0E       		.uleb128 0xe
 545 003d 3A       		.uleb128 0x3a
 546 003e 0B       		.uleb128 0xb
 547 003f 3B       		.uleb128 0x3b
 548 0040 0B       		.uleb128 0xb
 549 0041 49       		.uleb128 0x49
 550 0042 13       		.uleb128 0x13
 551 0043 11       		.uleb128 0x11
 552 0044 01       		.uleb128 0x1
 553 0045 12       		.uleb128 0x12
 554 0046 06       		.uleb128 0x6
 555 0047 40       		.uleb128 0x40
 556 0048 18       		.uleb128 0x18
 557 0049 9642     		.uleb128 0x2116
 558 004b 19       		.uleb128 0x19
 559 004c 01       		.uleb128 0x1
 560 004d 13       		.uleb128 0x13
 561 004e 00       		.byte	0
 562 004f 00       		.byte	0
 563 0050 06       		.uleb128 0x6
 564 0051 34       		.uleb128 0x34
 565 0052 00       		.byte	0
 566 0053 03       		.uleb128 0x3
 567 0054 0E       		.uleb128 0xe
 568 0055 3A       		.uleb128 0x3a
 569 0056 0B       		.uleb128 0xb
 570 0057 3B       		.uleb128 0x3b
 571 0058 0B       		.uleb128 0xb
 572 0059 49       		.uleb128 0x49
 573 005a 13       		.uleb128 0x13
 574 005b 02       		.uleb128 0x2
 575 005c 18       		.uleb128 0x18
 576 005d 00       		.byte	0
 577 005e 00       		.byte	0
 578 005f 07       		.uleb128 0x7
 579 0060 2E       		.uleb128 0x2e
 580 0061 01       		.byte	0x1
 581 0062 3F       		.uleb128 0x3f
 582 0063 19       		.uleb128 0x19
 583 0064 03       		.uleb128 0x3
 584 0065 0E       		.uleb128 0xe
 585 0066 3A       		.uleb128 0x3a
 586 0067 0B       		.uleb128 0xb
 587 0068 3B       		.uleb128 0x3b
 588 0069 0B       		.uleb128 0xb
 589 006a 27       		.uleb128 0x27
 590 006b 19       		.uleb128 0x19
 591 006c 49       		.uleb128 0x49
 592 006d 13       		.uleb128 0x13
 593 006e 11       		.uleb128 0x11
 594 006f 01       		.uleb128 0x1
 595 0070 12       		.uleb128 0x12
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 15


 596 0071 06       		.uleb128 0x6
 597 0072 40       		.uleb128 0x40
 598 0073 18       		.uleb128 0x18
 599 0074 9642     		.uleb128 0x2116
 600 0076 19       		.uleb128 0x19
 601 0077 01       		.uleb128 0x1
 602 0078 13       		.uleb128 0x13
 603 0079 00       		.byte	0
 604 007a 00       		.byte	0
 605 007b 08       		.uleb128 0x8
 606 007c 05       		.uleb128 0x5
 607 007d 00       		.byte	0
 608 007e 03       		.uleb128 0x3
 609 007f 08       		.uleb128 0x8
 610 0080 3A       		.uleb128 0x3a
 611 0081 0B       		.uleb128 0xb
 612 0082 3B       		.uleb128 0x3b
 613 0083 0B       		.uleb128 0xb
 614 0084 49       		.uleb128 0x49
 615 0085 13       		.uleb128 0x13
 616 0086 02       		.uleb128 0x2
 617 0087 18       		.uleb128 0x18
 618 0088 00       		.byte	0
 619 0089 00       		.byte	0
 620 008a 09       		.uleb128 0x9
 621 008b 01       		.uleb128 0x1
 622 008c 01       		.byte	0x1
 623 008d 49       		.uleb128 0x49
 624 008e 13       		.uleb128 0x13
 625 008f 01       		.uleb128 0x1
 626 0090 13       		.uleb128 0x13
 627 0091 00       		.byte	0
 628 0092 00       		.byte	0
 629 0093 0A       		.uleb128 0xa
 630 0094 21       		.uleb128 0x21
 631 0095 00       		.byte	0
 632 0096 49       		.uleb128 0x49
 633 0097 13       		.uleb128 0x13
 634 0098 2F       		.uleb128 0x2f
 635 0099 0B       		.uleb128 0xb
 636 009a 00       		.byte	0
 637 009b 00       		.byte	0
 638 009c 0B       		.uleb128 0xb
 639 009d 2E       		.uleb128 0x2e
 640 009e 01       		.byte	0x1
 641 009f 3F       		.uleb128 0x3f
 642 00a0 19       		.uleb128 0x19
 643 00a1 03       		.uleb128 0x3
 644 00a2 0E       		.uleb128 0xe
 645 00a3 3A       		.uleb128 0x3a
 646 00a4 0B       		.uleb128 0xb
 647 00a5 3B       		.uleb128 0x3b
 648 00a6 0B       		.uleb128 0xb
 649 00a7 27       		.uleb128 0x27
 650 00a8 19       		.uleb128 0x19
 651 00a9 49       		.uleb128 0x49
 652 00aa 13       		.uleb128 0x13
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 16


 653 00ab 11       		.uleb128 0x11
 654 00ac 01       		.uleb128 0x1
 655 00ad 12       		.uleb128 0x12
 656 00ae 06       		.uleb128 0x6
 657 00af 40       		.uleb128 0x40
 658 00b0 18       		.uleb128 0x18
 659 00b1 9642     		.uleb128 0x2116
 660 00b3 19       		.uleb128 0x19
 661 00b4 00       		.byte	0
 662 00b5 00       		.byte	0
 663 00b6 00       		.byte	0
 664              		.section	.debug_aranges,"",%progbits
 665 0000 2C000000 		.4byte	0x2c
 666 0004 0200     		.2byte	0x2
 667 0006 00000000 		.4byte	.Ldebug_info0
 668 000a 04       		.byte	0x4
 669 000b 00       		.byte	0
 670 000c 0000     		.2byte	0
 671 000e 0000     		.2byte	0
 672 0010 00000000 		.4byte	.LFB34
 673 0014 74000000 		.4byte	.LFE34-.LFB34
 674 0018 00000000 		.4byte	.LFB35
 675 001c 8C000000 		.4byte	.LFE35-.LFB35
 676 0020 00000000 		.4byte	.LFB36
 677 0024 86000000 		.4byte	.LFE36-.LFB36
 678 0028 00000000 		.4byte	0
 679 002c 00000000 		.4byte	0
 680              		.section	.debug_ranges,"",%progbits
 681              	.Ldebug_ranges0:
 682 0000 00000000 		.4byte	.LFB34
 683 0004 74000000 		.4byte	.LFE34
 684 0008 00000000 		.4byte	.LFB35
 685 000c 8C000000 		.4byte	.LFE35
 686 0010 00000000 		.4byte	.LFB36
 687 0014 86000000 		.4byte	.LFE36
 688 0018 00000000 		.4byte	0
 689 001c 00000000 		.4byte	0
 690              		.section	.debug_line,"",%progbits
 691              	.Ldebug_line0:
 692 0000 BB000000 		.section	.debug_str,"MS",%progbits,1
 692      02004300 
 692      00000201 
 692      FB0E0D00 
 692      01010101 
 693              	.LASF6:
 694 0000 6C6F6E67 		.ascii	"long long int\000"
 694      206C6F6E 
 694      6720696E 
 694      7400
 695              	.LASF11:
 696 000e 75696E74 		.ascii	"uint32\000"
 696      333200
 697              	.LASF8:
 698 0015 756E7369 		.ascii	"unsigned int\000"
 698      676E6564 
 698      20696E74 
 698      00
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 17


 699              	.LASF19:
 700 0022 6D61696E 		.ascii	"main\000"
 700      00
 701              	.LASF18:
 702 0027 73746174 		.ascii	"status\000"
 702      757300
 703              	.LASF9:
 704 002e 75696E74 		.ascii	"uint8\000"
 704      3800
 705              	.LASF5:
 706 0034 6C6F6E67 		.ascii	"long unsigned int\000"
 706      20756E73 
 706      69676E65 
 706      6420696E 
 706      7400
 707              	.LASF7:
 708 0046 6C6F6E67 		.ascii	"long long unsigned int\000"
 708      206C6F6E 
 708      6720756E 
 708      7369676E 
 708      65642069 
 709              	.LASF21:
 710 005d 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 710      4320342E 
 710      392E3320 
 710      32303135 
 710      30333033 
 711 0090 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 711      20726576 
 711      6973696F 
 711      6E203232 
 711      31323230 
 712 00c3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 712      66756E63 
 712      74696F6E 
 712      2D736563 
 712      74696F6E 
 713              	.LASF20:
 714 00eb 52656164 		.ascii	"ReadStatusPacket\000"
 714      53746174 
 714      75735061 
 714      636B6574 
 714      00
 715              	.LASF1:
 716 00fc 756E7369 		.ascii	"unsigned char\000"
 716      676E6564 
 716      20636861 
 716      7200
 717              	.LASF14:
 718 010a 63686172 		.ascii	"char\000"
 718      00
 719              	.LASF4:
 720 010f 6C6F6E67 		.ascii	"long int\000"
 720      20696E74 
 720      00
 721              	.LASF2:
 722 0118 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 18


 722      7420696E 
 722      7400
 723              	.LASF16:
 724 0122 636F6D6D 		.ascii	"command\000"
 724      616E6400 
 725              	.LASF13:
 726 012a 646F7562 		.ascii	"double\000"
 726      6C6500
 727              	.LASF23:
 728 0131 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Google Drive\\Virtuell"
 728      73657273 
 728      5C4C756B 
 728      61732043 
 728      72657574 
 729 0160 65205265 		.ascii	"e Realitaeten\\PSoCWorkspace\\VRProject\\SCB_I2cCom"
 729      616C6974 
 729      61657465 
 729      6E5C5053 
 729      6F43576F 
 730 0190 6D4D6173 		.ascii	"mMaster01.cydsn\000"
 730      74657230 
 730      312E6379 
 730      64736E00 
 731              	.LASF3:
 732 01a0 73686F72 		.ascii	"short unsigned int\000"
 732      7420756E 
 732      7369676E 
 732      65642069 
 732      6E7400
 733              	.LASF0:
 734 01b3 7369676E 		.ascii	"signed char\000"
 734      65642063 
 734      68617200 
 735              	.LASF24:
 736 01bf 57726974 		.ascii	"WriteCommandPacket\000"
 736      65436F6D 
 736      6D616E64 
 736      5061636B 
 736      657400
 737              	.LASF12:
 738 01d2 666C6F61 		.ascii	"float\000"
 738      7400
 739              	.LASF22:
 740 01d8 2E5C6D61 		.ascii	".\\main.c\000"
 740      696E2E63 
 740      00
 741              	.LASF10:
 742 01e1 75696E74 		.ascii	"uint16\000"
 742      313600
 743              	.LASF17:
 744 01e8 62756666 		.ascii	"buffer\000"
 744      657200
 745              	.LASF15:
 746 01ef 73697A65 		.ascii	"sizetype\000"
 746      74797065 
 746      00
 747              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\ccuD6bsS.s 			page 19


