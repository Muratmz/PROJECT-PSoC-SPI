ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2abwbT.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	i2cReadBuffer
  18              		.data
  19              		.align	2
  20              		.type	i2cReadBuffer, %object
  21              		.size	i2cReadBuffer, 3
  22              	i2cReadBuffer:
  23 0000 01       		.byte	1
  24 0001 FF       		.byte	-1
  25 0002 17       		.byte	23
  26              		.comm	i2cWriteBuffer,3,4
  27 0003 00       		.section	.text.main,"ax",%progbits
  28              		.align	2
  29              		.global	main
  30              		.code	16
  31              		.thumb_func
  32              		.type	main, %function
  33              	main:
  34              	.LFB34:
  35              		.file 1 ".\\main.c"
   1:.\main.c      **** /*******************************************************************************
   2:.\main.c      **** * File Name: main.c
   3:.\main.c      **** *
   4:.\main.c      **** * Version: 1.20
   5:.\main.c      **** *
   6:.\main.c      **** * Description:
   7:.\main.c      **** *  This example project demonstrates the basic operation of the I2C slave
   8:.\main.c      **** *  (SCB mode) component. The I2C slave accepts a packet with a command from
   9:.\main.c      **** *  the I2C master to control the RGB LED color. The I2C slave updates its
  10:.\main.c      **** *  buffer with a status packet in response to the accepted command.
  11:.\main.c      **** *  For more information refer to the example project datasheet.
  12:.\main.c      **** *
  13:.\main.c      **** ********************************************************************************
  14:.\main.c      **** * Copyright 2014-2015, Cypress Semiconductor Corporation. All rights reserved.
  15:.\main.c      **** * This software is owned by Cypress Semiconductor Corporation and is protected
  16:.\main.c      **** * by and subject to worldwide patent and copyright laws and treaties.
  17:.\main.c      **** * Therefore, you may use this software only as provided in the license agreement
  18:.\main.c      **** * accompanying the software package from which you obtained this software.
  19:.\main.c      **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  20:.\main.c      **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  21:.\main.c      **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  22:.\main.c      **** *******************************************************************************/
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2abwbT.s 			page 2


  23:.\main.c      **** 
  24:.\main.c      **** #include <main.h>
  25:.\main.c      **** #include "uart.h"
  26:.\main.c      **** 
  27:.\main.c      **** /* I2C slave read and write buffers */
  28:.\main.c      **** uint8 i2cReadBuffer [BUFFER_SIZE] = {PACKET_SOP, STS_CMD_FAIL, PACKET_EOP};
  29:.\main.c      **** uint8 i2cWriteBuffer[BUFFER_SIZE];
  30:.\main.c      **** 
  31:.\main.c      **** 
  32:.\main.c      **** /*******************************************************************************
  33:.\main.c      **** * Function Name: main
  34:.\main.c      **** ********************************************************************************
  35:.\main.c      **** * Summary:
  36:.\main.c      **** *  Main function performs following actions:
  37:.\main.c      **** *   1. Turns off status RGB LED
  38:.\main.c      **** *   2. Sets up I2C slave write and read buffers.
  39:.\main.c      **** *   3. Starts I2C slave (SCB mode) component.
  40:.\main.c      **** *   4. Enables global interrupts.
  41:.\main.c      **** *   5. Waits for command from the I2C master to control the RGB LED.
  42:.\main.c      **** *
  43:.\main.c      **** * Parameters:
  44:.\main.c      **** *  None
  45:.\main.c      **** *
  46:.\main.c      **** * Return:
  47:.\main.c      **** *  None
  48:.\main.c      **** *
  49:.\main.c      **** *******************************************************************************/
  50:.\main.c      **** int main()
  51:.\main.c      **** {
  36              		.loc 1 51 0
  37              		.cfi_startproc
  38 0000 90B5     		push	{r4, r7, lr}
  39              		.cfi_def_cfa_offset 12
  40              		.cfi_offset 4, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 83B0     		sub	sp, sp, #12
  44              		.cfi_def_cfa_offset 24
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  52:.\main.c      ****     uint8 status = STS_CMD_FAIL;
  47              		.loc 1 52 0
  48 0006 FB1D     		add	r3, r7, #7
  49 0008 FF22     		mov	r2, #255
  50 000a 1A70     		strb	r2, [r3]
  53:.\main.c      **** 
  54:.\main.c      ****     RGB_LED_OFF;
  51              		.loc 1 54 0
  52 000c 0120     		mov	r0, #1
  53 000e FFF7FEFF 		bl	LED_RED_Write
  54 0012 0120     		mov	r0, #1
  55 0014 FFF7FEFF 		bl	LED_GREEN_Write
  56 0018 0120     		mov	r0, #1
  57 001a FFF7FEFF 		bl	LED_BLUE_Write
  55:.\main.c      **** 
  56:.\main.c      ****     /* Start I2C slave (SCB mode) */
  57:.\main.c      ****     I2CS_I2CSlaveInitReadBuf (i2cReadBuffer,  BUFFER_SIZE);
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2abwbT.s 			page 3


  58              		.loc 1 57 0
  59 001e 204B     		ldr	r3, .L6
  60 0020 181C     		mov	r0, r3
  61 0022 0321     		mov	r1, #3
  62 0024 FFF7FEFF 		bl	I2CS_I2CSlaveInitReadBuf
  58:.\main.c      ****     I2CS_I2CSlaveInitWriteBuf(i2cWriteBuffer, BUFFER_SIZE);
  63              		.loc 1 58 0
  64 0028 1E4B     		ldr	r3, .L6+4
  65 002a 181C     		mov	r0, r3
  66 002c 0321     		mov	r1, #3
  67 002e FFF7FEFF 		bl	I2CS_I2CSlaveInitWriteBuf
  59:.\main.c      ****     I2CS_Start();
  68              		.loc 1 59 0
  69 0032 FFF7FEFF 		bl	I2CS_Start
  60:.\main.c      ****     UARTInit();
  70              		.loc 1 60 0
  71 0036 FFF7FEFF 		bl	UARTInit
  61:.\main.c      **** 
  62:.\main.c      ****     CyGlobalIntEnable;
  72              		.loc 1 62 0
  73              	@ 62 ".\main.c" 1
  74 003a 62B6     		CPSIE   i
  75              	@ 0 "" 2
  76              		.code	16
  77              	.L5:
  63:.\main.c      **** 
  64:.\main.c      ****     /***************************************************************************
  65:.\main.c      ****     * Main polling loop
  66:.\main.c      ****     ***************************************************************************/
  67:.\main.c      ****     for (;;)
  68:.\main.c      ****     {
  69:.\main.c      ****         /* Write complete: parse command packet */
  70:.\main.c      ****         if (0u != (I2CS_I2CSlaveStatus() & I2CS_I2C_SSTAT_WR_CMPLT))
  78              		.loc 1 70 0
  79 003c FFF7FEFF 		bl	I2CS_I2CSlaveStatus
  80 0040 021C     		mov	r2, r0
  81 0042 1023     		mov	r3, #16
  82 0044 1340     		and	r3, r2
  83 0046 1FD0     		beq	.L2
  71:.\main.c      ****         {
  72:.\main.c      ****             /* Check packet length */
  73:.\main.c      ****             if (PACKET_SIZE == I2CS_I2CSlaveGetWriteBufSize())
  84              		.loc 1 73 0
  85 0048 FFF7FEFF 		bl	I2CS_I2CSlaveGetWriteBufSize
  86 004c 031E     		sub	r3, r0, #0
  87 004e 032B     		cmp	r3, #3
  88 0050 0FD1     		bne	.L3
  74:.\main.c      ****             {
  75:.\main.c      ****                 /* Check start and end of packet markers */
  76:.\main.c      ****                 if ((i2cWriteBuffer[PACKET_SOP_POS] == PACKET_SOP) &&
  89              		.loc 1 76 0
  90 0052 144B     		ldr	r3, .L6+4
  91 0054 1B78     		ldrb	r3, [r3]
  92 0056 012B     		cmp	r3, #1
  93 0058 0BD1     		bne	.L3
  77:.\main.c      ****                     (i2cWriteBuffer[PACKET_EOP_POS] == PACKET_EOP))
  94              		.loc 1 77 0 discriminator 1
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2abwbT.s 			page 4


  95 005a 124B     		ldr	r3, .L6+4
  96 005c 9B78     		ldrb	r3, [r3, #2]
  76:.\main.c      ****                     (i2cWriteBuffer[PACKET_EOP_POS] == PACKET_EOP))
  97              		.loc 1 76 0 discriminator 1
  98 005e 172B     		cmp	r3, #23
  99 0060 07D1     		bne	.L3
  78:.\main.c      ****                 {
  79:.\main.c      ****                     status = ExecuteCommand(i2cWriteBuffer[PACKET_CMD_POS]);
 100              		.loc 1 79 0
 101 0062 104B     		ldr	r3, .L6+4
 102 0064 5B78     		ldrb	r3, [r3, #1]
 103 0066 FC1D     		add	r4, r7, #7
 104 0068 181C     		mov	r0, r3
 105 006a FFF7FEFF 		bl	ExecuteCommand
 106 006e 031C     		mov	r3, r0
 107 0070 2370     		strb	r3, [r4]
 108              	.L3:
  80:.\main.c      ****                 }
  81:.\main.c      ****             }
  82:.\main.c      **** 
  83:.\main.c      ****             /* Clear slave write buffer and status */
  84:.\main.c      ****             I2CS_I2CSlaveClearWriteBuf();
 109              		.loc 1 84 0
 110 0072 FFF7FEFF 		bl	I2CS_I2CSlaveClearWriteBuf
  85:.\main.c      ****             (void) I2CS_I2CSlaveClearWriteStatus();
 111              		.loc 1 85 0
 112 0076 FFF7FEFF 		bl	I2CS_I2CSlaveClearWriteStatus
  86:.\main.c      **** 
  87:.\main.c      ****             /* Update read buffer */
  88:.\main.c      ****             i2cReadBuffer[PACKET_STS_POS] = status;
 113              		.loc 1 88 0
 114 007a 094B     		ldr	r3, .L6
 115 007c FA1D     		add	r2, r7, #7
 116 007e 1278     		ldrb	r2, [r2]
 117 0080 5A70     		strb	r2, [r3, #1]
  89:.\main.c      ****             status = STS_CMD_FAIL;
 118              		.loc 1 89 0
 119 0082 FB1D     		add	r3, r7, #7
 120 0084 FF22     		mov	r2, #255
 121 0086 1A70     		strb	r2, [r3]
 122              	.L2:
  90:.\main.c      ****         }
  91:.\main.c      **** 
  92:.\main.c      ****         /* Read complete: expose buffer to master */
  93:.\main.c      ****         if (0u != (I2CS_I2CSlaveStatus() & I2CS_I2C_SSTAT_RD_CMPLT))
 123              		.loc 1 93 0
 124 0088 FFF7FEFF 		bl	I2CS_I2CSlaveStatus
 125 008c 021C     		mov	r2, r0
 126 008e 0123     		mov	r3, #1
 127 0090 1340     		and	r3, r2
 128 0092 03D0     		beq	.L4
  94:.\main.c      ****         {
  95:.\main.c      ****             /* Clear slave read buffer and status */
  96:.\main.c      ****             I2CS_I2CSlaveClearReadBuf();
 129              		.loc 1 96 0
 130 0094 FFF7FEFF 		bl	I2CS_I2CSlaveClearReadBuf
  97:.\main.c      ****             (void) I2CS_I2CSlaveClearReadStatus();
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2abwbT.s 			page 5


 131              		.loc 1 97 0
 132 0098 FFF7FEFF 		bl	I2CS_I2CSlaveClearReadStatus
 133              	.L4:
  98:.\main.c      ****         }
  99:.\main.c      ****     }
 134              		.loc 1 99 0
 135 009c CEE7     		b	.L5
 136              	.L7:
 137 009e C046     		.align	2
 138              	.L6:
 139 00a0 00000000 		.word	i2cReadBuffer
 140 00a4 00000000 		.word	i2cWriteBuffer
 141              		.cfi_endproc
 142              	.LFE34:
 143              		.size	main, .-main
 144              		.section	.rodata
 145              		.align	2
 146              	.LC2:
 147 0000 45786563 		.ascii	"Executed: \000"
 147      75746564 
 147      3A2000
 148 000b 00       		.section	.text.ExecuteCommand,"ax",%progbits
 149              		.align	2
 150              		.global	ExecuteCommand
 151              		.code	16
 152              		.thumb_func
 153              		.type	ExecuteCommand, %function
 154              	ExecuteCommand:
 155              	.LFB35:
 100:.\main.c      **** }
 101:.\main.c      **** 
 102:.\main.c      **** 
 103:.\main.c      **** /*******************************************************************************
 104:.\main.c      **** * Function Name: ExecuteCommand
 105:.\main.c      **** ********************************************************************************
 106:.\main.c      **** * Summary:
 107:.\main.c      **** *  Executes received command to control the LED color and returns status.
 108:.\main.c      **** *  If the command is unknown, the LED color is not changed.
 109:.\main.c      **** *
 110:.\main.c      **** * Parameters:
 111:.\main.c      **** *  cmd: command to execute. Available commands:
 112:.\main.c      **** *   - CMD_SET_RED:   set red color of the LED.
 113:.\main.c      **** *   - CMD_SET_GREEN: set green color of the LED.
 114:.\main.c      **** *   - CMD_SET_BLUE:  set blue color of the LED.
 115:.\main.c      **** *   - CMD_SET_OFF:   turn off the LED.
 116:.\main.c      **** *
 117:.\main.c      **** * Return:
 118:.\main.c      **** *  Returns status of command execution. There are two statuses
 119:.\main.c      **** *  - STS_CMD_DONE: command is executed successfully.
 120:.\main.c      **** *  - STS_CMD_FAIL: unknown command
 121:.\main.c      **** *
 122:.\main.c      **** *******************************************************************************/
 123:.\main.c      **** uint8 ExecuteCommand(uint32 cmd)
 124:.\main.c      **** {
 156              		.loc 1 124 0
 157              		.cfi_startproc
 158 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2abwbT.s 			page 6


 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162 0002 84B0     		sub	sp, sp, #16
 163              		.cfi_def_cfa_offset 24
 164 0004 00AF     		add	r7, sp, #0
 165              		.cfi_def_cfa_register 7
 166 0006 7860     		str	r0, [r7, #4]
 125:.\main.c      ****     uint8 status;
 126:.\main.c      **** 
 127:.\main.c      ****     status = STS_CMD_DONE;
 167              		.loc 1 127 0
 168 0008 0F23     		mov	r3, #15
 169 000a FB18     		add	r3, r7, r3
 170 000c 0022     		mov	r2, #0
 171 000e 1A70     		strb	r2, [r3]
 128:.\main.c      ****     UART_1_UartPutString("Executed: ");
 172              		.loc 1 128 0
 173 0010 224B     		ldr	r3, .L17
 174 0012 181C     		mov	r0, r3
 175 0014 FFF7FEFF 		bl	UART_1_UartPutString
 129:.\main.c      ****     UART_SendNumber(cmd);
 176              		.loc 1 129 0
 177 0018 7B68     		ldr	r3, [r7, #4]
 178 001a 181C     		mov	r0, r3
 179 001c FFF7FEFF 		bl	UART_SendNumber
 130:.\main.c      ****     /* Execute received command */
 131:.\main.c      ****     switch (cmd)
 180              		.loc 1 131 0
 181 0020 7B68     		ldr	r3, [r7, #4]
 182 0022 012B     		cmp	r3, #1
 183 0024 05D0     		beq	.L10
 184 0026 22D3     		bcc	.L11
 185 0028 022B     		cmp	r3, #2
 186 002a 0CD0     		beq	.L12
 187 002c 032B     		cmp	r3, #3
 188 002e 14D0     		beq	.L13
 189 0030 27E0     		b	.L16
 190              	.L10:
 132:.\main.c      ****     {
 133:.\main.c      ****         case CMD_SET_RED:
 134:.\main.c      ****             RGB_LED_ON_RED;
 191              		.loc 1 134 0
 192 0032 0020     		mov	r0, #0
 193 0034 FFF7FEFF 		bl	LED_RED_Write
 194 0038 0120     		mov	r0, #1
 195 003a FFF7FEFF 		bl	LED_GREEN_Write
 196 003e 0120     		mov	r0, #1
 197 0040 FFF7FEFF 		bl	LED_BLUE_Write
 135:.\main.c      ****             break;
 198              		.loc 1 135 0
 199 0044 22E0     		b	.L14
 200              	.L12:
 136:.\main.c      **** 
 137:.\main.c      ****         case CMD_SET_GREEN:
 138:.\main.c      ****             RGB_LED_ON_GREEN;
 201              		.loc 1 138 0
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2abwbT.s 			page 7


 202 0046 0120     		mov	r0, #1
 203 0048 FFF7FEFF 		bl	LED_RED_Write
 204 004c 0020     		mov	r0, #0
 205 004e FFF7FEFF 		bl	LED_GREEN_Write
 206 0052 0120     		mov	r0, #1
 207 0054 FFF7FEFF 		bl	LED_BLUE_Write
 139:.\main.c      ****             break;
 208              		.loc 1 139 0
 209 0058 18E0     		b	.L14
 210              	.L13:
 140:.\main.c      **** 
 141:.\main.c      ****         case CMD_SET_BLUE:
 142:.\main.c      ****             RGB_LED_ON_BLUE;
 211              		.loc 1 142 0
 212 005a 0120     		mov	r0, #1
 213 005c FFF7FEFF 		bl	LED_RED_Write
 214 0060 0120     		mov	r0, #1
 215 0062 FFF7FEFF 		bl	LED_GREEN_Write
 216 0066 0020     		mov	r0, #0
 217 0068 FFF7FEFF 		bl	LED_BLUE_Write
 143:.\main.c      ****             break;
 218              		.loc 1 143 0
 219 006c 0EE0     		b	.L14
 220              	.L11:
 144:.\main.c      **** 
 145:.\main.c      ****         case CMD_SET_OFF:
 146:.\main.c      ****             RGB_LED_OFF;
 221              		.loc 1 146 0
 222 006e 0120     		mov	r0, #1
 223 0070 FFF7FEFF 		bl	LED_RED_Write
 224 0074 0120     		mov	r0, #1
 225 0076 FFF7FEFF 		bl	LED_GREEN_Write
 226 007a 0120     		mov	r0, #1
 227 007c FFF7FEFF 		bl	LED_BLUE_Write
 147:.\main.c      ****             break;
 228              		.loc 1 147 0
 229 0080 04E0     		b	.L14
 230              	.L16:
 148:.\main.c      **** 
 149:.\main.c      ****         default:
 150:.\main.c      ****             status = STS_CMD_FAIL;
 231              		.loc 1 150 0
 232 0082 0F23     		mov	r3, #15
 233 0084 FB18     		add	r3, r7, r3
 234 0086 FF22     		mov	r2, #255
 235 0088 1A70     		strb	r2, [r3]
 151:.\main.c      ****             break;
 236              		.loc 1 151 0
 237 008a C046     		mov	r8, r8
 238              	.L14:
 152:.\main.c      ****     }
 153:.\main.c      **** 
 154:.\main.c      ****     return (status);
 239              		.loc 1 154 0
 240 008c 0F23     		mov	r3, #15
 241 008e FB18     		add	r3, r7, r3
 242 0090 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2abwbT.s 			page 8


 155:.\main.c      **** }
 243              		.loc 1 155 0
 244 0092 181C     		mov	r0, r3
 245 0094 BD46     		mov	sp, r7
 246 0096 04B0     		add	sp, sp, #16
 247              		@ sp needed
 248 0098 80BD     		pop	{r7, pc}
 249              	.L18:
 250 009a C046     		.align	2
 251              	.L17:
 252 009c 00000000 		.word	.LC2
 253              		.cfi_endproc
 254              	.LFE35:
 255              		.size	ExecuteCommand, .-ExecuteCommand
 256              		.text
 257              	.Letext0:
 258              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 259              		.section	.debug_info,"",%progbits
 260              	.Ldebug_info0:
 261 0000 2C010000 		.4byte	0x12c
 262 0004 0400     		.2byte	0x4
 263 0006 00000000 		.4byte	.Ldebug_abbrev0
 264 000a 04       		.byte	0x4
 265 000b 01       		.uleb128 0x1
 266 000c D5000000 		.4byte	.LASF18
 267 0010 01       		.byte	0x1
 268 0011 C9010000 		.4byte	.LASF19
 269 0015 22000000 		.4byte	.LASF20
 270 0019 00000000 		.4byte	.Ldebug_ranges0+0
 271 001d 00000000 		.4byte	0
 272 0021 00000000 		.4byte	.Ldebug_line0
 273 0025 02       		.uleb128 0x2
 274 0026 01       		.byte	0x1
 275 0027 06       		.byte	0x6
 276 0028 B2010000 		.4byte	.LASF0
 277 002c 02       		.uleb128 0x2
 278 002d 01       		.byte	0x1
 279 002e 08       		.byte	0x8
 280 002f 63010000 		.4byte	.LASF1
 281 0033 02       		.uleb128 0x2
 282 0034 02       		.byte	0x2
 283 0035 05       		.byte	0x5
 284 0036 8E010000 		.4byte	.LASF2
 285 003a 02       		.uleb128 0x2
 286 003b 02       		.byte	0x2
 287 003c 07       		.byte	0x7
 288 003d 9F010000 		.4byte	.LASF3
 289 0041 02       		.uleb128 0x2
 290 0042 04       		.byte	0x4
 291 0043 05       		.byte	0x5
 292 0044 85010000 		.4byte	.LASF4
 293 0048 02       		.uleb128 0x2
 294 0049 04       		.byte	0x4
 295 004a 07       		.byte	0x7
 296 004b 9D000000 		.4byte	.LASF5
 297 004f 02       		.uleb128 0x2
 298 0050 08       		.byte	0x8
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2abwbT.s 			page 9


 299 0051 05       		.byte	0x5
 300 0052 00000000 		.4byte	.LASF6
 301 0056 02       		.uleb128 0x2
 302 0057 08       		.byte	0x8
 303 0058 07       		.byte	0x7
 304 0059 AF000000 		.4byte	.LASF7
 305 005d 03       		.uleb128 0x3
 306 005e 04       		.byte	0x4
 307 005f 05       		.byte	0x5
 308 0060 696E7400 		.ascii	"int\000"
 309 0064 02       		.uleb128 0x2
 310 0065 04       		.byte	0x4
 311 0066 07       		.byte	0x7
 312 0067 15000000 		.4byte	.LASF8
 313 006b 04       		.uleb128 0x4
 314 006c 97000000 		.4byte	.LASF9
 315 0070 02       		.byte	0x2
 316 0071 3801     		.2byte	0x138
 317 0073 2C000000 		.4byte	0x2c
 318 0077 04       		.uleb128 0x4
 319 0078 0E000000 		.4byte	.LASF10
 320 007c 02       		.byte	0x2
 321 007d 3A01     		.2byte	0x13a
 322 007f 48000000 		.4byte	0x48
 323 0083 02       		.uleb128 0x2
 324 0084 04       		.byte	0x4
 325 0085 04       		.byte	0x4
 326 0086 C3010000 		.4byte	.LASF11
 327 008a 02       		.uleb128 0x2
 328 008b 08       		.byte	0x8
 329 008c 04       		.byte	0x4
 330 008d 98010000 		.4byte	.LASF12
 331 0091 02       		.uleb128 0x2
 332 0092 01       		.byte	0x1
 333 0093 08       		.byte	0x8
 334 0094 71010000 		.4byte	.LASF13
 335 0098 02       		.uleb128 0x2
 336 0099 04       		.byte	0x4
 337 009a 07       		.byte	0x7
 338 009b E0010000 		.4byte	.LASF14
 339 009f 05       		.uleb128 0x5
 340 00a0 BE010000 		.4byte	.LASF21
 341 00a4 01       		.byte	0x1
 342 00a5 32       		.byte	0x32
 343 00a6 5D000000 		.4byte	0x5d
 344 00aa 00000000 		.4byte	.LFB34
 345 00ae A8000000 		.4byte	.LFE34-.LFB34
 346 00b2 01       		.uleb128 0x1
 347 00b3 9C       		.byte	0x9c
 348 00b4 C7000000 		.4byte	0xc7
 349 00b8 06       		.uleb128 0x6
 350 00b9 90000000 		.4byte	.LASF15
 351 00bd 01       		.byte	0x1
 352 00be 34       		.byte	0x34
 353 00bf 6B000000 		.4byte	0x6b
 354 00c3 02       		.uleb128 0x2
 355 00c4 91       		.byte	0x91
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2abwbT.s 			page 10


 356 00c5 6F       		.sleb128 -17
 357 00c6 00       		.byte	0
 358 00c7 07       		.uleb128 0x7
 359 00c8 76010000 		.4byte	.LASF22
 360 00cc 01       		.byte	0x1
 361 00cd 7B       		.byte	0x7b
 362 00ce 6B000000 		.4byte	0x6b
 363 00d2 00000000 		.4byte	.LFB35
 364 00d6 A0000000 		.4byte	.LFE35-.LFB35
 365 00da 01       		.uleb128 0x1
 366 00db 9C       		.byte	0x9c
 367 00dc FD000000 		.4byte	0xfd
 368 00e0 08       		.uleb128 0x8
 369 00e1 636D6400 		.ascii	"cmd\000"
 370 00e5 01       		.byte	0x1
 371 00e6 7B       		.byte	0x7b
 372 00e7 77000000 		.4byte	0x77
 373 00eb 02       		.uleb128 0x2
 374 00ec 91       		.byte	0x91
 375 00ed 6C       		.sleb128 -20
 376 00ee 06       		.uleb128 0x6
 377 00ef 90000000 		.4byte	.LASF15
 378 00f3 01       		.byte	0x1
 379 00f4 7D       		.byte	0x7d
 380 00f5 6B000000 		.4byte	0x6b
 381 00f9 02       		.uleb128 0x2
 382 00fa 91       		.byte	0x91
 383 00fb 77       		.sleb128 -9
 384 00fc 00       		.byte	0
 385 00fd 09       		.uleb128 0x9
 386 00fe 6B000000 		.4byte	0x6b
 387 0102 0D010000 		.4byte	0x10d
 388 0106 0A       		.uleb128 0xa
 389 0107 98000000 		.4byte	0x98
 390 010b 02       		.byte	0x2
 391 010c 00       		.byte	0
 392 010d 0B       		.uleb128 0xb
 393 010e D2010000 		.4byte	.LASF16
 394 0112 01       		.byte	0x1
 395 0113 1C       		.byte	0x1c
 396 0114 FD000000 		.4byte	0xfd
 397 0118 05       		.uleb128 0x5
 398 0119 03       		.byte	0x3
 399 011a 00000000 		.4byte	i2cReadBuffer
 400 011e 0B       		.uleb128 0xb
 401 011f C6000000 		.4byte	.LASF17
 402 0123 01       		.byte	0x1
 403 0124 1D       		.byte	0x1d
 404 0125 FD000000 		.4byte	0xfd
 405 0129 05       		.uleb128 0x5
 406 012a 03       		.byte	0x3
 407 012b 00000000 		.4byte	i2cWriteBuffer
 408 012f 00       		.byte	0
 409              		.section	.debug_abbrev,"",%progbits
 410              	.Ldebug_abbrev0:
 411 0000 01       		.uleb128 0x1
 412 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2abwbT.s 			page 11


 413 0002 01       		.byte	0x1
 414 0003 25       		.uleb128 0x25
 415 0004 0E       		.uleb128 0xe
 416 0005 13       		.uleb128 0x13
 417 0006 0B       		.uleb128 0xb
 418 0007 03       		.uleb128 0x3
 419 0008 0E       		.uleb128 0xe
 420 0009 1B       		.uleb128 0x1b
 421 000a 0E       		.uleb128 0xe
 422 000b 55       		.uleb128 0x55
 423 000c 17       		.uleb128 0x17
 424 000d 11       		.uleb128 0x11
 425 000e 01       		.uleb128 0x1
 426 000f 10       		.uleb128 0x10
 427 0010 17       		.uleb128 0x17
 428 0011 00       		.byte	0
 429 0012 00       		.byte	0
 430 0013 02       		.uleb128 0x2
 431 0014 24       		.uleb128 0x24
 432 0015 00       		.byte	0
 433 0016 0B       		.uleb128 0xb
 434 0017 0B       		.uleb128 0xb
 435 0018 3E       		.uleb128 0x3e
 436 0019 0B       		.uleb128 0xb
 437 001a 03       		.uleb128 0x3
 438 001b 0E       		.uleb128 0xe
 439 001c 00       		.byte	0
 440 001d 00       		.byte	0
 441 001e 03       		.uleb128 0x3
 442 001f 24       		.uleb128 0x24
 443 0020 00       		.byte	0
 444 0021 0B       		.uleb128 0xb
 445 0022 0B       		.uleb128 0xb
 446 0023 3E       		.uleb128 0x3e
 447 0024 0B       		.uleb128 0xb
 448 0025 03       		.uleb128 0x3
 449 0026 08       		.uleb128 0x8
 450 0027 00       		.byte	0
 451 0028 00       		.byte	0
 452 0029 04       		.uleb128 0x4
 453 002a 16       		.uleb128 0x16
 454 002b 00       		.byte	0
 455 002c 03       		.uleb128 0x3
 456 002d 0E       		.uleb128 0xe
 457 002e 3A       		.uleb128 0x3a
 458 002f 0B       		.uleb128 0xb
 459 0030 3B       		.uleb128 0x3b
 460 0031 05       		.uleb128 0x5
 461 0032 49       		.uleb128 0x49
 462 0033 13       		.uleb128 0x13
 463 0034 00       		.byte	0
 464 0035 00       		.byte	0
 465 0036 05       		.uleb128 0x5
 466 0037 2E       		.uleb128 0x2e
 467 0038 01       		.byte	0x1
 468 0039 3F       		.uleb128 0x3f
 469 003a 19       		.uleb128 0x19
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2abwbT.s 			page 12


 470 003b 03       		.uleb128 0x3
 471 003c 0E       		.uleb128 0xe
 472 003d 3A       		.uleb128 0x3a
 473 003e 0B       		.uleb128 0xb
 474 003f 3B       		.uleb128 0x3b
 475 0040 0B       		.uleb128 0xb
 476 0041 49       		.uleb128 0x49
 477 0042 13       		.uleb128 0x13
 478 0043 11       		.uleb128 0x11
 479 0044 01       		.uleb128 0x1
 480 0045 12       		.uleb128 0x12
 481 0046 06       		.uleb128 0x6
 482 0047 40       		.uleb128 0x40
 483 0048 18       		.uleb128 0x18
 484 0049 9642     		.uleb128 0x2116
 485 004b 19       		.uleb128 0x19
 486 004c 01       		.uleb128 0x1
 487 004d 13       		.uleb128 0x13
 488 004e 00       		.byte	0
 489 004f 00       		.byte	0
 490 0050 06       		.uleb128 0x6
 491 0051 34       		.uleb128 0x34
 492 0052 00       		.byte	0
 493 0053 03       		.uleb128 0x3
 494 0054 0E       		.uleb128 0xe
 495 0055 3A       		.uleb128 0x3a
 496 0056 0B       		.uleb128 0xb
 497 0057 3B       		.uleb128 0x3b
 498 0058 0B       		.uleb128 0xb
 499 0059 49       		.uleb128 0x49
 500 005a 13       		.uleb128 0x13
 501 005b 02       		.uleb128 0x2
 502 005c 18       		.uleb128 0x18
 503 005d 00       		.byte	0
 504 005e 00       		.byte	0
 505 005f 07       		.uleb128 0x7
 506 0060 2E       		.uleb128 0x2e
 507 0061 01       		.byte	0x1
 508 0062 3F       		.uleb128 0x3f
 509 0063 19       		.uleb128 0x19
 510 0064 03       		.uleb128 0x3
 511 0065 0E       		.uleb128 0xe
 512 0066 3A       		.uleb128 0x3a
 513 0067 0B       		.uleb128 0xb
 514 0068 3B       		.uleb128 0x3b
 515 0069 0B       		.uleb128 0xb
 516 006a 27       		.uleb128 0x27
 517 006b 19       		.uleb128 0x19
 518 006c 49       		.uleb128 0x49
 519 006d 13       		.uleb128 0x13
 520 006e 11       		.uleb128 0x11
 521 006f 01       		.uleb128 0x1
 522 0070 12       		.uleb128 0x12
 523 0071 06       		.uleb128 0x6
 524 0072 40       		.uleb128 0x40
 525 0073 18       		.uleb128 0x18
 526 0074 9642     		.uleb128 0x2116
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2abwbT.s 			page 13


 527 0076 19       		.uleb128 0x19
 528 0077 01       		.uleb128 0x1
 529 0078 13       		.uleb128 0x13
 530 0079 00       		.byte	0
 531 007a 00       		.byte	0
 532 007b 08       		.uleb128 0x8
 533 007c 05       		.uleb128 0x5
 534 007d 00       		.byte	0
 535 007e 03       		.uleb128 0x3
 536 007f 08       		.uleb128 0x8
 537 0080 3A       		.uleb128 0x3a
 538 0081 0B       		.uleb128 0xb
 539 0082 3B       		.uleb128 0x3b
 540 0083 0B       		.uleb128 0xb
 541 0084 49       		.uleb128 0x49
 542 0085 13       		.uleb128 0x13
 543 0086 02       		.uleb128 0x2
 544 0087 18       		.uleb128 0x18
 545 0088 00       		.byte	0
 546 0089 00       		.byte	0
 547 008a 09       		.uleb128 0x9
 548 008b 01       		.uleb128 0x1
 549 008c 01       		.byte	0x1
 550 008d 49       		.uleb128 0x49
 551 008e 13       		.uleb128 0x13
 552 008f 01       		.uleb128 0x1
 553 0090 13       		.uleb128 0x13
 554 0091 00       		.byte	0
 555 0092 00       		.byte	0
 556 0093 0A       		.uleb128 0xa
 557 0094 21       		.uleb128 0x21
 558 0095 00       		.byte	0
 559 0096 49       		.uleb128 0x49
 560 0097 13       		.uleb128 0x13
 561 0098 2F       		.uleb128 0x2f
 562 0099 0B       		.uleb128 0xb
 563 009a 00       		.byte	0
 564 009b 00       		.byte	0
 565 009c 0B       		.uleb128 0xb
 566 009d 34       		.uleb128 0x34
 567 009e 00       		.byte	0
 568 009f 03       		.uleb128 0x3
 569 00a0 0E       		.uleb128 0xe
 570 00a1 3A       		.uleb128 0x3a
 571 00a2 0B       		.uleb128 0xb
 572 00a3 3B       		.uleb128 0x3b
 573 00a4 0B       		.uleb128 0xb
 574 00a5 49       		.uleb128 0x49
 575 00a6 13       		.uleb128 0x13
 576 00a7 3F       		.uleb128 0x3f
 577 00a8 19       		.uleb128 0x19
 578 00a9 02       		.uleb128 0x2
 579 00aa 18       		.uleb128 0x18
 580 00ab 00       		.byte	0
 581 00ac 00       		.byte	0
 582 00ad 00       		.byte	0
 583              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2abwbT.s 			page 14


 584 0000 24000000 		.4byte	0x24
 585 0004 0200     		.2byte	0x2
 586 0006 00000000 		.4byte	.Ldebug_info0
 587 000a 04       		.byte	0x4
 588 000b 00       		.byte	0
 589 000c 0000     		.2byte	0
 590 000e 0000     		.2byte	0
 591 0010 00000000 		.4byte	.LFB34
 592 0014 A8000000 		.4byte	.LFE34-.LFB34
 593 0018 00000000 		.4byte	.LFB35
 594 001c A0000000 		.4byte	.LFE35-.LFB35
 595 0020 00000000 		.4byte	0
 596 0024 00000000 		.4byte	0
 597              		.section	.debug_ranges,"",%progbits
 598              	.Ldebug_ranges0:
 599 0000 00000000 		.4byte	.LFB34
 600 0004 A8000000 		.4byte	.LFE34
 601 0008 00000000 		.4byte	.LFB35
 602 000c A0000000 		.4byte	.LFE35
 603 0010 00000000 		.4byte	0
 604 0014 00000000 		.4byte	0
 605              		.section	.debug_line,"",%progbits
 606              	.Ldebug_line0:
 607 0000 95000000 		.section	.debug_str,"MS",%progbits,1
 607      02004300 
 607      00000201 
 607      FB0E0D00 
 607      01010101 
 608              	.LASF6:
 609 0000 6C6F6E67 		.ascii	"long long int\000"
 609      206C6F6E 
 609      6720696E 
 609      7400
 610              	.LASF10:
 611 000e 75696E74 		.ascii	"uint32\000"
 611      333200
 612              	.LASF8:
 613 0015 756E7369 		.ascii	"unsigned int\000"
 613      676E6564 
 613      20696E74 
 613      00
 614              	.LASF20:
 615 0022 433A5C55 		.ascii	"C:\\Users\\Lukas Creutzburg\\Documents\\Daten\\Prog"
 615      73657273 
 615      5C4C756B 
 615      61732043 
 615      72657574 
 616 0050 72616D6D 		.ascii	"rammierprojekte\\GitHub\\freeDSPPSoC-I2C\\SCB_I2cCo"
 616      69657270 
 616      726F6A65 
 616      6B74655C 
 616      47697448 
 617 0080 6D6D536C 		.ascii	"mmSlave01.cydsn\000"
 617      61766530 
 617      312E6379 
 617      64736E00 
 618              	.LASF15:
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2abwbT.s 			page 15


 619 0090 73746174 		.ascii	"status\000"
 619      757300
 620              	.LASF9:
 621 0097 75696E74 		.ascii	"uint8\000"
 621      3800
 622              	.LASF5:
 623 009d 6C6F6E67 		.ascii	"long unsigned int\000"
 623      20756E73 
 623      69676E65 
 623      6420696E 
 623      7400
 624              	.LASF7:
 625 00af 6C6F6E67 		.ascii	"long long unsigned int\000"
 625      206C6F6E 
 625      6720756E 
 625      7369676E 
 625      65642069 
 626              	.LASF17:
 627 00c6 69326357 		.ascii	"i2cWriteBuffer\000"
 627      72697465 
 627      42756666 
 627      657200
 628              	.LASF18:
 629 00d5 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 629      4320342E 
 629      392E3320 
 629      32303135 
 629      30333033 
 630 0108 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 630      20726576 
 630      6973696F 
 630      6E203232 
 630      31323230 
 631 013b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 631      66756E63 
 631      74696F6E 
 631      2D736563 
 631      74696F6E 
 632              	.LASF1:
 633 0163 756E7369 		.ascii	"unsigned char\000"
 633      676E6564 
 633      20636861 
 633      7200
 634              	.LASF13:
 635 0171 63686172 		.ascii	"char\000"
 635      00
 636              	.LASF22:
 637 0176 45786563 		.ascii	"ExecuteCommand\000"
 637      75746543 
 637      6F6D6D61 
 637      6E6400
 638              	.LASF4:
 639 0185 6C6F6E67 		.ascii	"long int\000"
 639      20696E74 
 639      00
 640              	.LASF2:
 641 018e 73686F72 		.ascii	"short int\000"
ARM GAS  C:\Users\LUKASC~1\AppData\Local\Temp\cc2abwbT.s 			page 16


 641      7420696E 
 641      7400
 642              	.LASF12:
 643 0198 646F7562 		.ascii	"double\000"
 643      6C6500
 644              	.LASF3:
 645 019f 73686F72 		.ascii	"short unsigned int\000"
 645      7420756E 
 645      7369676E 
 645      65642069 
 645      6E7400
 646              	.LASF0:
 647 01b2 7369676E 		.ascii	"signed char\000"
 647      65642063 
 647      68617200 
 648              	.LASF21:
 649 01be 6D61696E 		.ascii	"main\000"
 649      00
 650              	.LASF11:
 651 01c3 666C6F61 		.ascii	"float\000"
 651      7400
 652              	.LASF19:
 653 01c9 2E5C6D61 		.ascii	".\\main.c\000"
 653      696E2E63 
 653      00
 654              	.LASF16:
 655 01d2 69326352 		.ascii	"i2cReadBuffer\000"
 655      65616442 
 655      75666665 
 655      7200
 656              	.LASF14:
 657 01e0 73697A65 		.ascii	"sizetype\000"
 657      74797065 
 657      00
 658              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
